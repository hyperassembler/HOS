
tmp/kernel.elf:     file format elf64-x86-64


Disassembly of section .entry:

0000000001000000 <kernel_start>:
 1000000:	d6                   	(bad)  
 1000001:	50                   	push   rax
 1000002:	52                   	push   rdx
 1000003:	e8 00 00 00 00       	call   1000008 <kernel_start+0x8>
 1000008:	58                   	pop    rax
 1000009:	00 00                	add    BYTE PTR [rax],al
 100000b:	00 d2                	add    dl,dl
 100000d:	ae                   	scas   al,BYTE PTR es:[rdi]
 100000e:	ad                   	lods   eax,DWORD PTR ds:[rsi]
 100000f:	17                   	(bad)  

0000000001000010 <MULTIBOOT_INFO_TAG>:
 1000010:	01 00                	add    DWORD PTR [rax],eax
 1000012:	00 00                	add    BYTE PTR [rax],al
 1000014:	10 00                	adc    BYTE PTR [rax],al
 1000016:	00 00                	add    BYTE PTR [rax],al
 1000018:	06                   	(bad)  
 1000019:	00 00                	add    BYTE PTR [rax],al
 100001b:	00 0a                	add    BYTE PTR [rdx],cl
 100001d:	00 00                	add    BYTE PTR [rax],al
	...

0000000001000020 <MULTIBOOT_ADDRESS_TAG>:
 1000020:	02 00                	add    al,BYTE PTR [rax]
 1000022:	00 00                	add    BYTE PTR [rax],al
 1000024:	18 00                	sbb    BYTE PTR [rax],al
 1000026:	00 00                	add    BYTE PTR [rax],al
 1000028:	00 00                	add    BYTE PTR [rax],al
 100002a:	00 01                	add    BYTE PTR [rcx],al
 100002c:	00 00                	add    BYTE PTR [rax],al
 100002e:	00 01                	add    BYTE PTR [rcx],al
	...

0000000001000038 <MULTIBOOT_ENTRY_TAG>:
 1000038:	03 00                	add    eax,DWORD PTR [rax]
 100003a:	00 00                	add    BYTE PTR [rax],al
 100003c:	0c 00                	or     al,0x0
 100003e:	00 00                	add    BYTE PTR [rax],al
 1000040:	00 40 00             	add    BYTE PTR [rax+0x0],al
 1000043:	01 90 90 90 90 06    	add    DWORD PTR [rax+0x6909090],edx
 1000049:	00 00                	add    BYTE PTR [rax],al
 100004b:	00 08                	add    BYTE PTR [rax],cl
 100004d:	00 00                	add    BYTE PTR [rax],al
 100004f:	00 00                	add    BYTE PTR [rax],al
 1000051:	00 00                	add    BYTE PTR [rax],al
 1000053:	00 08                	add    BYTE PTR [rax],cl
 1000055:	00 00                	add    BYTE PTR [rax],al
 1000057:	00 90 90 90 90 90    	add    BYTE PTR [rax-0x6f6f6f70],dl
 100005d:	90                   	nop
 100005e:	90                   	nop
 100005f:	90                   	nop
 1000060:	90                   	nop
 1000061:	90                   	nop
 1000062:	90                   	nop
 1000063:	90                   	nop
 1000064:	90                   	nop
 1000065:	90                   	nop
 1000066:	90                   	nop
 1000067:	90                   	nop
 1000068:	90                   	nop
 1000069:	90                   	nop
 100006a:	90                   	nop
 100006b:	90                   	nop
 100006c:	90                   	nop
 100006d:	90                   	nop
 100006e:	90                   	nop
 100006f:	90                   	nop
 1000070:	90                   	nop
 1000071:	90                   	nop
 1000072:	90                   	nop
 1000073:	90                   	nop
 1000074:	90                   	nop
 1000075:	90                   	nop
 1000076:	90                   	nop
 1000077:	90                   	nop
 1000078:	90                   	nop
 1000079:	90                   	nop
 100007a:	90                   	nop
 100007b:	90                   	nop
 100007c:	90                   	nop
 100007d:	90                   	nop
 100007e:	90                   	nop
 100007f:	90                   	nop
 1000080:	90                   	nop
 1000081:	90                   	nop
 1000082:	90                   	nop
 1000083:	90                   	nop
 1000084:	90                   	nop
 1000085:	90                   	nop
 1000086:	90                   	nop
 1000087:	90                   	nop
 1000088:	90                   	nop
 1000089:	90                   	nop
 100008a:	90                   	nop
 100008b:	90                   	nop
 100008c:	90                   	nop
 100008d:	90                   	nop
 100008e:	90                   	nop
 100008f:	90                   	nop
 1000090:	90                   	nop
 1000091:	90                   	nop
 1000092:	90                   	nop
 1000093:	90                   	nop
 1000094:	90                   	nop
 1000095:	90                   	nop
 1000096:	90                   	nop
 1000097:	90                   	nop
 1000098:	90                   	nop
 1000099:	90                   	nop
 100009a:	90                   	nop
 100009b:	90                   	nop
 100009c:	90                   	nop
 100009d:	90                   	nop
 100009e:	90                   	nop
 100009f:	90                   	nop
 10000a0:	90                   	nop
 10000a1:	90                   	nop
 10000a2:	90                   	nop
 10000a3:	90                   	nop
 10000a4:	90                   	nop
 10000a5:	90                   	nop
 10000a6:	90                   	nop
 10000a7:	90                   	nop
 10000a8:	90                   	nop
 10000a9:	90                   	nop
 10000aa:	90                   	nop
 10000ab:	90                   	nop
 10000ac:	90                   	nop
 10000ad:	90                   	nop
 10000ae:	90                   	nop
 10000af:	90                   	nop
 10000b0:	90                   	nop
 10000b1:	90                   	nop
 10000b2:	90                   	nop
 10000b3:	90                   	nop
 10000b4:	90                   	nop
 10000b5:	90                   	nop
 10000b6:	90                   	nop
 10000b7:	90                   	nop
 10000b8:	90                   	nop
 10000b9:	90                   	nop
 10000ba:	90                   	nop
 10000bb:	90                   	nop
 10000bc:	90                   	nop
 10000bd:	90                   	nop
 10000be:	90                   	nop
 10000bf:	90                   	nop
 10000c0:	90                   	nop
 10000c1:	90                   	nop
 10000c2:	90                   	nop
 10000c3:	90                   	nop
 10000c4:	90                   	nop
 10000c5:	90                   	nop
 10000c6:	90                   	nop
 10000c7:	90                   	nop
 10000c8:	90                   	nop
 10000c9:	90                   	nop
 10000ca:	90                   	nop
 10000cb:	90                   	nop
 10000cc:	90                   	nop
 10000cd:	90                   	nop
 10000ce:	90                   	nop
 10000cf:	90                   	nop
 10000d0:	90                   	nop
 10000d1:	90                   	nop
 10000d2:	90                   	nop
 10000d3:	90                   	nop
 10000d4:	90                   	nop
 10000d5:	90                   	nop
 10000d6:	90                   	nop
 10000d7:	90                   	nop
 10000d8:	90                   	nop
 10000d9:	90                   	nop
 10000da:	90                   	nop
 10000db:	90                   	nop
 10000dc:	90                   	nop
 10000dd:	90                   	nop
 10000de:	90                   	nop
 10000df:	90                   	nop
 10000e0:	90                   	nop
 10000e1:	90                   	nop
 10000e2:	90                   	nop
 10000e3:	90                   	nop
 10000e4:	90                   	nop
 10000e5:	90                   	nop
 10000e6:	90                   	nop
 10000e7:	90                   	nop
 10000e8:	90                   	nop
 10000e9:	90                   	nop
 10000ea:	90                   	nop
 10000eb:	90                   	nop
 10000ec:	90                   	nop
 10000ed:	90                   	nop
 10000ee:	90                   	nop
 10000ef:	90                   	nop
 10000f0:	90                   	nop
 10000f1:	90                   	nop
 10000f2:	90                   	nop
 10000f3:	90                   	nop
 10000f4:	90                   	nop
 10000f5:	90                   	nop
 10000f6:	90                   	nop
 10000f7:	90                   	nop
 10000f8:	90                   	nop
 10000f9:	90                   	nop
 10000fa:	90                   	nop
 10000fb:	90                   	nop
 10000fc:	90                   	nop
 10000fd:	90                   	nop
 10000fe:	90                   	nop
 10000ff:	90                   	nop
 1000100:	90                   	nop
 1000101:	90                   	nop
 1000102:	90                   	nop
 1000103:	90                   	nop
 1000104:	90                   	nop
 1000105:	90                   	nop
 1000106:	90                   	nop
 1000107:	90                   	nop
 1000108:	90                   	nop
 1000109:	90                   	nop
 100010a:	90                   	nop
 100010b:	90                   	nop
 100010c:	90                   	nop
 100010d:	90                   	nop
 100010e:	90                   	nop
 100010f:	90                   	nop
 1000110:	90                   	nop
 1000111:	90                   	nop
 1000112:	90                   	nop
 1000113:	90                   	nop
 1000114:	90                   	nop
 1000115:	90                   	nop
 1000116:	90                   	nop
 1000117:	90                   	nop
 1000118:	90                   	nop
 1000119:	90                   	nop
 100011a:	90                   	nop
 100011b:	90                   	nop
 100011c:	90                   	nop
 100011d:	90                   	nop
 100011e:	90                   	nop
 100011f:	90                   	nop
 1000120:	90                   	nop
 1000121:	90                   	nop
 1000122:	90                   	nop
 1000123:	90                   	nop
 1000124:	90                   	nop
 1000125:	90                   	nop
 1000126:	90                   	nop
 1000127:	90                   	nop
 1000128:	90                   	nop
 1000129:	90                   	nop
 100012a:	90                   	nop
 100012b:	90                   	nop
 100012c:	90                   	nop
 100012d:	90                   	nop
 100012e:	90                   	nop
 100012f:	90                   	nop
 1000130:	90                   	nop
 1000131:	90                   	nop
 1000132:	90                   	nop
 1000133:	90                   	nop
 1000134:	90                   	nop
 1000135:	90                   	nop
 1000136:	90                   	nop
 1000137:	90                   	nop
 1000138:	90                   	nop
 1000139:	90                   	nop
 100013a:	90                   	nop
 100013b:	90                   	nop
 100013c:	90                   	nop
 100013d:	90                   	nop
 100013e:	90                   	nop
 100013f:	90                   	nop
 1000140:	90                   	nop
 1000141:	90                   	nop
 1000142:	90                   	nop
 1000143:	90                   	nop
 1000144:	90                   	nop
 1000145:	90                   	nop
 1000146:	90                   	nop
 1000147:	90                   	nop
 1000148:	90                   	nop
 1000149:	90                   	nop
 100014a:	90                   	nop
 100014b:	90                   	nop
 100014c:	90                   	nop
 100014d:	90                   	nop
 100014e:	90                   	nop
 100014f:	90                   	nop
 1000150:	90                   	nop
 1000151:	90                   	nop
 1000152:	90                   	nop
 1000153:	90                   	nop
 1000154:	90                   	nop
 1000155:	90                   	nop
 1000156:	90                   	nop
 1000157:	90                   	nop
 1000158:	90                   	nop
 1000159:	90                   	nop
 100015a:	90                   	nop
 100015b:	90                   	nop
 100015c:	90                   	nop
 100015d:	90                   	nop
 100015e:	90                   	nop
 100015f:	90                   	nop
 1000160:	90                   	nop
 1000161:	90                   	nop
 1000162:	90                   	nop
 1000163:	90                   	nop
 1000164:	90                   	nop
 1000165:	90                   	nop
 1000166:	90                   	nop
 1000167:	90                   	nop
 1000168:	90                   	nop
 1000169:	90                   	nop
 100016a:	90                   	nop
 100016b:	90                   	nop
 100016c:	90                   	nop
 100016d:	90                   	nop
 100016e:	90                   	nop
 100016f:	90                   	nop
 1000170:	90                   	nop
 1000171:	90                   	nop
 1000172:	90                   	nop
 1000173:	90                   	nop
 1000174:	90                   	nop
 1000175:	90                   	nop
 1000176:	90                   	nop
 1000177:	90                   	nop
 1000178:	90                   	nop
 1000179:	90                   	nop
 100017a:	90                   	nop
 100017b:	90                   	nop
 100017c:	90                   	nop
 100017d:	90                   	nop
 100017e:	90                   	nop
 100017f:	90                   	nop
 1000180:	90                   	nop
 1000181:	90                   	nop
 1000182:	90                   	nop
 1000183:	90                   	nop
 1000184:	90                   	nop
 1000185:	90                   	nop
 1000186:	90                   	nop
 1000187:	90                   	nop
 1000188:	90                   	nop
 1000189:	90                   	nop
 100018a:	90                   	nop
 100018b:	90                   	nop
 100018c:	90                   	nop
 100018d:	90                   	nop
 100018e:	90                   	nop
 100018f:	90                   	nop
 1000190:	90                   	nop
 1000191:	90                   	nop
 1000192:	90                   	nop
 1000193:	90                   	nop
 1000194:	90                   	nop
 1000195:	90                   	nop
 1000196:	90                   	nop
 1000197:	90                   	nop
 1000198:	90                   	nop
 1000199:	90                   	nop
 100019a:	90                   	nop
 100019b:	90                   	nop
 100019c:	90                   	nop
 100019d:	90                   	nop
 100019e:	90                   	nop
 100019f:	90                   	nop
 10001a0:	90                   	nop
 10001a1:	90                   	nop
 10001a2:	90                   	nop
 10001a3:	90                   	nop
 10001a4:	90                   	nop
 10001a5:	90                   	nop
 10001a6:	90                   	nop
 10001a7:	90                   	nop
 10001a8:	90                   	nop
 10001a9:	90                   	nop
 10001aa:	90                   	nop
 10001ab:	90                   	nop
 10001ac:	90                   	nop
 10001ad:	90                   	nop
 10001ae:	90                   	nop
 10001af:	90                   	nop
 10001b0:	90                   	nop
 10001b1:	90                   	nop
 10001b2:	90                   	nop
 10001b3:	90                   	nop
 10001b4:	90                   	nop
 10001b5:	90                   	nop
 10001b6:	90                   	nop
 10001b7:	90                   	nop
 10001b8:	90                   	nop
 10001b9:	90                   	nop
 10001ba:	90                   	nop
 10001bb:	90                   	nop
 10001bc:	90                   	nop
 10001bd:	90                   	nop
 10001be:	90                   	nop
 10001bf:	90                   	nop
 10001c0:	90                   	nop
 10001c1:	90                   	nop
 10001c2:	90                   	nop
 10001c3:	90                   	nop
 10001c4:	90                   	nop
 10001c5:	90                   	nop
 10001c6:	90                   	nop
 10001c7:	90                   	nop
 10001c8:	90                   	nop
 10001c9:	90                   	nop
 10001ca:	90                   	nop
 10001cb:	90                   	nop
 10001cc:	90                   	nop
 10001cd:	90                   	nop
 10001ce:	90                   	nop
 10001cf:	90                   	nop
 10001d0:	90                   	nop
 10001d1:	90                   	nop
 10001d2:	90                   	nop
 10001d3:	90                   	nop
 10001d4:	90                   	nop
 10001d5:	90                   	nop
 10001d6:	90                   	nop
 10001d7:	90                   	nop
 10001d8:	90                   	nop
 10001d9:	90                   	nop
 10001da:	90                   	nop
 10001db:	90                   	nop
 10001dc:	90                   	nop
 10001dd:	90                   	nop
 10001de:	90                   	nop
 10001df:	90                   	nop
 10001e0:	90                   	nop
 10001e1:	90                   	nop
 10001e2:	90                   	nop
 10001e3:	90                   	nop
 10001e4:	90                   	nop
 10001e5:	90                   	nop
 10001e6:	90                   	nop
 10001e7:	90                   	nop
 10001e8:	90                   	nop
 10001e9:	90                   	nop
 10001ea:	90                   	nop
 10001eb:	90                   	nop
 10001ec:	90                   	nop
 10001ed:	90                   	nop
 10001ee:	90                   	nop
 10001ef:	90                   	nop
 10001f0:	90                   	nop
 10001f1:	90                   	nop
 10001f2:	90                   	nop
 10001f3:	90                   	nop
 10001f4:	90                   	nop
 10001f5:	90                   	nop
 10001f6:	90                   	nop
 10001f7:	90                   	nop
 10001f8:	90                   	nop
 10001f9:	90                   	nop
 10001fa:	90                   	nop
 10001fb:	90                   	nop
 10001fc:	90                   	nop
 10001fd:	90                   	nop
 10001fe:	90                   	nop
 10001ff:	90                   	nop
 1000200:	90                   	nop
 1000201:	90                   	nop
 1000202:	90                   	nop
 1000203:	90                   	nop
 1000204:	90                   	nop
 1000205:	90                   	nop
 1000206:	90                   	nop
 1000207:	90                   	nop
 1000208:	90                   	nop
 1000209:	90                   	nop
 100020a:	90                   	nop
 100020b:	90                   	nop
 100020c:	90                   	nop
 100020d:	90                   	nop
 100020e:	90                   	nop
 100020f:	90                   	nop
 1000210:	90                   	nop
 1000211:	90                   	nop
 1000212:	90                   	nop
 1000213:	90                   	nop
 1000214:	90                   	nop
 1000215:	90                   	nop
 1000216:	90                   	nop
 1000217:	90                   	nop
 1000218:	90                   	nop
 1000219:	90                   	nop
 100021a:	90                   	nop
 100021b:	90                   	nop
 100021c:	90                   	nop
 100021d:	90                   	nop
 100021e:	90                   	nop
 100021f:	90                   	nop
 1000220:	90                   	nop
 1000221:	90                   	nop
 1000222:	90                   	nop
 1000223:	90                   	nop
 1000224:	90                   	nop
 1000225:	90                   	nop
 1000226:	90                   	nop
 1000227:	90                   	nop
 1000228:	90                   	nop
 1000229:	90                   	nop
 100022a:	90                   	nop
 100022b:	90                   	nop
 100022c:	90                   	nop
 100022d:	90                   	nop
 100022e:	90                   	nop
 100022f:	90                   	nop
 1000230:	90                   	nop
 1000231:	90                   	nop
 1000232:	90                   	nop
 1000233:	90                   	nop
 1000234:	90                   	nop
 1000235:	90                   	nop
 1000236:	90                   	nop
 1000237:	90                   	nop
 1000238:	90                   	nop
 1000239:	90                   	nop
 100023a:	90                   	nop
 100023b:	90                   	nop
 100023c:	90                   	nop
 100023d:	90                   	nop
 100023e:	90                   	nop
 100023f:	90                   	nop
 1000240:	90                   	nop
 1000241:	90                   	nop
 1000242:	90                   	nop
 1000243:	90                   	nop
 1000244:	90                   	nop
 1000245:	90                   	nop
 1000246:	90                   	nop
 1000247:	90                   	nop
 1000248:	90                   	nop
 1000249:	90                   	nop
 100024a:	90                   	nop
 100024b:	90                   	nop
 100024c:	90                   	nop
 100024d:	90                   	nop
 100024e:	90                   	nop
 100024f:	90                   	nop
 1000250:	90                   	nop
 1000251:	90                   	nop
 1000252:	90                   	nop
 1000253:	90                   	nop
 1000254:	90                   	nop
 1000255:	90                   	nop
 1000256:	90                   	nop
 1000257:	90                   	nop
 1000258:	90                   	nop
 1000259:	90                   	nop
 100025a:	90                   	nop
 100025b:	90                   	nop
 100025c:	90                   	nop
 100025d:	90                   	nop
 100025e:	90                   	nop
 100025f:	90                   	nop
 1000260:	90                   	nop
 1000261:	90                   	nop
 1000262:	90                   	nop
 1000263:	90                   	nop
 1000264:	90                   	nop
 1000265:	90                   	nop
 1000266:	90                   	nop
 1000267:	90                   	nop
 1000268:	90                   	nop
 1000269:	90                   	nop
 100026a:	90                   	nop
 100026b:	90                   	nop
 100026c:	90                   	nop
 100026d:	90                   	nop
 100026e:	90                   	nop
 100026f:	90                   	nop
 1000270:	90                   	nop
 1000271:	90                   	nop
 1000272:	90                   	nop
 1000273:	90                   	nop
 1000274:	90                   	nop
 1000275:	90                   	nop
 1000276:	90                   	nop
 1000277:	90                   	nop
 1000278:	90                   	nop
 1000279:	90                   	nop
 100027a:	90                   	nop
 100027b:	90                   	nop
 100027c:	90                   	nop
 100027d:	90                   	nop
 100027e:	90                   	nop
 100027f:	90                   	nop
 1000280:	90                   	nop
 1000281:	90                   	nop
 1000282:	90                   	nop
 1000283:	90                   	nop
 1000284:	90                   	nop
 1000285:	90                   	nop
 1000286:	90                   	nop
 1000287:	90                   	nop
 1000288:	90                   	nop
 1000289:	90                   	nop
 100028a:	90                   	nop
 100028b:	90                   	nop
 100028c:	90                   	nop
 100028d:	90                   	nop
 100028e:	90                   	nop
 100028f:	90                   	nop
 1000290:	90                   	nop
 1000291:	90                   	nop
 1000292:	90                   	nop
 1000293:	90                   	nop
 1000294:	90                   	nop
 1000295:	90                   	nop
 1000296:	90                   	nop
 1000297:	90                   	nop
 1000298:	90                   	nop
 1000299:	90                   	nop
 100029a:	90                   	nop
 100029b:	90                   	nop
 100029c:	90                   	nop
 100029d:	90                   	nop
 100029e:	90                   	nop
 100029f:	90                   	nop
 10002a0:	90                   	nop
 10002a1:	90                   	nop
 10002a2:	90                   	nop
 10002a3:	90                   	nop
 10002a4:	90                   	nop
 10002a5:	90                   	nop
 10002a6:	90                   	nop
 10002a7:	90                   	nop
 10002a8:	90                   	nop
 10002a9:	90                   	nop
 10002aa:	90                   	nop
 10002ab:	90                   	nop
 10002ac:	90                   	nop
 10002ad:	90                   	nop
 10002ae:	90                   	nop
 10002af:	90                   	nop
 10002b0:	90                   	nop
 10002b1:	90                   	nop
 10002b2:	90                   	nop
 10002b3:	90                   	nop
 10002b4:	90                   	nop
 10002b5:	90                   	nop
 10002b6:	90                   	nop
 10002b7:	90                   	nop
 10002b8:	90                   	nop
 10002b9:	90                   	nop
 10002ba:	90                   	nop
 10002bb:	90                   	nop
 10002bc:	90                   	nop
 10002bd:	90                   	nop
 10002be:	90                   	nop
 10002bf:	90                   	nop
 10002c0:	90                   	nop
 10002c1:	90                   	nop
 10002c2:	90                   	nop
 10002c3:	90                   	nop
 10002c4:	90                   	nop
 10002c5:	90                   	nop
 10002c6:	90                   	nop
 10002c7:	90                   	nop
 10002c8:	90                   	nop
 10002c9:	90                   	nop
 10002ca:	90                   	nop
 10002cb:	90                   	nop
 10002cc:	90                   	nop
 10002cd:	90                   	nop
 10002ce:	90                   	nop
 10002cf:	90                   	nop
 10002d0:	90                   	nop
 10002d1:	90                   	nop
 10002d2:	90                   	nop
 10002d3:	90                   	nop
 10002d4:	90                   	nop
 10002d5:	90                   	nop
 10002d6:	90                   	nop
 10002d7:	90                   	nop
 10002d8:	90                   	nop
 10002d9:	90                   	nop
 10002da:	90                   	nop
 10002db:	90                   	nop
 10002dc:	90                   	nop
 10002dd:	90                   	nop
 10002de:	90                   	nop
 10002df:	90                   	nop
 10002e0:	90                   	nop
 10002e1:	90                   	nop
 10002e2:	90                   	nop
 10002e3:	90                   	nop
 10002e4:	90                   	nop
 10002e5:	90                   	nop
 10002e6:	90                   	nop
 10002e7:	90                   	nop
 10002e8:	90                   	nop
 10002e9:	90                   	nop
 10002ea:	90                   	nop
 10002eb:	90                   	nop
 10002ec:	90                   	nop
 10002ed:	90                   	nop
 10002ee:	90                   	nop
 10002ef:	90                   	nop
 10002f0:	90                   	nop
 10002f1:	90                   	nop
 10002f2:	90                   	nop
 10002f3:	90                   	nop
 10002f4:	90                   	nop
 10002f5:	90                   	nop
 10002f6:	90                   	nop
 10002f7:	90                   	nop
 10002f8:	90                   	nop
 10002f9:	90                   	nop
 10002fa:	90                   	nop
 10002fb:	90                   	nop
 10002fc:	90                   	nop
 10002fd:	90                   	nop
 10002fe:	90                   	nop
 10002ff:	90                   	nop
 1000300:	90                   	nop
 1000301:	90                   	nop
 1000302:	90                   	nop
 1000303:	90                   	nop
 1000304:	90                   	nop
 1000305:	90                   	nop
 1000306:	90                   	nop
 1000307:	90                   	nop
 1000308:	90                   	nop
 1000309:	90                   	nop
 100030a:	90                   	nop
 100030b:	90                   	nop
 100030c:	90                   	nop
 100030d:	90                   	nop
 100030e:	90                   	nop
 100030f:	90                   	nop
 1000310:	90                   	nop
 1000311:	90                   	nop
 1000312:	90                   	nop
 1000313:	90                   	nop
 1000314:	90                   	nop
 1000315:	90                   	nop
 1000316:	90                   	nop
 1000317:	90                   	nop
 1000318:	90                   	nop
 1000319:	90                   	nop
 100031a:	90                   	nop
 100031b:	90                   	nop
 100031c:	90                   	nop
 100031d:	90                   	nop
 100031e:	90                   	nop
 100031f:	90                   	nop
 1000320:	90                   	nop
 1000321:	90                   	nop
 1000322:	90                   	nop
 1000323:	90                   	nop
 1000324:	90                   	nop
 1000325:	90                   	nop
 1000326:	90                   	nop
 1000327:	90                   	nop
 1000328:	90                   	nop
 1000329:	90                   	nop
 100032a:	90                   	nop
 100032b:	90                   	nop
 100032c:	90                   	nop
 100032d:	90                   	nop
 100032e:	90                   	nop
 100032f:	90                   	nop
 1000330:	90                   	nop
 1000331:	90                   	nop
 1000332:	90                   	nop
 1000333:	90                   	nop
 1000334:	90                   	nop
 1000335:	90                   	nop
 1000336:	90                   	nop
 1000337:	90                   	nop
 1000338:	90                   	nop
 1000339:	90                   	nop
 100033a:	90                   	nop
 100033b:	90                   	nop
 100033c:	90                   	nop
 100033d:	90                   	nop
 100033e:	90                   	nop
 100033f:	90                   	nop
 1000340:	90                   	nop
 1000341:	90                   	nop
 1000342:	90                   	nop
 1000343:	90                   	nop
 1000344:	90                   	nop
 1000345:	90                   	nop
 1000346:	90                   	nop
 1000347:	90                   	nop
 1000348:	90                   	nop
 1000349:	90                   	nop
 100034a:	90                   	nop
 100034b:	90                   	nop
 100034c:	90                   	nop
 100034d:	90                   	nop
 100034e:	90                   	nop
 100034f:	90                   	nop
 1000350:	90                   	nop
 1000351:	90                   	nop
 1000352:	90                   	nop
 1000353:	90                   	nop
 1000354:	90                   	nop
 1000355:	90                   	nop
 1000356:	90                   	nop
 1000357:	90                   	nop
 1000358:	90                   	nop
 1000359:	90                   	nop
 100035a:	90                   	nop
 100035b:	90                   	nop
 100035c:	90                   	nop
 100035d:	90                   	nop
 100035e:	90                   	nop
 100035f:	90                   	nop
 1000360:	90                   	nop
 1000361:	90                   	nop
 1000362:	90                   	nop
 1000363:	90                   	nop
 1000364:	90                   	nop
 1000365:	90                   	nop
 1000366:	90                   	nop
 1000367:	90                   	nop
 1000368:	90                   	nop
 1000369:	90                   	nop
 100036a:	90                   	nop
 100036b:	90                   	nop
 100036c:	90                   	nop
 100036d:	90                   	nop
 100036e:	90                   	nop
 100036f:	90                   	nop
 1000370:	90                   	nop
 1000371:	90                   	nop
 1000372:	90                   	nop
 1000373:	90                   	nop
 1000374:	90                   	nop
 1000375:	90                   	nop
 1000376:	90                   	nop
 1000377:	90                   	nop
 1000378:	90                   	nop
 1000379:	90                   	nop
 100037a:	90                   	nop
 100037b:	90                   	nop
 100037c:	90                   	nop
 100037d:	90                   	nop
 100037e:	90                   	nop
 100037f:	90                   	nop
 1000380:	90                   	nop
 1000381:	90                   	nop
 1000382:	90                   	nop
 1000383:	90                   	nop
 1000384:	90                   	nop
 1000385:	90                   	nop
 1000386:	90                   	nop
 1000387:	90                   	nop
 1000388:	90                   	nop
 1000389:	90                   	nop
 100038a:	90                   	nop
 100038b:	90                   	nop
 100038c:	90                   	nop
 100038d:	90                   	nop
 100038e:	90                   	nop
 100038f:	90                   	nop
 1000390:	90                   	nop
 1000391:	90                   	nop
 1000392:	90                   	nop
 1000393:	90                   	nop
 1000394:	90                   	nop
 1000395:	90                   	nop
 1000396:	90                   	nop
 1000397:	90                   	nop
 1000398:	90                   	nop
 1000399:	90                   	nop
 100039a:	90                   	nop
 100039b:	90                   	nop
 100039c:	90                   	nop
 100039d:	90                   	nop
 100039e:	90                   	nop
 100039f:	90                   	nop
 10003a0:	90                   	nop
 10003a1:	90                   	nop
 10003a2:	90                   	nop
 10003a3:	90                   	nop
 10003a4:	90                   	nop
 10003a5:	90                   	nop
 10003a6:	90                   	nop
 10003a7:	90                   	nop
 10003a8:	90                   	nop
 10003a9:	90                   	nop
 10003aa:	90                   	nop
 10003ab:	90                   	nop
 10003ac:	90                   	nop
 10003ad:	90                   	nop
 10003ae:	90                   	nop
 10003af:	90                   	nop
 10003b0:	90                   	nop
 10003b1:	90                   	nop
 10003b2:	90                   	nop
 10003b3:	90                   	nop
 10003b4:	90                   	nop
 10003b5:	90                   	nop
 10003b6:	90                   	nop
 10003b7:	90                   	nop
 10003b8:	90                   	nop
 10003b9:	90                   	nop
 10003ba:	90                   	nop
 10003bb:	90                   	nop
 10003bc:	90                   	nop
 10003bd:	90                   	nop
 10003be:	90                   	nop
 10003bf:	90                   	nop
 10003c0:	90                   	nop
 10003c1:	90                   	nop
 10003c2:	90                   	nop
 10003c3:	90                   	nop
 10003c4:	90                   	nop
 10003c5:	90                   	nop
 10003c6:	90                   	nop
 10003c7:	90                   	nop
 10003c8:	90                   	nop
 10003c9:	90                   	nop
 10003ca:	90                   	nop
 10003cb:	90                   	nop
 10003cc:	90                   	nop
 10003cd:	90                   	nop
 10003ce:	90                   	nop
 10003cf:	90                   	nop
 10003d0:	90                   	nop
 10003d1:	90                   	nop
 10003d2:	90                   	nop
 10003d3:	90                   	nop
 10003d4:	90                   	nop
 10003d5:	90                   	nop
 10003d6:	90                   	nop
 10003d7:	90                   	nop
 10003d8:	90                   	nop
 10003d9:	90                   	nop
 10003da:	90                   	nop
 10003db:	90                   	nop
 10003dc:	90                   	nop
 10003dd:	90                   	nop
 10003de:	90                   	nop
 10003df:	90                   	nop
 10003e0:	90                   	nop
 10003e1:	90                   	nop
 10003e2:	90                   	nop
 10003e3:	90                   	nop
 10003e4:	90                   	nop
 10003e5:	90                   	nop
 10003e6:	90                   	nop
 10003e7:	90                   	nop
 10003e8:	90                   	nop
 10003e9:	90                   	nop
 10003ea:	90                   	nop
 10003eb:	90                   	nop
 10003ec:	90                   	nop
 10003ed:	90                   	nop
 10003ee:	90                   	nop
 10003ef:	90                   	nop
 10003f0:	90                   	nop
 10003f1:	90                   	nop
 10003f2:	90                   	nop
 10003f3:	90                   	nop
 10003f4:	90                   	nop
 10003f5:	90                   	nop
 10003f6:	90                   	nop
 10003f7:	90                   	nop
 10003f8:	90                   	nop
 10003f9:	90                   	nop
 10003fa:	90                   	nop
 10003fb:	90                   	nop
 10003fc:	90                   	nop
 10003fd:	90                   	nop
 10003fe:	90                   	nop
 10003ff:	90                   	nop
 1000400:	90                   	nop
 1000401:	90                   	nop
 1000402:	90                   	nop
 1000403:	90                   	nop
 1000404:	90                   	nop
 1000405:	90                   	nop
 1000406:	90                   	nop
 1000407:	90                   	nop
 1000408:	90                   	nop
 1000409:	90                   	nop
 100040a:	90                   	nop
 100040b:	90                   	nop
 100040c:	90                   	nop
 100040d:	90                   	nop
 100040e:	90                   	nop
 100040f:	90                   	nop
 1000410:	90                   	nop
 1000411:	90                   	nop
 1000412:	90                   	nop
 1000413:	90                   	nop
 1000414:	90                   	nop
 1000415:	90                   	nop
 1000416:	90                   	nop
 1000417:	90                   	nop
 1000418:	90                   	nop
 1000419:	90                   	nop
 100041a:	90                   	nop
 100041b:	90                   	nop
 100041c:	90                   	nop
 100041d:	90                   	nop
 100041e:	90                   	nop
 100041f:	90                   	nop
 1000420:	90                   	nop
 1000421:	90                   	nop
 1000422:	90                   	nop
 1000423:	90                   	nop
 1000424:	90                   	nop
 1000425:	90                   	nop
 1000426:	90                   	nop
 1000427:	90                   	nop
 1000428:	90                   	nop
 1000429:	90                   	nop
 100042a:	90                   	nop
 100042b:	90                   	nop
 100042c:	90                   	nop
 100042d:	90                   	nop
 100042e:	90                   	nop
 100042f:	90                   	nop
 1000430:	90                   	nop
 1000431:	90                   	nop
 1000432:	90                   	nop
 1000433:	90                   	nop
 1000434:	90                   	nop
 1000435:	90                   	nop
 1000436:	90                   	nop
 1000437:	90                   	nop
 1000438:	90                   	nop
 1000439:	90                   	nop
 100043a:	90                   	nop
 100043b:	90                   	nop
 100043c:	90                   	nop
 100043d:	90                   	nop
 100043e:	90                   	nop
 100043f:	90                   	nop
 1000440:	90                   	nop
 1000441:	90                   	nop
 1000442:	90                   	nop
 1000443:	90                   	nop
 1000444:	90                   	nop
 1000445:	90                   	nop
 1000446:	90                   	nop
 1000447:	90                   	nop
 1000448:	90                   	nop
 1000449:	90                   	nop
 100044a:	90                   	nop
 100044b:	90                   	nop
 100044c:	90                   	nop
 100044d:	90                   	nop
 100044e:	90                   	nop
 100044f:	90                   	nop
 1000450:	90                   	nop
 1000451:	90                   	nop
 1000452:	90                   	nop
 1000453:	90                   	nop
 1000454:	90                   	nop
 1000455:	90                   	nop
 1000456:	90                   	nop
 1000457:	90                   	nop
 1000458:	90                   	nop
 1000459:	90                   	nop
 100045a:	90                   	nop
 100045b:	90                   	nop
 100045c:	90                   	nop
 100045d:	90                   	nop
 100045e:	90                   	nop
 100045f:	90                   	nop
 1000460:	90                   	nop
 1000461:	90                   	nop
 1000462:	90                   	nop
 1000463:	90                   	nop
 1000464:	90                   	nop
 1000465:	90                   	nop
 1000466:	90                   	nop
 1000467:	90                   	nop
 1000468:	90                   	nop
 1000469:	90                   	nop
 100046a:	90                   	nop
 100046b:	90                   	nop
 100046c:	90                   	nop
 100046d:	90                   	nop
 100046e:	90                   	nop
 100046f:	90                   	nop
 1000470:	90                   	nop
 1000471:	90                   	nop
 1000472:	90                   	nop
 1000473:	90                   	nop
 1000474:	90                   	nop
 1000475:	90                   	nop
 1000476:	90                   	nop
 1000477:	90                   	nop
 1000478:	90                   	nop
 1000479:	90                   	nop
 100047a:	90                   	nop
 100047b:	90                   	nop
 100047c:	90                   	nop
 100047d:	90                   	nop
 100047e:	90                   	nop
 100047f:	90                   	nop
 1000480:	90                   	nop
 1000481:	90                   	nop
 1000482:	90                   	nop
 1000483:	90                   	nop
 1000484:	90                   	nop
 1000485:	90                   	nop
 1000486:	90                   	nop
 1000487:	90                   	nop
 1000488:	90                   	nop
 1000489:	90                   	nop
 100048a:	90                   	nop
 100048b:	90                   	nop
 100048c:	90                   	nop
 100048d:	90                   	nop
 100048e:	90                   	nop
 100048f:	90                   	nop
 1000490:	90                   	nop
 1000491:	90                   	nop
 1000492:	90                   	nop
 1000493:	90                   	nop
 1000494:	90                   	nop
 1000495:	90                   	nop
 1000496:	90                   	nop
 1000497:	90                   	nop
 1000498:	90                   	nop
 1000499:	90                   	nop
 100049a:	90                   	nop
 100049b:	90                   	nop
 100049c:	90                   	nop
 100049d:	90                   	nop
 100049e:	90                   	nop
 100049f:	90                   	nop
 10004a0:	90                   	nop
 10004a1:	90                   	nop
 10004a2:	90                   	nop
 10004a3:	90                   	nop
 10004a4:	90                   	nop
 10004a5:	90                   	nop
 10004a6:	90                   	nop
 10004a7:	90                   	nop
 10004a8:	90                   	nop
 10004a9:	90                   	nop
 10004aa:	90                   	nop
 10004ab:	90                   	nop
 10004ac:	90                   	nop
 10004ad:	90                   	nop
 10004ae:	90                   	nop
 10004af:	90                   	nop
 10004b0:	90                   	nop
 10004b1:	90                   	nop
 10004b2:	90                   	nop
 10004b3:	90                   	nop
 10004b4:	90                   	nop
 10004b5:	90                   	nop
 10004b6:	90                   	nop
 10004b7:	90                   	nop
 10004b8:	90                   	nop
 10004b9:	90                   	nop
 10004ba:	90                   	nop
 10004bb:	90                   	nop
 10004bc:	90                   	nop
 10004bd:	90                   	nop
 10004be:	90                   	nop
 10004bf:	90                   	nop
 10004c0:	90                   	nop
 10004c1:	90                   	nop
 10004c2:	90                   	nop
 10004c3:	90                   	nop
 10004c4:	90                   	nop
 10004c5:	90                   	nop
 10004c6:	90                   	nop
 10004c7:	90                   	nop
 10004c8:	90                   	nop
 10004c9:	90                   	nop
 10004ca:	90                   	nop
 10004cb:	90                   	nop
 10004cc:	90                   	nop
 10004cd:	90                   	nop
 10004ce:	90                   	nop
 10004cf:	90                   	nop
 10004d0:	90                   	nop
 10004d1:	90                   	nop
 10004d2:	90                   	nop
 10004d3:	90                   	nop
 10004d4:	90                   	nop
 10004d5:	90                   	nop
 10004d6:	90                   	nop
 10004d7:	90                   	nop
 10004d8:	90                   	nop
 10004d9:	90                   	nop
 10004da:	90                   	nop
 10004db:	90                   	nop
 10004dc:	90                   	nop
 10004dd:	90                   	nop
 10004de:	90                   	nop
 10004df:	90                   	nop
 10004e0:	90                   	nop
 10004e1:	90                   	nop
 10004e2:	90                   	nop
 10004e3:	90                   	nop
 10004e4:	90                   	nop
 10004e5:	90                   	nop
 10004e6:	90                   	nop
 10004e7:	90                   	nop
 10004e8:	90                   	nop
 10004e9:	90                   	nop
 10004ea:	90                   	nop
 10004eb:	90                   	nop
 10004ec:	90                   	nop
 10004ed:	90                   	nop
 10004ee:	90                   	nop
 10004ef:	90                   	nop
 10004f0:	90                   	nop
 10004f1:	90                   	nop
 10004f2:	90                   	nop
 10004f3:	90                   	nop
 10004f4:	90                   	nop
 10004f5:	90                   	nop
 10004f6:	90                   	nop
 10004f7:	90                   	nop
 10004f8:	90                   	nop
 10004f9:	90                   	nop
 10004fa:	90                   	nop
 10004fb:	90                   	nop
 10004fc:	90                   	nop
 10004fd:	90                   	nop
 10004fe:	90                   	nop
 10004ff:	90                   	nop
 1000500:	90                   	nop
 1000501:	90                   	nop
 1000502:	90                   	nop
 1000503:	90                   	nop
 1000504:	90                   	nop
 1000505:	90                   	nop
 1000506:	90                   	nop
 1000507:	90                   	nop
 1000508:	90                   	nop
 1000509:	90                   	nop
 100050a:	90                   	nop
 100050b:	90                   	nop
 100050c:	90                   	nop
 100050d:	90                   	nop
 100050e:	90                   	nop
 100050f:	90                   	nop
 1000510:	90                   	nop
 1000511:	90                   	nop
 1000512:	90                   	nop
 1000513:	90                   	nop
 1000514:	90                   	nop
 1000515:	90                   	nop
 1000516:	90                   	nop
 1000517:	90                   	nop
 1000518:	90                   	nop
 1000519:	90                   	nop
 100051a:	90                   	nop
 100051b:	90                   	nop
 100051c:	90                   	nop
 100051d:	90                   	nop
 100051e:	90                   	nop
 100051f:	90                   	nop
 1000520:	90                   	nop
 1000521:	90                   	nop
 1000522:	90                   	nop
 1000523:	90                   	nop
 1000524:	90                   	nop
 1000525:	90                   	nop
 1000526:	90                   	nop
 1000527:	90                   	nop
 1000528:	90                   	nop
 1000529:	90                   	nop
 100052a:	90                   	nop
 100052b:	90                   	nop
 100052c:	90                   	nop
 100052d:	90                   	nop
 100052e:	90                   	nop
 100052f:	90                   	nop
 1000530:	90                   	nop
 1000531:	90                   	nop
 1000532:	90                   	nop
 1000533:	90                   	nop
 1000534:	90                   	nop
 1000535:	90                   	nop
 1000536:	90                   	nop
 1000537:	90                   	nop
 1000538:	90                   	nop
 1000539:	90                   	nop
 100053a:	90                   	nop
 100053b:	90                   	nop
 100053c:	90                   	nop
 100053d:	90                   	nop
 100053e:	90                   	nop
 100053f:	90                   	nop
 1000540:	90                   	nop
 1000541:	90                   	nop
 1000542:	90                   	nop
 1000543:	90                   	nop
 1000544:	90                   	nop
 1000545:	90                   	nop
 1000546:	90                   	nop
 1000547:	90                   	nop
 1000548:	90                   	nop
 1000549:	90                   	nop
 100054a:	90                   	nop
 100054b:	90                   	nop
 100054c:	90                   	nop
 100054d:	90                   	nop
 100054e:	90                   	nop
 100054f:	90                   	nop
 1000550:	90                   	nop
 1000551:	90                   	nop
 1000552:	90                   	nop
 1000553:	90                   	nop
 1000554:	90                   	nop
 1000555:	90                   	nop
 1000556:	90                   	nop
 1000557:	90                   	nop
 1000558:	90                   	nop
 1000559:	90                   	nop
 100055a:	90                   	nop
 100055b:	90                   	nop
 100055c:	90                   	nop
 100055d:	90                   	nop
 100055e:	90                   	nop
 100055f:	90                   	nop
 1000560:	90                   	nop
 1000561:	90                   	nop
 1000562:	90                   	nop
 1000563:	90                   	nop
 1000564:	90                   	nop
 1000565:	90                   	nop
 1000566:	90                   	nop
 1000567:	90                   	nop
 1000568:	90                   	nop
 1000569:	90                   	nop
 100056a:	90                   	nop
 100056b:	90                   	nop
 100056c:	90                   	nop
 100056d:	90                   	nop
 100056e:	90                   	nop
 100056f:	90                   	nop
 1000570:	90                   	nop
 1000571:	90                   	nop
 1000572:	90                   	nop
 1000573:	90                   	nop
 1000574:	90                   	nop
 1000575:	90                   	nop
 1000576:	90                   	nop
 1000577:	90                   	nop
 1000578:	90                   	nop
 1000579:	90                   	nop
 100057a:	90                   	nop
 100057b:	90                   	nop
 100057c:	90                   	nop
 100057d:	90                   	nop
 100057e:	90                   	nop
 100057f:	90                   	nop
 1000580:	90                   	nop
 1000581:	90                   	nop
 1000582:	90                   	nop
 1000583:	90                   	nop
 1000584:	90                   	nop
 1000585:	90                   	nop
 1000586:	90                   	nop
 1000587:	90                   	nop
 1000588:	90                   	nop
 1000589:	90                   	nop
 100058a:	90                   	nop
 100058b:	90                   	nop
 100058c:	90                   	nop
 100058d:	90                   	nop
 100058e:	90                   	nop
 100058f:	90                   	nop
 1000590:	90                   	nop
 1000591:	90                   	nop
 1000592:	90                   	nop
 1000593:	90                   	nop
 1000594:	90                   	nop
 1000595:	90                   	nop
 1000596:	90                   	nop
 1000597:	90                   	nop
 1000598:	90                   	nop
 1000599:	90                   	nop
 100059a:	90                   	nop
 100059b:	90                   	nop
 100059c:	90                   	nop
 100059d:	90                   	nop
 100059e:	90                   	nop
 100059f:	90                   	nop
 10005a0:	90                   	nop
 10005a1:	90                   	nop
 10005a2:	90                   	nop
 10005a3:	90                   	nop
 10005a4:	90                   	nop
 10005a5:	90                   	nop
 10005a6:	90                   	nop
 10005a7:	90                   	nop
 10005a8:	90                   	nop
 10005a9:	90                   	nop
 10005aa:	90                   	nop
 10005ab:	90                   	nop
 10005ac:	90                   	nop
 10005ad:	90                   	nop
 10005ae:	90                   	nop
 10005af:	90                   	nop
 10005b0:	90                   	nop
 10005b1:	90                   	nop
 10005b2:	90                   	nop
 10005b3:	90                   	nop
 10005b4:	90                   	nop
 10005b5:	90                   	nop
 10005b6:	90                   	nop
 10005b7:	90                   	nop
 10005b8:	90                   	nop
 10005b9:	90                   	nop
 10005ba:	90                   	nop
 10005bb:	90                   	nop
 10005bc:	90                   	nop
 10005bd:	90                   	nop
 10005be:	90                   	nop
 10005bf:	90                   	nop
 10005c0:	90                   	nop
 10005c1:	90                   	nop
 10005c2:	90                   	nop
 10005c3:	90                   	nop
 10005c4:	90                   	nop
 10005c5:	90                   	nop
 10005c6:	90                   	nop
 10005c7:	90                   	nop
 10005c8:	90                   	nop
 10005c9:	90                   	nop
 10005ca:	90                   	nop
 10005cb:	90                   	nop
 10005cc:	90                   	nop
 10005cd:	90                   	nop
 10005ce:	90                   	nop
 10005cf:	90                   	nop
 10005d0:	90                   	nop
 10005d1:	90                   	nop
 10005d2:	90                   	nop
 10005d3:	90                   	nop
 10005d4:	90                   	nop
 10005d5:	90                   	nop
 10005d6:	90                   	nop
 10005d7:	90                   	nop
 10005d8:	90                   	nop
 10005d9:	90                   	nop
 10005da:	90                   	nop
 10005db:	90                   	nop
 10005dc:	90                   	nop
 10005dd:	90                   	nop
 10005de:	90                   	nop
 10005df:	90                   	nop
 10005e0:	90                   	nop
 10005e1:	90                   	nop
 10005e2:	90                   	nop
 10005e3:	90                   	nop
 10005e4:	90                   	nop
 10005e5:	90                   	nop
 10005e6:	90                   	nop
 10005e7:	90                   	nop
 10005e8:	90                   	nop
 10005e9:	90                   	nop
 10005ea:	90                   	nop
 10005eb:	90                   	nop
 10005ec:	90                   	nop
 10005ed:	90                   	nop
 10005ee:	90                   	nop
 10005ef:	90                   	nop
 10005f0:	90                   	nop
 10005f1:	90                   	nop
 10005f2:	90                   	nop
 10005f3:	90                   	nop
 10005f4:	90                   	nop
 10005f5:	90                   	nop
 10005f6:	90                   	nop
 10005f7:	90                   	nop
 10005f8:	90                   	nop
 10005f9:	90                   	nop
 10005fa:	90                   	nop
 10005fb:	90                   	nop
 10005fc:	90                   	nop
 10005fd:	90                   	nop
 10005fe:	90                   	nop
 10005ff:	90                   	nop
 1000600:	90                   	nop
 1000601:	90                   	nop
 1000602:	90                   	nop
 1000603:	90                   	nop
 1000604:	90                   	nop
 1000605:	90                   	nop
 1000606:	90                   	nop
 1000607:	90                   	nop
 1000608:	90                   	nop
 1000609:	90                   	nop
 100060a:	90                   	nop
 100060b:	90                   	nop
 100060c:	90                   	nop
 100060d:	90                   	nop
 100060e:	90                   	nop
 100060f:	90                   	nop
 1000610:	90                   	nop
 1000611:	90                   	nop
 1000612:	90                   	nop
 1000613:	90                   	nop
 1000614:	90                   	nop
 1000615:	90                   	nop
 1000616:	90                   	nop
 1000617:	90                   	nop
 1000618:	90                   	nop
 1000619:	90                   	nop
 100061a:	90                   	nop
 100061b:	90                   	nop
 100061c:	90                   	nop
 100061d:	90                   	nop
 100061e:	90                   	nop
 100061f:	90                   	nop
 1000620:	90                   	nop
 1000621:	90                   	nop
 1000622:	90                   	nop
 1000623:	90                   	nop
 1000624:	90                   	nop
 1000625:	90                   	nop
 1000626:	90                   	nop
 1000627:	90                   	nop
 1000628:	90                   	nop
 1000629:	90                   	nop
 100062a:	90                   	nop
 100062b:	90                   	nop
 100062c:	90                   	nop
 100062d:	90                   	nop
 100062e:	90                   	nop
 100062f:	90                   	nop
 1000630:	90                   	nop
 1000631:	90                   	nop
 1000632:	90                   	nop
 1000633:	90                   	nop
 1000634:	90                   	nop
 1000635:	90                   	nop
 1000636:	90                   	nop
 1000637:	90                   	nop
 1000638:	90                   	nop
 1000639:	90                   	nop
 100063a:	90                   	nop
 100063b:	90                   	nop
 100063c:	90                   	nop
 100063d:	90                   	nop
 100063e:	90                   	nop
 100063f:	90                   	nop
 1000640:	90                   	nop
 1000641:	90                   	nop
 1000642:	90                   	nop
 1000643:	90                   	nop
 1000644:	90                   	nop
 1000645:	90                   	nop
 1000646:	90                   	nop
 1000647:	90                   	nop
 1000648:	90                   	nop
 1000649:	90                   	nop
 100064a:	90                   	nop
 100064b:	90                   	nop
 100064c:	90                   	nop
 100064d:	90                   	nop
 100064e:	90                   	nop
 100064f:	90                   	nop
 1000650:	90                   	nop
 1000651:	90                   	nop
 1000652:	90                   	nop
 1000653:	90                   	nop
 1000654:	90                   	nop
 1000655:	90                   	nop
 1000656:	90                   	nop
 1000657:	90                   	nop
 1000658:	90                   	nop
 1000659:	90                   	nop
 100065a:	90                   	nop
 100065b:	90                   	nop
 100065c:	90                   	nop
 100065d:	90                   	nop
 100065e:	90                   	nop
 100065f:	90                   	nop
 1000660:	90                   	nop
 1000661:	90                   	nop
 1000662:	90                   	nop
 1000663:	90                   	nop
 1000664:	90                   	nop
 1000665:	90                   	nop
 1000666:	90                   	nop
 1000667:	90                   	nop
 1000668:	90                   	nop
 1000669:	90                   	nop
 100066a:	90                   	nop
 100066b:	90                   	nop
 100066c:	90                   	nop
 100066d:	90                   	nop
 100066e:	90                   	nop
 100066f:	90                   	nop
 1000670:	90                   	nop
 1000671:	90                   	nop
 1000672:	90                   	nop
 1000673:	90                   	nop
 1000674:	90                   	nop
 1000675:	90                   	nop
 1000676:	90                   	nop
 1000677:	90                   	nop
 1000678:	90                   	nop
 1000679:	90                   	nop
 100067a:	90                   	nop
 100067b:	90                   	nop
 100067c:	90                   	nop
 100067d:	90                   	nop
 100067e:	90                   	nop
 100067f:	90                   	nop
 1000680:	90                   	nop
 1000681:	90                   	nop
 1000682:	90                   	nop
 1000683:	90                   	nop
 1000684:	90                   	nop
 1000685:	90                   	nop
 1000686:	90                   	nop
 1000687:	90                   	nop
 1000688:	90                   	nop
 1000689:	90                   	nop
 100068a:	90                   	nop
 100068b:	90                   	nop
 100068c:	90                   	nop
 100068d:	90                   	nop
 100068e:	90                   	nop
 100068f:	90                   	nop
 1000690:	90                   	nop
 1000691:	90                   	nop
 1000692:	90                   	nop
 1000693:	90                   	nop
 1000694:	90                   	nop
 1000695:	90                   	nop
 1000696:	90                   	nop
 1000697:	90                   	nop
 1000698:	90                   	nop
 1000699:	90                   	nop
 100069a:	90                   	nop
 100069b:	90                   	nop
 100069c:	90                   	nop
 100069d:	90                   	nop
 100069e:	90                   	nop
 100069f:	90                   	nop
 10006a0:	90                   	nop
 10006a1:	90                   	nop
 10006a2:	90                   	nop
 10006a3:	90                   	nop
 10006a4:	90                   	nop
 10006a5:	90                   	nop
 10006a6:	90                   	nop
 10006a7:	90                   	nop
 10006a8:	90                   	nop
 10006a9:	90                   	nop
 10006aa:	90                   	nop
 10006ab:	90                   	nop
 10006ac:	90                   	nop
 10006ad:	90                   	nop
 10006ae:	90                   	nop
 10006af:	90                   	nop
 10006b0:	90                   	nop
 10006b1:	90                   	nop
 10006b2:	90                   	nop
 10006b3:	90                   	nop
 10006b4:	90                   	nop
 10006b5:	90                   	nop
 10006b6:	90                   	nop
 10006b7:	90                   	nop
 10006b8:	90                   	nop
 10006b9:	90                   	nop
 10006ba:	90                   	nop
 10006bb:	90                   	nop
 10006bc:	90                   	nop
 10006bd:	90                   	nop
 10006be:	90                   	nop
 10006bf:	90                   	nop
 10006c0:	90                   	nop
 10006c1:	90                   	nop
 10006c2:	90                   	nop
 10006c3:	90                   	nop
 10006c4:	90                   	nop
 10006c5:	90                   	nop
 10006c6:	90                   	nop
 10006c7:	90                   	nop
 10006c8:	90                   	nop
 10006c9:	90                   	nop
 10006ca:	90                   	nop
 10006cb:	90                   	nop
 10006cc:	90                   	nop
 10006cd:	90                   	nop
 10006ce:	90                   	nop
 10006cf:	90                   	nop
 10006d0:	90                   	nop
 10006d1:	90                   	nop
 10006d2:	90                   	nop
 10006d3:	90                   	nop
 10006d4:	90                   	nop
 10006d5:	90                   	nop
 10006d6:	90                   	nop
 10006d7:	90                   	nop
 10006d8:	90                   	nop
 10006d9:	90                   	nop
 10006da:	90                   	nop
 10006db:	90                   	nop
 10006dc:	90                   	nop
 10006dd:	90                   	nop
 10006de:	90                   	nop
 10006df:	90                   	nop
 10006e0:	90                   	nop
 10006e1:	90                   	nop
 10006e2:	90                   	nop
 10006e3:	90                   	nop
 10006e4:	90                   	nop
 10006e5:	90                   	nop
 10006e6:	90                   	nop
 10006e7:	90                   	nop
 10006e8:	90                   	nop
 10006e9:	90                   	nop
 10006ea:	90                   	nop
 10006eb:	90                   	nop
 10006ec:	90                   	nop
 10006ed:	90                   	nop
 10006ee:	90                   	nop
 10006ef:	90                   	nop
 10006f0:	90                   	nop
 10006f1:	90                   	nop
 10006f2:	90                   	nop
 10006f3:	90                   	nop
 10006f4:	90                   	nop
 10006f5:	90                   	nop
 10006f6:	90                   	nop
 10006f7:	90                   	nop
 10006f8:	90                   	nop
 10006f9:	90                   	nop
 10006fa:	90                   	nop
 10006fb:	90                   	nop
 10006fc:	90                   	nop
 10006fd:	90                   	nop
 10006fe:	90                   	nop
 10006ff:	90                   	nop
 1000700:	90                   	nop
 1000701:	90                   	nop
 1000702:	90                   	nop
 1000703:	90                   	nop
 1000704:	90                   	nop
 1000705:	90                   	nop
 1000706:	90                   	nop
 1000707:	90                   	nop
 1000708:	90                   	nop
 1000709:	90                   	nop
 100070a:	90                   	nop
 100070b:	90                   	nop
 100070c:	90                   	nop
 100070d:	90                   	nop
 100070e:	90                   	nop
 100070f:	90                   	nop
 1000710:	90                   	nop
 1000711:	90                   	nop
 1000712:	90                   	nop
 1000713:	90                   	nop
 1000714:	90                   	nop
 1000715:	90                   	nop
 1000716:	90                   	nop
 1000717:	90                   	nop
 1000718:	90                   	nop
 1000719:	90                   	nop
 100071a:	90                   	nop
 100071b:	90                   	nop
 100071c:	90                   	nop
 100071d:	90                   	nop
 100071e:	90                   	nop
 100071f:	90                   	nop
 1000720:	90                   	nop
 1000721:	90                   	nop
 1000722:	90                   	nop
 1000723:	90                   	nop
 1000724:	90                   	nop
 1000725:	90                   	nop
 1000726:	90                   	nop
 1000727:	90                   	nop
 1000728:	90                   	nop
 1000729:	90                   	nop
 100072a:	90                   	nop
 100072b:	90                   	nop
 100072c:	90                   	nop
 100072d:	90                   	nop
 100072e:	90                   	nop
 100072f:	90                   	nop
 1000730:	90                   	nop
 1000731:	90                   	nop
 1000732:	90                   	nop
 1000733:	90                   	nop
 1000734:	90                   	nop
 1000735:	90                   	nop
 1000736:	90                   	nop
 1000737:	90                   	nop
 1000738:	90                   	nop
 1000739:	90                   	nop
 100073a:	90                   	nop
 100073b:	90                   	nop
 100073c:	90                   	nop
 100073d:	90                   	nop
 100073e:	90                   	nop
 100073f:	90                   	nop
 1000740:	90                   	nop
 1000741:	90                   	nop
 1000742:	90                   	nop
 1000743:	90                   	nop
 1000744:	90                   	nop
 1000745:	90                   	nop
 1000746:	90                   	nop
 1000747:	90                   	nop
 1000748:	90                   	nop
 1000749:	90                   	nop
 100074a:	90                   	nop
 100074b:	90                   	nop
 100074c:	90                   	nop
 100074d:	90                   	nop
 100074e:	90                   	nop
 100074f:	90                   	nop
 1000750:	90                   	nop
 1000751:	90                   	nop
 1000752:	90                   	nop
 1000753:	90                   	nop
 1000754:	90                   	nop
 1000755:	90                   	nop
 1000756:	90                   	nop
 1000757:	90                   	nop
 1000758:	90                   	nop
 1000759:	90                   	nop
 100075a:	90                   	nop
 100075b:	90                   	nop
 100075c:	90                   	nop
 100075d:	90                   	nop
 100075e:	90                   	nop
 100075f:	90                   	nop
 1000760:	90                   	nop
 1000761:	90                   	nop
 1000762:	90                   	nop
 1000763:	90                   	nop
 1000764:	90                   	nop
 1000765:	90                   	nop
 1000766:	90                   	nop
 1000767:	90                   	nop
 1000768:	90                   	nop
 1000769:	90                   	nop
 100076a:	90                   	nop
 100076b:	90                   	nop
 100076c:	90                   	nop
 100076d:	90                   	nop
 100076e:	90                   	nop
 100076f:	90                   	nop
 1000770:	90                   	nop
 1000771:	90                   	nop
 1000772:	90                   	nop
 1000773:	90                   	nop
 1000774:	90                   	nop
 1000775:	90                   	nop
 1000776:	90                   	nop
 1000777:	90                   	nop
 1000778:	90                   	nop
 1000779:	90                   	nop
 100077a:	90                   	nop
 100077b:	90                   	nop
 100077c:	90                   	nop
 100077d:	90                   	nop
 100077e:	90                   	nop
 100077f:	90                   	nop
 1000780:	90                   	nop
 1000781:	90                   	nop
 1000782:	90                   	nop
 1000783:	90                   	nop
 1000784:	90                   	nop
 1000785:	90                   	nop
 1000786:	90                   	nop
 1000787:	90                   	nop
 1000788:	90                   	nop
 1000789:	90                   	nop
 100078a:	90                   	nop
 100078b:	90                   	nop
 100078c:	90                   	nop
 100078d:	90                   	nop
 100078e:	90                   	nop
 100078f:	90                   	nop
 1000790:	90                   	nop
 1000791:	90                   	nop
 1000792:	90                   	nop
 1000793:	90                   	nop
 1000794:	90                   	nop
 1000795:	90                   	nop
 1000796:	90                   	nop
 1000797:	90                   	nop
 1000798:	90                   	nop
 1000799:	90                   	nop
 100079a:	90                   	nop
 100079b:	90                   	nop
 100079c:	90                   	nop
 100079d:	90                   	nop
 100079e:	90                   	nop
 100079f:	90                   	nop
 10007a0:	90                   	nop
 10007a1:	90                   	nop
 10007a2:	90                   	nop
 10007a3:	90                   	nop
 10007a4:	90                   	nop
 10007a5:	90                   	nop
 10007a6:	90                   	nop
 10007a7:	90                   	nop
 10007a8:	90                   	nop
 10007a9:	90                   	nop
 10007aa:	90                   	nop
 10007ab:	90                   	nop
 10007ac:	90                   	nop
 10007ad:	90                   	nop
 10007ae:	90                   	nop
 10007af:	90                   	nop
 10007b0:	90                   	nop
 10007b1:	90                   	nop
 10007b2:	90                   	nop
 10007b3:	90                   	nop
 10007b4:	90                   	nop
 10007b5:	90                   	nop
 10007b6:	90                   	nop
 10007b7:	90                   	nop
 10007b8:	90                   	nop
 10007b9:	90                   	nop
 10007ba:	90                   	nop
 10007bb:	90                   	nop
 10007bc:	90                   	nop
 10007bd:	90                   	nop
 10007be:	90                   	nop
 10007bf:	90                   	nop
 10007c0:	90                   	nop
 10007c1:	90                   	nop
 10007c2:	90                   	nop
 10007c3:	90                   	nop
 10007c4:	90                   	nop
 10007c5:	90                   	nop
 10007c6:	90                   	nop
 10007c7:	90                   	nop
 10007c8:	90                   	nop
 10007c9:	90                   	nop
 10007ca:	90                   	nop
 10007cb:	90                   	nop
 10007cc:	90                   	nop
 10007cd:	90                   	nop
 10007ce:	90                   	nop
 10007cf:	90                   	nop
 10007d0:	90                   	nop
 10007d1:	90                   	nop
 10007d2:	90                   	nop
 10007d3:	90                   	nop
 10007d4:	90                   	nop
 10007d5:	90                   	nop
 10007d6:	90                   	nop
 10007d7:	90                   	nop
 10007d8:	90                   	nop
 10007d9:	90                   	nop
 10007da:	90                   	nop
 10007db:	90                   	nop
 10007dc:	90                   	nop
 10007dd:	90                   	nop
 10007de:	90                   	nop
 10007df:	90                   	nop
 10007e0:	90                   	nop
 10007e1:	90                   	nop
 10007e2:	90                   	nop
 10007e3:	90                   	nop
 10007e4:	90                   	nop
 10007e5:	90                   	nop
 10007e6:	90                   	nop
 10007e7:	90                   	nop
 10007e8:	90                   	nop
 10007e9:	90                   	nop
 10007ea:	90                   	nop
 10007eb:	90                   	nop
 10007ec:	90                   	nop
 10007ed:	90                   	nop
 10007ee:	90                   	nop
 10007ef:	90                   	nop
 10007f0:	90                   	nop
 10007f1:	90                   	nop
 10007f2:	90                   	nop
 10007f3:	90                   	nop
 10007f4:	90                   	nop
 10007f5:	90                   	nop
 10007f6:	90                   	nop
 10007f7:	90                   	nop
 10007f8:	90                   	nop
 10007f9:	90                   	nop
 10007fa:	90                   	nop
 10007fb:	90                   	nop
 10007fc:	90                   	nop
 10007fd:	90                   	nop
 10007fe:	90                   	nop
 10007ff:	90                   	nop
 1000800:	90                   	nop
 1000801:	90                   	nop
 1000802:	90                   	nop
 1000803:	90                   	nop
 1000804:	90                   	nop
 1000805:	90                   	nop
 1000806:	90                   	nop
 1000807:	90                   	nop
 1000808:	90                   	nop
 1000809:	90                   	nop
 100080a:	90                   	nop
 100080b:	90                   	nop
 100080c:	90                   	nop
 100080d:	90                   	nop
 100080e:	90                   	nop
 100080f:	90                   	nop
 1000810:	90                   	nop
 1000811:	90                   	nop
 1000812:	90                   	nop
 1000813:	90                   	nop
 1000814:	90                   	nop
 1000815:	90                   	nop
 1000816:	90                   	nop
 1000817:	90                   	nop
 1000818:	90                   	nop
 1000819:	90                   	nop
 100081a:	90                   	nop
 100081b:	90                   	nop
 100081c:	90                   	nop
 100081d:	90                   	nop
 100081e:	90                   	nop
 100081f:	90                   	nop
 1000820:	90                   	nop
 1000821:	90                   	nop
 1000822:	90                   	nop
 1000823:	90                   	nop
 1000824:	90                   	nop
 1000825:	90                   	nop
 1000826:	90                   	nop
 1000827:	90                   	nop
 1000828:	90                   	nop
 1000829:	90                   	nop
 100082a:	90                   	nop
 100082b:	90                   	nop
 100082c:	90                   	nop
 100082d:	90                   	nop
 100082e:	90                   	nop
 100082f:	90                   	nop
 1000830:	90                   	nop
 1000831:	90                   	nop
 1000832:	90                   	nop
 1000833:	90                   	nop
 1000834:	90                   	nop
 1000835:	90                   	nop
 1000836:	90                   	nop
 1000837:	90                   	nop
 1000838:	90                   	nop
 1000839:	90                   	nop
 100083a:	90                   	nop
 100083b:	90                   	nop
 100083c:	90                   	nop
 100083d:	90                   	nop
 100083e:	90                   	nop
 100083f:	90                   	nop
 1000840:	90                   	nop
 1000841:	90                   	nop
 1000842:	90                   	nop
 1000843:	90                   	nop
 1000844:	90                   	nop
 1000845:	90                   	nop
 1000846:	90                   	nop
 1000847:	90                   	nop
 1000848:	90                   	nop
 1000849:	90                   	nop
 100084a:	90                   	nop
 100084b:	90                   	nop
 100084c:	90                   	nop
 100084d:	90                   	nop
 100084e:	90                   	nop
 100084f:	90                   	nop
 1000850:	90                   	nop
 1000851:	90                   	nop
 1000852:	90                   	nop
 1000853:	90                   	nop
 1000854:	90                   	nop
 1000855:	90                   	nop
 1000856:	90                   	nop
 1000857:	90                   	nop
 1000858:	90                   	nop
 1000859:	90                   	nop
 100085a:	90                   	nop
 100085b:	90                   	nop
 100085c:	90                   	nop
 100085d:	90                   	nop
 100085e:	90                   	nop
 100085f:	90                   	nop
 1000860:	90                   	nop
 1000861:	90                   	nop
 1000862:	90                   	nop
 1000863:	90                   	nop
 1000864:	90                   	nop
 1000865:	90                   	nop
 1000866:	90                   	nop
 1000867:	90                   	nop
 1000868:	90                   	nop
 1000869:	90                   	nop
 100086a:	90                   	nop
 100086b:	90                   	nop
 100086c:	90                   	nop
 100086d:	90                   	nop
 100086e:	90                   	nop
 100086f:	90                   	nop
 1000870:	90                   	nop
 1000871:	90                   	nop
 1000872:	90                   	nop
 1000873:	90                   	nop
 1000874:	90                   	nop
 1000875:	90                   	nop
 1000876:	90                   	nop
 1000877:	90                   	nop
 1000878:	90                   	nop
 1000879:	90                   	nop
 100087a:	90                   	nop
 100087b:	90                   	nop
 100087c:	90                   	nop
 100087d:	90                   	nop
 100087e:	90                   	nop
 100087f:	90                   	nop
 1000880:	90                   	nop
 1000881:	90                   	nop
 1000882:	90                   	nop
 1000883:	90                   	nop
 1000884:	90                   	nop
 1000885:	90                   	nop
 1000886:	90                   	nop
 1000887:	90                   	nop
 1000888:	90                   	nop
 1000889:	90                   	nop
 100088a:	90                   	nop
 100088b:	90                   	nop
 100088c:	90                   	nop
 100088d:	90                   	nop
 100088e:	90                   	nop
 100088f:	90                   	nop
 1000890:	90                   	nop
 1000891:	90                   	nop
 1000892:	90                   	nop
 1000893:	90                   	nop
 1000894:	90                   	nop
 1000895:	90                   	nop
 1000896:	90                   	nop
 1000897:	90                   	nop
 1000898:	90                   	nop
 1000899:	90                   	nop
 100089a:	90                   	nop
 100089b:	90                   	nop
 100089c:	90                   	nop
 100089d:	90                   	nop
 100089e:	90                   	nop
 100089f:	90                   	nop
 10008a0:	90                   	nop
 10008a1:	90                   	nop
 10008a2:	90                   	nop
 10008a3:	90                   	nop
 10008a4:	90                   	nop
 10008a5:	90                   	nop
 10008a6:	90                   	nop
 10008a7:	90                   	nop
 10008a8:	90                   	nop
 10008a9:	90                   	nop
 10008aa:	90                   	nop
 10008ab:	90                   	nop
 10008ac:	90                   	nop
 10008ad:	90                   	nop
 10008ae:	90                   	nop
 10008af:	90                   	nop
 10008b0:	90                   	nop
 10008b1:	90                   	nop
 10008b2:	90                   	nop
 10008b3:	90                   	nop
 10008b4:	90                   	nop
 10008b5:	90                   	nop
 10008b6:	90                   	nop
 10008b7:	90                   	nop
 10008b8:	90                   	nop
 10008b9:	90                   	nop
 10008ba:	90                   	nop
 10008bb:	90                   	nop
 10008bc:	90                   	nop
 10008bd:	90                   	nop
 10008be:	90                   	nop
 10008bf:	90                   	nop
 10008c0:	90                   	nop
 10008c1:	90                   	nop
 10008c2:	90                   	nop
 10008c3:	90                   	nop
 10008c4:	90                   	nop
 10008c5:	90                   	nop
 10008c6:	90                   	nop
 10008c7:	90                   	nop
 10008c8:	90                   	nop
 10008c9:	90                   	nop
 10008ca:	90                   	nop
 10008cb:	90                   	nop
 10008cc:	90                   	nop
 10008cd:	90                   	nop
 10008ce:	90                   	nop
 10008cf:	90                   	nop
 10008d0:	90                   	nop
 10008d1:	90                   	nop
 10008d2:	90                   	nop
 10008d3:	90                   	nop
 10008d4:	90                   	nop
 10008d5:	90                   	nop
 10008d6:	90                   	nop
 10008d7:	90                   	nop
 10008d8:	90                   	nop
 10008d9:	90                   	nop
 10008da:	90                   	nop
 10008db:	90                   	nop
 10008dc:	90                   	nop
 10008dd:	90                   	nop
 10008de:	90                   	nop
 10008df:	90                   	nop
 10008e0:	90                   	nop
 10008e1:	90                   	nop
 10008e2:	90                   	nop
 10008e3:	90                   	nop
 10008e4:	90                   	nop
 10008e5:	90                   	nop
 10008e6:	90                   	nop
 10008e7:	90                   	nop
 10008e8:	90                   	nop
 10008e9:	90                   	nop
 10008ea:	90                   	nop
 10008eb:	90                   	nop
 10008ec:	90                   	nop
 10008ed:	90                   	nop
 10008ee:	90                   	nop
 10008ef:	90                   	nop
 10008f0:	90                   	nop
 10008f1:	90                   	nop
 10008f2:	90                   	nop
 10008f3:	90                   	nop
 10008f4:	90                   	nop
 10008f5:	90                   	nop
 10008f6:	90                   	nop
 10008f7:	90                   	nop
 10008f8:	90                   	nop
 10008f9:	90                   	nop
 10008fa:	90                   	nop
 10008fb:	90                   	nop
 10008fc:	90                   	nop
 10008fd:	90                   	nop
 10008fe:	90                   	nop
 10008ff:	90                   	nop
 1000900:	90                   	nop
 1000901:	90                   	nop
 1000902:	90                   	nop
 1000903:	90                   	nop
 1000904:	90                   	nop
 1000905:	90                   	nop
 1000906:	90                   	nop
 1000907:	90                   	nop
 1000908:	90                   	nop
 1000909:	90                   	nop
 100090a:	90                   	nop
 100090b:	90                   	nop
 100090c:	90                   	nop
 100090d:	90                   	nop
 100090e:	90                   	nop
 100090f:	90                   	nop
 1000910:	90                   	nop
 1000911:	90                   	nop
 1000912:	90                   	nop
 1000913:	90                   	nop
 1000914:	90                   	nop
 1000915:	90                   	nop
 1000916:	90                   	nop
 1000917:	90                   	nop
 1000918:	90                   	nop
 1000919:	90                   	nop
 100091a:	90                   	nop
 100091b:	90                   	nop
 100091c:	90                   	nop
 100091d:	90                   	nop
 100091e:	90                   	nop
 100091f:	90                   	nop
 1000920:	90                   	nop
 1000921:	90                   	nop
 1000922:	90                   	nop
 1000923:	90                   	nop
 1000924:	90                   	nop
 1000925:	90                   	nop
 1000926:	90                   	nop
 1000927:	90                   	nop
 1000928:	90                   	nop
 1000929:	90                   	nop
 100092a:	90                   	nop
 100092b:	90                   	nop
 100092c:	90                   	nop
 100092d:	90                   	nop
 100092e:	90                   	nop
 100092f:	90                   	nop
 1000930:	90                   	nop
 1000931:	90                   	nop
 1000932:	90                   	nop
 1000933:	90                   	nop
 1000934:	90                   	nop
 1000935:	90                   	nop
 1000936:	90                   	nop
 1000937:	90                   	nop
 1000938:	90                   	nop
 1000939:	90                   	nop
 100093a:	90                   	nop
 100093b:	90                   	nop
 100093c:	90                   	nop
 100093d:	90                   	nop
 100093e:	90                   	nop
 100093f:	90                   	nop
 1000940:	90                   	nop
 1000941:	90                   	nop
 1000942:	90                   	nop
 1000943:	90                   	nop
 1000944:	90                   	nop
 1000945:	90                   	nop
 1000946:	90                   	nop
 1000947:	90                   	nop
 1000948:	90                   	nop
 1000949:	90                   	nop
 100094a:	90                   	nop
 100094b:	90                   	nop
 100094c:	90                   	nop
 100094d:	90                   	nop
 100094e:	90                   	nop
 100094f:	90                   	nop
 1000950:	90                   	nop
 1000951:	90                   	nop
 1000952:	90                   	nop
 1000953:	90                   	nop
 1000954:	90                   	nop
 1000955:	90                   	nop
 1000956:	90                   	nop
 1000957:	90                   	nop
 1000958:	90                   	nop
 1000959:	90                   	nop
 100095a:	90                   	nop
 100095b:	90                   	nop
 100095c:	90                   	nop
 100095d:	90                   	nop
 100095e:	90                   	nop
 100095f:	90                   	nop
 1000960:	90                   	nop
 1000961:	90                   	nop
 1000962:	90                   	nop
 1000963:	90                   	nop
 1000964:	90                   	nop
 1000965:	90                   	nop
 1000966:	90                   	nop
 1000967:	90                   	nop
 1000968:	90                   	nop
 1000969:	90                   	nop
 100096a:	90                   	nop
 100096b:	90                   	nop
 100096c:	90                   	nop
 100096d:	90                   	nop
 100096e:	90                   	nop
 100096f:	90                   	nop
 1000970:	90                   	nop
 1000971:	90                   	nop
 1000972:	90                   	nop
 1000973:	90                   	nop
 1000974:	90                   	nop
 1000975:	90                   	nop
 1000976:	90                   	nop
 1000977:	90                   	nop
 1000978:	90                   	nop
 1000979:	90                   	nop
 100097a:	90                   	nop
 100097b:	90                   	nop
 100097c:	90                   	nop
 100097d:	90                   	nop
 100097e:	90                   	nop
 100097f:	90                   	nop
 1000980:	90                   	nop
 1000981:	90                   	nop
 1000982:	90                   	nop
 1000983:	90                   	nop
 1000984:	90                   	nop
 1000985:	90                   	nop
 1000986:	90                   	nop
 1000987:	90                   	nop
 1000988:	90                   	nop
 1000989:	90                   	nop
 100098a:	90                   	nop
 100098b:	90                   	nop
 100098c:	90                   	nop
 100098d:	90                   	nop
 100098e:	90                   	nop
 100098f:	90                   	nop
 1000990:	90                   	nop
 1000991:	90                   	nop
 1000992:	90                   	nop
 1000993:	90                   	nop
 1000994:	90                   	nop
 1000995:	90                   	nop
 1000996:	90                   	nop
 1000997:	90                   	nop
 1000998:	90                   	nop
 1000999:	90                   	nop
 100099a:	90                   	nop
 100099b:	90                   	nop
 100099c:	90                   	nop
 100099d:	90                   	nop
 100099e:	90                   	nop
 100099f:	90                   	nop
 10009a0:	90                   	nop
 10009a1:	90                   	nop
 10009a2:	90                   	nop
 10009a3:	90                   	nop
 10009a4:	90                   	nop
 10009a5:	90                   	nop
 10009a6:	90                   	nop
 10009a7:	90                   	nop
 10009a8:	90                   	nop
 10009a9:	90                   	nop
 10009aa:	90                   	nop
 10009ab:	90                   	nop
 10009ac:	90                   	nop
 10009ad:	90                   	nop
 10009ae:	90                   	nop
 10009af:	90                   	nop
 10009b0:	90                   	nop
 10009b1:	90                   	nop
 10009b2:	90                   	nop
 10009b3:	90                   	nop
 10009b4:	90                   	nop
 10009b5:	90                   	nop
 10009b6:	90                   	nop
 10009b7:	90                   	nop
 10009b8:	90                   	nop
 10009b9:	90                   	nop
 10009ba:	90                   	nop
 10009bb:	90                   	nop
 10009bc:	90                   	nop
 10009bd:	90                   	nop
 10009be:	90                   	nop
 10009bf:	90                   	nop
 10009c0:	90                   	nop
 10009c1:	90                   	nop
 10009c2:	90                   	nop
 10009c3:	90                   	nop
 10009c4:	90                   	nop
 10009c5:	90                   	nop
 10009c6:	90                   	nop
 10009c7:	90                   	nop
 10009c8:	90                   	nop
 10009c9:	90                   	nop
 10009ca:	90                   	nop
 10009cb:	90                   	nop
 10009cc:	90                   	nop
 10009cd:	90                   	nop
 10009ce:	90                   	nop
 10009cf:	90                   	nop
 10009d0:	90                   	nop
 10009d1:	90                   	nop
 10009d2:	90                   	nop
 10009d3:	90                   	nop
 10009d4:	90                   	nop
 10009d5:	90                   	nop
 10009d6:	90                   	nop
 10009d7:	90                   	nop
 10009d8:	90                   	nop
 10009d9:	90                   	nop
 10009da:	90                   	nop
 10009db:	90                   	nop
 10009dc:	90                   	nop
 10009dd:	90                   	nop
 10009de:	90                   	nop
 10009df:	90                   	nop
 10009e0:	90                   	nop
 10009e1:	90                   	nop
 10009e2:	90                   	nop
 10009e3:	90                   	nop
 10009e4:	90                   	nop
 10009e5:	90                   	nop
 10009e6:	90                   	nop
 10009e7:	90                   	nop
 10009e8:	90                   	nop
 10009e9:	90                   	nop
 10009ea:	90                   	nop
 10009eb:	90                   	nop
 10009ec:	90                   	nop
 10009ed:	90                   	nop
 10009ee:	90                   	nop
 10009ef:	90                   	nop
 10009f0:	90                   	nop
 10009f1:	90                   	nop
 10009f2:	90                   	nop
 10009f3:	90                   	nop
 10009f4:	90                   	nop
 10009f5:	90                   	nop
 10009f6:	90                   	nop
 10009f7:	90                   	nop
 10009f8:	90                   	nop
 10009f9:	90                   	nop
 10009fa:	90                   	nop
 10009fb:	90                   	nop
 10009fc:	90                   	nop
 10009fd:	90                   	nop
 10009fe:	90                   	nop
 10009ff:	90                   	nop
 1000a00:	90                   	nop
 1000a01:	90                   	nop
 1000a02:	90                   	nop
 1000a03:	90                   	nop
 1000a04:	90                   	nop
 1000a05:	90                   	nop
 1000a06:	90                   	nop
 1000a07:	90                   	nop
 1000a08:	90                   	nop
 1000a09:	90                   	nop
 1000a0a:	90                   	nop
 1000a0b:	90                   	nop
 1000a0c:	90                   	nop
 1000a0d:	90                   	nop
 1000a0e:	90                   	nop
 1000a0f:	90                   	nop
 1000a10:	90                   	nop
 1000a11:	90                   	nop
 1000a12:	90                   	nop
 1000a13:	90                   	nop
 1000a14:	90                   	nop
 1000a15:	90                   	nop
 1000a16:	90                   	nop
 1000a17:	90                   	nop
 1000a18:	90                   	nop
 1000a19:	90                   	nop
 1000a1a:	90                   	nop
 1000a1b:	90                   	nop
 1000a1c:	90                   	nop
 1000a1d:	90                   	nop
 1000a1e:	90                   	nop
 1000a1f:	90                   	nop
 1000a20:	90                   	nop
 1000a21:	90                   	nop
 1000a22:	90                   	nop
 1000a23:	90                   	nop
 1000a24:	90                   	nop
 1000a25:	90                   	nop
 1000a26:	90                   	nop
 1000a27:	90                   	nop
 1000a28:	90                   	nop
 1000a29:	90                   	nop
 1000a2a:	90                   	nop
 1000a2b:	90                   	nop
 1000a2c:	90                   	nop
 1000a2d:	90                   	nop
 1000a2e:	90                   	nop
 1000a2f:	90                   	nop
 1000a30:	90                   	nop
 1000a31:	90                   	nop
 1000a32:	90                   	nop
 1000a33:	90                   	nop
 1000a34:	90                   	nop
 1000a35:	90                   	nop
 1000a36:	90                   	nop
 1000a37:	90                   	nop
 1000a38:	90                   	nop
 1000a39:	90                   	nop
 1000a3a:	90                   	nop
 1000a3b:	90                   	nop
 1000a3c:	90                   	nop
 1000a3d:	90                   	nop
 1000a3e:	90                   	nop
 1000a3f:	90                   	nop
 1000a40:	90                   	nop
 1000a41:	90                   	nop
 1000a42:	90                   	nop
 1000a43:	90                   	nop
 1000a44:	90                   	nop
 1000a45:	90                   	nop
 1000a46:	90                   	nop
 1000a47:	90                   	nop
 1000a48:	90                   	nop
 1000a49:	90                   	nop
 1000a4a:	90                   	nop
 1000a4b:	90                   	nop
 1000a4c:	90                   	nop
 1000a4d:	90                   	nop
 1000a4e:	90                   	nop
 1000a4f:	90                   	nop
 1000a50:	90                   	nop
 1000a51:	90                   	nop
 1000a52:	90                   	nop
 1000a53:	90                   	nop
 1000a54:	90                   	nop
 1000a55:	90                   	nop
 1000a56:	90                   	nop
 1000a57:	90                   	nop
 1000a58:	90                   	nop
 1000a59:	90                   	nop
 1000a5a:	90                   	nop
 1000a5b:	90                   	nop
 1000a5c:	90                   	nop
 1000a5d:	90                   	nop
 1000a5e:	90                   	nop
 1000a5f:	90                   	nop
 1000a60:	90                   	nop
 1000a61:	90                   	nop
 1000a62:	90                   	nop
 1000a63:	90                   	nop
 1000a64:	90                   	nop
 1000a65:	90                   	nop
 1000a66:	90                   	nop
 1000a67:	90                   	nop
 1000a68:	90                   	nop
 1000a69:	90                   	nop
 1000a6a:	90                   	nop
 1000a6b:	90                   	nop
 1000a6c:	90                   	nop
 1000a6d:	90                   	nop
 1000a6e:	90                   	nop
 1000a6f:	90                   	nop
 1000a70:	90                   	nop
 1000a71:	90                   	nop
 1000a72:	90                   	nop
 1000a73:	90                   	nop
 1000a74:	90                   	nop
 1000a75:	90                   	nop
 1000a76:	90                   	nop
 1000a77:	90                   	nop
 1000a78:	90                   	nop
 1000a79:	90                   	nop
 1000a7a:	90                   	nop
 1000a7b:	90                   	nop
 1000a7c:	90                   	nop
 1000a7d:	90                   	nop
 1000a7e:	90                   	nop
 1000a7f:	90                   	nop
 1000a80:	90                   	nop
 1000a81:	90                   	nop
 1000a82:	90                   	nop
 1000a83:	90                   	nop
 1000a84:	90                   	nop
 1000a85:	90                   	nop
 1000a86:	90                   	nop
 1000a87:	90                   	nop
 1000a88:	90                   	nop
 1000a89:	90                   	nop
 1000a8a:	90                   	nop
 1000a8b:	90                   	nop
 1000a8c:	90                   	nop
 1000a8d:	90                   	nop
 1000a8e:	90                   	nop
 1000a8f:	90                   	nop
 1000a90:	90                   	nop
 1000a91:	90                   	nop
 1000a92:	90                   	nop
 1000a93:	90                   	nop
 1000a94:	90                   	nop
 1000a95:	90                   	nop
 1000a96:	90                   	nop
 1000a97:	90                   	nop
 1000a98:	90                   	nop
 1000a99:	90                   	nop
 1000a9a:	90                   	nop
 1000a9b:	90                   	nop
 1000a9c:	90                   	nop
 1000a9d:	90                   	nop
 1000a9e:	90                   	nop
 1000a9f:	90                   	nop
 1000aa0:	90                   	nop
 1000aa1:	90                   	nop
 1000aa2:	90                   	nop
 1000aa3:	90                   	nop
 1000aa4:	90                   	nop
 1000aa5:	90                   	nop
 1000aa6:	90                   	nop
 1000aa7:	90                   	nop
 1000aa8:	90                   	nop
 1000aa9:	90                   	nop
 1000aaa:	90                   	nop
 1000aab:	90                   	nop
 1000aac:	90                   	nop
 1000aad:	90                   	nop
 1000aae:	90                   	nop
 1000aaf:	90                   	nop
 1000ab0:	90                   	nop
 1000ab1:	90                   	nop
 1000ab2:	90                   	nop
 1000ab3:	90                   	nop
 1000ab4:	90                   	nop
 1000ab5:	90                   	nop
 1000ab6:	90                   	nop
 1000ab7:	90                   	nop
 1000ab8:	90                   	nop
 1000ab9:	90                   	nop
 1000aba:	90                   	nop
 1000abb:	90                   	nop
 1000abc:	90                   	nop
 1000abd:	90                   	nop
 1000abe:	90                   	nop
 1000abf:	90                   	nop
 1000ac0:	90                   	nop
 1000ac1:	90                   	nop
 1000ac2:	90                   	nop
 1000ac3:	90                   	nop
 1000ac4:	90                   	nop
 1000ac5:	90                   	nop
 1000ac6:	90                   	nop
 1000ac7:	90                   	nop
 1000ac8:	90                   	nop
 1000ac9:	90                   	nop
 1000aca:	90                   	nop
 1000acb:	90                   	nop
 1000acc:	90                   	nop
 1000acd:	90                   	nop
 1000ace:	90                   	nop
 1000acf:	90                   	nop
 1000ad0:	90                   	nop
 1000ad1:	90                   	nop
 1000ad2:	90                   	nop
 1000ad3:	90                   	nop
 1000ad4:	90                   	nop
 1000ad5:	90                   	nop
 1000ad6:	90                   	nop
 1000ad7:	90                   	nop
 1000ad8:	90                   	nop
 1000ad9:	90                   	nop
 1000ada:	90                   	nop
 1000adb:	90                   	nop
 1000adc:	90                   	nop
 1000add:	90                   	nop
 1000ade:	90                   	nop
 1000adf:	90                   	nop
 1000ae0:	90                   	nop
 1000ae1:	90                   	nop
 1000ae2:	90                   	nop
 1000ae3:	90                   	nop
 1000ae4:	90                   	nop
 1000ae5:	90                   	nop
 1000ae6:	90                   	nop
 1000ae7:	90                   	nop
 1000ae8:	90                   	nop
 1000ae9:	90                   	nop
 1000aea:	90                   	nop
 1000aeb:	90                   	nop
 1000aec:	90                   	nop
 1000aed:	90                   	nop
 1000aee:	90                   	nop
 1000aef:	90                   	nop
 1000af0:	90                   	nop
 1000af1:	90                   	nop
 1000af2:	90                   	nop
 1000af3:	90                   	nop
 1000af4:	90                   	nop
 1000af5:	90                   	nop
 1000af6:	90                   	nop
 1000af7:	90                   	nop
 1000af8:	90                   	nop
 1000af9:	90                   	nop
 1000afa:	90                   	nop
 1000afb:	90                   	nop
 1000afc:	90                   	nop
 1000afd:	90                   	nop
 1000afe:	90                   	nop
 1000aff:	90                   	nop
 1000b00:	90                   	nop
 1000b01:	90                   	nop
 1000b02:	90                   	nop
 1000b03:	90                   	nop
 1000b04:	90                   	nop
 1000b05:	90                   	nop
 1000b06:	90                   	nop
 1000b07:	90                   	nop
 1000b08:	90                   	nop
 1000b09:	90                   	nop
 1000b0a:	90                   	nop
 1000b0b:	90                   	nop
 1000b0c:	90                   	nop
 1000b0d:	90                   	nop
 1000b0e:	90                   	nop
 1000b0f:	90                   	nop
 1000b10:	90                   	nop
 1000b11:	90                   	nop
 1000b12:	90                   	nop
 1000b13:	90                   	nop
 1000b14:	90                   	nop
 1000b15:	90                   	nop
 1000b16:	90                   	nop
 1000b17:	90                   	nop
 1000b18:	90                   	nop
 1000b19:	90                   	nop
 1000b1a:	90                   	nop
 1000b1b:	90                   	nop
 1000b1c:	90                   	nop
 1000b1d:	90                   	nop
 1000b1e:	90                   	nop
 1000b1f:	90                   	nop
 1000b20:	90                   	nop
 1000b21:	90                   	nop
 1000b22:	90                   	nop
 1000b23:	90                   	nop
 1000b24:	90                   	nop
 1000b25:	90                   	nop
 1000b26:	90                   	nop
 1000b27:	90                   	nop
 1000b28:	90                   	nop
 1000b29:	90                   	nop
 1000b2a:	90                   	nop
 1000b2b:	90                   	nop
 1000b2c:	90                   	nop
 1000b2d:	90                   	nop
 1000b2e:	90                   	nop
 1000b2f:	90                   	nop
 1000b30:	90                   	nop
 1000b31:	90                   	nop
 1000b32:	90                   	nop
 1000b33:	90                   	nop
 1000b34:	90                   	nop
 1000b35:	90                   	nop
 1000b36:	90                   	nop
 1000b37:	90                   	nop
 1000b38:	90                   	nop
 1000b39:	90                   	nop
 1000b3a:	90                   	nop
 1000b3b:	90                   	nop
 1000b3c:	90                   	nop
 1000b3d:	90                   	nop
 1000b3e:	90                   	nop
 1000b3f:	90                   	nop
 1000b40:	90                   	nop
 1000b41:	90                   	nop
 1000b42:	90                   	nop
 1000b43:	90                   	nop
 1000b44:	90                   	nop
 1000b45:	90                   	nop
 1000b46:	90                   	nop
 1000b47:	90                   	nop
 1000b48:	90                   	nop
 1000b49:	90                   	nop
 1000b4a:	90                   	nop
 1000b4b:	90                   	nop
 1000b4c:	90                   	nop
 1000b4d:	90                   	nop
 1000b4e:	90                   	nop
 1000b4f:	90                   	nop
 1000b50:	90                   	nop
 1000b51:	90                   	nop
 1000b52:	90                   	nop
 1000b53:	90                   	nop
 1000b54:	90                   	nop
 1000b55:	90                   	nop
 1000b56:	90                   	nop
 1000b57:	90                   	nop
 1000b58:	90                   	nop
 1000b59:	90                   	nop
 1000b5a:	90                   	nop
 1000b5b:	90                   	nop
 1000b5c:	90                   	nop
 1000b5d:	90                   	nop
 1000b5e:	90                   	nop
 1000b5f:	90                   	nop
 1000b60:	90                   	nop
 1000b61:	90                   	nop
 1000b62:	90                   	nop
 1000b63:	90                   	nop
 1000b64:	90                   	nop
 1000b65:	90                   	nop
 1000b66:	90                   	nop
 1000b67:	90                   	nop
 1000b68:	90                   	nop
 1000b69:	90                   	nop
 1000b6a:	90                   	nop
 1000b6b:	90                   	nop
 1000b6c:	90                   	nop
 1000b6d:	90                   	nop
 1000b6e:	90                   	nop
 1000b6f:	90                   	nop
 1000b70:	90                   	nop
 1000b71:	90                   	nop
 1000b72:	90                   	nop
 1000b73:	90                   	nop
 1000b74:	90                   	nop
 1000b75:	90                   	nop
 1000b76:	90                   	nop
 1000b77:	90                   	nop
 1000b78:	90                   	nop
 1000b79:	90                   	nop
 1000b7a:	90                   	nop
 1000b7b:	90                   	nop
 1000b7c:	90                   	nop
 1000b7d:	90                   	nop
 1000b7e:	90                   	nop
 1000b7f:	90                   	nop
 1000b80:	90                   	nop
 1000b81:	90                   	nop
 1000b82:	90                   	nop
 1000b83:	90                   	nop
 1000b84:	90                   	nop
 1000b85:	90                   	nop
 1000b86:	90                   	nop
 1000b87:	90                   	nop
 1000b88:	90                   	nop
 1000b89:	90                   	nop
 1000b8a:	90                   	nop
 1000b8b:	90                   	nop
 1000b8c:	90                   	nop
 1000b8d:	90                   	nop
 1000b8e:	90                   	nop
 1000b8f:	90                   	nop
 1000b90:	90                   	nop
 1000b91:	90                   	nop
 1000b92:	90                   	nop
 1000b93:	90                   	nop
 1000b94:	90                   	nop
 1000b95:	90                   	nop
 1000b96:	90                   	nop
 1000b97:	90                   	nop
 1000b98:	90                   	nop
 1000b99:	90                   	nop
 1000b9a:	90                   	nop
 1000b9b:	90                   	nop
 1000b9c:	90                   	nop
 1000b9d:	90                   	nop
 1000b9e:	90                   	nop
 1000b9f:	90                   	nop
 1000ba0:	90                   	nop
 1000ba1:	90                   	nop
 1000ba2:	90                   	nop
 1000ba3:	90                   	nop
 1000ba4:	90                   	nop
 1000ba5:	90                   	nop
 1000ba6:	90                   	nop
 1000ba7:	90                   	nop
 1000ba8:	90                   	nop
 1000ba9:	90                   	nop
 1000baa:	90                   	nop
 1000bab:	90                   	nop
 1000bac:	90                   	nop
 1000bad:	90                   	nop
 1000bae:	90                   	nop
 1000baf:	90                   	nop
 1000bb0:	90                   	nop
 1000bb1:	90                   	nop
 1000bb2:	90                   	nop
 1000bb3:	90                   	nop
 1000bb4:	90                   	nop
 1000bb5:	90                   	nop
 1000bb6:	90                   	nop
 1000bb7:	90                   	nop
 1000bb8:	90                   	nop
 1000bb9:	90                   	nop
 1000bba:	90                   	nop
 1000bbb:	90                   	nop
 1000bbc:	90                   	nop
 1000bbd:	90                   	nop
 1000bbe:	90                   	nop
 1000bbf:	90                   	nop
 1000bc0:	90                   	nop
 1000bc1:	90                   	nop
 1000bc2:	90                   	nop
 1000bc3:	90                   	nop
 1000bc4:	90                   	nop
 1000bc5:	90                   	nop
 1000bc6:	90                   	nop
 1000bc7:	90                   	nop
 1000bc8:	90                   	nop
 1000bc9:	90                   	nop
 1000bca:	90                   	nop
 1000bcb:	90                   	nop
 1000bcc:	90                   	nop
 1000bcd:	90                   	nop
 1000bce:	90                   	nop
 1000bcf:	90                   	nop
 1000bd0:	90                   	nop
 1000bd1:	90                   	nop
 1000bd2:	90                   	nop
 1000bd3:	90                   	nop
 1000bd4:	90                   	nop
 1000bd5:	90                   	nop
 1000bd6:	90                   	nop
 1000bd7:	90                   	nop
 1000bd8:	90                   	nop
 1000bd9:	90                   	nop
 1000bda:	90                   	nop
 1000bdb:	90                   	nop
 1000bdc:	90                   	nop
 1000bdd:	90                   	nop
 1000bde:	90                   	nop
 1000bdf:	90                   	nop
 1000be0:	90                   	nop
 1000be1:	90                   	nop
 1000be2:	90                   	nop
 1000be3:	90                   	nop
 1000be4:	90                   	nop
 1000be5:	90                   	nop
 1000be6:	90                   	nop
 1000be7:	90                   	nop
 1000be8:	90                   	nop
 1000be9:	90                   	nop
 1000bea:	90                   	nop
 1000beb:	90                   	nop
 1000bec:	90                   	nop
 1000bed:	90                   	nop
 1000bee:	90                   	nop
 1000bef:	90                   	nop
 1000bf0:	90                   	nop
 1000bf1:	90                   	nop
 1000bf2:	90                   	nop
 1000bf3:	90                   	nop
 1000bf4:	90                   	nop
 1000bf5:	90                   	nop
 1000bf6:	90                   	nop
 1000bf7:	90                   	nop
 1000bf8:	90                   	nop
 1000bf9:	90                   	nop
 1000bfa:	90                   	nop
 1000bfb:	90                   	nop
 1000bfc:	90                   	nop
 1000bfd:	90                   	nop
 1000bfe:	90                   	nop
 1000bff:	90                   	nop
 1000c00:	90                   	nop
 1000c01:	90                   	nop
 1000c02:	90                   	nop
 1000c03:	90                   	nop
 1000c04:	90                   	nop
 1000c05:	90                   	nop
 1000c06:	90                   	nop
 1000c07:	90                   	nop
 1000c08:	90                   	nop
 1000c09:	90                   	nop
 1000c0a:	90                   	nop
 1000c0b:	90                   	nop
 1000c0c:	90                   	nop
 1000c0d:	90                   	nop
 1000c0e:	90                   	nop
 1000c0f:	90                   	nop
 1000c10:	90                   	nop
 1000c11:	90                   	nop
 1000c12:	90                   	nop
 1000c13:	90                   	nop
 1000c14:	90                   	nop
 1000c15:	90                   	nop
 1000c16:	90                   	nop
 1000c17:	90                   	nop
 1000c18:	90                   	nop
 1000c19:	90                   	nop
 1000c1a:	90                   	nop
 1000c1b:	90                   	nop
 1000c1c:	90                   	nop
 1000c1d:	90                   	nop
 1000c1e:	90                   	nop
 1000c1f:	90                   	nop
 1000c20:	90                   	nop
 1000c21:	90                   	nop
 1000c22:	90                   	nop
 1000c23:	90                   	nop
 1000c24:	90                   	nop
 1000c25:	90                   	nop
 1000c26:	90                   	nop
 1000c27:	90                   	nop
 1000c28:	90                   	nop
 1000c29:	90                   	nop
 1000c2a:	90                   	nop
 1000c2b:	90                   	nop
 1000c2c:	90                   	nop
 1000c2d:	90                   	nop
 1000c2e:	90                   	nop
 1000c2f:	90                   	nop
 1000c30:	90                   	nop
 1000c31:	90                   	nop
 1000c32:	90                   	nop
 1000c33:	90                   	nop
 1000c34:	90                   	nop
 1000c35:	90                   	nop
 1000c36:	90                   	nop
 1000c37:	90                   	nop
 1000c38:	90                   	nop
 1000c39:	90                   	nop
 1000c3a:	90                   	nop
 1000c3b:	90                   	nop
 1000c3c:	90                   	nop
 1000c3d:	90                   	nop
 1000c3e:	90                   	nop
 1000c3f:	90                   	nop
 1000c40:	90                   	nop
 1000c41:	90                   	nop
 1000c42:	90                   	nop
 1000c43:	90                   	nop
 1000c44:	90                   	nop
 1000c45:	90                   	nop
 1000c46:	90                   	nop
 1000c47:	90                   	nop
 1000c48:	90                   	nop
 1000c49:	90                   	nop
 1000c4a:	90                   	nop
 1000c4b:	90                   	nop
 1000c4c:	90                   	nop
 1000c4d:	90                   	nop
 1000c4e:	90                   	nop
 1000c4f:	90                   	nop
 1000c50:	90                   	nop
 1000c51:	90                   	nop
 1000c52:	90                   	nop
 1000c53:	90                   	nop
 1000c54:	90                   	nop
 1000c55:	90                   	nop
 1000c56:	90                   	nop
 1000c57:	90                   	nop
 1000c58:	90                   	nop
 1000c59:	90                   	nop
 1000c5a:	90                   	nop
 1000c5b:	90                   	nop
 1000c5c:	90                   	nop
 1000c5d:	90                   	nop
 1000c5e:	90                   	nop
 1000c5f:	90                   	nop
 1000c60:	90                   	nop
 1000c61:	90                   	nop
 1000c62:	90                   	nop
 1000c63:	90                   	nop
 1000c64:	90                   	nop
 1000c65:	90                   	nop
 1000c66:	90                   	nop
 1000c67:	90                   	nop
 1000c68:	90                   	nop
 1000c69:	90                   	nop
 1000c6a:	90                   	nop
 1000c6b:	90                   	nop
 1000c6c:	90                   	nop
 1000c6d:	90                   	nop
 1000c6e:	90                   	nop
 1000c6f:	90                   	nop
 1000c70:	90                   	nop
 1000c71:	90                   	nop
 1000c72:	90                   	nop
 1000c73:	90                   	nop
 1000c74:	90                   	nop
 1000c75:	90                   	nop
 1000c76:	90                   	nop
 1000c77:	90                   	nop
 1000c78:	90                   	nop
 1000c79:	90                   	nop
 1000c7a:	90                   	nop
 1000c7b:	90                   	nop
 1000c7c:	90                   	nop
 1000c7d:	90                   	nop
 1000c7e:	90                   	nop
 1000c7f:	90                   	nop
 1000c80:	90                   	nop
 1000c81:	90                   	nop
 1000c82:	90                   	nop
 1000c83:	90                   	nop
 1000c84:	90                   	nop
 1000c85:	90                   	nop
 1000c86:	90                   	nop
 1000c87:	90                   	nop
 1000c88:	90                   	nop
 1000c89:	90                   	nop
 1000c8a:	90                   	nop
 1000c8b:	90                   	nop
 1000c8c:	90                   	nop
 1000c8d:	90                   	nop
 1000c8e:	90                   	nop
 1000c8f:	90                   	nop
 1000c90:	90                   	nop
 1000c91:	90                   	nop
 1000c92:	90                   	nop
 1000c93:	90                   	nop
 1000c94:	90                   	nop
 1000c95:	90                   	nop
 1000c96:	90                   	nop
 1000c97:	90                   	nop
 1000c98:	90                   	nop
 1000c99:	90                   	nop
 1000c9a:	90                   	nop
 1000c9b:	90                   	nop
 1000c9c:	90                   	nop
 1000c9d:	90                   	nop
 1000c9e:	90                   	nop
 1000c9f:	90                   	nop
 1000ca0:	90                   	nop
 1000ca1:	90                   	nop
 1000ca2:	90                   	nop
 1000ca3:	90                   	nop
 1000ca4:	90                   	nop
 1000ca5:	90                   	nop
 1000ca6:	90                   	nop
 1000ca7:	90                   	nop
 1000ca8:	90                   	nop
 1000ca9:	90                   	nop
 1000caa:	90                   	nop
 1000cab:	90                   	nop
 1000cac:	90                   	nop
 1000cad:	90                   	nop
 1000cae:	90                   	nop
 1000caf:	90                   	nop
 1000cb0:	90                   	nop
 1000cb1:	90                   	nop
 1000cb2:	90                   	nop
 1000cb3:	90                   	nop
 1000cb4:	90                   	nop
 1000cb5:	90                   	nop
 1000cb6:	90                   	nop
 1000cb7:	90                   	nop
 1000cb8:	90                   	nop
 1000cb9:	90                   	nop
 1000cba:	90                   	nop
 1000cbb:	90                   	nop
 1000cbc:	90                   	nop
 1000cbd:	90                   	nop
 1000cbe:	90                   	nop
 1000cbf:	90                   	nop
 1000cc0:	90                   	nop
 1000cc1:	90                   	nop
 1000cc2:	90                   	nop
 1000cc3:	90                   	nop
 1000cc4:	90                   	nop
 1000cc5:	90                   	nop
 1000cc6:	90                   	nop
 1000cc7:	90                   	nop
 1000cc8:	90                   	nop
 1000cc9:	90                   	nop
 1000cca:	90                   	nop
 1000ccb:	90                   	nop
 1000ccc:	90                   	nop
 1000ccd:	90                   	nop
 1000cce:	90                   	nop
 1000ccf:	90                   	nop
 1000cd0:	90                   	nop
 1000cd1:	90                   	nop
 1000cd2:	90                   	nop
 1000cd3:	90                   	nop
 1000cd4:	90                   	nop
 1000cd5:	90                   	nop
 1000cd6:	90                   	nop
 1000cd7:	90                   	nop
 1000cd8:	90                   	nop
 1000cd9:	90                   	nop
 1000cda:	90                   	nop
 1000cdb:	90                   	nop
 1000cdc:	90                   	nop
 1000cdd:	90                   	nop
 1000cde:	90                   	nop
 1000cdf:	90                   	nop
 1000ce0:	90                   	nop
 1000ce1:	90                   	nop
 1000ce2:	90                   	nop
 1000ce3:	90                   	nop
 1000ce4:	90                   	nop
 1000ce5:	90                   	nop
 1000ce6:	90                   	nop
 1000ce7:	90                   	nop
 1000ce8:	90                   	nop
 1000ce9:	90                   	nop
 1000cea:	90                   	nop
 1000ceb:	90                   	nop
 1000cec:	90                   	nop
 1000ced:	90                   	nop
 1000cee:	90                   	nop
 1000cef:	90                   	nop
 1000cf0:	90                   	nop
 1000cf1:	90                   	nop
 1000cf2:	90                   	nop
 1000cf3:	90                   	nop
 1000cf4:	90                   	nop
 1000cf5:	90                   	nop
 1000cf6:	90                   	nop
 1000cf7:	90                   	nop
 1000cf8:	90                   	nop
 1000cf9:	90                   	nop
 1000cfa:	90                   	nop
 1000cfb:	90                   	nop
 1000cfc:	90                   	nop
 1000cfd:	90                   	nop
 1000cfe:	90                   	nop
 1000cff:	90                   	nop
 1000d00:	90                   	nop
 1000d01:	90                   	nop
 1000d02:	90                   	nop
 1000d03:	90                   	nop
 1000d04:	90                   	nop
 1000d05:	90                   	nop
 1000d06:	90                   	nop
 1000d07:	90                   	nop
 1000d08:	90                   	nop
 1000d09:	90                   	nop
 1000d0a:	90                   	nop
 1000d0b:	90                   	nop
 1000d0c:	90                   	nop
 1000d0d:	90                   	nop
 1000d0e:	90                   	nop
 1000d0f:	90                   	nop
 1000d10:	90                   	nop
 1000d11:	90                   	nop
 1000d12:	90                   	nop
 1000d13:	90                   	nop
 1000d14:	90                   	nop
 1000d15:	90                   	nop
 1000d16:	90                   	nop
 1000d17:	90                   	nop
 1000d18:	90                   	nop
 1000d19:	90                   	nop
 1000d1a:	90                   	nop
 1000d1b:	90                   	nop
 1000d1c:	90                   	nop
 1000d1d:	90                   	nop
 1000d1e:	90                   	nop
 1000d1f:	90                   	nop
 1000d20:	90                   	nop
 1000d21:	90                   	nop
 1000d22:	90                   	nop
 1000d23:	90                   	nop
 1000d24:	90                   	nop
 1000d25:	90                   	nop
 1000d26:	90                   	nop
 1000d27:	90                   	nop
 1000d28:	90                   	nop
 1000d29:	90                   	nop
 1000d2a:	90                   	nop
 1000d2b:	90                   	nop
 1000d2c:	90                   	nop
 1000d2d:	90                   	nop
 1000d2e:	90                   	nop
 1000d2f:	90                   	nop
 1000d30:	90                   	nop
 1000d31:	90                   	nop
 1000d32:	90                   	nop
 1000d33:	90                   	nop
 1000d34:	90                   	nop
 1000d35:	90                   	nop
 1000d36:	90                   	nop
 1000d37:	90                   	nop
 1000d38:	90                   	nop
 1000d39:	90                   	nop
 1000d3a:	90                   	nop
 1000d3b:	90                   	nop
 1000d3c:	90                   	nop
 1000d3d:	90                   	nop
 1000d3e:	90                   	nop
 1000d3f:	90                   	nop
 1000d40:	90                   	nop
 1000d41:	90                   	nop
 1000d42:	90                   	nop
 1000d43:	90                   	nop
 1000d44:	90                   	nop
 1000d45:	90                   	nop
 1000d46:	90                   	nop
 1000d47:	90                   	nop
 1000d48:	90                   	nop
 1000d49:	90                   	nop
 1000d4a:	90                   	nop
 1000d4b:	90                   	nop
 1000d4c:	90                   	nop
 1000d4d:	90                   	nop
 1000d4e:	90                   	nop
 1000d4f:	90                   	nop
 1000d50:	90                   	nop
 1000d51:	90                   	nop
 1000d52:	90                   	nop
 1000d53:	90                   	nop
 1000d54:	90                   	nop
 1000d55:	90                   	nop
 1000d56:	90                   	nop
 1000d57:	90                   	nop
 1000d58:	90                   	nop
 1000d59:	90                   	nop
 1000d5a:	90                   	nop
 1000d5b:	90                   	nop
 1000d5c:	90                   	nop
 1000d5d:	90                   	nop
 1000d5e:	90                   	nop
 1000d5f:	90                   	nop
 1000d60:	90                   	nop
 1000d61:	90                   	nop
 1000d62:	90                   	nop
 1000d63:	90                   	nop
 1000d64:	90                   	nop
 1000d65:	90                   	nop
 1000d66:	90                   	nop
 1000d67:	90                   	nop
 1000d68:	90                   	nop
 1000d69:	90                   	nop
 1000d6a:	90                   	nop
 1000d6b:	90                   	nop
 1000d6c:	90                   	nop
 1000d6d:	90                   	nop
 1000d6e:	90                   	nop
 1000d6f:	90                   	nop
 1000d70:	90                   	nop
 1000d71:	90                   	nop
 1000d72:	90                   	nop
 1000d73:	90                   	nop
 1000d74:	90                   	nop
 1000d75:	90                   	nop
 1000d76:	90                   	nop
 1000d77:	90                   	nop
 1000d78:	90                   	nop
 1000d79:	90                   	nop
 1000d7a:	90                   	nop
 1000d7b:	90                   	nop
 1000d7c:	90                   	nop
 1000d7d:	90                   	nop
 1000d7e:	90                   	nop
 1000d7f:	90                   	nop
 1000d80:	90                   	nop
 1000d81:	90                   	nop
 1000d82:	90                   	nop
 1000d83:	90                   	nop
 1000d84:	90                   	nop
 1000d85:	90                   	nop
 1000d86:	90                   	nop
 1000d87:	90                   	nop
 1000d88:	90                   	nop
 1000d89:	90                   	nop
 1000d8a:	90                   	nop
 1000d8b:	90                   	nop
 1000d8c:	90                   	nop
 1000d8d:	90                   	nop
 1000d8e:	90                   	nop
 1000d8f:	90                   	nop
 1000d90:	90                   	nop
 1000d91:	90                   	nop
 1000d92:	90                   	nop
 1000d93:	90                   	nop
 1000d94:	90                   	nop
 1000d95:	90                   	nop
 1000d96:	90                   	nop
 1000d97:	90                   	nop
 1000d98:	90                   	nop
 1000d99:	90                   	nop
 1000d9a:	90                   	nop
 1000d9b:	90                   	nop
 1000d9c:	90                   	nop
 1000d9d:	90                   	nop
 1000d9e:	90                   	nop
 1000d9f:	90                   	nop
 1000da0:	90                   	nop
 1000da1:	90                   	nop
 1000da2:	90                   	nop
 1000da3:	90                   	nop
 1000da4:	90                   	nop
 1000da5:	90                   	nop
 1000da6:	90                   	nop
 1000da7:	90                   	nop
 1000da8:	90                   	nop
 1000da9:	90                   	nop
 1000daa:	90                   	nop
 1000dab:	90                   	nop
 1000dac:	90                   	nop
 1000dad:	90                   	nop
 1000dae:	90                   	nop
 1000daf:	90                   	nop
 1000db0:	90                   	nop
 1000db1:	90                   	nop
 1000db2:	90                   	nop
 1000db3:	90                   	nop
 1000db4:	90                   	nop
 1000db5:	90                   	nop
 1000db6:	90                   	nop
 1000db7:	90                   	nop
 1000db8:	90                   	nop
 1000db9:	90                   	nop
 1000dba:	90                   	nop
 1000dbb:	90                   	nop
 1000dbc:	90                   	nop
 1000dbd:	90                   	nop
 1000dbe:	90                   	nop
 1000dbf:	90                   	nop
 1000dc0:	90                   	nop
 1000dc1:	90                   	nop
 1000dc2:	90                   	nop
 1000dc3:	90                   	nop
 1000dc4:	90                   	nop
 1000dc5:	90                   	nop
 1000dc6:	90                   	nop
 1000dc7:	90                   	nop
 1000dc8:	90                   	nop
 1000dc9:	90                   	nop
 1000dca:	90                   	nop
 1000dcb:	90                   	nop
 1000dcc:	90                   	nop
 1000dcd:	90                   	nop
 1000dce:	90                   	nop
 1000dcf:	90                   	nop
 1000dd0:	90                   	nop
 1000dd1:	90                   	nop
 1000dd2:	90                   	nop
 1000dd3:	90                   	nop
 1000dd4:	90                   	nop
 1000dd5:	90                   	nop
 1000dd6:	90                   	nop
 1000dd7:	90                   	nop
 1000dd8:	90                   	nop
 1000dd9:	90                   	nop
 1000dda:	90                   	nop
 1000ddb:	90                   	nop
 1000ddc:	90                   	nop
 1000ddd:	90                   	nop
 1000dde:	90                   	nop
 1000ddf:	90                   	nop
 1000de0:	90                   	nop
 1000de1:	90                   	nop
 1000de2:	90                   	nop
 1000de3:	90                   	nop
 1000de4:	90                   	nop
 1000de5:	90                   	nop
 1000de6:	90                   	nop
 1000de7:	90                   	nop
 1000de8:	90                   	nop
 1000de9:	90                   	nop
 1000dea:	90                   	nop
 1000deb:	90                   	nop
 1000dec:	90                   	nop
 1000ded:	90                   	nop
 1000dee:	90                   	nop
 1000def:	90                   	nop
 1000df0:	90                   	nop
 1000df1:	90                   	nop
 1000df2:	90                   	nop
 1000df3:	90                   	nop
 1000df4:	90                   	nop
 1000df5:	90                   	nop
 1000df6:	90                   	nop
 1000df7:	90                   	nop
 1000df8:	90                   	nop
 1000df9:	90                   	nop
 1000dfa:	90                   	nop
 1000dfb:	90                   	nop
 1000dfc:	90                   	nop
 1000dfd:	90                   	nop
 1000dfe:	90                   	nop
 1000dff:	90                   	nop
 1000e00:	90                   	nop
 1000e01:	90                   	nop
 1000e02:	90                   	nop
 1000e03:	90                   	nop
 1000e04:	90                   	nop
 1000e05:	90                   	nop
 1000e06:	90                   	nop
 1000e07:	90                   	nop
 1000e08:	90                   	nop
 1000e09:	90                   	nop
 1000e0a:	90                   	nop
 1000e0b:	90                   	nop
 1000e0c:	90                   	nop
 1000e0d:	90                   	nop
 1000e0e:	90                   	nop
 1000e0f:	90                   	nop
 1000e10:	90                   	nop
 1000e11:	90                   	nop
 1000e12:	90                   	nop
 1000e13:	90                   	nop
 1000e14:	90                   	nop
 1000e15:	90                   	nop
 1000e16:	90                   	nop
 1000e17:	90                   	nop
 1000e18:	90                   	nop
 1000e19:	90                   	nop
 1000e1a:	90                   	nop
 1000e1b:	90                   	nop
 1000e1c:	90                   	nop
 1000e1d:	90                   	nop
 1000e1e:	90                   	nop
 1000e1f:	90                   	nop
 1000e20:	90                   	nop
 1000e21:	90                   	nop
 1000e22:	90                   	nop
 1000e23:	90                   	nop
 1000e24:	90                   	nop
 1000e25:	90                   	nop
 1000e26:	90                   	nop
 1000e27:	90                   	nop
 1000e28:	90                   	nop
 1000e29:	90                   	nop
 1000e2a:	90                   	nop
 1000e2b:	90                   	nop
 1000e2c:	90                   	nop
 1000e2d:	90                   	nop
 1000e2e:	90                   	nop
 1000e2f:	90                   	nop
 1000e30:	90                   	nop
 1000e31:	90                   	nop
 1000e32:	90                   	nop
 1000e33:	90                   	nop
 1000e34:	90                   	nop
 1000e35:	90                   	nop
 1000e36:	90                   	nop
 1000e37:	90                   	nop
 1000e38:	90                   	nop
 1000e39:	90                   	nop
 1000e3a:	90                   	nop
 1000e3b:	90                   	nop
 1000e3c:	90                   	nop
 1000e3d:	90                   	nop
 1000e3e:	90                   	nop
 1000e3f:	90                   	nop
 1000e40:	90                   	nop
 1000e41:	90                   	nop
 1000e42:	90                   	nop
 1000e43:	90                   	nop
 1000e44:	90                   	nop
 1000e45:	90                   	nop
 1000e46:	90                   	nop
 1000e47:	90                   	nop
 1000e48:	90                   	nop
 1000e49:	90                   	nop
 1000e4a:	90                   	nop
 1000e4b:	90                   	nop
 1000e4c:	90                   	nop
 1000e4d:	90                   	nop
 1000e4e:	90                   	nop
 1000e4f:	90                   	nop
 1000e50:	90                   	nop
 1000e51:	90                   	nop
 1000e52:	90                   	nop
 1000e53:	90                   	nop
 1000e54:	90                   	nop
 1000e55:	90                   	nop
 1000e56:	90                   	nop
 1000e57:	90                   	nop
 1000e58:	90                   	nop
 1000e59:	90                   	nop
 1000e5a:	90                   	nop
 1000e5b:	90                   	nop
 1000e5c:	90                   	nop
 1000e5d:	90                   	nop
 1000e5e:	90                   	nop
 1000e5f:	90                   	nop
 1000e60:	90                   	nop
 1000e61:	90                   	nop
 1000e62:	90                   	nop
 1000e63:	90                   	nop
 1000e64:	90                   	nop
 1000e65:	90                   	nop
 1000e66:	90                   	nop
 1000e67:	90                   	nop
 1000e68:	90                   	nop
 1000e69:	90                   	nop
 1000e6a:	90                   	nop
 1000e6b:	90                   	nop
 1000e6c:	90                   	nop
 1000e6d:	90                   	nop
 1000e6e:	90                   	nop
 1000e6f:	90                   	nop
 1000e70:	90                   	nop
 1000e71:	90                   	nop
 1000e72:	90                   	nop
 1000e73:	90                   	nop
 1000e74:	90                   	nop
 1000e75:	90                   	nop
 1000e76:	90                   	nop
 1000e77:	90                   	nop
 1000e78:	90                   	nop
 1000e79:	90                   	nop
 1000e7a:	90                   	nop
 1000e7b:	90                   	nop
 1000e7c:	90                   	nop
 1000e7d:	90                   	nop
 1000e7e:	90                   	nop
 1000e7f:	90                   	nop
 1000e80:	90                   	nop
 1000e81:	90                   	nop
 1000e82:	90                   	nop
 1000e83:	90                   	nop
 1000e84:	90                   	nop
 1000e85:	90                   	nop
 1000e86:	90                   	nop
 1000e87:	90                   	nop
 1000e88:	90                   	nop
 1000e89:	90                   	nop
 1000e8a:	90                   	nop
 1000e8b:	90                   	nop
 1000e8c:	90                   	nop
 1000e8d:	90                   	nop
 1000e8e:	90                   	nop
 1000e8f:	90                   	nop
 1000e90:	90                   	nop
 1000e91:	90                   	nop
 1000e92:	90                   	nop
 1000e93:	90                   	nop
 1000e94:	90                   	nop
 1000e95:	90                   	nop
 1000e96:	90                   	nop
 1000e97:	90                   	nop
 1000e98:	90                   	nop
 1000e99:	90                   	nop
 1000e9a:	90                   	nop
 1000e9b:	90                   	nop
 1000e9c:	90                   	nop
 1000e9d:	90                   	nop
 1000e9e:	90                   	nop
 1000e9f:	90                   	nop
 1000ea0:	90                   	nop
 1000ea1:	90                   	nop
 1000ea2:	90                   	nop
 1000ea3:	90                   	nop
 1000ea4:	90                   	nop
 1000ea5:	90                   	nop
 1000ea6:	90                   	nop
 1000ea7:	90                   	nop
 1000ea8:	90                   	nop
 1000ea9:	90                   	nop
 1000eaa:	90                   	nop
 1000eab:	90                   	nop
 1000eac:	90                   	nop
 1000ead:	90                   	nop
 1000eae:	90                   	nop
 1000eaf:	90                   	nop
 1000eb0:	90                   	nop
 1000eb1:	90                   	nop
 1000eb2:	90                   	nop
 1000eb3:	90                   	nop
 1000eb4:	90                   	nop
 1000eb5:	90                   	nop
 1000eb6:	90                   	nop
 1000eb7:	90                   	nop
 1000eb8:	90                   	nop
 1000eb9:	90                   	nop
 1000eba:	90                   	nop
 1000ebb:	90                   	nop
 1000ebc:	90                   	nop
 1000ebd:	90                   	nop
 1000ebe:	90                   	nop
 1000ebf:	90                   	nop
 1000ec0:	90                   	nop
 1000ec1:	90                   	nop
 1000ec2:	90                   	nop
 1000ec3:	90                   	nop
 1000ec4:	90                   	nop
 1000ec5:	90                   	nop
 1000ec6:	90                   	nop
 1000ec7:	90                   	nop
 1000ec8:	90                   	nop
 1000ec9:	90                   	nop
 1000eca:	90                   	nop
 1000ecb:	90                   	nop
 1000ecc:	90                   	nop
 1000ecd:	90                   	nop
 1000ece:	90                   	nop
 1000ecf:	90                   	nop
 1000ed0:	90                   	nop
 1000ed1:	90                   	nop
 1000ed2:	90                   	nop
 1000ed3:	90                   	nop
 1000ed4:	90                   	nop
 1000ed5:	90                   	nop
 1000ed6:	90                   	nop
 1000ed7:	90                   	nop
 1000ed8:	90                   	nop
 1000ed9:	90                   	nop
 1000eda:	90                   	nop
 1000edb:	90                   	nop
 1000edc:	90                   	nop
 1000edd:	90                   	nop
 1000ede:	90                   	nop
 1000edf:	90                   	nop
 1000ee0:	90                   	nop
 1000ee1:	90                   	nop
 1000ee2:	90                   	nop
 1000ee3:	90                   	nop
 1000ee4:	90                   	nop
 1000ee5:	90                   	nop
 1000ee6:	90                   	nop
 1000ee7:	90                   	nop
 1000ee8:	90                   	nop
 1000ee9:	90                   	nop
 1000eea:	90                   	nop
 1000eeb:	90                   	nop
 1000eec:	90                   	nop
 1000eed:	90                   	nop
 1000eee:	90                   	nop
 1000eef:	90                   	nop
 1000ef0:	90                   	nop
 1000ef1:	90                   	nop
 1000ef2:	90                   	nop
 1000ef3:	90                   	nop
 1000ef4:	90                   	nop
 1000ef5:	90                   	nop
 1000ef6:	90                   	nop
 1000ef7:	90                   	nop
 1000ef8:	90                   	nop
 1000ef9:	90                   	nop
 1000efa:	90                   	nop
 1000efb:	90                   	nop
 1000efc:	90                   	nop
 1000efd:	90                   	nop
 1000efe:	90                   	nop
 1000eff:	90                   	nop
 1000f00:	90                   	nop
 1000f01:	90                   	nop
 1000f02:	90                   	nop
 1000f03:	90                   	nop
 1000f04:	90                   	nop
 1000f05:	90                   	nop
 1000f06:	90                   	nop
 1000f07:	90                   	nop
 1000f08:	90                   	nop
 1000f09:	90                   	nop
 1000f0a:	90                   	nop
 1000f0b:	90                   	nop
 1000f0c:	90                   	nop
 1000f0d:	90                   	nop
 1000f0e:	90                   	nop
 1000f0f:	90                   	nop
 1000f10:	90                   	nop
 1000f11:	90                   	nop
 1000f12:	90                   	nop
 1000f13:	90                   	nop
 1000f14:	90                   	nop
 1000f15:	90                   	nop
 1000f16:	90                   	nop
 1000f17:	90                   	nop
 1000f18:	90                   	nop
 1000f19:	90                   	nop
 1000f1a:	90                   	nop
 1000f1b:	90                   	nop
 1000f1c:	90                   	nop
 1000f1d:	90                   	nop
 1000f1e:	90                   	nop
 1000f1f:	90                   	nop
 1000f20:	90                   	nop
 1000f21:	90                   	nop
 1000f22:	90                   	nop
 1000f23:	90                   	nop
 1000f24:	90                   	nop
 1000f25:	90                   	nop
 1000f26:	90                   	nop
 1000f27:	90                   	nop
 1000f28:	90                   	nop
 1000f29:	90                   	nop
 1000f2a:	90                   	nop
 1000f2b:	90                   	nop
 1000f2c:	90                   	nop
 1000f2d:	90                   	nop
 1000f2e:	90                   	nop
 1000f2f:	90                   	nop
 1000f30:	90                   	nop
 1000f31:	90                   	nop
 1000f32:	90                   	nop
 1000f33:	90                   	nop
 1000f34:	90                   	nop
 1000f35:	90                   	nop
 1000f36:	90                   	nop
 1000f37:	90                   	nop
 1000f38:	90                   	nop
 1000f39:	90                   	nop
 1000f3a:	90                   	nop
 1000f3b:	90                   	nop
 1000f3c:	90                   	nop
 1000f3d:	90                   	nop
 1000f3e:	90                   	nop
 1000f3f:	90                   	nop
 1000f40:	90                   	nop
 1000f41:	90                   	nop
 1000f42:	90                   	nop
 1000f43:	90                   	nop
 1000f44:	90                   	nop
 1000f45:	90                   	nop
 1000f46:	90                   	nop
 1000f47:	90                   	nop
 1000f48:	90                   	nop
 1000f49:	90                   	nop
 1000f4a:	90                   	nop
 1000f4b:	90                   	nop
 1000f4c:	90                   	nop
 1000f4d:	90                   	nop
 1000f4e:	90                   	nop
 1000f4f:	90                   	nop
 1000f50:	90                   	nop
 1000f51:	90                   	nop
 1000f52:	90                   	nop
 1000f53:	90                   	nop
 1000f54:	90                   	nop
 1000f55:	90                   	nop
 1000f56:	90                   	nop
 1000f57:	90                   	nop
 1000f58:	90                   	nop
 1000f59:	90                   	nop
 1000f5a:	90                   	nop
 1000f5b:	90                   	nop
 1000f5c:	90                   	nop
 1000f5d:	90                   	nop
 1000f5e:	90                   	nop
 1000f5f:	90                   	nop
 1000f60:	90                   	nop
 1000f61:	90                   	nop
 1000f62:	90                   	nop
 1000f63:	90                   	nop
 1000f64:	90                   	nop
 1000f65:	90                   	nop
 1000f66:	90                   	nop
 1000f67:	90                   	nop
 1000f68:	90                   	nop
 1000f69:	90                   	nop
 1000f6a:	90                   	nop
 1000f6b:	90                   	nop
 1000f6c:	90                   	nop
 1000f6d:	90                   	nop
 1000f6e:	90                   	nop
 1000f6f:	90                   	nop
 1000f70:	90                   	nop
 1000f71:	90                   	nop
 1000f72:	90                   	nop
 1000f73:	90                   	nop
 1000f74:	90                   	nop
 1000f75:	90                   	nop
 1000f76:	90                   	nop
 1000f77:	90                   	nop
 1000f78:	90                   	nop
 1000f79:	90                   	nop
 1000f7a:	90                   	nop
 1000f7b:	90                   	nop
 1000f7c:	90                   	nop
 1000f7d:	90                   	nop
 1000f7e:	90                   	nop
 1000f7f:	90                   	nop
 1000f80:	90                   	nop
 1000f81:	90                   	nop
 1000f82:	90                   	nop
 1000f83:	90                   	nop
 1000f84:	90                   	nop
 1000f85:	90                   	nop
 1000f86:	90                   	nop
 1000f87:	90                   	nop
 1000f88:	90                   	nop
 1000f89:	90                   	nop
 1000f8a:	90                   	nop
 1000f8b:	90                   	nop
 1000f8c:	90                   	nop
 1000f8d:	90                   	nop
 1000f8e:	90                   	nop
 1000f8f:	90                   	nop
 1000f90:	90                   	nop
 1000f91:	90                   	nop
 1000f92:	90                   	nop
 1000f93:	90                   	nop
 1000f94:	90                   	nop
 1000f95:	90                   	nop
 1000f96:	90                   	nop
 1000f97:	90                   	nop
 1000f98:	90                   	nop
 1000f99:	90                   	nop
 1000f9a:	90                   	nop
 1000f9b:	90                   	nop
 1000f9c:	90                   	nop
 1000f9d:	90                   	nop
 1000f9e:	90                   	nop
 1000f9f:	90                   	nop
 1000fa0:	90                   	nop
 1000fa1:	90                   	nop
 1000fa2:	90                   	nop
 1000fa3:	90                   	nop
 1000fa4:	90                   	nop
 1000fa5:	90                   	nop
 1000fa6:	90                   	nop
 1000fa7:	90                   	nop
 1000fa8:	90                   	nop
 1000fa9:	90                   	nop
 1000faa:	90                   	nop
 1000fab:	90                   	nop
 1000fac:	90                   	nop
 1000fad:	90                   	nop
 1000fae:	90                   	nop
 1000faf:	90                   	nop
 1000fb0:	90                   	nop
 1000fb1:	90                   	nop
 1000fb2:	90                   	nop
 1000fb3:	90                   	nop
 1000fb4:	90                   	nop
 1000fb5:	90                   	nop
 1000fb6:	90                   	nop
 1000fb7:	90                   	nop
 1000fb8:	90                   	nop
 1000fb9:	90                   	nop
 1000fba:	90                   	nop
 1000fbb:	90                   	nop
 1000fbc:	90                   	nop
 1000fbd:	90                   	nop
 1000fbe:	90                   	nop
 1000fbf:	90                   	nop
 1000fc0:	90                   	nop
 1000fc1:	90                   	nop
 1000fc2:	90                   	nop
 1000fc3:	90                   	nop
 1000fc4:	90                   	nop
 1000fc5:	90                   	nop
 1000fc6:	90                   	nop
 1000fc7:	90                   	nop
 1000fc8:	90                   	nop
 1000fc9:	90                   	nop
 1000fca:	90                   	nop
 1000fcb:	90                   	nop
 1000fcc:	90                   	nop
 1000fcd:	90                   	nop
 1000fce:	90                   	nop
 1000fcf:	90                   	nop
 1000fd0:	90                   	nop
 1000fd1:	90                   	nop
 1000fd2:	90                   	nop
 1000fd3:	90                   	nop
 1000fd4:	90                   	nop
 1000fd5:	90                   	nop
 1000fd6:	90                   	nop
 1000fd7:	90                   	nop
 1000fd8:	90                   	nop
 1000fd9:	90                   	nop
 1000fda:	90                   	nop
 1000fdb:	90                   	nop
 1000fdc:	90                   	nop
 1000fdd:	90                   	nop
 1000fde:	90                   	nop
 1000fdf:	90                   	nop
 1000fe0:	90                   	nop
 1000fe1:	90                   	nop
 1000fe2:	90                   	nop
 1000fe3:	90                   	nop
 1000fe4:	90                   	nop
 1000fe5:	90                   	nop
 1000fe6:	90                   	nop
 1000fe7:	90                   	nop
 1000fe8:	90                   	nop
 1000fe9:	90                   	nop
 1000fea:	90                   	nop
 1000feb:	90                   	nop
 1000fec:	90                   	nop
 1000fed:	90                   	nop
 1000fee:	90                   	nop
 1000fef:	90                   	nop
 1000ff0:	90                   	nop
 1000ff1:	90                   	nop
 1000ff2:	90                   	nop
 1000ff3:	90                   	nop
 1000ff4:	90                   	nop
 1000ff5:	90                   	nop
 1000ff6:	90                   	nop
 1000ff7:	90                   	nop
 1000ff8:	90                   	nop
 1000ff9:	90                   	nop
 1000ffa:	90                   	nop
 1000ffb:	90                   	nop
 1000ffc:	90                   	nop
 1000ffd:	90                   	nop
 1000ffe:	90                   	nop
 1000fff:	90                   	nop

0000000001001000 <PML4_BASE>:
	...

0000000001002000 <PDPT_BASE>:
	...

0000000001003000 <GDT64>:
	...
 100300c:	00 9a 20 00 00 00    	add    BYTE PTR [rdx+0x20],bl
 1003012:	00 00                	add    BYTE PTR [rax],al
 1003014:	00 92 00 00 17 00    	add    BYTE PTR [rdx+0x170000],dl

0000000001003018 <GDT64.GDT64_PTR>:
 1003018:	17                   	(bad)  
 1003019:	00 00                	add    BYTE PTR [rax],al
 100301b:	30 00                	xor    BYTE PTR [rax],al
 100301d:	01 00                	add    DWORD PTR [rax],eax
 100301f:	00 00                	add    BYTE PTR [rax],al
 1003021:	00 90 90 90 90 90    	add    BYTE PTR [rax-0x6f6f6f70],dl
 1003027:	90                   	nop
 1003028:	90                   	nop
 1003029:	90                   	nop
 100302a:	90                   	nop
 100302b:	90                   	nop
 100302c:	90                   	nop
 100302d:	90                   	nop
 100302e:	90                   	nop
 100302f:	90                   	nop
 1003030:	90                   	nop
 1003031:	90                   	nop
 1003032:	90                   	nop
 1003033:	90                   	nop
 1003034:	90                   	nop
 1003035:	90                   	nop
 1003036:	90                   	nop
 1003037:	90                   	nop
 1003038:	90                   	nop
 1003039:	90                   	nop
 100303a:	90                   	nop
 100303b:	90                   	nop
 100303c:	90                   	nop
 100303d:	90                   	nop
 100303e:	90                   	nop
 100303f:	90                   	nop
 1003040:	90                   	nop
 1003041:	90                   	nop
 1003042:	90                   	nop
 1003043:	90                   	nop
 1003044:	90                   	nop
 1003045:	90                   	nop
 1003046:	90                   	nop
 1003047:	90                   	nop
 1003048:	90                   	nop
 1003049:	90                   	nop
 100304a:	90                   	nop
 100304b:	90                   	nop
 100304c:	90                   	nop
 100304d:	90                   	nop
 100304e:	90                   	nop
 100304f:	90                   	nop
 1003050:	90                   	nop
 1003051:	90                   	nop
 1003052:	90                   	nop
 1003053:	90                   	nop
 1003054:	90                   	nop
 1003055:	90                   	nop
 1003056:	90                   	nop
 1003057:	90                   	nop
 1003058:	90                   	nop
 1003059:	90                   	nop
 100305a:	90                   	nop
 100305b:	90                   	nop
 100305c:	90                   	nop
 100305d:	90                   	nop
 100305e:	90                   	nop
 100305f:	90                   	nop
 1003060:	90                   	nop
 1003061:	90                   	nop
 1003062:	90                   	nop
 1003063:	90                   	nop
 1003064:	90                   	nop
 1003065:	90                   	nop
 1003066:	90                   	nop
 1003067:	90                   	nop
 1003068:	90                   	nop
 1003069:	90                   	nop
 100306a:	90                   	nop
 100306b:	90                   	nop
 100306c:	90                   	nop
 100306d:	90                   	nop
 100306e:	90                   	nop
 100306f:	90                   	nop
 1003070:	90                   	nop
 1003071:	90                   	nop
 1003072:	90                   	nop
 1003073:	90                   	nop
 1003074:	90                   	nop
 1003075:	90                   	nop
 1003076:	90                   	nop
 1003077:	90                   	nop
 1003078:	90                   	nop
 1003079:	90                   	nop
 100307a:	90                   	nop
 100307b:	90                   	nop
 100307c:	90                   	nop
 100307d:	90                   	nop
 100307e:	90                   	nop
 100307f:	90                   	nop
 1003080:	90                   	nop
 1003081:	90                   	nop
 1003082:	90                   	nop
 1003083:	90                   	nop
 1003084:	90                   	nop
 1003085:	90                   	nop
 1003086:	90                   	nop
 1003087:	90                   	nop
 1003088:	90                   	nop
 1003089:	90                   	nop
 100308a:	90                   	nop
 100308b:	90                   	nop
 100308c:	90                   	nop
 100308d:	90                   	nop
 100308e:	90                   	nop
 100308f:	90                   	nop
 1003090:	90                   	nop
 1003091:	90                   	nop
 1003092:	90                   	nop
 1003093:	90                   	nop
 1003094:	90                   	nop
 1003095:	90                   	nop
 1003096:	90                   	nop
 1003097:	90                   	nop
 1003098:	90                   	nop
 1003099:	90                   	nop
 100309a:	90                   	nop
 100309b:	90                   	nop
 100309c:	90                   	nop
 100309d:	90                   	nop
 100309e:	90                   	nop
 100309f:	90                   	nop
 10030a0:	90                   	nop
 10030a1:	90                   	nop
 10030a2:	90                   	nop
 10030a3:	90                   	nop
 10030a4:	90                   	nop
 10030a5:	90                   	nop
 10030a6:	90                   	nop
 10030a7:	90                   	nop
 10030a8:	90                   	nop
 10030a9:	90                   	nop
 10030aa:	90                   	nop
 10030ab:	90                   	nop
 10030ac:	90                   	nop
 10030ad:	90                   	nop
 10030ae:	90                   	nop
 10030af:	90                   	nop
 10030b0:	90                   	nop
 10030b1:	90                   	nop
 10030b2:	90                   	nop
 10030b3:	90                   	nop
 10030b4:	90                   	nop
 10030b5:	90                   	nop
 10030b6:	90                   	nop
 10030b7:	90                   	nop
 10030b8:	90                   	nop
 10030b9:	90                   	nop
 10030ba:	90                   	nop
 10030bb:	90                   	nop
 10030bc:	90                   	nop
 10030bd:	90                   	nop
 10030be:	90                   	nop
 10030bf:	90                   	nop
 10030c0:	90                   	nop
 10030c1:	90                   	nop
 10030c2:	90                   	nop
 10030c3:	90                   	nop
 10030c4:	90                   	nop
 10030c5:	90                   	nop
 10030c6:	90                   	nop
 10030c7:	90                   	nop
 10030c8:	90                   	nop
 10030c9:	90                   	nop
 10030ca:	90                   	nop
 10030cb:	90                   	nop
 10030cc:	90                   	nop
 10030cd:	90                   	nop
 10030ce:	90                   	nop
 10030cf:	90                   	nop
 10030d0:	90                   	nop
 10030d1:	90                   	nop
 10030d2:	90                   	nop
 10030d3:	90                   	nop
 10030d4:	90                   	nop
 10030d5:	90                   	nop
 10030d6:	90                   	nop
 10030d7:	90                   	nop
 10030d8:	90                   	nop
 10030d9:	90                   	nop
 10030da:	90                   	nop
 10030db:	90                   	nop
 10030dc:	90                   	nop
 10030dd:	90                   	nop
 10030de:	90                   	nop
 10030df:	90                   	nop
 10030e0:	90                   	nop
 10030e1:	90                   	nop
 10030e2:	90                   	nop
 10030e3:	90                   	nop
 10030e4:	90                   	nop
 10030e5:	90                   	nop
 10030e6:	90                   	nop
 10030e7:	90                   	nop
 10030e8:	90                   	nop
 10030e9:	90                   	nop
 10030ea:	90                   	nop
 10030eb:	90                   	nop
 10030ec:	90                   	nop
 10030ed:	90                   	nop
 10030ee:	90                   	nop
 10030ef:	90                   	nop
 10030f0:	90                   	nop
 10030f1:	90                   	nop
 10030f2:	90                   	nop
 10030f3:	90                   	nop
 10030f4:	90                   	nop
 10030f5:	90                   	nop
 10030f6:	90                   	nop
 10030f7:	90                   	nop
 10030f8:	90                   	nop
 10030f9:	90                   	nop
 10030fa:	90                   	nop
 10030fb:	90                   	nop
 10030fc:	90                   	nop
 10030fd:	90                   	nop
 10030fe:	90                   	nop
 10030ff:	90                   	nop
 1003100:	90                   	nop
 1003101:	90                   	nop
 1003102:	90                   	nop
 1003103:	90                   	nop
 1003104:	90                   	nop
 1003105:	90                   	nop
 1003106:	90                   	nop
 1003107:	90                   	nop
 1003108:	90                   	nop
 1003109:	90                   	nop
 100310a:	90                   	nop
 100310b:	90                   	nop
 100310c:	90                   	nop
 100310d:	90                   	nop
 100310e:	90                   	nop
 100310f:	90                   	nop
 1003110:	90                   	nop
 1003111:	90                   	nop
 1003112:	90                   	nop
 1003113:	90                   	nop
 1003114:	90                   	nop
 1003115:	90                   	nop
 1003116:	90                   	nop
 1003117:	90                   	nop
 1003118:	90                   	nop
 1003119:	90                   	nop
 100311a:	90                   	nop
 100311b:	90                   	nop
 100311c:	90                   	nop
 100311d:	90                   	nop
 100311e:	90                   	nop
 100311f:	90                   	nop
 1003120:	90                   	nop
 1003121:	90                   	nop
 1003122:	90                   	nop
 1003123:	90                   	nop
 1003124:	90                   	nop
 1003125:	90                   	nop
 1003126:	90                   	nop
 1003127:	90                   	nop
 1003128:	90                   	nop
 1003129:	90                   	nop
 100312a:	90                   	nop
 100312b:	90                   	nop
 100312c:	90                   	nop
 100312d:	90                   	nop
 100312e:	90                   	nop
 100312f:	90                   	nop
 1003130:	90                   	nop
 1003131:	90                   	nop
 1003132:	90                   	nop
 1003133:	90                   	nop
 1003134:	90                   	nop
 1003135:	90                   	nop
 1003136:	90                   	nop
 1003137:	90                   	nop
 1003138:	90                   	nop
 1003139:	90                   	nop
 100313a:	90                   	nop
 100313b:	90                   	nop
 100313c:	90                   	nop
 100313d:	90                   	nop
 100313e:	90                   	nop
 100313f:	90                   	nop
 1003140:	90                   	nop
 1003141:	90                   	nop
 1003142:	90                   	nop
 1003143:	90                   	nop
 1003144:	90                   	nop
 1003145:	90                   	nop
 1003146:	90                   	nop
 1003147:	90                   	nop
 1003148:	90                   	nop
 1003149:	90                   	nop
 100314a:	90                   	nop
 100314b:	90                   	nop
 100314c:	90                   	nop
 100314d:	90                   	nop
 100314e:	90                   	nop
 100314f:	90                   	nop
 1003150:	90                   	nop
 1003151:	90                   	nop
 1003152:	90                   	nop
 1003153:	90                   	nop
 1003154:	90                   	nop
 1003155:	90                   	nop
 1003156:	90                   	nop
 1003157:	90                   	nop
 1003158:	90                   	nop
 1003159:	90                   	nop
 100315a:	90                   	nop
 100315b:	90                   	nop
 100315c:	90                   	nop
 100315d:	90                   	nop
 100315e:	90                   	nop
 100315f:	90                   	nop
 1003160:	90                   	nop
 1003161:	90                   	nop
 1003162:	90                   	nop
 1003163:	90                   	nop
 1003164:	90                   	nop
 1003165:	90                   	nop
 1003166:	90                   	nop
 1003167:	90                   	nop
 1003168:	90                   	nop
 1003169:	90                   	nop
 100316a:	90                   	nop
 100316b:	90                   	nop
 100316c:	90                   	nop
 100316d:	90                   	nop
 100316e:	90                   	nop
 100316f:	90                   	nop
 1003170:	90                   	nop
 1003171:	90                   	nop
 1003172:	90                   	nop
 1003173:	90                   	nop
 1003174:	90                   	nop
 1003175:	90                   	nop
 1003176:	90                   	nop
 1003177:	90                   	nop
 1003178:	90                   	nop
 1003179:	90                   	nop
 100317a:	90                   	nop
 100317b:	90                   	nop
 100317c:	90                   	nop
 100317d:	90                   	nop
 100317e:	90                   	nop
 100317f:	90                   	nop
 1003180:	90                   	nop
 1003181:	90                   	nop
 1003182:	90                   	nop
 1003183:	90                   	nop
 1003184:	90                   	nop
 1003185:	90                   	nop
 1003186:	90                   	nop
 1003187:	90                   	nop
 1003188:	90                   	nop
 1003189:	90                   	nop
 100318a:	90                   	nop
 100318b:	90                   	nop
 100318c:	90                   	nop
 100318d:	90                   	nop
 100318e:	90                   	nop
 100318f:	90                   	nop
 1003190:	90                   	nop
 1003191:	90                   	nop
 1003192:	90                   	nop
 1003193:	90                   	nop
 1003194:	90                   	nop
 1003195:	90                   	nop
 1003196:	90                   	nop
 1003197:	90                   	nop
 1003198:	90                   	nop
 1003199:	90                   	nop
 100319a:	90                   	nop
 100319b:	90                   	nop
 100319c:	90                   	nop
 100319d:	90                   	nop
 100319e:	90                   	nop
 100319f:	90                   	nop
 10031a0:	90                   	nop
 10031a1:	90                   	nop
 10031a2:	90                   	nop
 10031a3:	90                   	nop
 10031a4:	90                   	nop
 10031a5:	90                   	nop
 10031a6:	90                   	nop
 10031a7:	90                   	nop
 10031a8:	90                   	nop
 10031a9:	90                   	nop
 10031aa:	90                   	nop
 10031ab:	90                   	nop
 10031ac:	90                   	nop
 10031ad:	90                   	nop
 10031ae:	90                   	nop
 10031af:	90                   	nop
 10031b0:	90                   	nop
 10031b1:	90                   	nop
 10031b2:	90                   	nop
 10031b3:	90                   	nop
 10031b4:	90                   	nop
 10031b5:	90                   	nop
 10031b6:	90                   	nop
 10031b7:	90                   	nop
 10031b8:	90                   	nop
 10031b9:	90                   	nop
 10031ba:	90                   	nop
 10031bb:	90                   	nop
 10031bc:	90                   	nop
 10031bd:	90                   	nop
 10031be:	90                   	nop
 10031bf:	90                   	nop
 10031c0:	90                   	nop
 10031c1:	90                   	nop
 10031c2:	90                   	nop
 10031c3:	90                   	nop
 10031c4:	90                   	nop
 10031c5:	90                   	nop
 10031c6:	90                   	nop
 10031c7:	90                   	nop
 10031c8:	90                   	nop
 10031c9:	90                   	nop
 10031ca:	90                   	nop
 10031cb:	90                   	nop
 10031cc:	90                   	nop
 10031cd:	90                   	nop
 10031ce:	90                   	nop
 10031cf:	90                   	nop
 10031d0:	90                   	nop
 10031d1:	90                   	nop
 10031d2:	90                   	nop
 10031d3:	90                   	nop
 10031d4:	90                   	nop
 10031d5:	90                   	nop
 10031d6:	90                   	nop
 10031d7:	90                   	nop
 10031d8:	90                   	nop
 10031d9:	90                   	nop
 10031da:	90                   	nop
 10031db:	90                   	nop
 10031dc:	90                   	nop
 10031dd:	90                   	nop
 10031de:	90                   	nop
 10031df:	90                   	nop
 10031e0:	90                   	nop
 10031e1:	90                   	nop
 10031e2:	90                   	nop
 10031e3:	90                   	nop
 10031e4:	90                   	nop
 10031e5:	90                   	nop
 10031e6:	90                   	nop
 10031e7:	90                   	nop
 10031e8:	90                   	nop
 10031e9:	90                   	nop
 10031ea:	90                   	nop
 10031eb:	90                   	nop
 10031ec:	90                   	nop
 10031ed:	90                   	nop
 10031ee:	90                   	nop
 10031ef:	90                   	nop
 10031f0:	90                   	nop
 10031f1:	90                   	nop
 10031f2:	90                   	nop
 10031f3:	90                   	nop
 10031f4:	90                   	nop
 10031f5:	90                   	nop
 10031f6:	90                   	nop
 10031f7:	90                   	nop
 10031f8:	90                   	nop
 10031f9:	90                   	nop
 10031fa:	90                   	nop
 10031fb:	90                   	nop
 10031fc:	90                   	nop
 10031fd:	90                   	nop
 10031fe:	90                   	nop
 10031ff:	90                   	nop
 1003200:	90                   	nop
 1003201:	90                   	nop
 1003202:	90                   	nop
 1003203:	90                   	nop
 1003204:	90                   	nop
 1003205:	90                   	nop
 1003206:	90                   	nop
 1003207:	90                   	nop
 1003208:	90                   	nop
 1003209:	90                   	nop
 100320a:	90                   	nop
 100320b:	90                   	nop
 100320c:	90                   	nop
 100320d:	90                   	nop
 100320e:	90                   	nop
 100320f:	90                   	nop
 1003210:	90                   	nop
 1003211:	90                   	nop
 1003212:	90                   	nop
 1003213:	90                   	nop
 1003214:	90                   	nop
 1003215:	90                   	nop
 1003216:	90                   	nop
 1003217:	90                   	nop
 1003218:	90                   	nop
 1003219:	90                   	nop
 100321a:	90                   	nop
 100321b:	90                   	nop
 100321c:	90                   	nop
 100321d:	90                   	nop
 100321e:	90                   	nop
 100321f:	90                   	nop
 1003220:	90                   	nop
 1003221:	90                   	nop
 1003222:	90                   	nop
 1003223:	90                   	nop
 1003224:	90                   	nop
 1003225:	90                   	nop
 1003226:	90                   	nop
 1003227:	90                   	nop
 1003228:	90                   	nop
 1003229:	90                   	nop
 100322a:	90                   	nop
 100322b:	90                   	nop
 100322c:	90                   	nop
 100322d:	90                   	nop
 100322e:	90                   	nop
 100322f:	90                   	nop
 1003230:	90                   	nop
 1003231:	90                   	nop
 1003232:	90                   	nop
 1003233:	90                   	nop
 1003234:	90                   	nop
 1003235:	90                   	nop
 1003236:	90                   	nop
 1003237:	90                   	nop
 1003238:	90                   	nop
 1003239:	90                   	nop
 100323a:	90                   	nop
 100323b:	90                   	nop
 100323c:	90                   	nop
 100323d:	90                   	nop
 100323e:	90                   	nop
 100323f:	90                   	nop
 1003240:	90                   	nop
 1003241:	90                   	nop
 1003242:	90                   	nop
 1003243:	90                   	nop
 1003244:	90                   	nop
 1003245:	90                   	nop
 1003246:	90                   	nop
 1003247:	90                   	nop
 1003248:	90                   	nop
 1003249:	90                   	nop
 100324a:	90                   	nop
 100324b:	90                   	nop
 100324c:	90                   	nop
 100324d:	90                   	nop
 100324e:	90                   	nop
 100324f:	90                   	nop
 1003250:	90                   	nop
 1003251:	90                   	nop
 1003252:	90                   	nop
 1003253:	90                   	nop
 1003254:	90                   	nop
 1003255:	90                   	nop
 1003256:	90                   	nop
 1003257:	90                   	nop
 1003258:	90                   	nop
 1003259:	90                   	nop
 100325a:	90                   	nop
 100325b:	90                   	nop
 100325c:	90                   	nop
 100325d:	90                   	nop
 100325e:	90                   	nop
 100325f:	90                   	nop
 1003260:	90                   	nop
 1003261:	90                   	nop
 1003262:	90                   	nop
 1003263:	90                   	nop
 1003264:	90                   	nop
 1003265:	90                   	nop
 1003266:	90                   	nop
 1003267:	90                   	nop
 1003268:	90                   	nop
 1003269:	90                   	nop
 100326a:	90                   	nop
 100326b:	90                   	nop
 100326c:	90                   	nop
 100326d:	90                   	nop
 100326e:	90                   	nop
 100326f:	90                   	nop
 1003270:	90                   	nop
 1003271:	90                   	nop
 1003272:	90                   	nop
 1003273:	90                   	nop
 1003274:	90                   	nop
 1003275:	90                   	nop
 1003276:	90                   	nop
 1003277:	90                   	nop
 1003278:	90                   	nop
 1003279:	90                   	nop
 100327a:	90                   	nop
 100327b:	90                   	nop
 100327c:	90                   	nop
 100327d:	90                   	nop
 100327e:	90                   	nop
 100327f:	90                   	nop
 1003280:	90                   	nop
 1003281:	90                   	nop
 1003282:	90                   	nop
 1003283:	90                   	nop
 1003284:	90                   	nop
 1003285:	90                   	nop
 1003286:	90                   	nop
 1003287:	90                   	nop
 1003288:	90                   	nop
 1003289:	90                   	nop
 100328a:	90                   	nop
 100328b:	90                   	nop
 100328c:	90                   	nop
 100328d:	90                   	nop
 100328e:	90                   	nop
 100328f:	90                   	nop
 1003290:	90                   	nop
 1003291:	90                   	nop
 1003292:	90                   	nop
 1003293:	90                   	nop
 1003294:	90                   	nop
 1003295:	90                   	nop
 1003296:	90                   	nop
 1003297:	90                   	nop
 1003298:	90                   	nop
 1003299:	90                   	nop
 100329a:	90                   	nop
 100329b:	90                   	nop
 100329c:	90                   	nop
 100329d:	90                   	nop
 100329e:	90                   	nop
 100329f:	90                   	nop
 10032a0:	90                   	nop
 10032a1:	90                   	nop
 10032a2:	90                   	nop
 10032a3:	90                   	nop
 10032a4:	90                   	nop
 10032a5:	90                   	nop
 10032a6:	90                   	nop
 10032a7:	90                   	nop
 10032a8:	90                   	nop
 10032a9:	90                   	nop
 10032aa:	90                   	nop
 10032ab:	90                   	nop
 10032ac:	90                   	nop
 10032ad:	90                   	nop
 10032ae:	90                   	nop
 10032af:	90                   	nop
 10032b0:	90                   	nop
 10032b1:	90                   	nop
 10032b2:	90                   	nop
 10032b3:	90                   	nop
 10032b4:	90                   	nop
 10032b5:	90                   	nop
 10032b6:	90                   	nop
 10032b7:	90                   	nop
 10032b8:	90                   	nop
 10032b9:	90                   	nop
 10032ba:	90                   	nop
 10032bb:	90                   	nop
 10032bc:	90                   	nop
 10032bd:	90                   	nop
 10032be:	90                   	nop
 10032bf:	90                   	nop
 10032c0:	90                   	nop
 10032c1:	90                   	nop
 10032c2:	90                   	nop
 10032c3:	90                   	nop
 10032c4:	90                   	nop
 10032c5:	90                   	nop
 10032c6:	90                   	nop
 10032c7:	90                   	nop
 10032c8:	90                   	nop
 10032c9:	90                   	nop
 10032ca:	90                   	nop
 10032cb:	90                   	nop
 10032cc:	90                   	nop
 10032cd:	90                   	nop
 10032ce:	90                   	nop
 10032cf:	90                   	nop
 10032d0:	90                   	nop
 10032d1:	90                   	nop
 10032d2:	90                   	nop
 10032d3:	90                   	nop
 10032d4:	90                   	nop
 10032d5:	90                   	nop
 10032d6:	90                   	nop
 10032d7:	90                   	nop
 10032d8:	90                   	nop
 10032d9:	90                   	nop
 10032da:	90                   	nop
 10032db:	90                   	nop
 10032dc:	90                   	nop
 10032dd:	90                   	nop
 10032de:	90                   	nop
 10032df:	90                   	nop
 10032e0:	90                   	nop
 10032e1:	90                   	nop
 10032e2:	90                   	nop
 10032e3:	90                   	nop
 10032e4:	90                   	nop
 10032e5:	90                   	nop
 10032e6:	90                   	nop
 10032e7:	90                   	nop
 10032e8:	90                   	nop
 10032e9:	90                   	nop
 10032ea:	90                   	nop
 10032eb:	90                   	nop
 10032ec:	90                   	nop
 10032ed:	90                   	nop
 10032ee:	90                   	nop
 10032ef:	90                   	nop
 10032f0:	90                   	nop
 10032f1:	90                   	nop
 10032f2:	90                   	nop
 10032f3:	90                   	nop
 10032f4:	90                   	nop
 10032f5:	90                   	nop
 10032f6:	90                   	nop
 10032f7:	90                   	nop
 10032f8:	90                   	nop
 10032f9:	90                   	nop
 10032fa:	90                   	nop
 10032fb:	90                   	nop
 10032fc:	90                   	nop
 10032fd:	90                   	nop
 10032fe:	90                   	nop
 10032ff:	90                   	nop
 1003300:	90                   	nop
 1003301:	90                   	nop
 1003302:	90                   	nop
 1003303:	90                   	nop
 1003304:	90                   	nop
 1003305:	90                   	nop
 1003306:	90                   	nop
 1003307:	90                   	nop
 1003308:	90                   	nop
 1003309:	90                   	nop
 100330a:	90                   	nop
 100330b:	90                   	nop
 100330c:	90                   	nop
 100330d:	90                   	nop
 100330e:	90                   	nop
 100330f:	90                   	nop
 1003310:	90                   	nop
 1003311:	90                   	nop
 1003312:	90                   	nop
 1003313:	90                   	nop
 1003314:	90                   	nop
 1003315:	90                   	nop
 1003316:	90                   	nop
 1003317:	90                   	nop
 1003318:	90                   	nop
 1003319:	90                   	nop
 100331a:	90                   	nop
 100331b:	90                   	nop
 100331c:	90                   	nop
 100331d:	90                   	nop
 100331e:	90                   	nop
 100331f:	90                   	nop
 1003320:	90                   	nop
 1003321:	90                   	nop
 1003322:	90                   	nop
 1003323:	90                   	nop
 1003324:	90                   	nop
 1003325:	90                   	nop
 1003326:	90                   	nop
 1003327:	90                   	nop
 1003328:	90                   	nop
 1003329:	90                   	nop
 100332a:	90                   	nop
 100332b:	90                   	nop
 100332c:	90                   	nop
 100332d:	90                   	nop
 100332e:	90                   	nop
 100332f:	90                   	nop
 1003330:	90                   	nop
 1003331:	90                   	nop
 1003332:	90                   	nop
 1003333:	90                   	nop
 1003334:	90                   	nop
 1003335:	90                   	nop
 1003336:	90                   	nop
 1003337:	90                   	nop
 1003338:	90                   	nop
 1003339:	90                   	nop
 100333a:	90                   	nop
 100333b:	90                   	nop
 100333c:	90                   	nop
 100333d:	90                   	nop
 100333e:	90                   	nop
 100333f:	90                   	nop
 1003340:	90                   	nop
 1003341:	90                   	nop
 1003342:	90                   	nop
 1003343:	90                   	nop
 1003344:	90                   	nop
 1003345:	90                   	nop
 1003346:	90                   	nop
 1003347:	90                   	nop
 1003348:	90                   	nop
 1003349:	90                   	nop
 100334a:	90                   	nop
 100334b:	90                   	nop
 100334c:	90                   	nop
 100334d:	90                   	nop
 100334e:	90                   	nop
 100334f:	90                   	nop
 1003350:	90                   	nop
 1003351:	90                   	nop
 1003352:	90                   	nop
 1003353:	90                   	nop
 1003354:	90                   	nop
 1003355:	90                   	nop
 1003356:	90                   	nop
 1003357:	90                   	nop
 1003358:	90                   	nop
 1003359:	90                   	nop
 100335a:	90                   	nop
 100335b:	90                   	nop
 100335c:	90                   	nop
 100335d:	90                   	nop
 100335e:	90                   	nop
 100335f:	90                   	nop
 1003360:	90                   	nop
 1003361:	90                   	nop
 1003362:	90                   	nop
 1003363:	90                   	nop
 1003364:	90                   	nop
 1003365:	90                   	nop
 1003366:	90                   	nop
 1003367:	90                   	nop
 1003368:	90                   	nop
 1003369:	90                   	nop
 100336a:	90                   	nop
 100336b:	90                   	nop
 100336c:	90                   	nop
 100336d:	90                   	nop
 100336e:	90                   	nop
 100336f:	90                   	nop
 1003370:	90                   	nop
 1003371:	90                   	nop
 1003372:	90                   	nop
 1003373:	90                   	nop
 1003374:	90                   	nop
 1003375:	90                   	nop
 1003376:	90                   	nop
 1003377:	90                   	nop
 1003378:	90                   	nop
 1003379:	90                   	nop
 100337a:	90                   	nop
 100337b:	90                   	nop
 100337c:	90                   	nop
 100337d:	90                   	nop
 100337e:	90                   	nop
 100337f:	90                   	nop
 1003380:	90                   	nop
 1003381:	90                   	nop
 1003382:	90                   	nop
 1003383:	90                   	nop
 1003384:	90                   	nop
 1003385:	90                   	nop
 1003386:	90                   	nop
 1003387:	90                   	nop
 1003388:	90                   	nop
 1003389:	90                   	nop
 100338a:	90                   	nop
 100338b:	90                   	nop
 100338c:	90                   	nop
 100338d:	90                   	nop
 100338e:	90                   	nop
 100338f:	90                   	nop
 1003390:	90                   	nop
 1003391:	90                   	nop
 1003392:	90                   	nop
 1003393:	90                   	nop
 1003394:	90                   	nop
 1003395:	90                   	nop
 1003396:	90                   	nop
 1003397:	90                   	nop
 1003398:	90                   	nop
 1003399:	90                   	nop
 100339a:	90                   	nop
 100339b:	90                   	nop
 100339c:	90                   	nop
 100339d:	90                   	nop
 100339e:	90                   	nop
 100339f:	90                   	nop
 10033a0:	90                   	nop
 10033a1:	90                   	nop
 10033a2:	90                   	nop
 10033a3:	90                   	nop
 10033a4:	90                   	nop
 10033a5:	90                   	nop
 10033a6:	90                   	nop
 10033a7:	90                   	nop
 10033a8:	90                   	nop
 10033a9:	90                   	nop
 10033aa:	90                   	nop
 10033ab:	90                   	nop
 10033ac:	90                   	nop
 10033ad:	90                   	nop
 10033ae:	90                   	nop
 10033af:	90                   	nop
 10033b0:	90                   	nop
 10033b1:	90                   	nop
 10033b2:	90                   	nop
 10033b3:	90                   	nop
 10033b4:	90                   	nop
 10033b5:	90                   	nop
 10033b6:	90                   	nop
 10033b7:	90                   	nop
 10033b8:	90                   	nop
 10033b9:	90                   	nop
 10033ba:	90                   	nop
 10033bb:	90                   	nop
 10033bc:	90                   	nop
 10033bd:	90                   	nop
 10033be:	90                   	nop
 10033bf:	90                   	nop
 10033c0:	90                   	nop
 10033c1:	90                   	nop
 10033c2:	90                   	nop
 10033c3:	90                   	nop
 10033c4:	90                   	nop
 10033c5:	90                   	nop
 10033c6:	90                   	nop
 10033c7:	90                   	nop
 10033c8:	90                   	nop
 10033c9:	90                   	nop
 10033ca:	90                   	nop
 10033cb:	90                   	nop
 10033cc:	90                   	nop
 10033cd:	90                   	nop
 10033ce:	90                   	nop
 10033cf:	90                   	nop
 10033d0:	90                   	nop
 10033d1:	90                   	nop
 10033d2:	90                   	nop
 10033d3:	90                   	nop
 10033d4:	90                   	nop
 10033d5:	90                   	nop
 10033d6:	90                   	nop
 10033d7:	90                   	nop
 10033d8:	90                   	nop
 10033d9:	90                   	nop
 10033da:	90                   	nop
 10033db:	90                   	nop
 10033dc:	90                   	nop
 10033dd:	90                   	nop
 10033de:	90                   	nop
 10033df:	90                   	nop
 10033e0:	90                   	nop
 10033e1:	90                   	nop
 10033e2:	90                   	nop
 10033e3:	90                   	nop
 10033e4:	90                   	nop
 10033e5:	90                   	nop
 10033e6:	90                   	nop
 10033e7:	90                   	nop
 10033e8:	90                   	nop
 10033e9:	90                   	nop
 10033ea:	90                   	nop
 10033eb:	90                   	nop
 10033ec:	90                   	nop
 10033ed:	90                   	nop
 10033ee:	90                   	nop
 10033ef:	90                   	nop
 10033f0:	90                   	nop
 10033f1:	90                   	nop
 10033f2:	90                   	nop
 10033f3:	90                   	nop
 10033f4:	90                   	nop
 10033f5:	90                   	nop
 10033f6:	90                   	nop
 10033f7:	90                   	nop
 10033f8:	90                   	nop
 10033f9:	90                   	nop
 10033fa:	90                   	nop
 10033fb:	90                   	nop
 10033fc:	90                   	nop
 10033fd:	90                   	nop
 10033fe:	90                   	nop
 10033ff:	90                   	nop
 1003400:	90                   	nop
 1003401:	90                   	nop
 1003402:	90                   	nop
 1003403:	90                   	nop
 1003404:	90                   	nop
 1003405:	90                   	nop
 1003406:	90                   	nop
 1003407:	90                   	nop
 1003408:	90                   	nop
 1003409:	90                   	nop
 100340a:	90                   	nop
 100340b:	90                   	nop
 100340c:	90                   	nop
 100340d:	90                   	nop
 100340e:	90                   	nop
 100340f:	90                   	nop
 1003410:	90                   	nop
 1003411:	90                   	nop
 1003412:	90                   	nop
 1003413:	90                   	nop
 1003414:	90                   	nop
 1003415:	90                   	nop
 1003416:	90                   	nop
 1003417:	90                   	nop
 1003418:	90                   	nop
 1003419:	90                   	nop
 100341a:	90                   	nop
 100341b:	90                   	nop
 100341c:	90                   	nop
 100341d:	90                   	nop
 100341e:	90                   	nop
 100341f:	90                   	nop
 1003420:	90                   	nop
 1003421:	90                   	nop
 1003422:	90                   	nop
 1003423:	90                   	nop
 1003424:	90                   	nop
 1003425:	90                   	nop
 1003426:	90                   	nop
 1003427:	90                   	nop
 1003428:	90                   	nop
 1003429:	90                   	nop
 100342a:	90                   	nop
 100342b:	90                   	nop
 100342c:	90                   	nop
 100342d:	90                   	nop
 100342e:	90                   	nop
 100342f:	90                   	nop
 1003430:	90                   	nop
 1003431:	90                   	nop
 1003432:	90                   	nop
 1003433:	90                   	nop
 1003434:	90                   	nop
 1003435:	90                   	nop
 1003436:	90                   	nop
 1003437:	90                   	nop
 1003438:	90                   	nop
 1003439:	90                   	nop
 100343a:	90                   	nop
 100343b:	90                   	nop
 100343c:	90                   	nop
 100343d:	90                   	nop
 100343e:	90                   	nop
 100343f:	90                   	nop
 1003440:	90                   	nop
 1003441:	90                   	nop
 1003442:	90                   	nop
 1003443:	90                   	nop
 1003444:	90                   	nop
 1003445:	90                   	nop
 1003446:	90                   	nop
 1003447:	90                   	nop
 1003448:	90                   	nop
 1003449:	90                   	nop
 100344a:	90                   	nop
 100344b:	90                   	nop
 100344c:	90                   	nop
 100344d:	90                   	nop
 100344e:	90                   	nop
 100344f:	90                   	nop
 1003450:	90                   	nop
 1003451:	90                   	nop
 1003452:	90                   	nop
 1003453:	90                   	nop
 1003454:	90                   	nop
 1003455:	90                   	nop
 1003456:	90                   	nop
 1003457:	90                   	nop
 1003458:	90                   	nop
 1003459:	90                   	nop
 100345a:	90                   	nop
 100345b:	90                   	nop
 100345c:	90                   	nop
 100345d:	90                   	nop
 100345e:	90                   	nop
 100345f:	90                   	nop
 1003460:	90                   	nop
 1003461:	90                   	nop
 1003462:	90                   	nop
 1003463:	90                   	nop
 1003464:	90                   	nop
 1003465:	90                   	nop
 1003466:	90                   	nop
 1003467:	90                   	nop
 1003468:	90                   	nop
 1003469:	90                   	nop
 100346a:	90                   	nop
 100346b:	90                   	nop
 100346c:	90                   	nop
 100346d:	90                   	nop
 100346e:	90                   	nop
 100346f:	90                   	nop
 1003470:	90                   	nop
 1003471:	90                   	nop
 1003472:	90                   	nop
 1003473:	90                   	nop
 1003474:	90                   	nop
 1003475:	90                   	nop
 1003476:	90                   	nop
 1003477:	90                   	nop
 1003478:	90                   	nop
 1003479:	90                   	nop
 100347a:	90                   	nop
 100347b:	90                   	nop
 100347c:	90                   	nop
 100347d:	90                   	nop
 100347e:	90                   	nop
 100347f:	90                   	nop
 1003480:	90                   	nop
 1003481:	90                   	nop
 1003482:	90                   	nop
 1003483:	90                   	nop
 1003484:	90                   	nop
 1003485:	90                   	nop
 1003486:	90                   	nop
 1003487:	90                   	nop
 1003488:	90                   	nop
 1003489:	90                   	nop
 100348a:	90                   	nop
 100348b:	90                   	nop
 100348c:	90                   	nop
 100348d:	90                   	nop
 100348e:	90                   	nop
 100348f:	90                   	nop
 1003490:	90                   	nop
 1003491:	90                   	nop
 1003492:	90                   	nop
 1003493:	90                   	nop
 1003494:	90                   	nop
 1003495:	90                   	nop
 1003496:	90                   	nop
 1003497:	90                   	nop
 1003498:	90                   	nop
 1003499:	90                   	nop
 100349a:	90                   	nop
 100349b:	90                   	nop
 100349c:	90                   	nop
 100349d:	90                   	nop
 100349e:	90                   	nop
 100349f:	90                   	nop
 10034a0:	90                   	nop
 10034a1:	90                   	nop
 10034a2:	90                   	nop
 10034a3:	90                   	nop
 10034a4:	90                   	nop
 10034a5:	90                   	nop
 10034a6:	90                   	nop
 10034a7:	90                   	nop
 10034a8:	90                   	nop
 10034a9:	90                   	nop
 10034aa:	90                   	nop
 10034ab:	90                   	nop
 10034ac:	90                   	nop
 10034ad:	90                   	nop
 10034ae:	90                   	nop
 10034af:	90                   	nop
 10034b0:	90                   	nop
 10034b1:	90                   	nop
 10034b2:	90                   	nop
 10034b3:	90                   	nop
 10034b4:	90                   	nop
 10034b5:	90                   	nop
 10034b6:	90                   	nop
 10034b7:	90                   	nop
 10034b8:	90                   	nop
 10034b9:	90                   	nop
 10034ba:	90                   	nop
 10034bb:	90                   	nop
 10034bc:	90                   	nop
 10034bd:	90                   	nop
 10034be:	90                   	nop
 10034bf:	90                   	nop
 10034c0:	90                   	nop
 10034c1:	90                   	nop
 10034c2:	90                   	nop
 10034c3:	90                   	nop
 10034c4:	90                   	nop
 10034c5:	90                   	nop
 10034c6:	90                   	nop
 10034c7:	90                   	nop
 10034c8:	90                   	nop
 10034c9:	90                   	nop
 10034ca:	90                   	nop
 10034cb:	90                   	nop
 10034cc:	90                   	nop
 10034cd:	90                   	nop
 10034ce:	90                   	nop
 10034cf:	90                   	nop
 10034d0:	90                   	nop
 10034d1:	90                   	nop
 10034d2:	90                   	nop
 10034d3:	90                   	nop
 10034d4:	90                   	nop
 10034d5:	90                   	nop
 10034d6:	90                   	nop
 10034d7:	90                   	nop
 10034d8:	90                   	nop
 10034d9:	90                   	nop
 10034da:	90                   	nop
 10034db:	90                   	nop
 10034dc:	90                   	nop
 10034dd:	90                   	nop
 10034de:	90                   	nop
 10034df:	90                   	nop
 10034e0:	90                   	nop
 10034e1:	90                   	nop
 10034e2:	90                   	nop
 10034e3:	90                   	nop
 10034e4:	90                   	nop
 10034e5:	90                   	nop
 10034e6:	90                   	nop
 10034e7:	90                   	nop
 10034e8:	90                   	nop
 10034e9:	90                   	nop
 10034ea:	90                   	nop
 10034eb:	90                   	nop
 10034ec:	90                   	nop
 10034ed:	90                   	nop
 10034ee:	90                   	nop
 10034ef:	90                   	nop
 10034f0:	90                   	nop
 10034f1:	90                   	nop
 10034f2:	90                   	nop
 10034f3:	90                   	nop
 10034f4:	90                   	nop
 10034f5:	90                   	nop
 10034f6:	90                   	nop
 10034f7:	90                   	nop
 10034f8:	90                   	nop
 10034f9:	90                   	nop
 10034fa:	90                   	nop
 10034fb:	90                   	nop
 10034fc:	90                   	nop
 10034fd:	90                   	nop
 10034fe:	90                   	nop
 10034ff:	90                   	nop
 1003500:	90                   	nop
 1003501:	90                   	nop
 1003502:	90                   	nop
 1003503:	90                   	nop
 1003504:	90                   	nop
 1003505:	90                   	nop
 1003506:	90                   	nop
 1003507:	90                   	nop
 1003508:	90                   	nop
 1003509:	90                   	nop
 100350a:	90                   	nop
 100350b:	90                   	nop
 100350c:	90                   	nop
 100350d:	90                   	nop
 100350e:	90                   	nop
 100350f:	90                   	nop
 1003510:	90                   	nop
 1003511:	90                   	nop
 1003512:	90                   	nop
 1003513:	90                   	nop
 1003514:	90                   	nop
 1003515:	90                   	nop
 1003516:	90                   	nop
 1003517:	90                   	nop
 1003518:	90                   	nop
 1003519:	90                   	nop
 100351a:	90                   	nop
 100351b:	90                   	nop
 100351c:	90                   	nop
 100351d:	90                   	nop
 100351e:	90                   	nop
 100351f:	90                   	nop
 1003520:	90                   	nop
 1003521:	90                   	nop
 1003522:	90                   	nop
 1003523:	90                   	nop
 1003524:	90                   	nop
 1003525:	90                   	nop
 1003526:	90                   	nop
 1003527:	90                   	nop
 1003528:	90                   	nop
 1003529:	90                   	nop
 100352a:	90                   	nop
 100352b:	90                   	nop
 100352c:	90                   	nop
 100352d:	90                   	nop
 100352e:	90                   	nop
 100352f:	90                   	nop
 1003530:	90                   	nop
 1003531:	90                   	nop
 1003532:	90                   	nop
 1003533:	90                   	nop
 1003534:	90                   	nop
 1003535:	90                   	nop
 1003536:	90                   	nop
 1003537:	90                   	nop
 1003538:	90                   	nop
 1003539:	90                   	nop
 100353a:	90                   	nop
 100353b:	90                   	nop
 100353c:	90                   	nop
 100353d:	90                   	nop
 100353e:	90                   	nop
 100353f:	90                   	nop
 1003540:	90                   	nop
 1003541:	90                   	nop
 1003542:	90                   	nop
 1003543:	90                   	nop
 1003544:	90                   	nop
 1003545:	90                   	nop
 1003546:	90                   	nop
 1003547:	90                   	nop
 1003548:	90                   	nop
 1003549:	90                   	nop
 100354a:	90                   	nop
 100354b:	90                   	nop
 100354c:	90                   	nop
 100354d:	90                   	nop
 100354e:	90                   	nop
 100354f:	90                   	nop
 1003550:	90                   	nop
 1003551:	90                   	nop
 1003552:	90                   	nop
 1003553:	90                   	nop
 1003554:	90                   	nop
 1003555:	90                   	nop
 1003556:	90                   	nop
 1003557:	90                   	nop
 1003558:	90                   	nop
 1003559:	90                   	nop
 100355a:	90                   	nop
 100355b:	90                   	nop
 100355c:	90                   	nop
 100355d:	90                   	nop
 100355e:	90                   	nop
 100355f:	90                   	nop
 1003560:	90                   	nop
 1003561:	90                   	nop
 1003562:	90                   	nop
 1003563:	90                   	nop
 1003564:	90                   	nop
 1003565:	90                   	nop
 1003566:	90                   	nop
 1003567:	90                   	nop
 1003568:	90                   	nop
 1003569:	90                   	nop
 100356a:	90                   	nop
 100356b:	90                   	nop
 100356c:	90                   	nop
 100356d:	90                   	nop
 100356e:	90                   	nop
 100356f:	90                   	nop
 1003570:	90                   	nop
 1003571:	90                   	nop
 1003572:	90                   	nop
 1003573:	90                   	nop
 1003574:	90                   	nop
 1003575:	90                   	nop
 1003576:	90                   	nop
 1003577:	90                   	nop
 1003578:	90                   	nop
 1003579:	90                   	nop
 100357a:	90                   	nop
 100357b:	90                   	nop
 100357c:	90                   	nop
 100357d:	90                   	nop
 100357e:	90                   	nop
 100357f:	90                   	nop
 1003580:	90                   	nop
 1003581:	90                   	nop
 1003582:	90                   	nop
 1003583:	90                   	nop
 1003584:	90                   	nop
 1003585:	90                   	nop
 1003586:	90                   	nop
 1003587:	90                   	nop
 1003588:	90                   	nop
 1003589:	90                   	nop
 100358a:	90                   	nop
 100358b:	90                   	nop
 100358c:	90                   	nop
 100358d:	90                   	nop
 100358e:	90                   	nop
 100358f:	90                   	nop
 1003590:	90                   	nop
 1003591:	90                   	nop
 1003592:	90                   	nop
 1003593:	90                   	nop
 1003594:	90                   	nop
 1003595:	90                   	nop
 1003596:	90                   	nop
 1003597:	90                   	nop
 1003598:	90                   	nop
 1003599:	90                   	nop
 100359a:	90                   	nop
 100359b:	90                   	nop
 100359c:	90                   	nop
 100359d:	90                   	nop
 100359e:	90                   	nop
 100359f:	90                   	nop
 10035a0:	90                   	nop
 10035a1:	90                   	nop
 10035a2:	90                   	nop
 10035a3:	90                   	nop
 10035a4:	90                   	nop
 10035a5:	90                   	nop
 10035a6:	90                   	nop
 10035a7:	90                   	nop
 10035a8:	90                   	nop
 10035a9:	90                   	nop
 10035aa:	90                   	nop
 10035ab:	90                   	nop
 10035ac:	90                   	nop
 10035ad:	90                   	nop
 10035ae:	90                   	nop
 10035af:	90                   	nop
 10035b0:	90                   	nop
 10035b1:	90                   	nop
 10035b2:	90                   	nop
 10035b3:	90                   	nop
 10035b4:	90                   	nop
 10035b5:	90                   	nop
 10035b6:	90                   	nop
 10035b7:	90                   	nop
 10035b8:	90                   	nop
 10035b9:	90                   	nop
 10035ba:	90                   	nop
 10035bb:	90                   	nop
 10035bc:	90                   	nop
 10035bd:	90                   	nop
 10035be:	90                   	nop
 10035bf:	90                   	nop
 10035c0:	90                   	nop
 10035c1:	90                   	nop
 10035c2:	90                   	nop
 10035c3:	90                   	nop
 10035c4:	90                   	nop
 10035c5:	90                   	nop
 10035c6:	90                   	nop
 10035c7:	90                   	nop
 10035c8:	90                   	nop
 10035c9:	90                   	nop
 10035ca:	90                   	nop
 10035cb:	90                   	nop
 10035cc:	90                   	nop
 10035cd:	90                   	nop
 10035ce:	90                   	nop
 10035cf:	90                   	nop
 10035d0:	90                   	nop
 10035d1:	90                   	nop
 10035d2:	90                   	nop
 10035d3:	90                   	nop
 10035d4:	90                   	nop
 10035d5:	90                   	nop
 10035d6:	90                   	nop
 10035d7:	90                   	nop
 10035d8:	90                   	nop
 10035d9:	90                   	nop
 10035da:	90                   	nop
 10035db:	90                   	nop
 10035dc:	90                   	nop
 10035dd:	90                   	nop
 10035de:	90                   	nop
 10035df:	90                   	nop
 10035e0:	90                   	nop
 10035e1:	90                   	nop
 10035e2:	90                   	nop
 10035e3:	90                   	nop
 10035e4:	90                   	nop
 10035e5:	90                   	nop
 10035e6:	90                   	nop
 10035e7:	90                   	nop
 10035e8:	90                   	nop
 10035e9:	90                   	nop
 10035ea:	90                   	nop
 10035eb:	90                   	nop
 10035ec:	90                   	nop
 10035ed:	90                   	nop
 10035ee:	90                   	nop
 10035ef:	90                   	nop
 10035f0:	90                   	nop
 10035f1:	90                   	nop
 10035f2:	90                   	nop
 10035f3:	90                   	nop
 10035f4:	90                   	nop
 10035f5:	90                   	nop
 10035f6:	90                   	nop
 10035f7:	90                   	nop
 10035f8:	90                   	nop
 10035f9:	90                   	nop
 10035fa:	90                   	nop
 10035fb:	90                   	nop
 10035fc:	90                   	nop
 10035fd:	90                   	nop
 10035fe:	90                   	nop
 10035ff:	90                   	nop
 1003600:	90                   	nop
 1003601:	90                   	nop
 1003602:	90                   	nop
 1003603:	90                   	nop
 1003604:	90                   	nop
 1003605:	90                   	nop
 1003606:	90                   	nop
 1003607:	90                   	nop
 1003608:	90                   	nop
 1003609:	90                   	nop
 100360a:	90                   	nop
 100360b:	90                   	nop
 100360c:	90                   	nop
 100360d:	90                   	nop
 100360e:	90                   	nop
 100360f:	90                   	nop
 1003610:	90                   	nop
 1003611:	90                   	nop
 1003612:	90                   	nop
 1003613:	90                   	nop
 1003614:	90                   	nop
 1003615:	90                   	nop
 1003616:	90                   	nop
 1003617:	90                   	nop
 1003618:	90                   	nop
 1003619:	90                   	nop
 100361a:	90                   	nop
 100361b:	90                   	nop
 100361c:	90                   	nop
 100361d:	90                   	nop
 100361e:	90                   	nop
 100361f:	90                   	nop
 1003620:	90                   	nop
 1003621:	90                   	nop
 1003622:	90                   	nop
 1003623:	90                   	nop
 1003624:	90                   	nop
 1003625:	90                   	nop
 1003626:	90                   	nop
 1003627:	90                   	nop
 1003628:	90                   	nop
 1003629:	90                   	nop
 100362a:	90                   	nop
 100362b:	90                   	nop
 100362c:	90                   	nop
 100362d:	90                   	nop
 100362e:	90                   	nop
 100362f:	90                   	nop
 1003630:	90                   	nop
 1003631:	90                   	nop
 1003632:	90                   	nop
 1003633:	90                   	nop
 1003634:	90                   	nop
 1003635:	90                   	nop
 1003636:	90                   	nop
 1003637:	90                   	nop
 1003638:	90                   	nop
 1003639:	90                   	nop
 100363a:	90                   	nop
 100363b:	90                   	nop
 100363c:	90                   	nop
 100363d:	90                   	nop
 100363e:	90                   	nop
 100363f:	90                   	nop
 1003640:	90                   	nop
 1003641:	90                   	nop
 1003642:	90                   	nop
 1003643:	90                   	nop
 1003644:	90                   	nop
 1003645:	90                   	nop
 1003646:	90                   	nop
 1003647:	90                   	nop
 1003648:	90                   	nop
 1003649:	90                   	nop
 100364a:	90                   	nop
 100364b:	90                   	nop
 100364c:	90                   	nop
 100364d:	90                   	nop
 100364e:	90                   	nop
 100364f:	90                   	nop
 1003650:	90                   	nop
 1003651:	90                   	nop
 1003652:	90                   	nop
 1003653:	90                   	nop
 1003654:	90                   	nop
 1003655:	90                   	nop
 1003656:	90                   	nop
 1003657:	90                   	nop
 1003658:	90                   	nop
 1003659:	90                   	nop
 100365a:	90                   	nop
 100365b:	90                   	nop
 100365c:	90                   	nop
 100365d:	90                   	nop
 100365e:	90                   	nop
 100365f:	90                   	nop
 1003660:	90                   	nop
 1003661:	90                   	nop
 1003662:	90                   	nop
 1003663:	90                   	nop
 1003664:	90                   	nop
 1003665:	90                   	nop
 1003666:	90                   	nop
 1003667:	90                   	nop
 1003668:	90                   	nop
 1003669:	90                   	nop
 100366a:	90                   	nop
 100366b:	90                   	nop
 100366c:	90                   	nop
 100366d:	90                   	nop
 100366e:	90                   	nop
 100366f:	90                   	nop
 1003670:	90                   	nop
 1003671:	90                   	nop
 1003672:	90                   	nop
 1003673:	90                   	nop
 1003674:	90                   	nop
 1003675:	90                   	nop
 1003676:	90                   	nop
 1003677:	90                   	nop
 1003678:	90                   	nop
 1003679:	90                   	nop
 100367a:	90                   	nop
 100367b:	90                   	nop
 100367c:	90                   	nop
 100367d:	90                   	nop
 100367e:	90                   	nop
 100367f:	90                   	nop
 1003680:	90                   	nop
 1003681:	90                   	nop
 1003682:	90                   	nop
 1003683:	90                   	nop
 1003684:	90                   	nop
 1003685:	90                   	nop
 1003686:	90                   	nop
 1003687:	90                   	nop
 1003688:	90                   	nop
 1003689:	90                   	nop
 100368a:	90                   	nop
 100368b:	90                   	nop
 100368c:	90                   	nop
 100368d:	90                   	nop
 100368e:	90                   	nop
 100368f:	90                   	nop
 1003690:	90                   	nop
 1003691:	90                   	nop
 1003692:	90                   	nop
 1003693:	90                   	nop
 1003694:	90                   	nop
 1003695:	90                   	nop
 1003696:	90                   	nop
 1003697:	90                   	nop
 1003698:	90                   	nop
 1003699:	90                   	nop
 100369a:	90                   	nop
 100369b:	90                   	nop
 100369c:	90                   	nop
 100369d:	90                   	nop
 100369e:	90                   	nop
 100369f:	90                   	nop
 10036a0:	90                   	nop
 10036a1:	90                   	nop
 10036a2:	90                   	nop
 10036a3:	90                   	nop
 10036a4:	90                   	nop
 10036a5:	90                   	nop
 10036a6:	90                   	nop
 10036a7:	90                   	nop
 10036a8:	90                   	nop
 10036a9:	90                   	nop
 10036aa:	90                   	nop
 10036ab:	90                   	nop
 10036ac:	90                   	nop
 10036ad:	90                   	nop
 10036ae:	90                   	nop
 10036af:	90                   	nop
 10036b0:	90                   	nop
 10036b1:	90                   	nop
 10036b2:	90                   	nop
 10036b3:	90                   	nop
 10036b4:	90                   	nop
 10036b5:	90                   	nop
 10036b6:	90                   	nop
 10036b7:	90                   	nop
 10036b8:	90                   	nop
 10036b9:	90                   	nop
 10036ba:	90                   	nop
 10036bb:	90                   	nop
 10036bc:	90                   	nop
 10036bd:	90                   	nop
 10036be:	90                   	nop
 10036bf:	90                   	nop
 10036c0:	90                   	nop
 10036c1:	90                   	nop
 10036c2:	90                   	nop
 10036c3:	90                   	nop
 10036c4:	90                   	nop
 10036c5:	90                   	nop
 10036c6:	90                   	nop
 10036c7:	90                   	nop
 10036c8:	90                   	nop
 10036c9:	90                   	nop
 10036ca:	90                   	nop
 10036cb:	90                   	nop
 10036cc:	90                   	nop
 10036cd:	90                   	nop
 10036ce:	90                   	nop
 10036cf:	90                   	nop
 10036d0:	90                   	nop
 10036d1:	90                   	nop
 10036d2:	90                   	nop
 10036d3:	90                   	nop
 10036d4:	90                   	nop
 10036d5:	90                   	nop
 10036d6:	90                   	nop
 10036d7:	90                   	nop
 10036d8:	90                   	nop
 10036d9:	90                   	nop
 10036da:	90                   	nop
 10036db:	90                   	nop
 10036dc:	90                   	nop
 10036dd:	90                   	nop
 10036de:	90                   	nop
 10036df:	90                   	nop
 10036e0:	90                   	nop
 10036e1:	90                   	nop
 10036e2:	90                   	nop
 10036e3:	90                   	nop
 10036e4:	90                   	nop
 10036e5:	90                   	nop
 10036e6:	90                   	nop
 10036e7:	90                   	nop
 10036e8:	90                   	nop
 10036e9:	90                   	nop
 10036ea:	90                   	nop
 10036eb:	90                   	nop
 10036ec:	90                   	nop
 10036ed:	90                   	nop
 10036ee:	90                   	nop
 10036ef:	90                   	nop
 10036f0:	90                   	nop
 10036f1:	90                   	nop
 10036f2:	90                   	nop
 10036f3:	90                   	nop
 10036f4:	90                   	nop
 10036f5:	90                   	nop
 10036f6:	90                   	nop
 10036f7:	90                   	nop
 10036f8:	90                   	nop
 10036f9:	90                   	nop
 10036fa:	90                   	nop
 10036fb:	90                   	nop
 10036fc:	90                   	nop
 10036fd:	90                   	nop
 10036fe:	90                   	nop
 10036ff:	90                   	nop
 1003700:	90                   	nop
 1003701:	90                   	nop
 1003702:	90                   	nop
 1003703:	90                   	nop
 1003704:	90                   	nop
 1003705:	90                   	nop
 1003706:	90                   	nop
 1003707:	90                   	nop
 1003708:	90                   	nop
 1003709:	90                   	nop
 100370a:	90                   	nop
 100370b:	90                   	nop
 100370c:	90                   	nop
 100370d:	90                   	nop
 100370e:	90                   	nop
 100370f:	90                   	nop
 1003710:	90                   	nop
 1003711:	90                   	nop
 1003712:	90                   	nop
 1003713:	90                   	nop
 1003714:	90                   	nop
 1003715:	90                   	nop
 1003716:	90                   	nop
 1003717:	90                   	nop
 1003718:	90                   	nop
 1003719:	90                   	nop
 100371a:	90                   	nop
 100371b:	90                   	nop
 100371c:	90                   	nop
 100371d:	90                   	nop
 100371e:	90                   	nop
 100371f:	90                   	nop
 1003720:	90                   	nop
 1003721:	90                   	nop
 1003722:	90                   	nop
 1003723:	90                   	nop
 1003724:	90                   	nop
 1003725:	90                   	nop
 1003726:	90                   	nop
 1003727:	90                   	nop
 1003728:	90                   	nop
 1003729:	90                   	nop
 100372a:	90                   	nop
 100372b:	90                   	nop
 100372c:	90                   	nop
 100372d:	90                   	nop
 100372e:	90                   	nop
 100372f:	90                   	nop
 1003730:	90                   	nop
 1003731:	90                   	nop
 1003732:	90                   	nop
 1003733:	90                   	nop
 1003734:	90                   	nop
 1003735:	90                   	nop
 1003736:	90                   	nop
 1003737:	90                   	nop
 1003738:	90                   	nop
 1003739:	90                   	nop
 100373a:	90                   	nop
 100373b:	90                   	nop
 100373c:	90                   	nop
 100373d:	90                   	nop
 100373e:	90                   	nop
 100373f:	90                   	nop
 1003740:	90                   	nop
 1003741:	90                   	nop
 1003742:	90                   	nop
 1003743:	90                   	nop
 1003744:	90                   	nop
 1003745:	90                   	nop
 1003746:	90                   	nop
 1003747:	90                   	nop
 1003748:	90                   	nop
 1003749:	90                   	nop
 100374a:	90                   	nop
 100374b:	90                   	nop
 100374c:	90                   	nop
 100374d:	90                   	nop
 100374e:	90                   	nop
 100374f:	90                   	nop
 1003750:	90                   	nop
 1003751:	90                   	nop
 1003752:	90                   	nop
 1003753:	90                   	nop
 1003754:	90                   	nop
 1003755:	90                   	nop
 1003756:	90                   	nop
 1003757:	90                   	nop
 1003758:	90                   	nop
 1003759:	90                   	nop
 100375a:	90                   	nop
 100375b:	90                   	nop
 100375c:	90                   	nop
 100375d:	90                   	nop
 100375e:	90                   	nop
 100375f:	90                   	nop
 1003760:	90                   	nop
 1003761:	90                   	nop
 1003762:	90                   	nop
 1003763:	90                   	nop
 1003764:	90                   	nop
 1003765:	90                   	nop
 1003766:	90                   	nop
 1003767:	90                   	nop
 1003768:	90                   	nop
 1003769:	90                   	nop
 100376a:	90                   	nop
 100376b:	90                   	nop
 100376c:	90                   	nop
 100376d:	90                   	nop
 100376e:	90                   	nop
 100376f:	90                   	nop
 1003770:	90                   	nop
 1003771:	90                   	nop
 1003772:	90                   	nop
 1003773:	90                   	nop
 1003774:	90                   	nop
 1003775:	90                   	nop
 1003776:	90                   	nop
 1003777:	90                   	nop
 1003778:	90                   	nop
 1003779:	90                   	nop
 100377a:	90                   	nop
 100377b:	90                   	nop
 100377c:	90                   	nop
 100377d:	90                   	nop
 100377e:	90                   	nop
 100377f:	90                   	nop
 1003780:	90                   	nop
 1003781:	90                   	nop
 1003782:	90                   	nop
 1003783:	90                   	nop
 1003784:	90                   	nop
 1003785:	90                   	nop
 1003786:	90                   	nop
 1003787:	90                   	nop
 1003788:	90                   	nop
 1003789:	90                   	nop
 100378a:	90                   	nop
 100378b:	90                   	nop
 100378c:	90                   	nop
 100378d:	90                   	nop
 100378e:	90                   	nop
 100378f:	90                   	nop
 1003790:	90                   	nop
 1003791:	90                   	nop
 1003792:	90                   	nop
 1003793:	90                   	nop
 1003794:	90                   	nop
 1003795:	90                   	nop
 1003796:	90                   	nop
 1003797:	90                   	nop
 1003798:	90                   	nop
 1003799:	90                   	nop
 100379a:	90                   	nop
 100379b:	90                   	nop
 100379c:	90                   	nop
 100379d:	90                   	nop
 100379e:	90                   	nop
 100379f:	90                   	nop
 10037a0:	90                   	nop
 10037a1:	90                   	nop
 10037a2:	90                   	nop
 10037a3:	90                   	nop
 10037a4:	90                   	nop
 10037a5:	90                   	nop
 10037a6:	90                   	nop
 10037a7:	90                   	nop
 10037a8:	90                   	nop
 10037a9:	90                   	nop
 10037aa:	90                   	nop
 10037ab:	90                   	nop
 10037ac:	90                   	nop
 10037ad:	90                   	nop
 10037ae:	90                   	nop
 10037af:	90                   	nop
 10037b0:	90                   	nop
 10037b1:	90                   	nop
 10037b2:	90                   	nop
 10037b3:	90                   	nop
 10037b4:	90                   	nop
 10037b5:	90                   	nop
 10037b6:	90                   	nop
 10037b7:	90                   	nop
 10037b8:	90                   	nop
 10037b9:	90                   	nop
 10037ba:	90                   	nop
 10037bb:	90                   	nop
 10037bc:	90                   	nop
 10037bd:	90                   	nop
 10037be:	90                   	nop
 10037bf:	90                   	nop
 10037c0:	90                   	nop
 10037c1:	90                   	nop
 10037c2:	90                   	nop
 10037c3:	90                   	nop
 10037c4:	90                   	nop
 10037c5:	90                   	nop
 10037c6:	90                   	nop
 10037c7:	90                   	nop
 10037c8:	90                   	nop
 10037c9:	90                   	nop
 10037ca:	90                   	nop
 10037cb:	90                   	nop
 10037cc:	90                   	nop
 10037cd:	90                   	nop
 10037ce:	90                   	nop
 10037cf:	90                   	nop
 10037d0:	90                   	nop
 10037d1:	90                   	nop
 10037d2:	90                   	nop
 10037d3:	90                   	nop
 10037d4:	90                   	nop
 10037d5:	90                   	nop
 10037d6:	90                   	nop
 10037d7:	90                   	nop
 10037d8:	90                   	nop
 10037d9:	90                   	nop
 10037da:	90                   	nop
 10037db:	90                   	nop
 10037dc:	90                   	nop
 10037dd:	90                   	nop
 10037de:	90                   	nop
 10037df:	90                   	nop
 10037e0:	90                   	nop
 10037e1:	90                   	nop
 10037e2:	90                   	nop
 10037e3:	90                   	nop
 10037e4:	90                   	nop
 10037e5:	90                   	nop
 10037e6:	90                   	nop
 10037e7:	90                   	nop
 10037e8:	90                   	nop
 10037e9:	90                   	nop
 10037ea:	90                   	nop
 10037eb:	90                   	nop
 10037ec:	90                   	nop
 10037ed:	90                   	nop
 10037ee:	90                   	nop
 10037ef:	90                   	nop
 10037f0:	90                   	nop
 10037f1:	90                   	nop
 10037f2:	90                   	nop
 10037f3:	90                   	nop
 10037f4:	90                   	nop
 10037f5:	90                   	nop
 10037f6:	90                   	nop
 10037f7:	90                   	nop
 10037f8:	90                   	nop
 10037f9:	90                   	nop
 10037fa:	90                   	nop
 10037fb:	90                   	nop
 10037fc:	90                   	nop
 10037fd:	90                   	nop
 10037fe:	90                   	nop
 10037ff:	90                   	nop
 1003800:	90                   	nop
 1003801:	90                   	nop
 1003802:	90                   	nop
 1003803:	90                   	nop
 1003804:	90                   	nop
 1003805:	90                   	nop
 1003806:	90                   	nop
 1003807:	90                   	nop
 1003808:	90                   	nop
 1003809:	90                   	nop
 100380a:	90                   	nop
 100380b:	90                   	nop
 100380c:	90                   	nop
 100380d:	90                   	nop
 100380e:	90                   	nop
 100380f:	90                   	nop
 1003810:	90                   	nop
 1003811:	90                   	nop
 1003812:	90                   	nop
 1003813:	90                   	nop
 1003814:	90                   	nop
 1003815:	90                   	nop
 1003816:	90                   	nop
 1003817:	90                   	nop
 1003818:	90                   	nop
 1003819:	90                   	nop
 100381a:	90                   	nop
 100381b:	90                   	nop
 100381c:	90                   	nop
 100381d:	90                   	nop
 100381e:	90                   	nop
 100381f:	90                   	nop
 1003820:	90                   	nop
 1003821:	90                   	nop
 1003822:	90                   	nop
 1003823:	90                   	nop
 1003824:	90                   	nop
 1003825:	90                   	nop
 1003826:	90                   	nop
 1003827:	90                   	nop
 1003828:	90                   	nop
 1003829:	90                   	nop
 100382a:	90                   	nop
 100382b:	90                   	nop
 100382c:	90                   	nop
 100382d:	90                   	nop
 100382e:	90                   	nop
 100382f:	90                   	nop
 1003830:	90                   	nop
 1003831:	90                   	nop
 1003832:	90                   	nop
 1003833:	90                   	nop
 1003834:	90                   	nop
 1003835:	90                   	nop
 1003836:	90                   	nop
 1003837:	90                   	nop
 1003838:	90                   	nop
 1003839:	90                   	nop
 100383a:	90                   	nop
 100383b:	90                   	nop
 100383c:	90                   	nop
 100383d:	90                   	nop
 100383e:	90                   	nop
 100383f:	90                   	nop
 1003840:	90                   	nop
 1003841:	90                   	nop
 1003842:	90                   	nop
 1003843:	90                   	nop
 1003844:	90                   	nop
 1003845:	90                   	nop
 1003846:	90                   	nop
 1003847:	90                   	nop
 1003848:	90                   	nop
 1003849:	90                   	nop
 100384a:	90                   	nop
 100384b:	90                   	nop
 100384c:	90                   	nop
 100384d:	90                   	nop
 100384e:	90                   	nop
 100384f:	90                   	nop
 1003850:	90                   	nop
 1003851:	90                   	nop
 1003852:	90                   	nop
 1003853:	90                   	nop
 1003854:	90                   	nop
 1003855:	90                   	nop
 1003856:	90                   	nop
 1003857:	90                   	nop
 1003858:	90                   	nop
 1003859:	90                   	nop
 100385a:	90                   	nop
 100385b:	90                   	nop
 100385c:	90                   	nop
 100385d:	90                   	nop
 100385e:	90                   	nop
 100385f:	90                   	nop
 1003860:	90                   	nop
 1003861:	90                   	nop
 1003862:	90                   	nop
 1003863:	90                   	nop
 1003864:	90                   	nop
 1003865:	90                   	nop
 1003866:	90                   	nop
 1003867:	90                   	nop
 1003868:	90                   	nop
 1003869:	90                   	nop
 100386a:	90                   	nop
 100386b:	90                   	nop
 100386c:	90                   	nop
 100386d:	90                   	nop
 100386e:	90                   	nop
 100386f:	90                   	nop
 1003870:	90                   	nop
 1003871:	90                   	nop
 1003872:	90                   	nop
 1003873:	90                   	nop
 1003874:	90                   	nop
 1003875:	90                   	nop
 1003876:	90                   	nop
 1003877:	90                   	nop
 1003878:	90                   	nop
 1003879:	90                   	nop
 100387a:	90                   	nop
 100387b:	90                   	nop
 100387c:	90                   	nop
 100387d:	90                   	nop
 100387e:	90                   	nop
 100387f:	90                   	nop
 1003880:	90                   	nop
 1003881:	90                   	nop
 1003882:	90                   	nop
 1003883:	90                   	nop
 1003884:	90                   	nop
 1003885:	90                   	nop
 1003886:	90                   	nop
 1003887:	90                   	nop
 1003888:	90                   	nop
 1003889:	90                   	nop
 100388a:	90                   	nop
 100388b:	90                   	nop
 100388c:	90                   	nop
 100388d:	90                   	nop
 100388e:	90                   	nop
 100388f:	90                   	nop
 1003890:	90                   	nop
 1003891:	90                   	nop
 1003892:	90                   	nop
 1003893:	90                   	nop
 1003894:	90                   	nop
 1003895:	90                   	nop
 1003896:	90                   	nop
 1003897:	90                   	nop
 1003898:	90                   	nop
 1003899:	90                   	nop
 100389a:	90                   	nop
 100389b:	90                   	nop
 100389c:	90                   	nop
 100389d:	90                   	nop
 100389e:	90                   	nop
 100389f:	90                   	nop
 10038a0:	90                   	nop
 10038a1:	90                   	nop
 10038a2:	90                   	nop
 10038a3:	90                   	nop
 10038a4:	90                   	nop
 10038a5:	90                   	nop
 10038a6:	90                   	nop
 10038a7:	90                   	nop
 10038a8:	90                   	nop
 10038a9:	90                   	nop
 10038aa:	90                   	nop
 10038ab:	90                   	nop
 10038ac:	90                   	nop
 10038ad:	90                   	nop
 10038ae:	90                   	nop
 10038af:	90                   	nop
 10038b0:	90                   	nop
 10038b1:	90                   	nop
 10038b2:	90                   	nop
 10038b3:	90                   	nop
 10038b4:	90                   	nop
 10038b5:	90                   	nop
 10038b6:	90                   	nop
 10038b7:	90                   	nop
 10038b8:	90                   	nop
 10038b9:	90                   	nop
 10038ba:	90                   	nop
 10038bb:	90                   	nop
 10038bc:	90                   	nop
 10038bd:	90                   	nop
 10038be:	90                   	nop
 10038bf:	90                   	nop
 10038c0:	90                   	nop
 10038c1:	90                   	nop
 10038c2:	90                   	nop
 10038c3:	90                   	nop
 10038c4:	90                   	nop
 10038c5:	90                   	nop
 10038c6:	90                   	nop
 10038c7:	90                   	nop
 10038c8:	90                   	nop
 10038c9:	90                   	nop
 10038ca:	90                   	nop
 10038cb:	90                   	nop
 10038cc:	90                   	nop
 10038cd:	90                   	nop
 10038ce:	90                   	nop
 10038cf:	90                   	nop
 10038d0:	90                   	nop
 10038d1:	90                   	nop
 10038d2:	90                   	nop
 10038d3:	90                   	nop
 10038d4:	90                   	nop
 10038d5:	90                   	nop
 10038d6:	90                   	nop
 10038d7:	90                   	nop
 10038d8:	90                   	nop
 10038d9:	90                   	nop
 10038da:	90                   	nop
 10038db:	90                   	nop
 10038dc:	90                   	nop
 10038dd:	90                   	nop
 10038de:	90                   	nop
 10038df:	90                   	nop
 10038e0:	90                   	nop
 10038e1:	90                   	nop
 10038e2:	90                   	nop
 10038e3:	90                   	nop
 10038e4:	90                   	nop
 10038e5:	90                   	nop
 10038e6:	90                   	nop
 10038e7:	90                   	nop
 10038e8:	90                   	nop
 10038e9:	90                   	nop
 10038ea:	90                   	nop
 10038eb:	90                   	nop
 10038ec:	90                   	nop
 10038ed:	90                   	nop
 10038ee:	90                   	nop
 10038ef:	90                   	nop
 10038f0:	90                   	nop
 10038f1:	90                   	nop
 10038f2:	90                   	nop
 10038f3:	90                   	nop
 10038f4:	90                   	nop
 10038f5:	90                   	nop
 10038f6:	90                   	nop
 10038f7:	90                   	nop
 10038f8:	90                   	nop
 10038f9:	90                   	nop
 10038fa:	90                   	nop
 10038fb:	90                   	nop
 10038fc:	90                   	nop
 10038fd:	90                   	nop
 10038fe:	90                   	nop
 10038ff:	90                   	nop
 1003900:	90                   	nop
 1003901:	90                   	nop
 1003902:	90                   	nop
 1003903:	90                   	nop
 1003904:	90                   	nop
 1003905:	90                   	nop
 1003906:	90                   	nop
 1003907:	90                   	nop
 1003908:	90                   	nop
 1003909:	90                   	nop
 100390a:	90                   	nop
 100390b:	90                   	nop
 100390c:	90                   	nop
 100390d:	90                   	nop
 100390e:	90                   	nop
 100390f:	90                   	nop
 1003910:	90                   	nop
 1003911:	90                   	nop
 1003912:	90                   	nop
 1003913:	90                   	nop
 1003914:	90                   	nop
 1003915:	90                   	nop
 1003916:	90                   	nop
 1003917:	90                   	nop
 1003918:	90                   	nop
 1003919:	90                   	nop
 100391a:	90                   	nop
 100391b:	90                   	nop
 100391c:	90                   	nop
 100391d:	90                   	nop
 100391e:	90                   	nop
 100391f:	90                   	nop
 1003920:	90                   	nop
 1003921:	90                   	nop
 1003922:	90                   	nop
 1003923:	90                   	nop
 1003924:	90                   	nop
 1003925:	90                   	nop
 1003926:	90                   	nop
 1003927:	90                   	nop
 1003928:	90                   	nop
 1003929:	90                   	nop
 100392a:	90                   	nop
 100392b:	90                   	nop
 100392c:	90                   	nop
 100392d:	90                   	nop
 100392e:	90                   	nop
 100392f:	90                   	nop
 1003930:	90                   	nop
 1003931:	90                   	nop
 1003932:	90                   	nop
 1003933:	90                   	nop
 1003934:	90                   	nop
 1003935:	90                   	nop
 1003936:	90                   	nop
 1003937:	90                   	nop
 1003938:	90                   	nop
 1003939:	90                   	nop
 100393a:	90                   	nop
 100393b:	90                   	nop
 100393c:	90                   	nop
 100393d:	90                   	nop
 100393e:	90                   	nop
 100393f:	90                   	nop
 1003940:	90                   	nop
 1003941:	90                   	nop
 1003942:	90                   	nop
 1003943:	90                   	nop
 1003944:	90                   	nop
 1003945:	90                   	nop
 1003946:	90                   	nop
 1003947:	90                   	nop
 1003948:	90                   	nop
 1003949:	90                   	nop
 100394a:	90                   	nop
 100394b:	90                   	nop
 100394c:	90                   	nop
 100394d:	90                   	nop
 100394e:	90                   	nop
 100394f:	90                   	nop
 1003950:	90                   	nop
 1003951:	90                   	nop
 1003952:	90                   	nop
 1003953:	90                   	nop
 1003954:	90                   	nop
 1003955:	90                   	nop
 1003956:	90                   	nop
 1003957:	90                   	nop
 1003958:	90                   	nop
 1003959:	90                   	nop
 100395a:	90                   	nop
 100395b:	90                   	nop
 100395c:	90                   	nop
 100395d:	90                   	nop
 100395e:	90                   	nop
 100395f:	90                   	nop
 1003960:	90                   	nop
 1003961:	90                   	nop
 1003962:	90                   	nop
 1003963:	90                   	nop
 1003964:	90                   	nop
 1003965:	90                   	nop
 1003966:	90                   	nop
 1003967:	90                   	nop
 1003968:	90                   	nop
 1003969:	90                   	nop
 100396a:	90                   	nop
 100396b:	90                   	nop
 100396c:	90                   	nop
 100396d:	90                   	nop
 100396e:	90                   	nop
 100396f:	90                   	nop
 1003970:	90                   	nop
 1003971:	90                   	nop
 1003972:	90                   	nop
 1003973:	90                   	nop
 1003974:	90                   	nop
 1003975:	90                   	nop
 1003976:	90                   	nop
 1003977:	90                   	nop
 1003978:	90                   	nop
 1003979:	90                   	nop
 100397a:	90                   	nop
 100397b:	90                   	nop
 100397c:	90                   	nop
 100397d:	90                   	nop
 100397e:	90                   	nop
 100397f:	90                   	nop
 1003980:	90                   	nop
 1003981:	90                   	nop
 1003982:	90                   	nop
 1003983:	90                   	nop
 1003984:	90                   	nop
 1003985:	90                   	nop
 1003986:	90                   	nop
 1003987:	90                   	nop
 1003988:	90                   	nop
 1003989:	90                   	nop
 100398a:	90                   	nop
 100398b:	90                   	nop
 100398c:	90                   	nop
 100398d:	90                   	nop
 100398e:	90                   	nop
 100398f:	90                   	nop
 1003990:	90                   	nop
 1003991:	90                   	nop
 1003992:	90                   	nop
 1003993:	90                   	nop
 1003994:	90                   	nop
 1003995:	90                   	nop
 1003996:	90                   	nop
 1003997:	90                   	nop
 1003998:	90                   	nop
 1003999:	90                   	nop
 100399a:	90                   	nop
 100399b:	90                   	nop
 100399c:	90                   	nop
 100399d:	90                   	nop
 100399e:	90                   	nop
 100399f:	90                   	nop
 10039a0:	90                   	nop
 10039a1:	90                   	nop
 10039a2:	90                   	nop
 10039a3:	90                   	nop
 10039a4:	90                   	nop
 10039a5:	90                   	nop
 10039a6:	90                   	nop
 10039a7:	90                   	nop
 10039a8:	90                   	nop
 10039a9:	90                   	nop
 10039aa:	90                   	nop
 10039ab:	90                   	nop
 10039ac:	90                   	nop
 10039ad:	90                   	nop
 10039ae:	90                   	nop
 10039af:	90                   	nop
 10039b0:	90                   	nop
 10039b1:	90                   	nop
 10039b2:	90                   	nop
 10039b3:	90                   	nop
 10039b4:	90                   	nop
 10039b5:	90                   	nop
 10039b6:	90                   	nop
 10039b7:	90                   	nop
 10039b8:	90                   	nop
 10039b9:	90                   	nop
 10039ba:	90                   	nop
 10039bb:	90                   	nop
 10039bc:	90                   	nop
 10039bd:	90                   	nop
 10039be:	90                   	nop
 10039bf:	90                   	nop
 10039c0:	90                   	nop
 10039c1:	90                   	nop
 10039c2:	90                   	nop
 10039c3:	90                   	nop
 10039c4:	90                   	nop
 10039c5:	90                   	nop
 10039c6:	90                   	nop
 10039c7:	90                   	nop
 10039c8:	90                   	nop
 10039c9:	90                   	nop
 10039ca:	90                   	nop
 10039cb:	90                   	nop
 10039cc:	90                   	nop
 10039cd:	90                   	nop
 10039ce:	90                   	nop
 10039cf:	90                   	nop
 10039d0:	90                   	nop
 10039d1:	90                   	nop
 10039d2:	90                   	nop
 10039d3:	90                   	nop
 10039d4:	90                   	nop
 10039d5:	90                   	nop
 10039d6:	90                   	nop
 10039d7:	90                   	nop
 10039d8:	90                   	nop
 10039d9:	90                   	nop
 10039da:	90                   	nop
 10039db:	90                   	nop
 10039dc:	90                   	nop
 10039dd:	90                   	nop
 10039de:	90                   	nop
 10039df:	90                   	nop
 10039e0:	90                   	nop
 10039e1:	90                   	nop
 10039e2:	90                   	nop
 10039e3:	90                   	nop
 10039e4:	90                   	nop
 10039e5:	90                   	nop
 10039e6:	90                   	nop
 10039e7:	90                   	nop
 10039e8:	90                   	nop
 10039e9:	90                   	nop
 10039ea:	90                   	nop
 10039eb:	90                   	nop
 10039ec:	90                   	nop
 10039ed:	90                   	nop
 10039ee:	90                   	nop
 10039ef:	90                   	nop
 10039f0:	90                   	nop
 10039f1:	90                   	nop
 10039f2:	90                   	nop
 10039f3:	90                   	nop
 10039f4:	90                   	nop
 10039f5:	90                   	nop
 10039f6:	90                   	nop
 10039f7:	90                   	nop
 10039f8:	90                   	nop
 10039f9:	90                   	nop
 10039fa:	90                   	nop
 10039fb:	90                   	nop
 10039fc:	90                   	nop
 10039fd:	90                   	nop
 10039fe:	90                   	nop
 10039ff:	90                   	nop
 1003a00:	90                   	nop
 1003a01:	90                   	nop
 1003a02:	90                   	nop
 1003a03:	90                   	nop
 1003a04:	90                   	nop
 1003a05:	90                   	nop
 1003a06:	90                   	nop
 1003a07:	90                   	nop
 1003a08:	90                   	nop
 1003a09:	90                   	nop
 1003a0a:	90                   	nop
 1003a0b:	90                   	nop
 1003a0c:	90                   	nop
 1003a0d:	90                   	nop
 1003a0e:	90                   	nop
 1003a0f:	90                   	nop
 1003a10:	90                   	nop
 1003a11:	90                   	nop
 1003a12:	90                   	nop
 1003a13:	90                   	nop
 1003a14:	90                   	nop
 1003a15:	90                   	nop
 1003a16:	90                   	nop
 1003a17:	90                   	nop
 1003a18:	90                   	nop
 1003a19:	90                   	nop
 1003a1a:	90                   	nop
 1003a1b:	90                   	nop
 1003a1c:	90                   	nop
 1003a1d:	90                   	nop
 1003a1e:	90                   	nop
 1003a1f:	90                   	nop
 1003a20:	90                   	nop
 1003a21:	90                   	nop
 1003a22:	90                   	nop
 1003a23:	90                   	nop
 1003a24:	90                   	nop
 1003a25:	90                   	nop
 1003a26:	90                   	nop
 1003a27:	90                   	nop
 1003a28:	90                   	nop
 1003a29:	90                   	nop
 1003a2a:	90                   	nop
 1003a2b:	90                   	nop
 1003a2c:	90                   	nop
 1003a2d:	90                   	nop
 1003a2e:	90                   	nop
 1003a2f:	90                   	nop
 1003a30:	90                   	nop
 1003a31:	90                   	nop
 1003a32:	90                   	nop
 1003a33:	90                   	nop
 1003a34:	90                   	nop
 1003a35:	90                   	nop
 1003a36:	90                   	nop
 1003a37:	90                   	nop
 1003a38:	90                   	nop
 1003a39:	90                   	nop
 1003a3a:	90                   	nop
 1003a3b:	90                   	nop
 1003a3c:	90                   	nop
 1003a3d:	90                   	nop
 1003a3e:	90                   	nop
 1003a3f:	90                   	nop
 1003a40:	90                   	nop
 1003a41:	90                   	nop
 1003a42:	90                   	nop
 1003a43:	90                   	nop
 1003a44:	90                   	nop
 1003a45:	90                   	nop
 1003a46:	90                   	nop
 1003a47:	90                   	nop
 1003a48:	90                   	nop
 1003a49:	90                   	nop
 1003a4a:	90                   	nop
 1003a4b:	90                   	nop
 1003a4c:	90                   	nop
 1003a4d:	90                   	nop
 1003a4e:	90                   	nop
 1003a4f:	90                   	nop
 1003a50:	90                   	nop
 1003a51:	90                   	nop
 1003a52:	90                   	nop
 1003a53:	90                   	nop
 1003a54:	90                   	nop
 1003a55:	90                   	nop
 1003a56:	90                   	nop
 1003a57:	90                   	nop
 1003a58:	90                   	nop
 1003a59:	90                   	nop
 1003a5a:	90                   	nop
 1003a5b:	90                   	nop
 1003a5c:	90                   	nop
 1003a5d:	90                   	nop
 1003a5e:	90                   	nop
 1003a5f:	90                   	nop
 1003a60:	90                   	nop
 1003a61:	90                   	nop
 1003a62:	90                   	nop
 1003a63:	90                   	nop
 1003a64:	90                   	nop
 1003a65:	90                   	nop
 1003a66:	90                   	nop
 1003a67:	90                   	nop
 1003a68:	90                   	nop
 1003a69:	90                   	nop
 1003a6a:	90                   	nop
 1003a6b:	90                   	nop
 1003a6c:	90                   	nop
 1003a6d:	90                   	nop
 1003a6e:	90                   	nop
 1003a6f:	90                   	nop
 1003a70:	90                   	nop
 1003a71:	90                   	nop
 1003a72:	90                   	nop
 1003a73:	90                   	nop
 1003a74:	90                   	nop
 1003a75:	90                   	nop
 1003a76:	90                   	nop
 1003a77:	90                   	nop
 1003a78:	90                   	nop
 1003a79:	90                   	nop
 1003a7a:	90                   	nop
 1003a7b:	90                   	nop
 1003a7c:	90                   	nop
 1003a7d:	90                   	nop
 1003a7e:	90                   	nop
 1003a7f:	90                   	nop
 1003a80:	90                   	nop
 1003a81:	90                   	nop
 1003a82:	90                   	nop
 1003a83:	90                   	nop
 1003a84:	90                   	nop
 1003a85:	90                   	nop
 1003a86:	90                   	nop
 1003a87:	90                   	nop
 1003a88:	90                   	nop
 1003a89:	90                   	nop
 1003a8a:	90                   	nop
 1003a8b:	90                   	nop
 1003a8c:	90                   	nop
 1003a8d:	90                   	nop
 1003a8e:	90                   	nop
 1003a8f:	90                   	nop
 1003a90:	90                   	nop
 1003a91:	90                   	nop
 1003a92:	90                   	nop
 1003a93:	90                   	nop
 1003a94:	90                   	nop
 1003a95:	90                   	nop
 1003a96:	90                   	nop
 1003a97:	90                   	nop
 1003a98:	90                   	nop
 1003a99:	90                   	nop
 1003a9a:	90                   	nop
 1003a9b:	90                   	nop
 1003a9c:	90                   	nop
 1003a9d:	90                   	nop
 1003a9e:	90                   	nop
 1003a9f:	90                   	nop
 1003aa0:	90                   	nop
 1003aa1:	90                   	nop
 1003aa2:	90                   	nop
 1003aa3:	90                   	nop
 1003aa4:	90                   	nop
 1003aa5:	90                   	nop
 1003aa6:	90                   	nop
 1003aa7:	90                   	nop
 1003aa8:	90                   	nop
 1003aa9:	90                   	nop
 1003aaa:	90                   	nop
 1003aab:	90                   	nop
 1003aac:	90                   	nop
 1003aad:	90                   	nop
 1003aae:	90                   	nop
 1003aaf:	90                   	nop
 1003ab0:	90                   	nop
 1003ab1:	90                   	nop
 1003ab2:	90                   	nop
 1003ab3:	90                   	nop
 1003ab4:	90                   	nop
 1003ab5:	90                   	nop
 1003ab6:	90                   	nop
 1003ab7:	90                   	nop
 1003ab8:	90                   	nop
 1003ab9:	90                   	nop
 1003aba:	90                   	nop
 1003abb:	90                   	nop
 1003abc:	90                   	nop
 1003abd:	90                   	nop
 1003abe:	90                   	nop
 1003abf:	90                   	nop
 1003ac0:	90                   	nop
 1003ac1:	90                   	nop
 1003ac2:	90                   	nop
 1003ac3:	90                   	nop
 1003ac4:	90                   	nop
 1003ac5:	90                   	nop
 1003ac6:	90                   	nop
 1003ac7:	90                   	nop
 1003ac8:	90                   	nop
 1003ac9:	90                   	nop
 1003aca:	90                   	nop
 1003acb:	90                   	nop
 1003acc:	90                   	nop
 1003acd:	90                   	nop
 1003ace:	90                   	nop
 1003acf:	90                   	nop
 1003ad0:	90                   	nop
 1003ad1:	90                   	nop
 1003ad2:	90                   	nop
 1003ad3:	90                   	nop
 1003ad4:	90                   	nop
 1003ad5:	90                   	nop
 1003ad6:	90                   	nop
 1003ad7:	90                   	nop
 1003ad8:	90                   	nop
 1003ad9:	90                   	nop
 1003ada:	90                   	nop
 1003adb:	90                   	nop
 1003adc:	90                   	nop
 1003add:	90                   	nop
 1003ade:	90                   	nop
 1003adf:	90                   	nop
 1003ae0:	90                   	nop
 1003ae1:	90                   	nop
 1003ae2:	90                   	nop
 1003ae3:	90                   	nop
 1003ae4:	90                   	nop
 1003ae5:	90                   	nop
 1003ae6:	90                   	nop
 1003ae7:	90                   	nop
 1003ae8:	90                   	nop
 1003ae9:	90                   	nop
 1003aea:	90                   	nop
 1003aeb:	90                   	nop
 1003aec:	90                   	nop
 1003aed:	90                   	nop
 1003aee:	90                   	nop
 1003aef:	90                   	nop
 1003af0:	90                   	nop
 1003af1:	90                   	nop
 1003af2:	90                   	nop
 1003af3:	90                   	nop
 1003af4:	90                   	nop
 1003af5:	90                   	nop
 1003af6:	90                   	nop
 1003af7:	90                   	nop
 1003af8:	90                   	nop
 1003af9:	90                   	nop
 1003afa:	90                   	nop
 1003afb:	90                   	nop
 1003afc:	90                   	nop
 1003afd:	90                   	nop
 1003afe:	90                   	nop
 1003aff:	90                   	nop
 1003b00:	90                   	nop
 1003b01:	90                   	nop
 1003b02:	90                   	nop
 1003b03:	90                   	nop
 1003b04:	90                   	nop
 1003b05:	90                   	nop
 1003b06:	90                   	nop
 1003b07:	90                   	nop
 1003b08:	90                   	nop
 1003b09:	90                   	nop
 1003b0a:	90                   	nop
 1003b0b:	90                   	nop
 1003b0c:	90                   	nop
 1003b0d:	90                   	nop
 1003b0e:	90                   	nop
 1003b0f:	90                   	nop
 1003b10:	90                   	nop
 1003b11:	90                   	nop
 1003b12:	90                   	nop
 1003b13:	90                   	nop
 1003b14:	90                   	nop
 1003b15:	90                   	nop
 1003b16:	90                   	nop
 1003b17:	90                   	nop
 1003b18:	90                   	nop
 1003b19:	90                   	nop
 1003b1a:	90                   	nop
 1003b1b:	90                   	nop
 1003b1c:	90                   	nop
 1003b1d:	90                   	nop
 1003b1e:	90                   	nop
 1003b1f:	90                   	nop
 1003b20:	90                   	nop
 1003b21:	90                   	nop
 1003b22:	90                   	nop
 1003b23:	90                   	nop
 1003b24:	90                   	nop
 1003b25:	90                   	nop
 1003b26:	90                   	nop
 1003b27:	90                   	nop
 1003b28:	90                   	nop
 1003b29:	90                   	nop
 1003b2a:	90                   	nop
 1003b2b:	90                   	nop
 1003b2c:	90                   	nop
 1003b2d:	90                   	nop
 1003b2e:	90                   	nop
 1003b2f:	90                   	nop
 1003b30:	90                   	nop
 1003b31:	90                   	nop
 1003b32:	90                   	nop
 1003b33:	90                   	nop
 1003b34:	90                   	nop
 1003b35:	90                   	nop
 1003b36:	90                   	nop
 1003b37:	90                   	nop
 1003b38:	90                   	nop
 1003b39:	90                   	nop
 1003b3a:	90                   	nop
 1003b3b:	90                   	nop
 1003b3c:	90                   	nop
 1003b3d:	90                   	nop
 1003b3e:	90                   	nop
 1003b3f:	90                   	nop
 1003b40:	90                   	nop
 1003b41:	90                   	nop
 1003b42:	90                   	nop
 1003b43:	90                   	nop
 1003b44:	90                   	nop
 1003b45:	90                   	nop
 1003b46:	90                   	nop
 1003b47:	90                   	nop
 1003b48:	90                   	nop
 1003b49:	90                   	nop
 1003b4a:	90                   	nop
 1003b4b:	90                   	nop
 1003b4c:	90                   	nop
 1003b4d:	90                   	nop
 1003b4e:	90                   	nop
 1003b4f:	90                   	nop
 1003b50:	90                   	nop
 1003b51:	90                   	nop
 1003b52:	90                   	nop
 1003b53:	90                   	nop
 1003b54:	90                   	nop
 1003b55:	90                   	nop
 1003b56:	90                   	nop
 1003b57:	90                   	nop
 1003b58:	90                   	nop
 1003b59:	90                   	nop
 1003b5a:	90                   	nop
 1003b5b:	90                   	nop
 1003b5c:	90                   	nop
 1003b5d:	90                   	nop
 1003b5e:	90                   	nop
 1003b5f:	90                   	nop
 1003b60:	90                   	nop
 1003b61:	90                   	nop
 1003b62:	90                   	nop
 1003b63:	90                   	nop
 1003b64:	90                   	nop
 1003b65:	90                   	nop
 1003b66:	90                   	nop
 1003b67:	90                   	nop
 1003b68:	90                   	nop
 1003b69:	90                   	nop
 1003b6a:	90                   	nop
 1003b6b:	90                   	nop
 1003b6c:	90                   	nop
 1003b6d:	90                   	nop
 1003b6e:	90                   	nop
 1003b6f:	90                   	nop
 1003b70:	90                   	nop
 1003b71:	90                   	nop
 1003b72:	90                   	nop
 1003b73:	90                   	nop
 1003b74:	90                   	nop
 1003b75:	90                   	nop
 1003b76:	90                   	nop
 1003b77:	90                   	nop
 1003b78:	90                   	nop
 1003b79:	90                   	nop
 1003b7a:	90                   	nop
 1003b7b:	90                   	nop
 1003b7c:	90                   	nop
 1003b7d:	90                   	nop
 1003b7e:	90                   	nop
 1003b7f:	90                   	nop
 1003b80:	90                   	nop
 1003b81:	90                   	nop
 1003b82:	90                   	nop
 1003b83:	90                   	nop
 1003b84:	90                   	nop
 1003b85:	90                   	nop
 1003b86:	90                   	nop
 1003b87:	90                   	nop
 1003b88:	90                   	nop
 1003b89:	90                   	nop
 1003b8a:	90                   	nop
 1003b8b:	90                   	nop
 1003b8c:	90                   	nop
 1003b8d:	90                   	nop
 1003b8e:	90                   	nop
 1003b8f:	90                   	nop
 1003b90:	90                   	nop
 1003b91:	90                   	nop
 1003b92:	90                   	nop
 1003b93:	90                   	nop
 1003b94:	90                   	nop
 1003b95:	90                   	nop
 1003b96:	90                   	nop
 1003b97:	90                   	nop
 1003b98:	90                   	nop
 1003b99:	90                   	nop
 1003b9a:	90                   	nop
 1003b9b:	90                   	nop
 1003b9c:	90                   	nop
 1003b9d:	90                   	nop
 1003b9e:	90                   	nop
 1003b9f:	90                   	nop
 1003ba0:	90                   	nop
 1003ba1:	90                   	nop
 1003ba2:	90                   	nop
 1003ba3:	90                   	nop
 1003ba4:	90                   	nop
 1003ba5:	90                   	nop
 1003ba6:	90                   	nop
 1003ba7:	90                   	nop
 1003ba8:	90                   	nop
 1003ba9:	90                   	nop
 1003baa:	90                   	nop
 1003bab:	90                   	nop
 1003bac:	90                   	nop
 1003bad:	90                   	nop
 1003bae:	90                   	nop
 1003baf:	90                   	nop
 1003bb0:	90                   	nop
 1003bb1:	90                   	nop
 1003bb2:	90                   	nop
 1003bb3:	90                   	nop
 1003bb4:	90                   	nop
 1003bb5:	90                   	nop
 1003bb6:	90                   	nop
 1003bb7:	90                   	nop
 1003bb8:	90                   	nop
 1003bb9:	90                   	nop
 1003bba:	90                   	nop
 1003bbb:	90                   	nop
 1003bbc:	90                   	nop
 1003bbd:	90                   	nop
 1003bbe:	90                   	nop
 1003bbf:	90                   	nop
 1003bc0:	90                   	nop
 1003bc1:	90                   	nop
 1003bc2:	90                   	nop
 1003bc3:	90                   	nop
 1003bc4:	90                   	nop
 1003bc5:	90                   	nop
 1003bc6:	90                   	nop
 1003bc7:	90                   	nop
 1003bc8:	90                   	nop
 1003bc9:	90                   	nop
 1003bca:	90                   	nop
 1003bcb:	90                   	nop
 1003bcc:	90                   	nop
 1003bcd:	90                   	nop
 1003bce:	90                   	nop
 1003bcf:	90                   	nop
 1003bd0:	90                   	nop
 1003bd1:	90                   	nop
 1003bd2:	90                   	nop
 1003bd3:	90                   	nop
 1003bd4:	90                   	nop
 1003bd5:	90                   	nop
 1003bd6:	90                   	nop
 1003bd7:	90                   	nop
 1003bd8:	90                   	nop
 1003bd9:	90                   	nop
 1003bda:	90                   	nop
 1003bdb:	90                   	nop
 1003bdc:	90                   	nop
 1003bdd:	90                   	nop
 1003bde:	90                   	nop
 1003bdf:	90                   	nop
 1003be0:	90                   	nop
 1003be1:	90                   	nop
 1003be2:	90                   	nop
 1003be3:	90                   	nop
 1003be4:	90                   	nop
 1003be5:	90                   	nop
 1003be6:	90                   	nop
 1003be7:	90                   	nop
 1003be8:	90                   	nop
 1003be9:	90                   	nop
 1003bea:	90                   	nop
 1003beb:	90                   	nop
 1003bec:	90                   	nop
 1003bed:	90                   	nop
 1003bee:	90                   	nop
 1003bef:	90                   	nop
 1003bf0:	90                   	nop
 1003bf1:	90                   	nop
 1003bf2:	90                   	nop
 1003bf3:	90                   	nop
 1003bf4:	90                   	nop
 1003bf5:	90                   	nop
 1003bf6:	90                   	nop
 1003bf7:	90                   	nop
 1003bf8:	90                   	nop
 1003bf9:	90                   	nop
 1003bfa:	90                   	nop
 1003bfb:	90                   	nop
 1003bfc:	90                   	nop
 1003bfd:	90                   	nop
 1003bfe:	90                   	nop
 1003bff:	90                   	nop
 1003c00:	90                   	nop
 1003c01:	90                   	nop
 1003c02:	90                   	nop
 1003c03:	90                   	nop
 1003c04:	90                   	nop
 1003c05:	90                   	nop
 1003c06:	90                   	nop
 1003c07:	90                   	nop
 1003c08:	90                   	nop
 1003c09:	90                   	nop
 1003c0a:	90                   	nop
 1003c0b:	90                   	nop
 1003c0c:	90                   	nop
 1003c0d:	90                   	nop
 1003c0e:	90                   	nop
 1003c0f:	90                   	nop
 1003c10:	90                   	nop
 1003c11:	90                   	nop
 1003c12:	90                   	nop
 1003c13:	90                   	nop
 1003c14:	90                   	nop
 1003c15:	90                   	nop
 1003c16:	90                   	nop
 1003c17:	90                   	nop
 1003c18:	90                   	nop
 1003c19:	90                   	nop
 1003c1a:	90                   	nop
 1003c1b:	90                   	nop
 1003c1c:	90                   	nop
 1003c1d:	90                   	nop
 1003c1e:	90                   	nop
 1003c1f:	90                   	nop
 1003c20:	90                   	nop
 1003c21:	90                   	nop
 1003c22:	90                   	nop
 1003c23:	90                   	nop
 1003c24:	90                   	nop
 1003c25:	90                   	nop
 1003c26:	90                   	nop
 1003c27:	90                   	nop
 1003c28:	90                   	nop
 1003c29:	90                   	nop
 1003c2a:	90                   	nop
 1003c2b:	90                   	nop
 1003c2c:	90                   	nop
 1003c2d:	90                   	nop
 1003c2e:	90                   	nop
 1003c2f:	90                   	nop
 1003c30:	90                   	nop
 1003c31:	90                   	nop
 1003c32:	90                   	nop
 1003c33:	90                   	nop
 1003c34:	90                   	nop
 1003c35:	90                   	nop
 1003c36:	90                   	nop
 1003c37:	90                   	nop
 1003c38:	90                   	nop
 1003c39:	90                   	nop
 1003c3a:	90                   	nop
 1003c3b:	90                   	nop
 1003c3c:	90                   	nop
 1003c3d:	90                   	nop
 1003c3e:	90                   	nop
 1003c3f:	90                   	nop
 1003c40:	90                   	nop
 1003c41:	90                   	nop
 1003c42:	90                   	nop
 1003c43:	90                   	nop
 1003c44:	90                   	nop
 1003c45:	90                   	nop
 1003c46:	90                   	nop
 1003c47:	90                   	nop
 1003c48:	90                   	nop
 1003c49:	90                   	nop
 1003c4a:	90                   	nop
 1003c4b:	90                   	nop
 1003c4c:	90                   	nop
 1003c4d:	90                   	nop
 1003c4e:	90                   	nop
 1003c4f:	90                   	nop
 1003c50:	90                   	nop
 1003c51:	90                   	nop
 1003c52:	90                   	nop
 1003c53:	90                   	nop
 1003c54:	90                   	nop
 1003c55:	90                   	nop
 1003c56:	90                   	nop
 1003c57:	90                   	nop
 1003c58:	90                   	nop
 1003c59:	90                   	nop
 1003c5a:	90                   	nop
 1003c5b:	90                   	nop
 1003c5c:	90                   	nop
 1003c5d:	90                   	nop
 1003c5e:	90                   	nop
 1003c5f:	90                   	nop
 1003c60:	90                   	nop
 1003c61:	90                   	nop
 1003c62:	90                   	nop
 1003c63:	90                   	nop
 1003c64:	90                   	nop
 1003c65:	90                   	nop
 1003c66:	90                   	nop
 1003c67:	90                   	nop
 1003c68:	90                   	nop
 1003c69:	90                   	nop
 1003c6a:	90                   	nop
 1003c6b:	90                   	nop
 1003c6c:	90                   	nop
 1003c6d:	90                   	nop
 1003c6e:	90                   	nop
 1003c6f:	90                   	nop
 1003c70:	90                   	nop
 1003c71:	90                   	nop
 1003c72:	90                   	nop
 1003c73:	90                   	nop
 1003c74:	90                   	nop
 1003c75:	90                   	nop
 1003c76:	90                   	nop
 1003c77:	90                   	nop
 1003c78:	90                   	nop
 1003c79:	90                   	nop
 1003c7a:	90                   	nop
 1003c7b:	90                   	nop
 1003c7c:	90                   	nop
 1003c7d:	90                   	nop
 1003c7e:	90                   	nop
 1003c7f:	90                   	nop
 1003c80:	90                   	nop
 1003c81:	90                   	nop
 1003c82:	90                   	nop
 1003c83:	90                   	nop
 1003c84:	90                   	nop
 1003c85:	90                   	nop
 1003c86:	90                   	nop
 1003c87:	90                   	nop
 1003c88:	90                   	nop
 1003c89:	90                   	nop
 1003c8a:	90                   	nop
 1003c8b:	90                   	nop
 1003c8c:	90                   	nop
 1003c8d:	90                   	nop
 1003c8e:	90                   	nop
 1003c8f:	90                   	nop
 1003c90:	90                   	nop
 1003c91:	90                   	nop
 1003c92:	90                   	nop
 1003c93:	90                   	nop
 1003c94:	90                   	nop
 1003c95:	90                   	nop
 1003c96:	90                   	nop
 1003c97:	90                   	nop
 1003c98:	90                   	nop
 1003c99:	90                   	nop
 1003c9a:	90                   	nop
 1003c9b:	90                   	nop
 1003c9c:	90                   	nop
 1003c9d:	90                   	nop
 1003c9e:	90                   	nop
 1003c9f:	90                   	nop
 1003ca0:	90                   	nop
 1003ca1:	90                   	nop
 1003ca2:	90                   	nop
 1003ca3:	90                   	nop
 1003ca4:	90                   	nop
 1003ca5:	90                   	nop
 1003ca6:	90                   	nop
 1003ca7:	90                   	nop
 1003ca8:	90                   	nop
 1003ca9:	90                   	nop
 1003caa:	90                   	nop
 1003cab:	90                   	nop
 1003cac:	90                   	nop
 1003cad:	90                   	nop
 1003cae:	90                   	nop
 1003caf:	90                   	nop
 1003cb0:	90                   	nop
 1003cb1:	90                   	nop
 1003cb2:	90                   	nop
 1003cb3:	90                   	nop
 1003cb4:	90                   	nop
 1003cb5:	90                   	nop
 1003cb6:	90                   	nop
 1003cb7:	90                   	nop
 1003cb8:	90                   	nop
 1003cb9:	90                   	nop
 1003cba:	90                   	nop
 1003cbb:	90                   	nop
 1003cbc:	90                   	nop
 1003cbd:	90                   	nop
 1003cbe:	90                   	nop
 1003cbf:	90                   	nop
 1003cc0:	90                   	nop
 1003cc1:	90                   	nop
 1003cc2:	90                   	nop
 1003cc3:	90                   	nop
 1003cc4:	90                   	nop
 1003cc5:	90                   	nop
 1003cc6:	90                   	nop
 1003cc7:	90                   	nop
 1003cc8:	90                   	nop
 1003cc9:	90                   	nop
 1003cca:	90                   	nop
 1003ccb:	90                   	nop
 1003ccc:	90                   	nop
 1003ccd:	90                   	nop
 1003cce:	90                   	nop
 1003ccf:	90                   	nop
 1003cd0:	90                   	nop
 1003cd1:	90                   	nop
 1003cd2:	90                   	nop
 1003cd3:	90                   	nop
 1003cd4:	90                   	nop
 1003cd5:	90                   	nop
 1003cd6:	90                   	nop
 1003cd7:	90                   	nop
 1003cd8:	90                   	nop
 1003cd9:	90                   	nop
 1003cda:	90                   	nop
 1003cdb:	90                   	nop
 1003cdc:	90                   	nop
 1003cdd:	90                   	nop
 1003cde:	90                   	nop
 1003cdf:	90                   	nop
 1003ce0:	90                   	nop
 1003ce1:	90                   	nop
 1003ce2:	90                   	nop
 1003ce3:	90                   	nop
 1003ce4:	90                   	nop
 1003ce5:	90                   	nop
 1003ce6:	90                   	nop
 1003ce7:	90                   	nop
 1003ce8:	90                   	nop
 1003ce9:	90                   	nop
 1003cea:	90                   	nop
 1003ceb:	90                   	nop
 1003cec:	90                   	nop
 1003ced:	90                   	nop
 1003cee:	90                   	nop
 1003cef:	90                   	nop
 1003cf0:	90                   	nop
 1003cf1:	90                   	nop
 1003cf2:	90                   	nop
 1003cf3:	90                   	nop
 1003cf4:	90                   	nop
 1003cf5:	90                   	nop
 1003cf6:	90                   	nop
 1003cf7:	90                   	nop
 1003cf8:	90                   	nop
 1003cf9:	90                   	nop
 1003cfa:	90                   	nop
 1003cfb:	90                   	nop
 1003cfc:	90                   	nop
 1003cfd:	90                   	nop
 1003cfe:	90                   	nop
 1003cff:	90                   	nop
 1003d00:	90                   	nop
 1003d01:	90                   	nop
 1003d02:	90                   	nop
 1003d03:	90                   	nop
 1003d04:	90                   	nop
 1003d05:	90                   	nop
 1003d06:	90                   	nop
 1003d07:	90                   	nop
 1003d08:	90                   	nop
 1003d09:	90                   	nop
 1003d0a:	90                   	nop
 1003d0b:	90                   	nop
 1003d0c:	90                   	nop
 1003d0d:	90                   	nop
 1003d0e:	90                   	nop
 1003d0f:	90                   	nop
 1003d10:	90                   	nop
 1003d11:	90                   	nop
 1003d12:	90                   	nop
 1003d13:	90                   	nop
 1003d14:	90                   	nop
 1003d15:	90                   	nop
 1003d16:	90                   	nop
 1003d17:	90                   	nop
 1003d18:	90                   	nop
 1003d19:	90                   	nop
 1003d1a:	90                   	nop
 1003d1b:	90                   	nop
 1003d1c:	90                   	nop
 1003d1d:	90                   	nop
 1003d1e:	90                   	nop
 1003d1f:	90                   	nop
 1003d20:	90                   	nop
 1003d21:	90                   	nop
 1003d22:	90                   	nop
 1003d23:	90                   	nop
 1003d24:	90                   	nop
 1003d25:	90                   	nop
 1003d26:	90                   	nop
 1003d27:	90                   	nop
 1003d28:	90                   	nop
 1003d29:	90                   	nop
 1003d2a:	90                   	nop
 1003d2b:	90                   	nop
 1003d2c:	90                   	nop
 1003d2d:	90                   	nop
 1003d2e:	90                   	nop
 1003d2f:	90                   	nop
 1003d30:	90                   	nop
 1003d31:	90                   	nop
 1003d32:	90                   	nop
 1003d33:	90                   	nop
 1003d34:	90                   	nop
 1003d35:	90                   	nop
 1003d36:	90                   	nop
 1003d37:	90                   	nop
 1003d38:	90                   	nop
 1003d39:	90                   	nop
 1003d3a:	90                   	nop
 1003d3b:	90                   	nop
 1003d3c:	90                   	nop
 1003d3d:	90                   	nop
 1003d3e:	90                   	nop
 1003d3f:	90                   	nop
 1003d40:	90                   	nop
 1003d41:	90                   	nop
 1003d42:	90                   	nop
 1003d43:	90                   	nop
 1003d44:	90                   	nop
 1003d45:	90                   	nop
 1003d46:	90                   	nop
 1003d47:	90                   	nop
 1003d48:	90                   	nop
 1003d49:	90                   	nop
 1003d4a:	90                   	nop
 1003d4b:	90                   	nop
 1003d4c:	90                   	nop
 1003d4d:	90                   	nop
 1003d4e:	90                   	nop
 1003d4f:	90                   	nop
 1003d50:	90                   	nop
 1003d51:	90                   	nop
 1003d52:	90                   	nop
 1003d53:	90                   	nop
 1003d54:	90                   	nop
 1003d55:	90                   	nop
 1003d56:	90                   	nop
 1003d57:	90                   	nop
 1003d58:	90                   	nop
 1003d59:	90                   	nop
 1003d5a:	90                   	nop
 1003d5b:	90                   	nop
 1003d5c:	90                   	nop
 1003d5d:	90                   	nop
 1003d5e:	90                   	nop
 1003d5f:	90                   	nop
 1003d60:	90                   	nop
 1003d61:	90                   	nop
 1003d62:	90                   	nop
 1003d63:	90                   	nop
 1003d64:	90                   	nop
 1003d65:	90                   	nop
 1003d66:	90                   	nop
 1003d67:	90                   	nop
 1003d68:	90                   	nop
 1003d69:	90                   	nop
 1003d6a:	90                   	nop
 1003d6b:	90                   	nop
 1003d6c:	90                   	nop
 1003d6d:	90                   	nop
 1003d6e:	90                   	nop
 1003d6f:	90                   	nop
 1003d70:	90                   	nop
 1003d71:	90                   	nop
 1003d72:	90                   	nop
 1003d73:	90                   	nop
 1003d74:	90                   	nop
 1003d75:	90                   	nop
 1003d76:	90                   	nop
 1003d77:	90                   	nop
 1003d78:	90                   	nop
 1003d79:	90                   	nop
 1003d7a:	90                   	nop
 1003d7b:	90                   	nop
 1003d7c:	90                   	nop
 1003d7d:	90                   	nop
 1003d7e:	90                   	nop
 1003d7f:	90                   	nop
 1003d80:	90                   	nop
 1003d81:	90                   	nop
 1003d82:	90                   	nop
 1003d83:	90                   	nop
 1003d84:	90                   	nop
 1003d85:	90                   	nop
 1003d86:	90                   	nop
 1003d87:	90                   	nop
 1003d88:	90                   	nop
 1003d89:	90                   	nop
 1003d8a:	90                   	nop
 1003d8b:	90                   	nop
 1003d8c:	90                   	nop
 1003d8d:	90                   	nop
 1003d8e:	90                   	nop
 1003d8f:	90                   	nop
 1003d90:	90                   	nop
 1003d91:	90                   	nop
 1003d92:	90                   	nop
 1003d93:	90                   	nop
 1003d94:	90                   	nop
 1003d95:	90                   	nop
 1003d96:	90                   	nop
 1003d97:	90                   	nop
 1003d98:	90                   	nop
 1003d99:	90                   	nop
 1003d9a:	90                   	nop
 1003d9b:	90                   	nop
 1003d9c:	90                   	nop
 1003d9d:	90                   	nop
 1003d9e:	90                   	nop
 1003d9f:	90                   	nop
 1003da0:	90                   	nop
 1003da1:	90                   	nop
 1003da2:	90                   	nop
 1003da3:	90                   	nop
 1003da4:	90                   	nop
 1003da5:	90                   	nop
 1003da6:	90                   	nop
 1003da7:	90                   	nop
 1003da8:	90                   	nop
 1003da9:	90                   	nop
 1003daa:	90                   	nop
 1003dab:	90                   	nop
 1003dac:	90                   	nop
 1003dad:	90                   	nop
 1003dae:	90                   	nop
 1003daf:	90                   	nop
 1003db0:	90                   	nop
 1003db1:	90                   	nop
 1003db2:	90                   	nop
 1003db3:	90                   	nop
 1003db4:	90                   	nop
 1003db5:	90                   	nop
 1003db6:	90                   	nop
 1003db7:	90                   	nop
 1003db8:	90                   	nop
 1003db9:	90                   	nop
 1003dba:	90                   	nop
 1003dbb:	90                   	nop
 1003dbc:	90                   	nop
 1003dbd:	90                   	nop
 1003dbe:	90                   	nop
 1003dbf:	90                   	nop
 1003dc0:	90                   	nop
 1003dc1:	90                   	nop
 1003dc2:	90                   	nop
 1003dc3:	90                   	nop
 1003dc4:	90                   	nop
 1003dc5:	90                   	nop
 1003dc6:	90                   	nop
 1003dc7:	90                   	nop
 1003dc8:	90                   	nop
 1003dc9:	90                   	nop
 1003dca:	90                   	nop
 1003dcb:	90                   	nop
 1003dcc:	90                   	nop
 1003dcd:	90                   	nop
 1003dce:	90                   	nop
 1003dcf:	90                   	nop
 1003dd0:	90                   	nop
 1003dd1:	90                   	nop
 1003dd2:	90                   	nop
 1003dd3:	90                   	nop
 1003dd4:	90                   	nop
 1003dd5:	90                   	nop
 1003dd6:	90                   	nop
 1003dd7:	90                   	nop
 1003dd8:	90                   	nop
 1003dd9:	90                   	nop
 1003dda:	90                   	nop
 1003ddb:	90                   	nop
 1003ddc:	90                   	nop
 1003ddd:	90                   	nop
 1003dde:	90                   	nop
 1003ddf:	90                   	nop
 1003de0:	90                   	nop
 1003de1:	90                   	nop
 1003de2:	90                   	nop
 1003de3:	90                   	nop
 1003de4:	90                   	nop
 1003de5:	90                   	nop
 1003de6:	90                   	nop
 1003de7:	90                   	nop
 1003de8:	90                   	nop
 1003de9:	90                   	nop
 1003dea:	90                   	nop
 1003deb:	90                   	nop
 1003dec:	90                   	nop
 1003ded:	90                   	nop
 1003dee:	90                   	nop
 1003def:	90                   	nop
 1003df0:	90                   	nop
 1003df1:	90                   	nop
 1003df2:	90                   	nop
 1003df3:	90                   	nop
 1003df4:	90                   	nop
 1003df5:	90                   	nop
 1003df6:	90                   	nop
 1003df7:	90                   	nop
 1003df8:	90                   	nop
 1003df9:	90                   	nop
 1003dfa:	90                   	nop
 1003dfb:	90                   	nop
 1003dfc:	90                   	nop
 1003dfd:	90                   	nop
 1003dfe:	90                   	nop
 1003dff:	90                   	nop
 1003e00:	90                   	nop
 1003e01:	90                   	nop
 1003e02:	90                   	nop
 1003e03:	90                   	nop
 1003e04:	90                   	nop
 1003e05:	90                   	nop
 1003e06:	90                   	nop
 1003e07:	90                   	nop
 1003e08:	90                   	nop
 1003e09:	90                   	nop
 1003e0a:	90                   	nop
 1003e0b:	90                   	nop
 1003e0c:	90                   	nop
 1003e0d:	90                   	nop
 1003e0e:	90                   	nop
 1003e0f:	90                   	nop
 1003e10:	90                   	nop
 1003e11:	90                   	nop
 1003e12:	90                   	nop
 1003e13:	90                   	nop
 1003e14:	90                   	nop
 1003e15:	90                   	nop
 1003e16:	90                   	nop
 1003e17:	90                   	nop
 1003e18:	90                   	nop
 1003e19:	90                   	nop
 1003e1a:	90                   	nop
 1003e1b:	90                   	nop
 1003e1c:	90                   	nop
 1003e1d:	90                   	nop
 1003e1e:	90                   	nop
 1003e1f:	90                   	nop
 1003e20:	90                   	nop
 1003e21:	90                   	nop
 1003e22:	90                   	nop
 1003e23:	90                   	nop
 1003e24:	90                   	nop
 1003e25:	90                   	nop
 1003e26:	90                   	nop
 1003e27:	90                   	nop
 1003e28:	90                   	nop
 1003e29:	90                   	nop
 1003e2a:	90                   	nop
 1003e2b:	90                   	nop
 1003e2c:	90                   	nop
 1003e2d:	90                   	nop
 1003e2e:	90                   	nop
 1003e2f:	90                   	nop
 1003e30:	90                   	nop
 1003e31:	90                   	nop
 1003e32:	90                   	nop
 1003e33:	90                   	nop
 1003e34:	90                   	nop
 1003e35:	90                   	nop
 1003e36:	90                   	nop
 1003e37:	90                   	nop
 1003e38:	90                   	nop
 1003e39:	90                   	nop
 1003e3a:	90                   	nop
 1003e3b:	90                   	nop
 1003e3c:	90                   	nop
 1003e3d:	90                   	nop
 1003e3e:	90                   	nop
 1003e3f:	90                   	nop
 1003e40:	90                   	nop
 1003e41:	90                   	nop
 1003e42:	90                   	nop
 1003e43:	90                   	nop
 1003e44:	90                   	nop
 1003e45:	90                   	nop
 1003e46:	90                   	nop
 1003e47:	90                   	nop
 1003e48:	90                   	nop
 1003e49:	90                   	nop
 1003e4a:	90                   	nop
 1003e4b:	90                   	nop
 1003e4c:	90                   	nop
 1003e4d:	90                   	nop
 1003e4e:	90                   	nop
 1003e4f:	90                   	nop
 1003e50:	90                   	nop
 1003e51:	90                   	nop
 1003e52:	90                   	nop
 1003e53:	90                   	nop
 1003e54:	90                   	nop
 1003e55:	90                   	nop
 1003e56:	90                   	nop
 1003e57:	90                   	nop
 1003e58:	90                   	nop
 1003e59:	90                   	nop
 1003e5a:	90                   	nop
 1003e5b:	90                   	nop
 1003e5c:	90                   	nop
 1003e5d:	90                   	nop
 1003e5e:	90                   	nop
 1003e5f:	90                   	nop
 1003e60:	90                   	nop
 1003e61:	90                   	nop
 1003e62:	90                   	nop
 1003e63:	90                   	nop
 1003e64:	90                   	nop
 1003e65:	90                   	nop
 1003e66:	90                   	nop
 1003e67:	90                   	nop
 1003e68:	90                   	nop
 1003e69:	90                   	nop
 1003e6a:	90                   	nop
 1003e6b:	90                   	nop
 1003e6c:	90                   	nop
 1003e6d:	90                   	nop
 1003e6e:	90                   	nop
 1003e6f:	90                   	nop
 1003e70:	90                   	nop
 1003e71:	90                   	nop
 1003e72:	90                   	nop
 1003e73:	90                   	nop
 1003e74:	90                   	nop
 1003e75:	90                   	nop
 1003e76:	90                   	nop
 1003e77:	90                   	nop
 1003e78:	90                   	nop
 1003e79:	90                   	nop
 1003e7a:	90                   	nop
 1003e7b:	90                   	nop
 1003e7c:	90                   	nop
 1003e7d:	90                   	nop
 1003e7e:	90                   	nop
 1003e7f:	90                   	nop
 1003e80:	90                   	nop
 1003e81:	90                   	nop
 1003e82:	90                   	nop
 1003e83:	90                   	nop
 1003e84:	90                   	nop
 1003e85:	90                   	nop
 1003e86:	90                   	nop
 1003e87:	90                   	nop
 1003e88:	90                   	nop
 1003e89:	90                   	nop
 1003e8a:	90                   	nop
 1003e8b:	90                   	nop
 1003e8c:	90                   	nop
 1003e8d:	90                   	nop
 1003e8e:	90                   	nop
 1003e8f:	90                   	nop
 1003e90:	90                   	nop
 1003e91:	90                   	nop
 1003e92:	90                   	nop
 1003e93:	90                   	nop
 1003e94:	90                   	nop
 1003e95:	90                   	nop
 1003e96:	90                   	nop
 1003e97:	90                   	nop
 1003e98:	90                   	nop
 1003e99:	90                   	nop
 1003e9a:	90                   	nop
 1003e9b:	90                   	nop
 1003e9c:	90                   	nop
 1003e9d:	90                   	nop
 1003e9e:	90                   	nop
 1003e9f:	90                   	nop
 1003ea0:	90                   	nop
 1003ea1:	90                   	nop
 1003ea2:	90                   	nop
 1003ea3:	90                   	nop
 1003ea4:	90                   	nop
 1003ea5:	90                   	nop
 1003ea6:	90                   	nop
 1003ea7:	90                   	nop
 1003ea8:	90                   	nop
 1003ea9:	90                   	nop
 1003eaa:	90                   	nop
 1003eab:	90                   	nop
 1003eac:	90                   	nop
 1003ead:	90                   	nop
 1003eae:	90                   	nop
 1003eaf:	90                   	nop
 1003eb0:	90                   	nop
 1003eb1:	90                   	nop
 1003eb2:	90                   	nop
 1003eb3:	90                   	nop
 1003eb4:	90                   	nop
 1003eb5:	90                   	nop
 1003eb6:	90                   	nop
 1003eb7:	90                   	nop
 1003eb8:	90                   	nop
 1003eb9:	90                   	nop
 1003eba:	90                   	nop
 1003ebb:	90                   	nop
 1003ebc:	90                   	nop
 1003ebd:	90                   	nop
 1003ebe:	90                   	nop
 1003ebf:	90                   	nop
 1003ec0:	90                   	nop
 1003ec1:	90                   	nop
 1003ec2:	90                   	nop
 1003ec3:	90                   	nop
 1003ec4:	90                   	nop
 1003ec5:	90                   	nop
 1003ec6:	90                   	nop
 1003ec7:	90                   	nop
 1003ec8:	90                   	nop
 1003ec9:	90                   	nop
 1003eca:	90                   	nop
 1003ecb:	90                   	nop
 1003ecc:	90                   	nop
 1003ecd:	90                   	nop
 1003ece:	90                   	nop
 1003ecf:	90                   	nop
 1003ed0:	90                   	nop
 1003ed1:	90                   	nop
 1003ed2:	90                   	nop
 1003ed3:	90                   	nop
 1003ed4:	90                   	nop
 1003ed5:	90                   	nop
 1003ed6:	90                   	nop
 1003ed7:	90                   	nop
 1003ed8:	90                   	nop
 1003ed9:	90                   	nop
 1003eda:	90                   	nop
 1003edb:	90                   	nop
 1003edc:	90                   	nop
 1003edd:	90                   	nop
 1003ede:	90                   	nop
 1003edf:	90                   	nop
 1003ee0:	90                   	nop
 1003ee1:	90                   	nop
 1003ee2:	90                   	nop
 1003ee3:	90                   	nop
 1003ee4:	90                   	nop
 1003ee5:	90                   	nop
 1003ee6:	90                   	nop
 1003ee7:	90                   	nop
 1003ee8:	90                   	nop
 1003ee9:	90                   	nop
 1003eea:	90                   	nop
 1003eeb:	90                   	nop
 1003eec:	90                   	nop
 1003eed:	90                   	nop
 1003eee:	90                   	nop
 1003eef:	90                   	nop
 1003ef0:	90                   	nop
 1003ef1:	90                   	nop
 1003ef2:	90                   	nop
 1003ef3:	90                   	nop
 1003ef4:	90                   	nop
 1003ef5:	90                   	nop
 1003ef6:	90                   	nop
 1003ef7:	90                   	nop
 1003ef8:	90                   	nop
 1003ef9:	90                   	nop
 1003efa:	90                   	nop
 1003efb:	90                   	nop
 1003efc:	90                   	nop
 1003efd:	90                   	nop
 1003efe:	90                   	nop
 1003eff:	90                   	nop
 1003f00:	90                   	nop
 1003f01:	90                   	nop
 1003f02:	90                   	nop
 1003f03:	90                   	nop
 1003f04:	90                   	nop
 1003f05:	90                   	nop
 1003f06:	90                   	nop
 1003f07:	90                   	nop
 1003f08:	90                   	nop
 1003f09:	90                   	nop
 1003f0a:	90                   	nop
 1003f0b:	90                   	nop
 1003f0c:	90                   	nop
 1003f0d:	90                   	nop
 1003f0e:	90                   	nop
 1003f0f:	90                   	nop
 1003f10:	90                   	nop
 1003f11:	90                   	nop
 1003f12:	90                   	nop
 1003f13:	90                   	nop
 1003f14:	90                   	nop
 1003f15:	90                   	nop
 1003f16:	90                   	nop
 1003f17:	90                   	nop
 1003f18:	90                   	nop
 1003f19:	90                   	nop
 1003f1a:	90                   	nop
 1003f1b:	90                   	nop
 1003f1c:	90                   	nop
 1003f1d:	90                   	nop
 1003f1e:	90                   	nop
 1003f1f:	90                   	nop
 1003f20:	90                   	nop
 1003f21:	90                   	nop
 1003f22:	90                   	nop
 1003f23:	90                   	nop
 1003f24:	90                   	nop
 1003f25:	90                   	nop
 1003f26:	90                   	nop
 1003f27:	90                   	nop
 1003f28:	90                   	nop
 1003f29:	90                   	nop
 1003f2a:	90                   	nop
 1003f2b:	90                   	nop
 1003f2c:	90                   	nop
 1003f2d:	90                   	nop
 1003f2e:	90                   	nop
 1003f2f:	90                   	nop
 1003f30:	90                   	nop
 1003f31:	90                   	nop
 1003f32:	90                   	nop
 1003f33:	90                   	nop
 1003f34:	90                   	nop
 1003f35:	90                   	nop
 1003f36:	90                   	nop
 1003f37:	90                   	nop
 1003f38:	90                   	nop
 1003f39:	90                   	nop
 1003f3a:	90                   	nop
 1003f3b:	90                   	nop
 1003f3c:	90                   	nop
 1003f3d:	90                   	nop
 1003f3e:	90                   	nop
 1003f3f:	90                   	nop
 1003f40:	90                   	nop
 1003f41:	90                   	nop
 1003f42:	90                   	nop
 1003f43:	90                   	nop
 1003f44:	90                   	nop
 1003f45:	90                   	nop
 1003f46:	90                   	nop
 1003f47:	90                   	nop
 1003f48:	90                   	nop
 1003f49:	90                   	nop
 1003f4a:	90                   	nop
 1003f4b:	90                   	nop
 1003f4c:	90                   	nop
 1003f4d:	90                   	nop
 1003f4e:	90                   	nop
 1003f4f:	90                   	nop
 1003f50:	90                   	nop
 1003f51:	90                   	nop
 1003f52:	90                   	nop
 1003f53:	90                   	nop
 1003f54:	90                   	nop
 1003f55:	90                   	nop
 1003f56:	90                   	nop
 1003f57:	90                   	nop
 1003f58:	90                   	nop
 1003f59:	90                   	nop
 1003f5a:	90                   	nop
 1003f5b:	90                   	nop
 1003f5c:	90                   	nop
 1003f5d:	90                   	nop
 1003f5e:	90                   	nop
 1003f5f:	90                   	nop
 1003f60:	90                   	nop
 1003f61:	90                   	nop
 1003f62:	90                   	nop
 1003f63:	90                   	nop
 1003f64:	90                   	nop
 1003f65:	90                   	nop
 1003f66:	90                   	nop
 1003f67:	90                   	nop
 1003f68:	90                   	nop
 1003f69:	90                   	nop
 1003f6a:	90                   	nop
 1003f6b:	90                   	nop
 1003f6c:	90                   	nop
 1003f6d:	90                   	nop
 1003f6e:	90                   	nop
 1003f6f:	90                   	nop
 1003f70:	90                   	nop
 1003f71:	90                   	nop
 1003f72:	90                   	nop
 1003f73:	90                   	nop
 1003f74:	90                   	nop
 1003f75:	90                   	nop
 1003f76:	90                   	nop
 1003f77:	90                   	nop
 1003f78:	90                   	nop
 1003f79:	90                   	nop
 1003f7a:	90                   	nop
 1003f7b:	90                   	nop
 1003f7c:	90                   	nop
 1003f7d:	90                   	nop
 1003f7e:	90                   	nop
 1003f7f:	90                   	nop
 1003f80:	90                   	nop
 1003f81:	90                   	nop
 1003f82:	90                   	nop
 1003f83:	90                   	nop
 1003f84:	90                   	nop
 1003f85:	90                   	nop
 1003f86:	90                   	nop
 1003f87:	90                   	nop
 1003f88:	90                   	nop
 1003f89:	90                   	nop
 1003f8a:	90                   	nop
 1003f8b:	90                   	nop
 1003f8c:	90                   	nop
 1003f8d:	90                   	nop
 1003f8e:	90                   	nop
 1003f8f:	90                   	nop
 1003f90:	90                   	nop
 1003f91:	90                   	nop
 1003f92:	90                   	nop
 1003f93:	90                   	nop
 1003f94:	90                   	nop
 1003f95:	90                   	nop
 1003f96:	90                   	nop
 1003f97:	90                   	nop
 1003f98:	90                   	nop
 1003f99:	90                   	nop
 1003f9a:	90                   	nop
 1003f9b:	90                   	nop
 1003f9c:	90                   	nop
 1003f9d:	90                   	nop
 1003f9e:	90                   	nop
 1003f9f:	90                   	nop
 1003fa0:	90                   	nop
 1003fa1:	90                   	nop
 1003fa2:	90                   	nop
 1003fa3:	90                   	nop
 1003fa4:	90                   	nop
 1003fa5:	90                   	nop
 1003fa6:	90                   	nop
 1003fa7:	90                   	nop
 1003fa8:	90                   	nop
 1003fa9:	90                   	nop
 1003faa:	90                   	nop
 1003fab:	90                   	nop
 1003fac:	90                   	nop
 1003fad:	90                   	nop
 1003fae:	90                   	nop
 1003faf:	90                   	nop
 1003fb0:	90                   	nop
 1003fb1:	90                   	nop
 1003fb2:	90                   	nop
 1003fb3:	90                   	nop
 1003fb4:	90                   	nop
 1003fb5:	90                   	nop
 1003fb6:	90                   	nop
 1003fb7:	90                   	nop
 1003fb8:	90                   	nop
 1003fb9:	90                   	nop
 1003fba:	90                   	nop
 1003fbb:	90                   	nop
 1003fbc:	90                   	nop
 1003fbd:	90                   	nop
 1003fbe:	90                   	nop
 1003fbf:	90                   	nop
 1003fc0:	90                   	nop
 1003fc1:	90                   	nop
 1003fc2:	90                   	nop
 1003fc3:	90                   	nop
 1003fc4:	90                   	nop
 1003fc5:	90                   	nop
 1003fc6:	90                   	nop
 1003fc7:	90                   	nop
 1003fc8:	90                   	nop
 1003fc9:	90                   	nop
 1003fca:	90                   	nop
 1003fcb:	90                   	nop
 1003fcc:	90                   	nop
 1003fcd:	90                   	nop
 1003fce:	90                   	nop
 1003fcf:	90                   	nop
 1003fd0:	90                   	nop
 1003fd1:	90                   	nop
 1003fd2:	90                   	nop
 1003fd3:	90                   	nop
 1003fd4:	90                   	nop
 1003fd5:	90                   	nop
 1003fd6:	90                   	nop
 1003fd7:	90                   	nop
 1003fd8:	90                   	nop
 1003fd9:	90                   	nop
 1003fda:	90                   	nop
 1003fdb:	90                   	nop
 1003fdc:	90                   	nop
 1003fdd:	90                   	nop
 1003fde:	90                   	nop
 1003fdf:	90                   	nop
 1003fe0:	90                   	nop
 1003fe1:	90                   	nop
 1003fe2:	90                   	nop
 1003fe3:	90                   	nop
 1003fe4:	90                   	nop
 1003fe5:	90                   	nop
 1003fe6:	90                   	nop
 1003fe7:	90                   	nop
 1003fe8:	90                   	nop
 1003fe9:	90                   	nop
 1003fea:	90                   	nop
 1003feb:	90                   	nop
 1003fec:	90                   	nop
 1003fed:	90                   	nop
 1003fee:	90                   	nop
 1003fef:	90                   	nop
 1003ff0:	90                   	nop
 1003ff1:	90                   	nop
 1003ff2:	90                   	nop
 1003ff3:	90                   	nop
 1003ff4:	90                   	nop
 1003ff5:	90                   	nop
 1003ff6:	90                   	nop
 1003ff7:	90                   	nop
 1003ff8:	90                   	nop
 1003ff9:	90                   	nop
 1003ffa:	90                   	nop
 1003ffb:	90                   	nop
 1003ffc:	90                   	nop
 1003ffd:	90                   	nop
 1003ffe:	90                   	nop
 1003fff:	90                   	nop

0000000001004000 <entry_32>:
 1004000:	fa                   	cli    
 1004001:	fc                   	cld    
 1004002:	3d 89 62 d7 36       	cmp    eax,0x36d76289
 1004007:	74 01                	je     100400a <entry_32.loaded_by_grub>
 1004009:	f4                   	hlt    

000000000100400a <entry_32.loaded_by_grub>:
 100400a:	bc 00 30 01 01       	mov    esp,0x1013000
 100400f:	89 de                	mov    esi,ebx
 1004011:	e8 85 00 00 00       	call   100409b <ensure_support_x64>
 1004016:	83 f8 01             	cmp    eax,0x1
 1004019:	74 01                	je     100401c <entry_32.init_x64>
 100401b:	f4                   	hlt    

000000000100401c <entry_32.init_x64>:
 100401c:	0f 20 c0             	mov    rax,cr0
 100401f:	25 ff ff ff 7f       	and    eax,0x7fffffff
 1004024:	0f 22 c0             	mov    cr0,rax
 1004027:	b8 00 10 00 01       	mov    eax,0x1001000
 100402c:	c7 00 03 20 00 01    	mov    DWORD PTR [rax],0x1002003
 1004032:	31 c9                	xor    ecx,ecx
 1004034:	81 c1 83 00 00 00    	add    ecx,0x83
 100403a:	b8 00 20 00 01       	mov    eax,0x1002000
 100403f:	89 08                	mov    DWORD PTR [rax],ecx
 1004041:	83 c0 08             	add    eax,0x8
 1004044:	81 c1 00 00 00 40    	add    ecx,0x40000000
 100404a:	89 08                	mov    DWORD PTR [rax],ecx
 100404c:	83 c0 08             	add    eax,0x8
 100404f:	81 c1 00 00 00 40    	add    ecx,0x40000000
 1004055:	89 08                	mov    DWORD PTR [rax],ecx
 1004057:	83 c0 08             	add    eax,0x8
 100405a:	81 c1 00 00 00 40    	add    ecx,0x40000000
 1004060:	89 08                	mov    DWORD PTR [rax],ecx
 1004062:	0f 20 e0             	mov    rax,cr4
 1004065:	83 c8 20             	or     eax,0x20
 1004068:	0f 22 e0             	mov    cr4,rax
 100406b:	b9 80 00 00 c0       	mov    ecx,0xc0000080
 1004070:	0f 32                	rdmsr  
 1004072:	0d 00 01 00 00       	or     eax,0x100
 1004077:	0f 30                	wrmsr  
 1004079:	b8 00 10 00 01       	mov    eax,0x1001000
 100407e:	0f 22 d8             	mov    cr3,rax
 1004081:	0f 20 c0             	mov    rax,cr0
 1004084:	0d 00 00 00 80       	or     eax,0x80000000
 1004089:	0f 22 c0             	mov    cr0,rax
 100408c:	0f 01 15 18 30 00 01 	lgdt   [rip+0x1003018]        # 20070ab <kernel_end+0xfeb0b3>
 1004093:	ea                   	(bad)  
 1004094:	00 00                	add    BYTE PTR [rax],al
 1004096:	01 01                	add    DWORD PTR [rcx],eax
 1004098:	08 00                	or     BYTE PTR [rax],al
 100409a:	f4                   	hlt    

000000000100409b <ensure_support_x64>:
 100409b:	55                   	push   rbp
 100409c:	89 e5                	mov    ebp,esp
 100409e:	9c                   	pushf  
 100409f:	58                   	pop    rax
 10040a0:	89 c1                	mov    ecx,eax
 10040a2:	35 00 00 20 00       	xor    eax,0x200000
 10040a7:	50                   	push   rax
 10040a8:	9d                   	popf   
 10040a9:	9c                   	pushf  
 10040aa:	58                   	pop    rax
 10040ab:	51                   	push   rcx
 10040ac:	9d                   	popf   
 10040ad:	31 c8                	xor    eax,ecx
 10040af:	74 24                	je     10040d5 <ensure_support_x64.not_supported>
 10040b1:	b8 00 00 00 80       	mov    eax,0x80000000
 10040b6:	0f a2                	cpuid  
 10040b8:	3d 01 00 00 80       	cmp    eax,0x80000001
 10040bd:	72 16                	jb     10040d5 <ensure_support_x64.not_supported>
 10040bf:	b8 01 00 00 80       	mov    eax,0x80000001
 10040c4:	0f a2                	cpuid  
 10040c6:	f7 c2 00 00 00 20    	test   edx,0x20000000
 10040cc:	74 07                	je     10040d5 <ensure_support_x64.not_supported>
 10040ce:	b8 01 00 00 00       	mov    eax,0x1
 10040d3:	eb 02                	jmp    10040d7 <ensure_support_x64.end>

00000000010040d5 <ensure_support_x64.not_supported>:
 10040d5:	31 c0                	xor    eax,eax

00000000010040d7 <ensure_support_x64.end>:
 10040d7:	89 ec                	mov    esp,ebp
 10040d9:	5d                   	pop    rbp
 10040da:	c3                   	ret    

Disassembly of section .eh_frame:

00000000010040e0 <.eh_frame>:
 10040e0:	14 00                	adc    al,0x0
 10040e2:	00 00                	add    BYTE PTR [rax],al
 10040e4:	00 00                	add    BYTE PTR [rax],al
 10040e6:	00 00                	add    BYTE PTR [rax],al
 10040e8:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
 10040eb:	00 01                	add    BYTE PTR [rcx],al
 10040ed:	78 10                	js     10040ff <ensure_support_x64.end+0x28>
 10040ef:	01 1b                	add    DWORD PTR [rbx],ebx
 10040f1:	0c 07                	or     al,0x7
 10040f3:	08 90 01 00 00 1c    	or     BYTE PTR [rax+0x1c000001],dl
 10040f9:	00 00                	add    BYTE PTR [rax],al
 10040fb:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 10040fe:	00 00                	add    BYTE PTR [rax],al
 1004100:	00 1f                	add    BYTE PTR [rdi],bl
 1004102:	00 00                	add    BYTE PTR [rax],al
 1004104:	68 00 00 00 00       	push   0x0
 1004109:	41 0e                	rex.B (bad) 
 100410b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004111:	02 63 c6             	add    ah,BYTE PTR [rbx-0x3a]
 1004114:	0c 07                	or     al,0x7
 1004116:	08 00                	or     BYTE PTR [rax],al
 1004118:	1c 00                	sbb    al,0x0
 100411a:	00 00                	add    BYTE PTR [rax],al
 100411c:	3c 00                	cmp    al,0x0
 100411e:	00 00                	add    BYTE PTR [rax],al
 1004120:	48 1f                	rex.W (bad) 
 1004122:	00 00                	add    BYTE PTR [rax],al
 1004124:	47 00 00             	rex.RXB add BYTE PTR [r8],r8b
 1004127:	00 00                	add    BYTE PTR [rax],al
 1004129:	41 0e                	rex.B (bad) 
 100412b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004131:	02 42 c6             	add    al,BYTE PTR [rdx-0x3a]
 1004134:	0c 07                	or     al,0x7
 1004136:	08 00                	or     BYTE PTR [rax],al
 1004138:	1c 00                	sbb    al,0x0
 100413a:	00 00                	add    BYTE PTR [rax],al
 100413c:	5c                   	pop    rsp
 100413d:	00 00                	add    BYTE PTR [rax],al
 100413f:	00 6f 1f             	add    BYTE PTR [rdi+0x1f],ch
 1004142:	00 00                	add    BYTE PTR [rax],al
 1004144:	85 00                	test   DWORD PTR [rax],eax
 1004146:	00 00                	add    BYTE PTR [rax],al
 1004148:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
 100414b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004151:	02 80 c6 0c 07 08    	add    al,BYTE PTR [rax+0x8070cc6]
 1004157:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 100415a:	00 00                	add    BYTE PTR [rax],al
 100415c:	7c 00                	jl     100415e <ensure_support_x64.end+0x87>
 100415e:	00 00                	add    BYTE PTR [rax],al
 1004160:	d4                   	(bad)  
 1004161:	1f                   	(bad)  
 1004162:	00 00                	add    BYTE PTR [rax],al
 1004164:	3d 00 00 00 00       	cmp    eax,0x0
 1004169:	41 0e                	rex.B (bad) 
 100416b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004171:	78 c6                	js     1004139 <ensure_support_x64.end+0x62>
 1004173:	0c 07                	or     al,0x7
 1004175:	08 00                	or     BYTE PTR [rax],al
 1004177:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 100417a:	00 00                	add    BYTE PTR [rax],al
 100417c:	9c                   	pushf  
 100417d:	00 00                	add    BYTE PTR [rax],al
 100417f:	00 f1                	add    cl,dh
 1004181:	1f                   	(bad)  
 1004182:	00 00                	add    BYTE PTR [rax],al
 1004184:	8d 00                	lea    eax,[rax]
 1004186:	00 00                	add    BYTE PTR [rax],al
 1004188:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
 100418b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004191:	02 88 c6 0c 07 08    	add    cl,BYTE PTR [rax+0x8070cc6]
 1004197:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 100419a:	00 00                	add    BYTE PTR [rax],al
 100419c:	bc 00 00 00 5e       	mov    esp,0x5e000000
 10041a1:	20 00                	and    BYTE PTR [rax],al
 10041a3:	00 38                	add    BYTE PTR [rax],bh
 10041a5:	00 00                	add    BYTE PTR [rax],al
 10041a7:	00 00                	add    BYTE PTR [rax],al
 10041a9:	41 0e                	rex.B (bad) 
 10041ab:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 10041b1:	73 c6                	jae    1004179 <ensure_support_x64.end+0xa2>
 10041b3:	0c 07                	or     al,0x7
 10041b5:	08 00                	or     BYTE PTR [rax],al
 10041b7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 10041ba:	00 00                	add    BYTE PTR [rax],al
 10041bc:	dc 00                	fadd   QWORD PTR [rax]
 10041be:	00 00                	add    BYTE PTR [rax],al
 10041c0:	76 20                	jbe    10041e2 <ensure_support_x64.end+0x10b>
 10041c2:	00 00                	add    BYTE PTR [rax],al
 10041c4:	17                   	(bad)  
 10041c5:	00 00                	add    BYTE PTR [rax],al
 10041c7:	00 00                	add    BYTE PTR [rax],al
 10041c9:	41 0e                	rex.B (bad) 
 10041cb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 10041d1:	52                   	push   rdx
 10041d2:	c6                   	(bad)  
 10041d3:	0c 07                	or     al,0x7
 10041d5:	08 00                	or     BYTE PTR [rax],al
 10041d7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 10041da:	00 00                	add    BYTE PTR [rax],al
 10041dc:	fc                   	cld    
 10041dd:	00 00                	add    BYTE PTR [rax],al
 10041df:	00 6d 20             	add    BYTE PTR [rbp+0x20],ch
 10041e2:	00 00                	add    BYTE PTR [rax],al
 10041e4:	17                   	(bad)  
 10041e5:	00 00                	add    BYTE PTR [rax],al
 10041e7:	00 00                	add    BYTE PTR [rax],al
 10041e9:	41 0e                	rex.B (bad) 
 10041eb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 10041f1:	52                   	push   rdx
 10041f2:	c6                   	(bad)  
 10041f3:	0c 07                	or     al,0x7
 10041f5:	08 00                	or     BYTE PTR [rax],al
 10041f7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 10041fa:	00 00                	add    BYTE PTR [rax],al
 10041fc:	1c 01                	sbb    al,0x1
 10041fe:	00 00                	add    BYTE PTR [rax],al
 1004200:	64 20 00             	and    BYTE PTR fs:[rax],al
 1004203:	00 1a                	add    BYTE PTR [rdx],bl
 1004205:	00 00                	add    BYTE PTR [rax],al
 1004207:	00 00                	add    BYTE PTR [rax],al
 1004209:	41 0e                	rex.B (bad) 
 100420b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004211:	55                   	push   rbp
 1004212:	c6                   	(bad)  
 1004213:	0c 07                	or     al,0x7
 1004215:	08 00                	or     BYTE PTR [rax],al
 1004217:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 100421a:	00 00                	add    BYTE PTR [rax],al
 100421c:	3c 01                	cmp    al,0x1
 100421e:	00 00                	add    BYTE PTR [rax],al
 1004220:	5e                   	pop    rsi
 1004221:	20 00                	and    BYTE PTR [rax],al
 1004223:	00 23                	add    BYTE PTR [rbx],ah
 1004225:	00 00                	add    BYTE PTR [rax],al
 1004227:	00 00                	add    BYTE PTR [rax],al
 1004229:	41 0e                	rex.B (bad) 
 100422b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004231:	5e                   	pop    rsi
 1004232:	c6                   	(bad)  
 1004233:	0c 07                	or     al,0x7
 1004235:	08 00                	or     BYTE PTR [rax],al
 1004237:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
 100423a:	00 00                	add    BYTE PTR [rax],al
 100423c:	5c                   	pop    rsp
 100423d:	01 00                	add    DWORD PTR [rax],eax
 100423f:	00 61 20             	add    BYTE PTR [rcx+0x20],ah
 1004242:	00 00                	add    BYTE PTR [rax],al
 1004244:	47 00 00             	rex.RXB add BYTE PTR [r8],r8b
 1004247:	00 00                	add    BYTE PTR [rax],al
 1004249:	41 0e                	rex.B (bad) 
 100424b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004251:	45 83 03 7c          	rex.RB add DWORD PTR [r11],0x7c
 1004255:	c3                   	ret    
 1004256:	41 c6                	rex.B (bad) 
 1004258:	0c 07                	or     al,0x7
 100425a:	08 00                	or     BYTE PTR [rax],al
 100425c:	00 00                	add    BYTE PTR [rax],al
 100425e:	00 00                	add    BYTE PTR [rax],al
 1004260:	24 00                	and    al,0x0
 1004262:	00 00                	add    BYTE PTR [rax],al
 1004264:	84 01                	test   BYTE PTR [rcx],al
 1004266:	00 00                	add    BYTE PTR [rax],al
 1004268:	80 20 00             	and    BYTE PTR [rax],0x0
 100426b:	00 e2                	add    dl,ah
 100426d:	00 00                	add    BYTE PTR [rax],al
 100426f:	00 00                	add    BYTE PTR [rax],al
 1004271:	41 0e                	rex.B (bad) 
 1004273:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004279:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
 100427d:	d7                   	xlat   BYTE PTR ds:[rbx]
 100427e:	c3                   	ret    
 100427f:	41 c6                	rex.B (bad) 
 1004281:	0c 07                	or     al,0x7
 1004283:	08 00                	or     BYTE PTR [rax],al
 1004285:	00 00                	add    BYTE PTR [rax],al
 1004287:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
 100428a:	00 00                	add    BYTE PTR [rax],al
 100428c:	ac                   	lods   al,BYTE PTR ds:[rsi]
 100428d:	01 00                	add    DWORD PTR [rax],eax
 100428f:	00 3a                	add    BYTE PTR [rdx],bh
 1004291:	21 00                	and    DWORD PTR [rax],eax
 1004293:	00 e1                	add    cl,ah
 1004295:	00 00                	add    BYTE PTR [rax],al
 1004297:	00 00                	add    BYTE PTR [rax],al
 1004299:	41 0e                	rex.B (bad) 
 100429b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 10042a1:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
 10042a5:	d6                   	(bad)  
 10042a6:	c3                   	ret    
 10042a7:	41 c6                	rex.B (bad) 
 10042a9:	0c 07                	or     al,0x7
 10042ab:	08 00                	or     BYTE PTR [rax],al
 10042ad:	00 00                	add    BYTE PTR [rax],al
 10042af:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 10042b2:	00 00                	add    BYTE PTR [rax],al
 10042b4:	d4                   	(bad)  
 10042b5:	01 00                	add    DWORD PTR [rax],eax
 10042b7:	00 f3                	add    bl,dh
 10042b9:	21 00                	and    DWORD PTR [rax],eax
 10042bb:	00 cd                	add    ch,cl
 10042bd:	00 00                	add    BYTE PTR [rax],al
 10042bf:	00 00                	add    BYTE PTR [rax],al
 10042c1:	41 0e                	rex.B (bad) 
 10042c3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 10042c9:	02 c8                	add    cl,al
 10042cb:	c6                   	(bad)  
 10042cc:	0c 07                	or     al,0x7
 10042ce:	08 00                	or     BYTE PTR [rax],al
 10042d0:	24 00                	and    al,0x0
 10042d2:	00 00                	add    BYTE PTR [rax],al
 10042d4:	f4                   	hlt    
 10042d5:	01 00                	add    DWORD PTR [rax],eax
 10042d7:	00 a0 22 00 00 0a    	add    BYTE PTR [rax+0xa000022],ah
 10042dd:	01 00                	add    DWORD PTR [rax],eax
 10042df:	00 00                	add    BYTE PTR [rax],al
 10042e1:	41 0e                	rex.B (bad) 
 10042e3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 10042e9:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
 10042ed:	ff c3                	inc    ebx
 10042ef:	41 c6                	rex.B (bad) 
 10042f1:	0c 07                	or     al,0x7
 10042f3:	08 00                	or     BYTE PTR [rax],al
 10042f5:	00 00                	add    BYTE PTR [rax],al
 10042f7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 10042fa:	00 00                	add    BYTE PTR [rax],al
 10042fc:	1c 02                	sbb    al,0x2
 10042fe:	00 00                	add    BYTE PTR [rax],al
 1004300:	82                   	(bad)  
 1004301:	23 00                	and    eax,DWORD PTR [rax]
 1004303:	00 b4 03 00 00 00 41 	add    BYTE PTR [rbx+rax*1+0x41000000],dh
 100430a:	0e                   	(bad)  
 100430b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004311:	03 af 03 c6 0c 07    	add    ebp,DWORD PTR [rdi+0x70cc603]
 1004317:	08 24 00             	or     BYTE PTR [rax+rax*1],ah
 100431a:	00 00                	add    BYTE PTR [rax],al
 100431c:	3c 02                	cmp    al,0x2
 100431e:	00 00                	add    BYTE PTR [rax],al
 1004320:	16                   	(bad)  
 1004321:	27                   	(bad)  
 1004322:	00 00                	add    BYTE PTR [rax],al
 1004324:	bc 01 00 00 00       	mov    esp,0x1
 1004329:	41 0e                	rex.B (bad) 
 100432b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004331:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
 1004335:	b1 01                	mov    cl,0x1
 1004337:	c3                   	ret    
 1004338:	41 c6                	rex.B (bad) 
 100433a:	0c 07                	or     al,0x7
 100433c:	08 00                	or     BYTE PTR [rax],al
 100433e:	00 00                	add    BYTE PTR [rax],al
 1004340:	1c 00                	sbb    al,0x0
 1004342:	00 00                	add    BYTE PTR [rax],al
 1004344:	64 02 00             	add    al,BYTE PTR fs:[rax]
 1004347:	00 aa 28 00 00 8b    	add    BYTE PTR [rdx-0x74ffffd8],ch
 100434d:	00 00                	add    BYTE PTR [rax],al
 100434f:	00 00                	add    BYTE PTR [rax],al
 1004351:	41 0e                	rex.B (bad) 
 1004353:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004359:	02 86 c6 0c 07 08    	add    al,BYTE PTR [rsi+0x8070cc6]
 100435f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 1004362:	00 00                	add    BYTE PTR [rax],al
 1004364:	84 02                	test   BYTE PTR [rdx],al
 1004366:	00 00                	add    BYTE PTR [rax],al
 1004368:	15 29 00 00 45       	adc    eax,0x45000029
 100436d:	00 00                	add    BYTE PTR [rax],al
 100436f:	00 00                	add    BYTE PTR [rax],al
 1004371:	41 0e                	rex.B (bad) 
 1004373:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004379:	02 40 c6             	add    al,BYTE PTR [rax-0x3a]
 100437c:	0c 07                	or     al,0x7
 100437e:	08 00                	or     BYTE PTR [rax],al
 1004380:	1c 00                	sbb    al,0x0
 1004382:	00 00                	add    BYTE PTR [rax],al
 1004384:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
 1004385:	02 00                	add    al,BYTE PTR [rax]
 1004387:	00 3a                	add    BYTE PTR [rdx],bh
 1004389:	29 00                	sub    DWORD PTR [rax],eax
 100438b:	00 50 00             	add    BYTE PTR [rax+0x0],dl
 100438e:	00 00                	add    BYTE PTR [rax],al
 1004390:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
 1004393:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004399:	02 4b c6             	add    cl,BYTE PTR [rbx-0x3a]
 100439c:	0c 07                	or     al,0x7
 100439e:	08 00                	or     BYTE PTR [rax],al
 10043a0:	1c 00                	sbb    al,0x0
 10043a2:	00 00                	add    BYTE PTR [rax],al
 10043a4:	c4 02 00 00          	(bad)  
 10043a8:	6a 29                	push   0x29
 10043aa:	00 00                	add    BYTE PTR [rax],al
 10043ac:	52                   	push   rdx
 10043ad:	00 00                	add    BYTE PTR [rax],al
 10043af:	00 00                	add    BYTE PTR [rax],al
 10043b1:	41 0e                	rex.B (bad) 
 10043b3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 10043b9:	02 4d c6             	add    cl,BYTE PTR [rbp-0x3a]
 10043bc:	0c 07                	or     al,0x7
 10043be:	08 00                	or     BYTE PTR [rax],al
 10043c0:	1c 00                	sbb    al,0x0
 10043c2:	00 00                	add    BYTE PTR [rax],al
 10043c4:	e4 02                	in     al,0x2
 10043c6:	00 00                	add    BYTE PTR [rax],al
 10043c8:	9c                   	pushf  
 10043c9:	29 00                	sub    DWORD PTR [rax],eax
 10043cb:	00 95 00 00 00 00    	add    BYTE PTR [rbp+0x0],dl
 10043d1:	41 0e                	rex.B (bad) 
 10043d3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 10043d9:	02 90 c6 0c 07 08    	add    dl,BYTE PTR [rax+0x8070cc6]
 10043df:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 10043e2:	00 00                	add    BYTE PTR [rax],al
 10043e4:	04 03                	add    al,0x3
 10043e6:	00 00                	add    BYTE PTR [rax],al
 10043e8:	11 2a                	adc    DWORD PTR [rdx],ebp
 10043ea:	00 00                	add    BYTE PTR [rax],al
 10043ec:	96                   	xchg   esi,eax
 10043ed:	00 00                	add    BYTE PTR [rax],al
 10043ef:	00 00                	add    BYTE PTR [rax],al
 10043f1:	41 0e                	rex.B (bad) 
 10043f3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 10043f9:	02 91 c6 0c 07 08    	add    dl,BYTE PTR [rcx+0x8070cc6]
 10043ff:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 1004402:	00 00                	add    BYTE PTR [rax],al
 1004404:	24 03                	and    al,0x3
 1004406:	00 00                	add    BYTE PTR [rax],al
 1004408:	87 2a                	xchg   DWORD PTR [rdx],ebp
 100440a:	00 00                	add    BYTE PTR [rax],al
 100440c:	30 00                	xor    BYTE PTR [rax],al
 100440e:	00 00                	add    BYTE PTR [rax],al
 1004410:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
 1004413:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004419:	6b c6 0c             	imul   eax,esi,0xc
 100441c:	07                   	(bad)  
 100441d:	08 00                	or     BYTE PTR [rax],al
 100441f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 1004422:	00 00                	add    BYTE PTR [rax],al
 1004424:	44 03 00             	add    r8d,DWORD PTR [rax]
 1004427:	00 97 2a 00 00 58    	add    BYTE PTR [rdi+0x5800002a],dl
 100442d:	00 00                	add    BYTE PTR [rax],al
 100442f:	00 00                	add    BYTE PTR [rax],al
 1004431:	41 0e                	rex.B (bad) 
 1004433:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004439:	02 53 c6             	add    dl,BYTE PTR [rbx-0x3a]
 100443c:	0c 07                	or     al,0x7
 100443e:	08 00                	or     BYTE PTR [rax],al
 1004440:	1c 00                	sbb    al,0x0
 1004442:	00 00                	add    BYTE PTR [rax],al
 1004444:	64 03 00             	add    eax,DWORD PTR fs:[rax]
 1004447:	00 cf                	add    bh,cl
 1004449:	2a 00                	sub    al,BYTE PTR [rax]
 100444b:	00 4a 00             	add    BYTE PTR [rdx+0x0],cl
 100444e:	00 00                	add    BYTE PTR [rax],al
 1004450:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
 1004453:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004459:	02 45 c6             	add    al,BYTE PTR [rbp-0x3a]
 100445c:	0c 07                	or     al,0x7
 100445e:	08 00                	or     BYTE PTR [rax],al
 1004460:	1c 00                	sbb    al,0x0
 1004462:	00 00                	add    BYTE PTR [rax],al
 1004464:	84 03                	test   BYTE PTR [rbx],al
 1004466:	00 00                	add    BYTE PTR [rax],al
 1004468:	f9                   	stc    
 1004469:	2a 00                	sub    al,BYTE PTR [rax]
 100446b:	00 66 00             	add    BYTE PTR [rsi+0x0],ah
 100446e:	00 00                	add    BYTE PTR [rax],al
 1004470:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
 1004473:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004479:	02 61 c6             	add    ah,BYTE PTR [rcx-0x3a]
 100447c:	0c 07                	or     al,0x7
 100447e:	08 00                	or     BYTE PTR [rax],al
 1004480:	1c 00                	sbb    al,0x0
 1004482:	00 00                	add    BYTE PTR [rax],al
 1004484:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
 1004485:	03 00                	add    eax,DWORD PTR [rax]
 1004487:	00 3f                	add    BYTE PTR [rdi],bh
 1004489:	2b 00                	sub    eax,DWORD PTR [rax]
 100448b:	00 22                	add    BYTE PTR [rdx],ah
 100448d:	00 00                	add    BYTE PTR [rax],al
 100448f:	00 00                	add    BYTE PTR [rax],al
 1004491:	41 0e                	rex.B (bad) 
 1004493:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004499:	5d                   	pop    rbp
 100449a:	c6                   	(bad)  
 100449b:	0c 07                	or     al,0x7
 100449d:	08 00                	or     BYTE PTR [rax],al
 100449f:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
 10044a2:	00 00                	add    BYTE PTR [rax],al
 10044a4:	c4 03 00 00          	(bad)  
 10044a8:	41 2b 00             	sub    eax,DWORD PTR [r8]
 10044ab:	00 4f 00             	add    BYTE PTR [rdi+0x0],cl
 10044ae:	00 00                	add    BYTE PTR [rax],al
 10044b0:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
 10044b3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 10044b9:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
 10044bd:	44 c3                	rex.R ret 
 10044bf:	41 c6                	rex.B (bad) 
 10044c1:	0c 07                	or     al,0x7
 10044c3:	08 00                	or     BYTE PTR [rax],al
 10044c5:	00 00                	add    BYTE PTR [rax],al
 10044c7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 10044ca:	00 00                	add    BYTE PTR [rax],al
 10044cc:	ec                   	in     al,dx
 10044cd:	03 00                	add    eax,DWORD PTR [rax]
 10044cf:	00 68 2b             	add    BYTE PTR [rax+0x2b],ch
 10044d2:	00 00                	add    BYTE PTR [rax],al
 10044d4:	5a                   	pop    rdx
 10044d5:	01 00                	add    DWORD PTR [rax],eax
 10044d7:	00 00                	add    BYTE PTR [rax],al
 10044d9:	41 0e                	rex.B (bad) 
 10044db:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 10044e1:	03 55 01             	add    edx,DWORD PTR [rbp+0x1]
 10044e4:	c6                   	(bad)  
 10044e5:	0c 07                	or     al,0x7
 10044e7:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
 10044ea:	00 00                	add    BYTE PTR [rax],al
 10044ec:	0c 04                	or     al,0x4
 10044ee:	00 00                	add    BYTE PTR [rax],al
 10044f0:	a2 2c 00 00 36 00 00 	movabs ds:0x3600002c,al
 10044f7:	00 00 
 10044f9:	41 0e                	rex.B (bad) 
 10044fb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004501:	71 c6                	jno    10044c9 <ensure_support_x64.end+0x3f2>
 1004503:	0c 07                	or     al,0x7
 1004505:	08 00                	or     BYTE PTR [rax],al
 1004507:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 100450a:	00 00                	add    BYTE PTR [rax],al
 100450c:	2c 04                	sub    al,0x4
 100450e:	00 00                	add    BYTE PTR [rax],al
 1004510:	b8 2c 00 00 1b       	mov    eax,0x1b00002c
 1004515:	00 00                	add    BYTE PTR [rax],al
 1004517:	00 00                	add    BYTE PTR [rax],al
 1004519:	41 0e                	rex.B (bad) 
 100451b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004521:	56                   	push   rsi
 1004522:	c6                   	(bad)  
 1004523:	0c 07                	or     al,0x7
 1004525:	08 00                	or     BYTE PTR [rax],al
 1004527:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 100452a:	00 00                	add    BYTE PTR [rax],al
 100452c:	4c 04 00             	rex.WR add al,0x0
 100452f:	00 b3 2c 00 00 2d    	add    BYTE PTR [rbx+0x2d00002c],dh
 1004535:	00 00                	add    BYTE PTR [rax],al
 1004537:	00 00                	add    BYTE PTR [rax],al
 1004539:	41 0e                	rex.B (bad) 
 100453b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004541:	68 c6 0c 07 08       	push   0x8070cc6
 1004546:	00 00                	add    BYTE PTR [rax],al
 1004548:	1c 00                	sbb    al,0x0
 100454a:	00 00                	add    BYTE PTR [rax],al
 100454c:	6c                   	ins    BYTE PTR es:[rdi],dx
 100454d:	04 00                	add    al,0x0
 100454f:	00 c0                	add    al,al
 1004551:	2c 00                	sub    al,0x0
 1004553:	00 48 00             	add    BYTE PTR [rax+0x0],cl
 1004556:	00 00                	add    BYTE PTR [rax],al
 1004558:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
 100455b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004561:	02 43 c6             	add    al,BYTE PTR [rbx-0x3a]
 1004564:	0c 07                	or     al,0x7
 1004566:	08 00                	or     BYTE PTR [rax],al
 1004568:	1c 00                	sbb    al,0x0
 100456a:	00 00                	add    BYTE PTR [rax],al
 100456c:	8c 04 00             	mov    WORD PTR [rax+rax*1],es
 100456f:	00 e8                	add    al,ch
 1004571:	2c 00                	sub    al,0x0
 1004573:	00 17                	add    BYTE PTR [rdi],dl
 1004575:	00 00                	add    BYTE PTR [rax],al
 1004577:	00 00                	add    BYTE PTR [rax],al
 1004579:	41 0e                	rex.B (bad) 
 100457b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004581:	52                   	push   rdx
 1004582:	c6                   	(bad)  
 1004583:	0c 07                	or     al,0x7
 1004585:	08 00                	or     BYTE PTR [rax],al
 1004587:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
 100458a:	00 00                	add    BYTE PTR [rax],al
 100458c:	ac                   	lods   al,BYTE PTR ds:[rsi]
 100458d:	04 00                	add    al,0x0
 100458f:	00 df                	add    bh,bl
 1004591:	2c 00                	sub    al,0x0
 1004593:	00 31                	add    BYTE PTR [rcx],dh
 1004595:	00 00                	add    BYTE PTR [rax],al
 1004597:	00 00                	add    BYTE PTR [rax],al
 1004599:	41 0e                	rex.B (bad) 
 100459b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 10045a1:	45 83 03 66          	rex.RB add DWORD PTR [r11],0x66
 10045a5:	c3                   	ret    
 10045a6:	41 c6                	rex.B (bad) 
 10045a8:	0c 07                	or     al,0x7
 10045aa:	08 00                	or     BYTE PTR [rax],al
 10045ac:	00 00                	add    BYTE PTR [rax],al
 10045ae:	00 00                	add    BYTE PTR [rax],al
 10045b0:	1c 00                	sbb    al,0x0
 10045b2:	00 00                	add    BYTE PTR [rax],al
 10045b4:	d4                   	(bad)  
 10045b5:	04 00                	add    al,0x0
 10045b7:	00 e8                	add    al,ch
 10045b9:	2c 00                	sub    al,0x0
 10045bb:	00 60 00             	add    BYTE PTR [rax+0x0],ah
 10045be:	00 00                	add    BYTE PTR [rax],al
 10045c0:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
 10045c3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 10045c9:	02 5b c6             	add    bl,BYTE PTR [rbx-0x3a]
 10045cc:	0c 07                	or     al,0x7
 10045ce:	08 00                	or     BYTE PTR [rax],al
 10045d0:	1c 00                	sbb    al,0x0
 10045d2:	00 00                	add    BYTE PTR [rax],al
 10045d4:	f4                   	hlt    
 10045d5:	04 00                	add    al,0x0
 10045d7:	00 28                	add    BYTE PTR [rax],ch
 10045d9:	2d 00 00 fd 00       	sub    eax,0xfd0000
 10045de:	00 00                	add    BYTE PTR [rax],al
 10045e0:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
 10045e3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 10045e9:	02 f8                	add    bh,al
 10045eb:	c6                   	(bad)  
 10045ec:	0c 07                	or     al,0x7
 10045ee:	08 00                	or     BYTE PTR [rax],al
 10045f0:	1c 00                	sbb    al,0x0
 10045f2:	00 00                	add    BYTE PTR [rax],al
 10045f4:	14 05                	adc    al,0x5
 10045f6:	00 00                	add    BYTE PTR [rax],al
 10045f8:	05 2e 00 00 cd       	add    eax,0xcd00002e
 10045fd:	00 00                	add    BYTE PTR [rax],al
 10045ff:	00 00                	add    BYTE PTR [rax],al
 1004601:	41 0e                	rex.B (bad) 
 1004603:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004609:	02 c8                	add    cl,al
 100460b:	c6                   	(bad)  
 100460c:	0c 07                	or     al,0x7
 100460e:	08 00                	or     BYTE PTR [rax],al
 1004610:	1c 00                	sbb    al,0x0
 1004612:	00 00                	add    BYTE PTR [rax],al
 1004614:	34 05                	xor    al,0x5
 1004616:	00 00                	add    BYTE PTR [rax],al
 1004618:	b2 2e                	mov    dl,0x2e
 100461a:	00 00                	add    BYTE PTR [rax],al
 100461c:	65 00 00             	add    BYTE PTR gs:[rax],al
 100461f:	00 00                	add    BYTE PTR [rax],al
 1004621:	41 0e                	rex.B (bad) 
 1004623:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004629:	02 60 c6             	add    ah,BYTE PTR [rax-0x3a]
 100462c:	0c 07                	or     al,0x7
 100462e:	08 00                	or     BYTE PTR [rax],al
 1004630:	1c 00                	sbb    al,0x0
 1004632:	00 00                	add    BYTE PTR [rax],al
 1004634:	54                   	push   rsp
 1004635:	05 00 00 f7 2e       	add    eax,0x2ef70000
 100463a:	00 00                	add    BYTE PTR [rax],al
 100463c:	70 01                	jo     100463f <ensure_support_x64.end+0x568>
 100463e:	00 00                	add    BYTE PTR [rax],al
 1004640:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
 1004643:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004649:	03 6b 01             	add    ebp,DWORD PTR [rbx+0x1]
 100464c:	c6                   	(bad)  
 100464d:	0c 07                	or     al,0x7
 100464f:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
 1004652:	00 00                	add    BYTE PTR [rax],al
 1004654:	74 05                	je     100465b <ensure_support_x64.end+0x584>
 1004656:	00 00                	add    BYTE PTR [rax],al
 1004658:	47 30 00             	rex.RXB xor BYTE PTR [r8],r8b
 100465b:	00 b1 00 00 00 00    	add    BYTE PTR [rcx+0x0],dh
 1004661:	41 0e                	rex.B (bad) 
 1004663:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004669:	02 ac c6 0c 07 08 00 	add    ch,BYTE PTR [rsi+rax*8+0x8070c]
 1004670:	1c 00                	sbb    al,0x0
 1004672:	00 00                	add    BYTE PTR [rax],al
 1004674:	94                   	xchg   esp,eax
 1004675:	05 00 00 d8 30       	add    eax,0x30d80000
 100467a:	00 00                	add    BYTE PTR [rax],al
 100467c:	2e 00 00             	add    BYTE PTR cs:[rax],al
 100467f:	00 00                	add    BYTE PTR [rax],al
 1004681:	41 0e                	rex.B (bad) 
 1004683:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004689:	69 c6 0c 07 08 00    	imul   eax,esi,0x8070c
 100468f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 1004692:	00 00                	add    BYTE PTR [rax],al
 1004694:	b4 05                	mov    ah,0x5
 1004696:	00 00                	add    BYTE PTR [rax],al
 1004698:	e6 30                	out    0x30,al
 100469a:	00 00                	add    BYTE PTR [rax],al
 100469c:	65 00 00             	add    BYTE PTR gs:[rax],al
 100469f:	00 00                	add    BYTE PTR [rax],al
 10046a1:	41 0e                	rex.B (bad) 
 10046a3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 10046a9:	02 60 c6             	add    ah,BYTE PTR [rax-0x3a]
 10046ac:	0c 07                	or     al,0x7
 10046ae:	08 00                	or     BYTE PTR [rax],al
 10046b0:	1c 00                	sbb    al,0x0
 10046b2:	00 00                	add    BYTE PTR [rax],al
 10046b4:	d4                   	(bad)  
 10046b5:	05 00 00 2b 31       	add    eax,0x312b0000
 10046ba:	00 00                	add    BYTE PTR [rax],al
 10046bc:	64 00 00             	add    BYTE PTR fs:[rax],al
 10046bf:	00 00                	add    BYTE PTR [rax],al
 10046c1:	41 0e                	rex.B (bad) 
 10046c3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 10046c9:	02 5f c6             	add    bl,BYTE PTR [rdi-0x3a]
 10046cc:	0c 07                	or     al,0x7
 10046ce:	08 00                	or     BYTE PTR [rax],al
 10046d0:	1c 00                	sbb    al,0x0
 10046d2:	00 00                	add    BYTE PTR [rax],al
 10046d4:	f4                   	hlt    
 10046d5:	05 00 00 6f 31       	add    eax,0x316f0000
 10046da:	00 00                	add    BYTE PTR [rax],al
 10046dc:	5a                   	pop    rdx
 10046dd:	00 00                	add    BYTE PTR [rax],al
 10046df:	00 00                	add    BYTE PTR [rax],al
 10046e1:	41 0e                	rex.B (bad) 
 10046e3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 10046e9:	02 55 c6             	add    dl,BYTE PTR [rbp-0x3a]
 10046ec:	0c 07                	or     al,0x7
 10046ee:	08 00                	or     BYTE PTR [rax],al
 10046f0:	1c 00                	sbb    al,0x0
 10046f2:	00 00                	add    BYTE PTR [rax],al
 10046f4:	14 06                	adc    al,0x6
 10046f6:	00 00                	add    BYTE PTR [rax],al
 10046f8:	a9 31 00 00 2e       	test   eax,0x2e000031
 10046fd:	00 00                	add    BYTE PTR [rax],al
 10046ff:	00 00                	add    BYTE PTR [rax],al
 1004701:	41 0e                	rex.B (bad) 
 1004703:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004709:	69 c6 0c 07 08 00    	imul   eax,esi,0x8070c
 100470f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 1004712:	00 00                	add    BYTE PTR [rax],al
 1004714:	34 06                	xor    al,0x6
 1004716:	00 00                	add    BYTE PTR [rax],al
 1004718:	b7 31                	mov    bh,0x31
 100471a:	00 00                	add    BYTE PTR [rax],al
 100471c:	73 00                	jae    100471e <ensure_support_x64.end+0x647>
 100471e:	00 00                	add    BYTE PTR [rax],al
 1004720:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
 1004723:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004729:	02 6e c6             	add    ch,BYTE PTR [rsi-0x3a]
 100472c:	0c 07                	or     al,0x7
 100472e:	08 00                	or     BYTE PTR [rax],al
 1004730:	1c 00                	sbb    al,0x0
 1004732:	00 00                	add    BYTE PTR [rax],al
 1004734:	54                   	push   rsp
 1004735:	06                   	(bad)  
 1004736:	00 00                	add    BYTE PTR [rax],al
 1004738:	0a 32                	or     dh,BYTE PTR [rdx]
 100473a:	00 00                	add    BYTE PTR [rax],al
 100473c:	45 00 00             	add    BYTE PTR [r8],r8b
 100473f:	00 00                	add    BYTE PTR [rax],al
 1004741:	41 0e                	rex.B (bad) 
 1004743:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004749:	02 40 c6             	add    al,BYTE PTR [rax-0x3a]
 100474c:	0c 07                	or     al,0x7
 100474e:	08 00                	or     BYTE PTR [rax],al
 1004750:	1c 00                	sbb    al,0x0
 1004752:	00 00                	add    BYTE PTR [rax],al
 1004754:	74 06                	je     100475c <ensure_support_x64.end+0x685>
 1004756:	00 00                	add    BYTE PTR [rax],al
 1004758:	2f                   	(bad)  
 1004759:	32 00                	xor    al,BYTE PTR [rax]
 100475b:	00 4b 00             	add    BYTE PTR [rbx+0x0],cl
 100475e:	00 00                	add    BYTE PTR [rax],al
 1004760:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
 1004763:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004769:	02 46 c6             	add    al,BYTE PTR [rsi-0x3a]
 100476c:	0c 07                	or     al,0x7
 100476e:	08 00                	or     BYTE PTR [rax],al
 1004770:	1c 00                	sbb    al,0x0
 1004772:	00 00                	add    BYTE PTR [rax],al
 1004774:	94                   	xchg   esp,eax
 1004775:	06                   	(bad)  
 1004776:	00 00                	add    BYTE PTR [rax],al
 1004778:	5a                   	pop    rdx
 1004779:	32 00                	xor    al,BYTE PTR [rax]
 100477b:	00 32                	add    BYTE PTR [rdx],dh
 100477d:	00 00                	add    BYTE PTR [rax],al
 100477f:	00 00                	add    BYTE PTR [rax],al
 1004781:	41 0e                	rex.B (bad) 
 1004783:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004789:	6d                   	ins    DWORD PTR es:[rdi],dx
 100478a:	c6                   	(bad)  
 100478b:	0c 07                	or     al,0x7
 100478d:	08 00                	or     BYTE PTR [rax],al
 100478f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 1004792:	00 00                	add    BYTE PTR [rax],al
 1004794:	b4 06                	mov    ah,0x6
 1004796:	00 00                	add    BYTE PTR [rax],al
 1004798:	6c                   	ins    BYTE PTR es:[rdi],dx
 1004799:	32 00                	xor    al,BYTE PTR [rax]
 100479b:	00 33                	add    BYTE PTR [rbx],dh
 100479d:	00 00                	add    BYTE PTR [rax],al
 100479f:	00 00                	add    BYTE PTR [rax],al
 10047a1:	41 0e                	rex.B (bad) 
 10047a3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 10047a9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 10047aa:	c6                   	(bad)  
 10047ab:	0c 07                	or     al,0x7
 10047ad:	08 00                	or     BYTE PTR [rax],al
 10047af:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 10047b2:	00 00                	add    BYTE PTR [rax],al
 10047b4:	d4                   	(bad)  
 10047b5:	06                   	(bad)  
 10047b6:	00 00                	add    BYTE PTR [rax],al
 10047b8:	7f 32                	jg     10047ec <ensure_support_x64.end+0x715>
 10047ba:	00 00                	add    BYTE PTR [rax],al
 10047bc:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
 10047bd:	00 00                	add    BYTE PTR [rax],al
 10047bf:	00 00                	add    BYTE PTR [rax],al
 10047c1:	41 0e                	rex.B (bad) 
 10047c3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 10047c9:	02 a1 c6 0c 07 08    	add    ah,BYTE PTR [rcx+0x8070cc6]
 10047cf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 10047d2:	00 00                	add    BYTE PTR [rax],al
 10047d4:	f4                   	hlt    
 10047d5:	06                   	(bad)  
 10047d6:	00 00                	add    BYTE PTR [rax],al
 10047d8:	05 33 00 00 8f       	add    eax,0x8f000033
 10047dd:	00 00                	add    BYTE PTR [rax],al
 10047df:	00 00                	add    BYTE PTR [rax],al
 10047e1:	41 0e                	rex.B (bad) 
 10047e3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 10047e9:	02 8a c6 0c 07 08    	add    cl,BYTE PTR [rdx+0x8070cc6]
 10047ef:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 10047f2:	00 00                	add    BYTE PTR [rax],al
 10047f4:	14 07                	adc    al,0x7
 10047f6:	00 00                	add    BYTE PTR [rax],al
 10047f8:	74 33                	je     100482d <ensure_support_x64.end+0x756>
 10047fa:	00 00                	add    BYTE PTR [rax],al
 10047fc:	5b                   	pop    rbx
 10047fd:	00 00                	add    BYTE PTR [rax],al
 10047ff:	00 00                	add    BYTE PTR [rax],al
 1004801:	41 0e                	rex.B (bad) 
 1004803:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004809:	02 56 c6             	add    dl,BYTE PTR [rsi-0x3a]
 100480c:	0c 07                	or     al,0x7
 100480e:	08 00                	or     BYTE PTR [rax],al
 1004810:	1c 00                	sbb    al,0x0
 1004812:	00 00                	add    BYTE PTR [rax],al
 1004814:	34 07                	xor    al,0x7
 1004816:	00 00                	add    BYTE PTR [rax],al
 1004818:	af                   	scas   eax,DWORD PTR es:[rdi]
 1004819:	33 00                	xor    eax,DWORD PTR [rax]
 100481b:	00 7a 00             	add    BYTE PTR [rdx+0x0],bh
 100481e:	00 00                	add    BYTE PTR [rax],al
 1004820:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
 1004823:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004829:	02 75 c6             	add    dh,BYTE PTR [rbp-0x3a]
 100482c:	0c 07                	or     al,0x7
 100482e:	08 00                	or     BYTE PTR [rax],al
 1004830:	1c 00                	sbb    al,0x0
 1004832:	00 00                	add    BYTE PTR [rax],al
 1004834:	54                   	push   rsp
 1004835:	07                   	(bad)  
 1004836:	00 00                	add    BYTE PTR [rax],al
 1004838:	09 34 00             	or     DWORD PTR [rax+rax*1],esi
 100483b:	00 61 00             	add    BYTE PTR [rcx+0x0],ah
 100483e:	00 00                	add    BYTE PTR [rax],al
 1004840:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
 1004843:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004849:	02 5c c6 0c          	add    bl,BYTE PTR [rsi+rax*8+0xc]
 100484d:	07                   	(bad)  
 100484e:	08 00                	or     BYTE PTR [rax],al
 1004850:	1c 00                	sbb    al,0x0
 1004852:	00 00                	add    BYTE PTR [rax],al
 1004854:	74 07                	je     100485d <ensure_support_x64.end+0x786>
 1004856:	00 00                	add    BYTE PTR [rax],al
 1004858:	4a 34 00             	rex.WX xor al,0x0
 100485b:	00 25 00 00 00 00    	add    BYTE PTR [rip+0x0],ah        # 1004861 <ensure_support_x64.end+0x78a>
 1004861:	41 0e                	rex.B (bad) 
 1004863:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004869:	60                   	(bad)  
 100486a:	c6                   	(bad)  
 100486b:	0c 07                	or     al,0x7
 100486d:	08 00                	or     BYTE PTR [rax],al
 100486f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 1004872:	00 00                	add    BYTE PTR [rax],al
 1004874:	94                   	xchg   esp,eax
 1004875:	07                   	(bad)  
 1004876:	00 00                	add    BYTE PTR [rax],al
 1004878:	4f 34 00             	rex.WRXB xor al,0x0
 100487b:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
 100487e:	00 00                	add    BYTE PTR [rax],al
 1004880:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
 1004883:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004889:	5f                   	pop    rdi
 100488a:	c6                   	(bad)  
 100488b:	0c 07                	or     al,0x7
 100488d:	08 00                	or     BYTE PTR [rax],al
 100488f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 1004892:	00 00                	add    BYTE PTR [rax],al
 1004894:	b4 07                	mov    ah,0x7
 1004896:	00 00                	add    BYTE PTR [rax],al
 1004898:	53                   	push   rbx
 1004899:	34 00                	xor    al,0x0
 100489b:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
 100489e:	00 00                	add    BYTE PTR [rax],al
 10048a0:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
 10048a3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 10048a9:	67 c6                	addr32 (bad) 
 10048ab:	0c 07                	or     al,0x7
 10048ad:	08 00                	or     BYTE PTR [rax],al
 10048af:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 10048b2:	00 00                	add    BYTE PTR [rax],al
 10048b4:	d4                   	(bad)  
 10048b5:	07                   	(bad)  
 10048b6:	00 00                	add    BYTE PTR [rax],al
 10048b8:	5f                   	pop    rdi
 10048b9:	34 00                	xor    al,0x0
 10048bb:	00 2d 00 00 00 00    	add    BYTE PTR [rip+0x0],ch        # 10048c1 <ensure_support_x64.end+0x7ea>
 10048c1:	41 0e                	rex.B (bad) 
 10048c3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 10048c9:	68 c6 0c 07 08       	push   0x8070cc6
 10048ce:	00 00                	add    BYTE PTR [rax],al
 10048d0:	1c 00                	sbb    al,0x0
 10048d2:	00 00                	add    BYTE PTR [rax],al
 10048d4:	f4                   	hlt    
 10048d5:	07                   	(bad)  
 10048d6:	00 00                	add    BYTE PTR [rax],al
 10048d8:	6c                   	ins    BYTE PTR es:[rdi],dx
 10048d9:	34 00                	xor    al,0x0
 10048db:	00 b8 00 00 00 00    	add    BYTE PTR [rax+0x0],bh
 10048e1:	41 0e                	rex.B (bad) 
 10048e3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 10048e9:	02 b3 c6 0c 07 08    	add    dh,BYTE PTR [rbx+0x8070cc6]
 10048ef:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 10048f2:	00 00                	add    BYTE PTR [rax],al
 10048f4:	14 08                	adc    al,0x8
 10048f6:	00 00                	add    BYTE PTR [rax],al
 10048f8:	04 35                	add    al,0x35
 10048fa:	00 00                	add    BYTE PTR [rax],al
 10048fc:	3e 00 00             	add    BYTE PTR ds:[rax],al
 10048ff:	00 00                	add    BYTE PTR [rax],al
 1004901:	41 0e                	rex.B (bad) 
 1004903:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004909:	79 c6                	jns    10048d1 <ensure_support_x64.end+0x7fa>
 100490b:	0c 07                	or     al,0x7
 100490d:	08 00                	or     BYTE PTR [rax],al
 100490f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 1004912:	00 00                	add    BYTE PTR [rax],al
 1004914:	34 08                	xor    al,0x8
 1004916:	00 00                	add    BYTE PTR [rax],al
 1004918:	22 35 00 00 a9 00    	and    dh,BYTE PTR [rip+0xa90000]        # 1a9491e <kernel_end+0xa78926>
 100491e:	00 00                	add    BYTE PTR [rax],al
 1004920:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
 1004923:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004929:	02 a4 c6 0c 07 08 00 	add    ah,BYTE PTR [rsi+rax*8+0x8070c]
 1004930:	1c 00                	sbb    al,0x0
 1004932:	00 00                	add    BYTE PTR [rax],al
 1004934:	54                   	push   rsp
 1004935:	08 00                	or     BYTE PTR [rax],al
 1004937:	00 ab 35 00 00 9b    	add    BYTE PTR [rbx-0x64ffffcb],ch
 100493d:	00 00                	add    BYTE PTR [rax],al
 100493f:	00 00                	add    BYTE PTR [rax],al
 1004941:	41 0e                	rex.B (bad) 
 1004943:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004949:	02 96 c6 0c 07 08    	add    dl,BYTE PTR [rsi+0x8070cc6]
 100494f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 1004952:	00 00                	add    BYTE PTR [rax],al
 1004954:	74 08                	je     100495e <ensure_support_x64.end+0x887>
 1004956:	00 00                	add    BYTE PTR [rax],al
 1004958:	26 36 00 00          	es add BYTE PTR ss:[rax],al
 100495c:	9b                   	fwait
 100495d:	00 00                	add    BYTE PTR [rax],al
 100495f:	00 00                	add    BYTE PTR [rax],al
 1004961:	41 0e                	rex.B (bad) 
 1004963:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004969:	02 96 c6 0c 07 08    	add    dl,BYTE PTR [rsi+0x8070cc6]
 100496f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 1004972:	00 00                	add    BYTE PTR [rax],al
 1004974:	94                   	xchg   esp,eax
 1004975:	08 00                	or     BYTE PTR [rax],al
 1004977:	00 a1 36 00 00 27    	add    BYTE PTR [rcx+0x27000036],ah
 100497d:	01 00                	add    DWORD PTR [rax],eax
 100497f:	00 00                	add    BYTE PTR [rax],al
 1004981:	41 0e                	rex.B (bad) 
 1004983:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004989:	03 22                	add    esp,DWORD PTR [rdx]
 100498b:	01 c6                	add    esi,eax
 100498d:	0c 07                	or     al,0x7
 100498f:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
 1004992:	00 00                	add    BYTE PTR [rax],al
 1004994:	b4 08                	mov    ah,0x8
 1004996:	00 00                	add    BYTE PTR [rax],al
 1004998:	a8 37                	test   al,0x37
 100499a:	00 00                	add    BYTE PTR [rax],al
 100499c:	bd 00 00 00 00       	mov    ebp,0x0
 10049a1:	41 0e                	rex.B (bad) 
 10049a3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 10049a9:	02 b8 c6 0c 07 08    	add    bh,BYTE PTR [rax+0x8070cc6]
 10049af:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 10049b2:	00 00                	add    BYTE PTR [rax],al
 10049b4:	d4                   	(bad)  
 10049b5:	08 00                	or     BYTE PTR [rax],al
 10049b7:	00 45 38             	add    BYTE PTR [rbp+0x38],al
 10049ba:	00 00                	add    BYTE PTR [rax],al
 10049bc:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
 10049bd:	00 00                	add    BYTE PTR [rax],al
 10049bf:	00 00                	add    BYTE PTR [rax],al
 10049c1:	41 0e                	rex.B (bad) 
 10049c3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 10049c9:	02 a2 c6 0c 07 08    	add    ah,BYTE PTR [rdx+0x8070cc6]
 10049cf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 10049d2:	00 00                	add    BYTE PTR [rax],al
 10049d4:	f4                   	hlt    
 10049d5:	08 00                	or     BYTE PTR [rax],al
 10049d7:	00 cc                	add    ah,cl
 10049d9:	38 00                	cmp    BYTE PTR [rax],al
 10049db:	00 b2 00 00 00 00    	add    BYTE PTR [rdx+0x0],dh
 10049e1:	41 0e                	rex.B (bad) 
 10049e3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 10049e9:	02 ad c6 0c 07 08    	add    ch,BYTE PTR [rbp+0x8070cc6]
 10049ef:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 10049f2:	00 00                	add    BYTE PTR [rax],al
 10049f4:	14 09                	adc    al,0x9
 10049f6:	00 00                	add    BYTE PTR [rax],al
 10049f8:	5e                   	pop    rsi
 10049f9:	39 00                	cmp    DWORD PTR [rax],eax
 10049fb:	00 52 01             	add    BYTE PTR [rdx+0x1],dl
 10049fe:	00 00                	add    BYTE PTR [rax],al
 1004a00:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
 1004a03:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004a09:	03 4d 01             	add    ecx,DWORD PTR [rbp+0x1]
 1004a0c:	c6                   	(bad)  
 1004a0d:	0c 07                	or     al,0x7
 1004a0f:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
 1004a12:	00 00                	add    BYTE PTR [rax],al
 1004a14:	34 09                	xor    al,0x9
 1004a16:	00 00                	add    BYTE PTR [rax],al
 1004a18:	90                   	nop
 1004a19:	3a 00                	cmp    al,BYTE PTR [rax]
 1004a1b:	00 32                	add    BYTE PTR [rdx],dh
 1004a1d:	01 00                	add    DWORD PTR [rax],eax
 1004a1f:	00 00                	add    BYTE PTR [rax],al
 1004a21:	41 0e                	rex.B (bad) 
 1004a23:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004a29:	03 2d 01 c6 0c 07    	add    ebp,DWORD PTR [rip+0x70cc601]        # 80d1030 <kernel_end+0x70b5038>
 1004a2f:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
 1004a32:	00 00                	add    BYTE PTR [rax],al
 1004a34:	54                   	push   rsp
 1004a35:	09 00                	or     DWORD PTR [rax],eax
 1004a37:	00 a2 3b 00 00 45    	add    BYTE PTR [rdx+0x4500003b],ah
 1004a3d:	01 00                	add    DWORD PTR [rax],eax
 1004a3f:	00 00                	add    BYTE PTR [rax],al
 1004a41:	41 0e                	rex.B (bad) 
 1004a43:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004a49:	03 40 01             	add    eax,DWORD PTR [rax+0x1]
 1004a4c:	c6                   	(bad)  
 1004a4d:	0c 07                	or     al,0x7
 1004a4f:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
 1004a52:	00 00                	add    BYTE PTR [rax],al
 1004a54:	74 09                	je     1004a5f <ensure_support_x64.end+0x988>
 1004a56:	00 00                	add    BYTE PTR [rax],al
 1004a58:	c7                   	(bad)  
 1004a59:	3c 00                	cmp    al,0x0
 1004a5b:	00 45 01             	add    BYTE PTR [rbp+0x1],al
 1004a5e:	00 00                	add    BYTE PTR [rax],al
 1004a60:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
 1004a63:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004a69:	03 40 01             	add    eax,DWORD PTR [rax+0x1]
 1004a6c:	c6                   	(bad)  
 1004a6d:	0c 07                	or     al,0x7
 1004a6f:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
 1004a72:	00 00                	add    BYTE PTR [rax],al
 1004a74:	94                   	xchg   esp,eax
 1004a75:	09 00                	or     DWORD PTR [rax],eax
 1004a77:	00 ec                	add    ah,ch
 1004a79:	3d 00 00 13 02       	cmp    eax,0x2130000
 1004a7e:	00 00                	add    BYTE PTR [rax],al
 1004a80:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
 1004a83:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004a89:	03 0e                	add    ecx,DWORD PTR [rsi]
 1004a8b:	02 c6                	add    al,dh
 1004a8d:	0c 07                	or     al,0x7
 1004a8f:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
 1004a92:	00 00                	add    BYTE PTR [rax],al
 1004a94:	b4 09                	mov    ah,0x9
 1004a96:	00 00                	add    BYTE PTR [rax],al
 1004a98:	df 3f                	fistp  QWORD PTR [rdi]
 1004a9a:	00 00                	add    BYTE PTR [rax],al
 1004a9c:	28 01                	sub    BYTE PTR [rcx],al
 1004a9e:	00 00                	add    BYTE PTR [rax],al
 1004aa0:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
 1004aa3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004aa9:	03 23                	add    esp,DWORD PTR [rbx]
 1004aab:	01 c6                	add    esi,eax
 1004aad:	0c 07                	or     al,0x7
 1004aaf:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
 1004ab2:	00 00                	add    BYTE PTR [rax],al
 1004ab4:	d4                   	(bad)  
 1004ab5:	09 00                	or     DWORD PTR [rax],eax
 1004ab7:	00 e7                	add    bh,ah
 1004ab9:	40 00 00             	add    BYTE PTR [rax],al
 1004abc:	79 01                	jns    1004abf <ensure_support_x64.end+0x9e8>
 1004abe:	00 00                	add    BYTE PTR [rax],al
 1004ac0:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
 1004ac3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004ac9:	03 74 01 c6          	add    esi,DWORD PTR [rcx+rax*1-0x3a]
 1004acd:	0c 07                	or     al,0x7
 1004acf:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
 1004ad2:	00 00                	add    BYTE PTR [rax],al
 1004ad4:	f4                   	hlt    
 1004ad5:	09 00                	or     DWORD PTR [rax],eax
 1004ad7:	00 40 42             	add    BYTE PTR [rax+0x42],al
 1004ada:	00 00                	add    BYTE PTR [rax],al
 1004adc:	d0 00                	rol    BYTE PTR [rax],1
 1004ade:	00 00                	add    BYTE PTR [rax],al
 1004ae0:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
 1004ae3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004ae9:	02 cb                	add    cl,bl
 1004aeb:	c6                   	(bad)  
 1004aec:	0c 07                	or     al,0x7
 1004aee:	08 00                	or     BYTE PTR [rax],al
 1004af0:	1c 00                	sbb    al,0x0
 1004af2:	00 00                	add    BYTE PTR [rax],al
 1004af4:	14 0a                	adc    al,0xa
 1004af6:	00 00                	add    BYTE PTR [rax],al
 1004af8:	f0 42 00 00          	lock rex.X add BYTE PTR [rax],al
 1004afc:	18 01                	sbb    BYTE PTR [rcx],al
 1004afe:	00 00                	add    BYTE PTR [rax],al
 1004b00:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
 1004b03:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004b09:	03 13                	add    edx,DWORD PTR [rbx]
 1004b0b:	01 c6                	add    esi,eax
 1004b0d:	0c 07                	or     al,0x7
 1004b0f:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
 1004b12:	00 00                	add    BYTE PTR [rax],al
 1004b14:	34 0a                	xor    al,0xa
 1004b16:	00 00                	add    BYTE PTR [rax],al
 1004b18:	e8 43 00 00 42       	call   43004b60 <MULTIBOOT_LOADED_MAGIC+0xc28e8d7>
 1004b1d:	00 00                	add    BYTE PTR [rax],al
 1004b1f:	00 00                	add    BYTE PTR [rax],al
 1004b21:	41 0e                	rex.B (bad) 
 1004b23:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004b29:	7d c6                	jge    1004af1 <ensure_support_x64.end+0xa1a>
 1004b2b:	0c 07                	or     al,0x7
 1004b2d:	08 00                	or     BYTE PTR [rax],al
 1004b2f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 1004b32:	00 00                	add    BYTE PTR [rax],al
 1004b34:	54                   	push   rsp
 1004b35:	0a 00                	or     al,BYTE PTR [rax]
 1004b37:	00 0a                	add    BYTE PTR [rdx],cl
 1004b39:	44 00 00             	add    BYTE PTR [rax],r8b
 1004b3c:	3d 00 00 00 00       	cmp    eax,0x0
 1004b41:	41 0e                	rex.B (bad) 
 1004b43:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004b49:	78 c6                	js     1004b11 <ensure_support_x64.end+0xa3a>
 1004b4b:	0c 07                	or     al,0x7
 1004b4d:	08 00                	or     BYTE PTR [rax],al
 1004b4f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 1004b52:	00 00                	add    BYTE PTR [rax],al
 1004b54:	74 0a                	je     1004b60 <ensure_support_x64.end+0xa89>
 1004b56:	00 00                	add    BYTE PTR [rax],al
 1004b58:	27                   	(bad)  
 1004b59:	44 00 00             	add    BYTE PTR [rax],r8b
 1004b5c:	3d 00 00 00 00       	cmp    eax,0x0
 1004b61:	41 0e                	rex.B (bad) 
 1004b63:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004b69:	78 c6                	js     1004b31 <ensure_support_x64.end+0xa5a>
 1004b6b:	0c 07                	or     al,0x7
 1004b6d:	08 00                	or     BYTE PTR [rax],al
 1004b6f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 1004b72:	00 00                	add    BYTE PTR [rax],al
 1004b74:	94                   	xchg   esp,eax
 1004b75:	0a 00                	or     al,BYTE PTR [rax]
 1004b77:	00 44 44 00          	add    BYTE PTR [rsp+rax*2+0x0],al
 1004b7b:	00 a2 00 00 00 00    	add    BYTE PTR [rdx+0x0],ah
 1004b81:	41 0e                	rex.B (bad) 
 1004b83:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004b89:	02 9d c6 0c 07 08    	add    bl,BYTE PTR [rbp+0x8070cc6]
 1004b8f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 1004b92:	00 00                	add    BYTE PTR [rax],al
 1004b94:	b4 0a                	mov    ah,0xa
 1004b96:	00 00                	add    BYTE PTR [rax],al
 1004b98:	c6 44 00 00 dc       	mov    BYTE PTR [rax+rax*1+0x0],0xdc
 1004b9d:	00 00                	add    BYTE PTR [rax],al
 1004b9f:	00 00                	add    BYTE PTR [rax],al
 1004ba1:	41 0e                	rex.B (bad) 
 1004ba3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004ba9:	02 d7                	add    dl,bh
 1004bab:	c6                   	(bad)  
 1004bac:	0c 07                	or     al,0x7
 1004bae:	08 00                	or     BYTE PTR [rax],al
 1004bb0:	1c 00                	sbb    al,0x0
 1004bb2:	00 00                	add    BYTE PTR [rax],al
 1004bb4:	d4                   	(bad)  
 1004bb5:	0a 00                	or     al,BYTE PTR [rax]
 1004bb7:	00 82 45 00 00 a2    	add    BYTE PTR [rdx-0x5dffffbb],al
 1004bbd:	00 00                	add    BYTE PTR [rax],al
 1004bbf:	00 00                	add    BYTE PTR [rax],al
 1004bc1:	41 0e                	rex.B (bad) 
 1004bc3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004bc9:	02 9d c6 0c 07 08    	add    bl,BYTE PTR [rbp+0x8070cc6]
 1004bcf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 1004bd2:	00 00                	add    BYTE PTR [rax],al
 1004bd4:	f4                   	hlt    
 1004bd5:	0a 00                	or     al,BYTE PTR [rax]
 1004bd7:	00 04 46             	add    BYTE PTR [rsi+rax*2],al
 1004bda:	00 00                	add    BYTE PTR [rax],al
 1004bdc:	67 01 00             	add    DWORD PTR [eax],eax
 1004bdf:	00 00                	add    BYTE PTR [rax],al
 1004be1:	41 0e                	rex.B (bad) 
 1004be3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004be9:	03 62 01             	add    esp,DWORD PTR [rdx+0x1]
 1004bec:	c6                   	(bad)  
 1004bed:	0c 07                	or     al,0x7
 1004bef:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
 1004bf2:	00 00                	add    BYTE PTR [rax],al
 1004bf4:	14 0b                	adc    al,0xb
 1004bf6:	00 00                	add    BYTE PTR [rax],al
 1004bf8:	4b                   	rex.WXB
 1004bf9:	47 00 00             	rex.RXB add BYTE PTR [r8],r8b
 1004bfc:	b6 00                	mov    dh,0x0
 1004bfe:	00 00                	add    BYTE PTR [rax],al
 1004c00:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
 1004c03:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004c09:	02 b1 c6 0c 07 08    	add    dh,BYTE PTR [rcx+0x8070cc6]
 1004c0f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 1004c12:	00 00                	add    BYTE PTR [rax],al
 1004c14:	34 0b                	xor    al,0xb
 1004c16:	00 00                	add    BYTE PTR [rax],al
 1004c18:	e1 47                	loope  1004c61 <ensure_support_x64.end+0xb8a>
 1004c1a:	00 00                	add    BYTE PTR [rax],al
 1004c1c:	f0 00 00             	lock add BYTE PTR [rax],al
 1004c1f:	00 00                	add    BYTE PTR [rax],al
 1004c21:	41 0e                	rex.B (bad) 
 1004c23:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004c29:	02 eb                	add    ch,bl
 1004c2b:	c6                   	(bad)  
 1004c2c:	0c 07                	or     al,0x7
 1004c2e:	08 00                	or     BYTE PTR [rax],al
 1004c30:	1c 00                	sbb    al,0x0
 1004c32:	00 00                	add    BYTE PTR [rax],al
 1004c34:	54                   	push   rsp
 1004c35:	0b 00                	or     eax,DWORD PTR [rax]
 1004c37:	00 b1 48 00 00 b6    	add    BYTE PTR [rcx-0x49ffffb8],dh
 1004c3d:	00 00                	add    BYTE PTR [rax],al
 1004c3f:	00 00                	add    BYTE PTR [rax],al
 1004c41:	41 0e                	rex.B (bad) 
 1004c43:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004c49:	02 b1 c6 0c 07 08    	add    dh,BYTE PTR [rcx+0x8070cc6]
 1004c4f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 1004c52:	00 00                	add    BYTE PTR [rax],al
 1004c54:	74 0b                	je     1004c61 <ensure_support_x64.end+0xb8a>
 1004c56:	00 00                	add    BYTE PTR [rax],al
 1004c58:	47                   	rex.RXB
 1004c59:	49 00 00             	rex.WB add BYTE PTR [r8],al
 1004c5c:	8b 02                	mov    eax,DWORD PTR [rdx]
 1004c5e:	00 00                	add    BYTE PTR [rax],al
 1004c60:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
 1004c63:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004c69:	03 86 02 c6 0c 07    	add    eax,DWORD PTR [rsi+0x70cc602]
 1004c6f:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
 1004c72:	00 00                	add    BYTE PTR [rax],al
 1004c74:	94                   	xchg   esp,eax
 1004c75:	0b 00                	or     eax,DWORD PTR [rax]
 1004c77:	00 b2 4b 00 00 39    	add    BYTE PTR [rdx+0x3900004b],dh
 1004c7d:	01 00                	add    DWORD PTR [rax],eax
 1004c7f:	00 00                	add    BYTE PTR [rax],al
 1004c81:	41 0e                	rex.B (bad) 
 1004c83:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004c89:	03 34 01             	add    esi,DWORD PTR [rcx+rax*1]
 1004c8c:	c6                   	(bad)  
 1004c8d:	0c 07                	or     al,0x7
 1004c8f:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
 1004c92:	00 00                	add    BYTE PTR [rax],al
 1004c94:	b4 0b                	mov    ah,0xb
 1004c96:	00 00                	add    BYTE PTR [rax],al
 1004c98:	cb                   	retf   
 1004c99:	4c 00 00             	rex.WR add BYTE PTR [rax],r8b
 1004c9c:	1c 01                	sbb    al,0x1
 1004c9e:	00 00                	add    BYTE PTR [rax],al
 1004ca0:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
 1004ca3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004ca9:	03 17                	add    edx,DWORD PTR [rdi]
 1004cab:	01 c6                	add    esi,eax
 1004cad:	0c 07                	or     al,0x7
 1004caf:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
 1004cb2:	00 00                	add    BYTE PTR [rax],al
 1004cb4:	d4                   	(bad)  
 1004cb5:	0b 00                	or     eax,DWORD PTR [rax]
 1004cb7:	00 c7                	add    bh,al
 1004cb9:	4d 00 00             	rex.WRB add BYTE PTR [r8],r8b
 1004cbc:	60                   	(bad)  
 1004cbd:	01 00                	add    DWORD PTR [rax],eax
 1004cbf:	00 00                	add    BYTE PTR [rax],al
 1004cc1:	41 0e                	rex.B (bad) 
 1004cc3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004cc9:	03 5b 01             	add    ebx,DWORD PTR [rbx+0x1]
 1004ccc:	c6                   	(bad)  
 1004ccd:	0c 07                	or     al,0x7
 1004ccf:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
 1004cd2:	00 00                	add    BYTE PTR [rax],al
 1004cd4:	f4                   	hlt    
 1004cd5:	0b 00                	or     eax,DWORD PTR [rax]
 1004cd7:	00 07                	add    BYTE PTR [rdi],al
 1004cd9:	4f 00 00             	rex.WRXB add BYTE PTR [r8],r8b
 1004cdc:	60                   	(bad)  
 1004cdd:	01 00                	add    DWORD PTR [rax],eax
 1004cdf:	00 00                	add    BYTE PTR [rax],al
 1004ce1:	41 0e                	rex.B (bad) 
 1004ce3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004ce9:	03 5b 01             	add    ebx,DWORD PTR [rbx+0x1]
 1004cec:	c6                   	(bad)  
 1004ced:	0c 07                	or     al,0x7
 1004cef:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
 1004cf2:	00 00                	add    BYTE PTR [rax],al
 1004cf4:	14 0c                	adc    al,0xc
 1004cf6:	00 00                	add    BYTE PTR [rax],al
 1004cf8:	47 50                	rex.RXB push r8
 1004cfa:	00 00                	add    BYTE PTR [rax],al
 1004cfc:	26 00 00             	add    BYTE PTR es:[rax],al
 1004cff:	00 00                	add    BYTE PTR [rax],al
 1004d01:	41 0e                	rex.B (bad) 
 1004d03:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004d09:	61                   	(bad)  
 1004d0a:	c6                   	(bad)  
 1004d0b:	0c 07                	or     al,0x7
 1004d0d:	08 00                	or     BYTE PTR [rax],al
 1004d0f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 1004d12:	00 00                	add    BYTE PTR [rax],al
 1004d14:	34 0c                	xor    al,0xc
 1004d16:	00 00                	add    BYTE PTR [rax],al
 1004d18:	4d 50                	rex.WRB push r8
 1004d1a:	00 00                	add    BYTE PTR [rax],al
 1004d1c:	68 02 00 00 00       	push   0x2
 1004d21:	41 0e                	rex.B (bad) 
 1004d23:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004d29:	03 63 02             	add    esp,DWORD PTR [rbx+0x2]
 1004d2c:	c6                   	(bad)  
 1004d2d:	0c 07                	or     al,0x7
 1004d2f:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
 1004d32:	00 00                	add    BYTE PTR [rax],al
 1004d34:	54                   	push   rsp
 1004d35:	0c 00                	or     al,0x0
 1004d37:	00 95 52 00 00 60    	add    BYTE PTR [rbp+0x60000052],dl
 1004d3d:	01 00                	add    DWORD PTR [rax],eax
 1004d3f:	00 00                	add    BYTE PTR [rax],al
 1004d41:	41 0e                	rex.B (bad) 
 1004d43:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004d49:	03 5b 01             	add    ebx,DWORD PTR [rbx+0x1]
 1004d4c:	c6                   	(bad)  
 1004d4d:	0c 07                	or     al,0x7
 1004d4f:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
 1004d52:	00 00                	add    BYTE PTR [rax],al
 1004d54:	74 0c                	je     1004d62 <ensure_support_x64.end+0xc8b>
 1004d56:	00 00                	add    BYTE PTR [rax],al
 1004d58:	d5                   	(bad)  
 1004d59:	53                   	push   rbx
 1004d5a:	00 00                	add    BYTE PTR [rax],al
 1004d5c:	29 00                	sub    DWORD PTR [rax],eax
 1004d5e:	00 00                	add    BYTE PTR [rax],al
 1004d60:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
 1004d63:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004d69:	64 c6                	fs (bad) 
 1004d6b:	0c 07                	or     al,0x7
 1004d6d:	08 00                	or     BYTE PTR [rax],al
 1004d6f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 1004d72:	00 00                	add    BYTE PTR [rax],al
 1004d74:	94                   	xchg   esp,eax
 1004d75:	0c 00                	or     al,0x0
 1004d77:	00 de                	add    dh,bl
 1004d79:	53                   	push   rbx
 1004d7a:	00 00                	add    BYTE PTR [rax],al
 1004d7c:	34 00                	xor    al,0x0
 1004d7e:	00 00                	add    BYTE PTR [rax],al
 1004d80:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
 1004d83:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004d89:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 1004d8a:	c6                   	(bad)  
 1004d8b:	0c 07                	or     al,0x7
 1004d8d:	08 00                	or     BYTE PTR [rax],al
 1004d8f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 1004d92:	00 00                	add    BYTE PTR [rax],al
 1004d94:	b4 0c                	mov    ah,0xc
 1004d96:	00 00                	add    BYTE PTR [rax],al
 1004d98:	f2 53                	repnz push rbx
 1004d9a:	00 00                	add    BYTE PTR [rax],al
 1004d9c:	ef                   	out    dx,eax
 1004d9d:	00 00                	add    BYTE PTR [rax],al
 1004d9f:	00 00                	add    BYTE PTR [rax],al
 1004da1:	41 0e                	rex.B (bad) 
 1004da3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004da9:	02 ea                	add    ch,dl
 1004dab:	c6                   	(bad)  
 1004dac:	0c 07                	or     al,0x7
 1004dae:	08 00                	or     BYTE PTR [rax],al
 1004db0:	1c 00                	sbb    al,0x0
 1004db2:	00 00                	add    BYTE PTR [rax],al
 1004db4:	d4                   	(bad)  
 1004db5:	0c 00                	or     al,0x0
 1004db7:	00 c1                	add    cl,al
 1004db9:	54                   	push   rsp
 1004dba:	00 00                	add    BYTE PTR [rax],al
 1004dbc:	38 00                	cmp    BYTE PTR [rax],al
 1004dbe:	00 00                	add    BYTE PTR [rax],al
 1004dc0:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
 1004dc3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004dc9:	73 c6                	jae    1004d91 <ensure_support_x64.end+0xcba>
 1004dcb:	0c 07                	or     al,0x7
 1004dcd:	08 00                	or     BYTE PTR [rax],al
 1004dcf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 1004dd2:	00 00                	add    BYTE PTR [rax],al
 1004dd4:	f4                   	hlt    
 1004dd5:	0c 00                	or     al,0x0
 1004dd7:	00 d9                	add    cl,bl
 1004dd9:	54                   	push   rsp
 1004dda:	00 00                	add    BYTE PTR [rax],al
 1004ddc:	34 01                	xor    al,0x1
 1004dde:	00 00                	add    BYTE PTR [rax],al
 1004de0:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
 1004de3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004de9:	03 2f                	add    ebp,DWORD PTR [rdi]
 1004deb:	01 c6                	add    esi,eax
 1004ded:	0c 07                	or     al,0x7
 1004def:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
 1004df2:	00 00                	add    BYTE PTR [rax],al
 1004df4:	14 0d                	adc    al,0xd
 1004df6:	00 00                	add    BYTE PTR [rax],al
 1004df8:	ed                   	in     eax,dx
 1004df9:	55                   	push   rbp
 1004dfa:	00 00                	add    BYTE PTR [rax],al
 1004dfc:	34 01                	xor    al,0x1
 1004dfe:	00 00                	add    BYTE PTR [rax],al
 1004e00:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
 1004e03:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004e09:	03 2f                	add    ebp,DWORD PTR [rdi]
 1004e0b:	01 c6                	add    esi,eax
 1004e0d:	0c 07                	or     al,0x7
 1004e0f:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
 1004e12:	00 00                	add    BYTE PTR [rax],al
 1004e14:	34 0d                	xor    al,0xd
 1004e16:	00 00                	add    BYTE PTR [rax],al
 1004e18:	01 57 00             	add    DWORD PTR [rdi+0x0],edx
 1004e1b:	00 34 01             	add    BYTE PTR [rcx+rax*1],dh
 1004e1e:	00 00                	add    BYTE PTR [rax],al
 1004e20:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
 1004e23:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004e29:	03 2f                	add    ebp,DWORD PTR [rdi]
 1004e2b:	01 c6                	add    esi,eax
 1004e2d:	0c 07                	or     al,0x7
 1004e2f:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
 1004e32:	00 00                	add    BYTE PTR [rax],al
 1004e34:	54                   	push   rsp
 1004e35:	0d 00 00 15 58       	or     eax,0x58150000
 1004e3a:	00 00                	add    BYTE PTR [rax],al
 1004e3c:	34 01                	xor    al,0x1
 1004e3e:	00 00                	add    BYTE PTR [rax],al
 1004e40:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
 1004e43:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004e49:	03 2f                	add    ebp,DWORD PTR [rdi]
 1004e4b:	01 c6                	add    esi,eax
 1004e4d:	0c 07                	or     al,0x7
 1004e4f:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
 1004e52:	00 00                	add    BYTE PTR [rax],al
 1004e54:	74 0d                	je     1004e63 <ensure_support_x64.end+0xd8c>
 1004e56:	00 00                	add    BYTE PTR [rax],al
 1004e58:	29 59 00             	sub    DWORD PTR [rcx+0x0],ebx
 1004e5b:	00 c1                	add    cl,al
 1004e5d:	01 00                	add    DWORD PTR [rax],eax
 1004e5f:	00 00                	add    BYTE PTR [rax],al
 1004e61:	41 0e                	rex.B (bad) 
 1004e63:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004e69:	03 bc 01 c6 0c 07 08 	add    edi,DWORD PTR [rcx+rax*1+0x8070cc6]
 1004e70:	1c 00                	sbb    al,0x0
 1004e72:	00 00                	add    BYTE PTR [rax],al
 1004e74:	94                   	xchg   esp,eax
 1004e75:	0d 00 00 ca 5a       	or     eax,0x5aca0000
 1004e7a:	00 00                	add    BYTE PTR [rax],al
 1004e7c:	c1 01 00             	rol    DWORD PTR [rcx],0x0
 1004e7f:	00 00                	add    BYTE PTR [rax],al
 1004e81:	41 0e                	rex.B (bad) 
 1004e83:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004e89:	03 bc 01 c6 0c 07 08 	add    edi,DWORD PTR [rcx+rax*1+0x8070cc6]
 1004e90:	1c 00                	sbb    al,0x0
 1004e92:	00 00                	add    BYTE PTR [rax],al
 1004e94:	b4 0d                	mov    ah,0xd
 1004e96:	00 00                	add    BYTE PTR [rax],al
 1004e98:	6b 5c 00 00 ac       	imul   ebx,DWORD PTR [rax+rax*1+0x0],0xffffffac
 1004e9d:	02 00                	add    al,BYTE PTR [rax]
 1004e9f:	00 00                	add    BYTE PTR [rax],al
 1004ea1:	41 0e                	rex.B (bad) 
 1004ea3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004ea9:	03 a7 02 c6 0c 07    	add    esp,DWORD PTR [rdi+0x70cc602]
 1004eaf:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
 1004eb2:	00 00                	add    BYTE PTR [rax],al
 1004eb4:	d4                   	(bad)  
 1004eb5:	0d 00 00 f7 5e       	or     eax,0x5ef70000
 1004eba:	00 00                	add    BYTE PTR [rax],al
 1004ebc:	ac                   	lods   al,BYTE PTR ds:[rsi]
 1004ebd:	02 00                	add    al,BYTE PTR [rax]
 1004ebf:	00 00                	add    BYTE PTR [rax],al
 1004ec1:	41 0e                	rex.B (bad) 
 1004ec3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004ec9:	03 a7 02 c6 0c 07    	add    esp,DWORD PTR [rdi+0x70cc602]
 1004ecf:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
 1004ed2:	00 00                	add    BYTE PTR [rax],al
 1004ed4:	f4                   	hlt    
 1004ed5:	0d 00 00 83 61       	or     eax,0x61830000
 1004eda:	00 00                	add    BYTE PTR [rax],al
 1004edc:	c2 02 00             	ret    0x2
 1004edf:	00 00                	add    BYTE PTR [rax],al
 1004ee1:	41 0e                	rex.B (bad) 
 1004ee3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004ee9:	03 bd 02 c6 0c 07    	add    edi,DWORD PTR [rbp+0x70cc602]
 1004eef:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
 1004ef2:	00 00                	add    BYTE PTR [rax],al
 1004ef4:	14 0e                	adc    al,0xe
 1004ef6:	00 00                	add    BYTE PTR [rax],al
 1004ef8:	25 64 00 00 80       	and    eax,0x80000064
 1004efd:	01 00                	add    DWORD PTR [rax],eax
 1004eff:	00 00                	add    BYTE PTR [rax],al
 1004f01:	41 0e                	rex.B (bad) 
 1004f03:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004f09:	03 7b 01             	add    edi,DWORD PTR [rbx+0x1]
 1004f0c:	c6                   	(bad)  
 1004f0d:	0c 07                	or     al,0x7
 1004f0f:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
 1004f12:	00 00                	add    BYTE PTR [rax],al
 1004f14:	34 0e                	xor    al,0xe
 1004f16:	00 00                	add    BYTE PTR [rax],al
 1004f18:	85 65 00             	test   DWORD PTR [rbp+0x0],esp
 1004f1b:	00 80 01 00 00 00    	add    BYTE PTR [rax+0x1],al
 1004f21:	41 0e                	rex.B (bad) 
 1004f23:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004f29:	03 7b 01             	add    edi,DWORD PTR [rbx+0x1]
 1004f2c:	c6                   	(bad)  
 1004f2d:	0c 07                	or     al,0x7
 1004f2f:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
 1004f32:	00 00                	add    BYTE PTR [rax],al
 1004f34:	54                   	push   rsp
 1004f35:	0e                   	(bad)  
 1004f36:	00 00                	add    BYTE PTR [rax],al
 1004f38:	e5 66                	in     eax,0x66
 1004f3a:	00 00                	add    BYTE PTR [rax],al
 1004f3c:	80 01 00             	add    BYTE PTR [rcx],0x0
 1004f3f:	00 00                	add    BYTE PTR [rax],al
 1004f41:	41 0e                	rex.B (bad) 
 1004f43:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004f49:	03 7b 01             	add    edi,DWORD PTR [rbx+0x1]
 1004f4c:	c6                   	(bad)  
 1004f4d:	0c 07                	or     al,0x7
 1004f4f:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
 1004f52:	00 00                	add    BYTE PTR [rax],al
 1004f54:	74 0e                	je     1004f64 <ensure_support_x64.end+0xe8d>
 1004f56:	00 00                	add    BYTE PTR [rax],al
 1004f58:	45 68 00 00 80 01    	rex.RB push 0x1800000
 1004f5e:	00 00                	add    BYTE PTR [rax],al
 1004f60:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
 1004f63:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004f69:	03 7b 01             	add    edi,DWORD PTR [rbx+0x1]
 1004f6c:	c6                   	(bad)  
 1004f6d:	0c 07                	or     al,0x7
 1004f6f:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
 1004f72:	00 00                	add    BYTE PTR [rax],al
 1004f74:	94                   	xchg   esp,eax
 1004f75:	0e                   	(bad)  
 1004f76:	00 00                	add    BYTE PTR [rax],al
 1004f78:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
 1004f79:	69 00 00 f3 00 00    	imul   eax,DWORD PTR [rax],0xf300
 1004f7f:	00 00                	add    BYTE PTR [rax],al
 1004f81:	41 0e                	rex.B (bad) 
 1004f83:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004f89:	02 ee                	add    ch,dh
 1004f8b:	c6                   	(bad)  
 1004f8c:	0c 07                	or     al,0x7
 1004f8e:	08 00                	or     BYTE PTR [rax],al
 1004f90:	1c 00                	sbb    al,0x0
 1004f92:	00 00                	add    BYTE PTR [rax],al
 1004f94:	b4 0e                	mov    ah,0xe
 1004f96:	00 00                	add    BYTE PTR [rax],al
 1004f98:	78 6a                	js     1005004 <ensure_support_x64.end+0xf2d>
 1004f9a:	00 00                	add    BYTE PTR [rax],al
 1004f9c:	af                   	scas   eax,DWORD PTR es:[rdi]
 1004f9d:	01 00                	add    DWORD PTR [rax],eax
 1004f9f:	00 00                	add    BYTE PTR [rax],al
 1004fa1:	41 0e                	rex.B (bad) 
 1004fa3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004fa9:	03 aa 01 c6 0c 07    	add    ebp,DWORD PTR [rdx+0x70cc601]
 1004faf:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
 1004fb2:	00 00                	add    BYTE PTR [rax],al
 1004fb4:	d4                   	(bad)  
 1004fb5:	0e                   	(bad)  
 1004fb6:	00 00                	add    BYTE PTR [rax],al
 1004fb8:	07                   	(bad)  
 1004fb9:	6c                   	ins    BYTE PTR es:[rdi],dx
 1004fba:	00 00                	add    BYTE PTR [rax],al
 1004fbc:	de 01                	fiadd  WORD PTR [rcx]
 1004fbe:	00 00                	add    BYTE PTR [rax],al
 1004fc0:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
 1004fc3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004fc9:	03 d9                	add    ebx,ecx
 1004fcb:	01 c6                	add    esi,eax
 1004fcd:	0c 07                	or     al,0x7
 1004fcf:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
 1004fd2:	00 00                	add    BYTE PTR [rax],al
 1004fd4:	f4                   	hlt    
 1004fd5:	0e                   	(bad)  
 1004fd6:	00 00                	add    BYTE PTR [rax],al
 1004fd8:	c5 6d 00             	(bad)  
 1004fdb:	00 36                	add    BYTE PTR [rsi],dh
 1004fdd:	02 00                	add    al,BYTE PTR [rax]
 1004fdf:	00 00                	add    BYTE PTR [rax],al
 1004fe1:	41 0e                	rex.B (bad) 
 1004fe3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1004fe9:	03 31                	add    esi,DWORD PTR [rcx]
 1004feb:	02 c6                	add    al,dh
 1004fed:	0c 07                	or     al,0x7
 1004fef:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
 1004ff2:	00 00                	add    BYTE PTR [rax],al
 1004ff4:	14 0f                	adc    al,0xf
 1004ff6:	00 00                	add    BYTE PTR [rax],al
 1004ff8:	db 6f 00             	fld    TBYTE PTR [rdi+0x0]
 1004ffb:	00 f8                	add    al,bh
 1004ffd:	02 00                	add    al,BYTE PTR [rax]
 1004fff:	00 00                	add    BYTE PTR [rax],al
 1005001:	41 0e                	rex.B (bad) 
 1005003:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1005009:	03 f3                	add    esi,ebx
 100500b:	02 c6                	add    al,dh
 100500d:	0c 07                	or     al,0x7
 100500f:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
 1005012:	00 00                	add    BYTE PTR [rax],al
 1005014:	34 0f                	xor    al,0xf
 1005016:	00 00                	add    BYTE PTR [rax],al
 1005018:	b3 72                	mov    bl,0x72
 100501a:	00 00                	add    BYTE PTR [rax],al
 100501c:	f8                   	clc    
 100501d:	02 00                	add    al,BYTE PTR [rax]
 100501f:	00 00                	add    BYTE PTR [rax],al
 1005021:	41 0e                	rex.B (bad) 
 1005023:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1005029:	03 f3                	add    esi,ebx
 100502b:	02 c6                	add    al,dh
 100502d:	0c 07                	or     al,0x7
 100502f:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
 1005032:	00 00                	add    BYTE PTR [rax],al
 1005034:	54                   	push   rsp
 1005035:	0f 00 00             	sldt   WORD PTR [rax]
 1005038:	8b 75 00             	mov    esi,DWORD PTR [rbp+0x0]
 100503b:	00 f8                	add    al,bh
 100503d:	02 00                	add    al,BYTE PTR [rax]
 100503f:	00 00                	add    BYTE PTR [rax],al
 1005041:	41 0e                	rex.B (bad) 
 1005043:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1005049:	03 f3                	add    esi,ebx
 100504b:	02 c6                	add    al,dh
 100504d:	0c 07                	or     al,0x7
 100504f:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
 1005052:	00 00                	add    BYTE PTR [rax],al
 1005054:	74 0f                	je     1005065 <ensure_support_x64.end+0xf8e>
 1005056:	00 00                	add    BYTE PTR [rax],al
 1005058:	63 78 00             	movsxd edi,DWORD PTR [rax+0x0]
 100505b:	00 ea                	add    dl,ch
 100505d:	01 00                	add    DWORD PTR [rax],eax
 100505f:	00 00                	add    BYTE PTR [rax],al
 1005061:	41 0e                	rex.B (bad) 
 1005063:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1005069:	03 e5                	add    esp,ebp
 100506b:	01 c6                	add    esi,eax
 100506d:	0c 07                	or     al,0x7
 100506f:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
 1005072:	00 00                	add    BYTE PTR [rax],al
 1005074:	94                   	xchg   esp,eax
 1005075:	0f 00 00             	sldt   WORD PTR [rax]
 1005078:	2d 7a 00 00 d8       	sub    eax,0xd800007a
 100507d:	03 00                	add    eax,DWORD PTR [rax]
 100507f:	00 00                	add    BYTE PTR [rax],al
 1005081:	41 0e                	rex.B (bad) 
 1005083:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1005089:	03 d3                	add    edx,ebx
 100508b:	03 c6                	add    eax,esi
 100508d:	0c 07                	or     al,0x7
 100508f:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
 1005092:	00 00                	add    BYTE PTR [rax],al
 1005094:	b4 0f                	mov    ah,0xf
 1005096:	00 00                	add    BYTE PTR [rax],al
 1005098:	e5 7d                	in     eax,0x7d
 100509a:	00 00                	add    BYTE PTR [rax],al
 100509c:	62 02                	(bad)  
 100509e:	00 00                	add    BYTE PTR [rax],al
 10050a0:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
 10050a3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 10050a9:	03 5d 02             	add    ebx,DWORD PTR [rbp+0x2]
 10050ac:	c6                   	(bad)  
 10050ad:	0c 07                	or     al,0x7
 10050af:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
 10050b2:	00 00                	add    BYTE PTR [rax],al
 10050b4:	d4                   	(bad)  
 10050b5:	0f 00 00             	sldt   WORD PTR [rax]
 10050b8:	27                   	(bad)  
 10050b9:	80 00 00             	add    BYTE PTR [rax],0x0
 10050bc:	20 00                	and    BYTE PTR [rax],al
 10050be:	00 00                	add    BYTE PTR [rax],al
 10050c0:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
 10050c3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 10050c9:	5b                   	pop    rbx
 10050ca:	c6                   	(bad)  
 10050cb:	0c 07                	or     al,0x7
 10050cd:	08 00                	or     BYTE PTR [rax],al
 10050cf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 10050d2:	00 00                	add    BYTE PTR [rax],al
 10050d4:	f4                   	hlt    
 10050d5:	0f 00 00             	sldt   WORD PTR [rax]
 10050d8:	27                   	(bad)  
 10050d9:	80 00 00             	add    BYTE PTR [rax],0x0
 10050dc:	20 00                	and    BYTE PTR [rax],al
 10050de:	00 00                	add    BYTE PTR [rax],al
 10050e0:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
 10050e3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 10050e9:	5b                   	pop    rbx
 10050ea:	c6                   	(bad)  
 10050eb:	0c 07                	or     al,0x7
 10050ed:	08 00                	or     BYTE PTR [rax],al
 10050ef:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 10050f2:	00 00                	add    BYTE PTR [rax],al
 10050f4:	14 10                	adc    al,0x10
 10050f6:	00 00                	add    BYTE PTR [rax],al
 10050f8:	27                   	(bad)  
 10050f9:	80 00 00             	add    BYTE PTR [rax],0x0
 10050fc:	20 00                	and    BYTE PTR [rax],al
 10050fe:	00 00                	add    BYTE PTR [rax],al
 1005100:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
 1005103:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1005109:	5b                   	pop    rbx
 100510a:	c6                   	(bad)  
 100510b:	0c 07                	or     al,0x7
 100510d:	08 00                	or     BYTE PTR [rax],al
 100510f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 1005112:	00 00                	add    BYTE PTR [rax],al
 1005114:	34 10                	xor    al,0x10
 1005116:	00 00                	add    BYTE PTR [rax],al
 1005118:	27                   	(bad)  
 1005119:	80 00 00             	add    BYTE PTR [rax],0x0
 100511c:	49 00 00             	rex.WB add BYTE PTR [r8],al
 100511f:	00 00                	add    BYTE PTR [rax],al
 1005121:	41 0e                	rex.B (bad) 
 1005123:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1005129:	02 44 c6 0c          	add    al,BYTE PTR [rsi+rax*8+0xc]
 100512d:	07                   	(bad)  
 100512e:	08 00                	or     BYTE PTR [rax],al
 1005130:	1c 00                	sbb    al,0x0
 1005132:	00 00                	add    BYTE PTR [rax],al
 1005134:	54                   	push   rsp
 1005135:	10 00                	adc    BYTE PTR [rax],al
 1005137:	00 50 80             	add    BYTE PTR [rax-0x80],dl
 100513a:	00 00                	add    BYTE PTR [rax],al
 100513c:	3e 00 00             	add    BYTE PTR ds:[rax],al
 100513f:	00 00                	add    BYTE PTR [rax],al
 1005141:	41 0e                	rex.B (bad) 
 1005143:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1005149:	79 c6                	jns    1005111 <ensure_support_x64.end+0x103a>
 100514b:	0c 07                	or     al,0x7
 100514d:	08 00                	or     BYTE PTR [rax],al
 100514f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 1005152:	00 00                	add    BYTE PTR [rax],al
 1005154:	74 10                	je     1005166 <ensure_support_x64.end+0x108f>
 1005156:	00 00                	add    BYTE PTR [rax],al
 1005158:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 1005159:	80 00 00             	add    BYTE PTR [rax],0x0
 100515c:	59                   	pop    rcx
 100515d:	00 00                	add    BYTE PTR [rax],al
 100515f:	00 00                	add    BYTE PTR [rax],al
 1005161:	41 0e                	rex.B (bad) 
 1005163:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1005169:	02 54 c6 0c          	add    dl,BYTE PTR [rsi+rax*8+0xc]
 100516d:	07                   	(bad)  
 100516e:	08 00                	or     BYTE PTR [rax],al
 1005170:	1c 00                	sbb    al,0x0
 1005172:	00 00                	add    BYTE PTR [rax],al
 1005174:	94                   	xchg   esp,eax
 1005175:	10 00                	adc    BYTE PTR [rax],al
 1005177:	00 a7 80 00 00 b6    	add    BYTE PTR [rdi-0x49ffff80],ah
 100517d:	00 00                	add    BYTE PTR [rax],al
 100517f:	00 00                	add    BYTE PTR [rax],al
 1005181:	41 0e                	rex.B (bad) 
 1005183:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1005189:	02 b1 c6 0c 07 08    	add    dh,BYTE PTR [rcx+0x8070cc6]
 100518f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 1005192:	00 00                	add    BYTE PTR [rax],al
 1005194:	b4 10                	mov    ah,0x10
 1005196:	00 00                	add    BYTE PTR [rax],al
 1005198:	3d 81 00 00 74       	cmp    eax,0x74000081
 100519d:	00 00                	add    BYTE PTR [rax],al
 100519f:	00 00                	add    BYTE PTR [rax],al
 10051a1:	41 0e                	rex.B (bad) 
 10051a3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 10051a9:	02 6f c6             	add    ch,BYTE PTR [rdi-0x3a]
 10051ac:	0c 07                	or     al,0x7
 10051ae:	08 00                	or     BYTE PTR [rax],al
 10051b0:	1c 00                	sbb    al,0x0
 10051b2:	00 00                	add    BYTE PTR [rax],al
 10051b4:	d4                   	(bad)  
 10051b5:	10 00                	adc    BYTE PTR [rax],al
 10051b7:	00 91 81 00 00 50    	add    BYTE PTR [rcx+0x50000081],dl
 10051bd:	01 00                	add    DWORD PTR [rax],eax
 10051bf:	00 00                	add    BYTE PTR [rax],al
 10051c1:	41 0e                	rex.B (bad) 
 10051c3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 10051c9:	03 4b 01             	add    ecx,DWORD PTR [rbx+0x1]
 10051cc:	c6                   	(bad)  
 10051cd:	0c 07                	or     al,0x7
 10051cf:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
 10051d2:	00 00                	add    BYTE PTR [rax],al
 10051d4:	f4                   	hlt    
 10051d5:	10 00                	adc    BYTE PTR [rax],al
 10051d7:	00 c1                	add    cl,al
 10051d9:	82                   	(bad)  
 10051da:	00 00                	add    BYTE PTR [rax],al
 10051dc:	5c                   	pop    rsp
 10051dd:	00 00                	add    BYTE PTR [rax],al
 10051df:	00 00                	add    BYTE PTR [rax],al
 10051e1:	41 0e                	rex.B (bad) 
 10051e3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 10051e9:	02 57 c6             	add    dl,BYTE PTR [rdi-0x3a]
 10051ec:	0c 07                	or     al,0x7
 10051ee:	08 00                	or     BYTE PTR [rax],al
 10051f0:	1c 00                	sbb    al,0x0
 10051f2:	00 00                	add    BYTE PTR [rax],al
 10051f4:	14 11                	adc    al,0x11
 10051f6:	00 00                	add    BYTE PTR [rax],al
 10051f8:	fd                   	std    
 10051f9:	82                   	(bad)  
 10051fa:	00 00                	add    BYTE PTR [rax],al
 10051fc:	26 00 00             	add    BYTE PTR es:[rax],al
 10051ff:	00 00                	add    BYTE PTR [rax],al
 1005201:	41 0e                	rex.B (bad) 
 1005203:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1005209:	61                   	(bad)  
 100520a:	c6                   	(bad)  
 100520b:	0c 07                	or     al,0x7
 100520d:	08 00                	or     BYTE PTR [rax],al
 100520f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 1005212:	00 00                	add    BYTE PTR [rax],al
 1005214:	34 11                	xor    al,0x11
 1005216:	00 00                	add    BYTE PTR [rax],al
 1005218:	03 83 00 00 1d 00    	add    eax,DWORD PTR [rbx+0x1d0000]
 100521e:	00 00                	add    BYTE PTR [rax],al
 1005220:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
 1005223:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1005229:	58                   	pop    rax
 100522a:	c6                   	(bad)  
 100522b:	0c 07                	or     al,0x7
 100522d:	08 00                	or     BYTE PTR [rax],al
 100522f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 1005232:	00 00                	add    BYTE PTR [rax],al
 1005234:	54                   	push   rsp
 1005235:	11 00                	adc    DWORD PTR [rax],eax
 1005237:	00 00                	add    BYTE PTR [rax],al
 1005239:	83 00 00             	add    DWORD PTR [rax],0x0
 100523c:	1b 00                	sbb    eax,DWORD PTR [rax]
 100523e:	00 00                	add    BYTE PTR [rax],al
 1005240:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
 1005243:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1005249:	56                   	push   rsi
 100524a:	c6                   	(bad)  
 100524b:	0c 07                	or     al,0x7
 100524d:	08 00                	or     BYTE PTR [rax],al
 100524f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 1005252:	00 00                	add    BYTE PTR [rax],al
 1005254:	74 11                	je     1005267 <ensure_support_x64.end+0x1190>
 1005256:	00 00                	add    BYTE PTR [rax],al
 1005258:	fb                   	sti    
 1005259:	82                   	(bad)  
 100525a:	00 00                	add    BYTE PTR [rax],al
 100525c:	36 00 00             	add    BYTE PTR ss:[rax],al
 100525f:	00 00                	add    BYTE PTR [rax],al
 1005261:	41 0e                	rex.B (bad) 
 1005263:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1005269:	71 c6                	jno    1005231 <ensure_support_x64.end+0x115a>
 100526b:	0c 07                	or     al,0x7
 100526d:	08 00                	or     BYTE PTR [rax],al
 100526f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 1005272:	00 00                	add    BYTE PTR [rax],al
 1005274:	94                   	xchg   esp,eax
 1005275:	11 00                	adc    DWORD PTR [rax],eax
 1005277:	00 11                	add    BYTE PTR [rcx],dl
 1005279:	83 00 00             	add    DWORD PTR [rax],0x0
 100527c:	1f                   	(bad)  
 100527d:	00 00                	add    BYTE PTR [rax],al
 100527f:	00 00                	add    BYTE PTR [rax],al
 1005281:	41 0e                	rex.B (bad) 
 1005283:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1005289:	5a                   	pop    rdx
 100528a:	c6                   	(bad)  
 100528b:	0c 07                	or     al,0x7
 100528d:	08 00                	or     BYTE PTR [rax],al
 100528f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 1005292:	00 00                	add    BYTE PTR [rax],al
 1005294:	b4 11                	mov    ah,0x11
 1005296:	00 00                	add    BYTE PTR [rax],al
 1005298:	10 83 00 00 09 01    	adc    BYTE PTR [rbx+0x1090000],al
 100529e:	00 00                	add    BYTE PTR [rax],al
 10052a0:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
 10052a3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 10052a9:	03 04 01             	add    eax,DWORD PTR [rcx+rax*1]
 10052ac:	c6                   	(bad)  
 10052ad:	0c 07                	or     al,0x7
 10052af:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
 10052b2:	00 00                	add    BYTE PTR [rax],al
 10052b4:	d4                   	(bad)  
 10052b5:	11 00                	adc    DWORD PTR [rax],eax
 10052b7:	00 f9                	add    cl,bh
 10052b9:	83 00 00             	add    DWORD PTR [rax],0x0
 10052bc:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
 10052bf:	00 00                	add    BYTE PTR [rax],al
 10052c1:	41 0e                	rex.B (bad) 
 10052c3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 10052c9:	02 49 c6             	add    cl,BYTE PTR [rcx-0x3a]
 10052cc:	0c 07                	or     al,0x7
 10052ce:	08 00                	or     BYTE PTR [rax],al
 10052d0:	1c 00                	sbb    al,0x0
 10052d2:	00 00                	add    BYTE PTR [rax],al
 10052d4:	f4                   	hlt    
 10052d5:	11 00                	adc    DWORD PTR [rax],eax
 10052d7:	00 27                	add    BYTE PTR [rdi],ah
 10052d9:	84 00                	test   BYTE PTR [rax],al
 10052db:	00 2b                	add    BYTE PTR [rbx],ch
 10052dd:	00 00                	add    BYTE PTR [rax],al
 10052df:	00 00                	add    BYTE PTR [rax],al
 10052e1:	41 0e                	rex.B (bad) 
 10052e3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 10052e9:	66 c6                	data16 (bad) 
 10052eb:	0c 07                	or     al,0x7
 10052ed:	08 00                	or     BYTE PTR [rax],al
 10052ef:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 10052f2:	00 00                	add    BYTE PTR [rax],al
 10052f4:	14 12                	adc    al,0x12
 10052f6:	00 00                	add    BYTE PTR [rax],al
 10052f8:	32 84 00 00 27 00 00 	xor    al,BYTE PTR [rax+rax*1+0x2700]
 10052ff:	00 00                	add    BYTE PTR [rax],al
 1005301:	41 0e                	rex.B (bad) 
 1005303:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1005309:	62                   	(bad)  
 100530a:	c6                   	(bad)  
 100530b:	0c 07                	or     al,0x7
 100530d:	08 00                	or     BYTE PTR [rax],al
 100530f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 1005312:	00 00                	add    BYTE PTR [rax],al
 1005314:	34 12                	xor    al,0x12
 1005316:	00 00                	add    BYTE PTR [rax],al
 1005318:	39 84 00 00 49 00 00 	cmp    DWORD PTR [rax+rax*1+0x4900],eax
 100531f:	00 00                	add    BYTE PTR [rax],al
 1005321:	41 0e                	rex.B (bad) 
 1005323:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1005329:	02 44 c6 0c          	add    al,BYTE PTR [rsi+rax*8+0xc]
 100532d:	07                   	(bad)  
 100532e:	08 00                	or     BYTE PTR [rax],al
 1005330:	1c 00                	sbb    al,0x0
 1005332:	00 00                	add    BYTE PTR [rax],al
 1005334:	54                   	push   rsp
 1005335:	12 00                	adc    al,BYTE PTR [rax]
 1005337:	00 62 84             	add    BYTE PTR [rdx-0x7c],ah
 100533a:	00 00                	add    BYTE PTR [rax],al
 100533c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 100533d:	00 00                	add    BYTE PTR [rax],al
 100533f:	00 00                	add    BYTE PTR [rax],al
 1005341:	41 0e                	rex.B (bad) 
 1005343:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1005349:	02 6a c6             	add    ch,BYTE PTR [rdx-0x3a]
 100534c:	0c 07                	or     al,0x7
 100534e:	08 00                	or     BYTE PTR [rax],al
 1005350:	1c 00                	sbb    al,0x0
 1005352:	00 00                	add    BYTE PTR [rax],al
 1005354:	74 12                	je     1005368 <ensure_support_x64.end+0x1291>
 1005356:	00 00                	add    BYTE PTR [rax],al
 1005358:	b1 84                	mov    cl,0x84
 100535a:	00 00                	add    BYTE PTR [rax],al
 100535c:	9c                   	pushf  
 100535d:	01 00                	add    DWORD PTR [rax],eax
 100535f:	00 00                	add    BYTE PTR [rax],al
 1005361:	41 0e                	rex.B (bad) 
 1005363:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1005369:	03 97 01 c6 0c 07    	add    edx,DWORD PTR [rdi+0x70cc601]
 100536f:	08 24 00             	or     BYTE PTR [rax+rax*1],ah
 1005372:	00 00                	add    BYTE PTR [rax],al
 1005374:	94                   	xchg   esp,eax
 1005375:	12 00                	adc    al,BYTE PTR [rax]
 1005377:	00 2d 86 00 00 7b    	add    BYTE PTR [rip+0x7b000086],ch        # 7c005403 <MULTIBOOT_LOADED_MAGIC+0x4528f17a>
 100537d:	02 00                	add    al,BYTE PTR [rax]
 100537f:	00 00                	add    BYTE PTR [rax],al
 1005381:	41 0e                	rex.B (bad) 
 1005383:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1005389:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
 100538d:	70 02                	jo     1005391 <ensure_support_x64.end+0x12ba>
 100538f:	c3                   	ret    
 1005390:	41 c6                	rex.B (bad) 
 1005392:	0c 07                	or     al,0x7
 1005394:	08 00                	or     BYTE PTR [rax],al
 1005396:	00 00                	add    BYTE PTR [rax],al
 1005398:	1c 00                	sbb    al,0x0
 100539a:	00 00                	add    BYTE PTR [rax],al
 100539c:	bc 12 00 00 80       	mov    esp,0x80000012
 10053a1:	88 00                	mov    BYTE PTR [rax],al
 10053a3:	00 c5                	add    ch,al
 10053a5:	00 00                	add    BYTE PTR [rax],al
 10053a7:	00 00                	add    BYTE PTR [rax],al
 10053a9:	41 0e                	rex.B (bad) 
 10053ab:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 10053b1:	02 c0                	add    al,al
 10053b3:	c6                   	(bad)  
 10053b4:	0c 07                	or     al,0x7
 10053b6:	08 00                	or     BYTE PTR [rax],al
 10053b8:	1c 00                	sbb    al,0x0
 10053ba:	00 00                	add    BYTE PTR [rax],al
 10053bc:	dc 12                	fcom   QWORD PTR [rdx]
 10053be:	00 00                	add    BYTE PTR [rax],al
 10053c0:	25 89 00 00 c5       	and    eax,0xc5000089
 10053c5:	00 00                	add    BYTE PTR [rax],al
 10053c7:	00 00                	add    BYTE PTR [rax],al
 10053c9:	41 0e                	rex.B (bad) 
 10053cb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 10053d1:	02 c0                	add    al,al
 10053d3:	c6                   	(bad)  
 10053d4:	0c 07                	or     al,0x7
 10053d6:	08 00                	or     BYTE PTR [rax],al
 10053d8:	1c 00                	sbb    al,0x0
 10053da:	00 00                	add    BYTE PTR [rax],al
 10053dc:	fc                   	cld    
 10053dd:	12 00                	adc    al,BYTE PTR [rax]
 10053df:	00 ca                	add    dl,cl
 10053e1:	89 00                	mov    DWORD PTR [rax],eax
 10053e3:	00 c5                	add    ch,al
 10053e5:	00 00                	add    BYTE PTR [rax],al
 10053e7:	00 00                	add    BYTE PTR [rax],al
 10053e9:	41 0e                	rex.B (bad) 
 10053eb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 10053f1:	02 c0                	add    al,al
 10053f3:	c6                   	(bad)  
 10053f4:	0c 07                	or     al,0x7
 10053f6:	08 00                	or     BYTE PTR [rax],al
 10053f8:	1c 00                	sbb    al,0x0
 10053fa:	00 00                	add    BYTE PTR [rax],al
 10053fc:	1c 13                	sbb    al,0x13
 10053fe:	00 00                	add    BYTE PTR [rax],al
 1005400:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 1005401:	8a 00                	mov    al,BYTE PTR [rax]
 1005403:	00 c5                	add    ch,al
 1005405:	00 00                	add    BYTE PTR [rax],al
 1005407:	00 00                	add    BYTE PTR [rax],al
 1005409:	41 0e                	rex.B (bad) 
 100540b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1005411:	02 c0                	add    al,al
 1005413:	c6                   	(bad)  
 1005414:	0c 07                	or     al,0x7
 1005416:	08 00                	or     BYTE PTR [rax],al
 1005418:	1c 00                	sbb    al,0x0
 100541a:	00 00                	add    BYTE PTR [rax],al
 100541c:	3c 13                	cmp    al,0x13
 100541e:	00 00                	add    BYTE PTR [rax],al
 1005420:	14 8b                	adc    al,0x8b
 1005422:	00 00                	add    BYTE PTR [rax],al
 1005424:	fe 00                	inc    BYTE PTR [rax]
 1005426:	00 00                	add    BYTE PTR [rax],al
 1005428:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
 100542b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1005431:	02 f9                	add    bh,cl
 1005433:	c6                   	(bad)  
 1005434:	0c 07                	or     al,0x7
 1005436:	08 00                	or     BYTE PTR [rax],al
 1005438:	1c 00                	sbb    al,0x0
 100543a:	00 00                	add    BYTE PTR [rax],al
 100543c:	5c                   	pop    rsp
 100543d:	13 00                	adc    eax,DWORD PTR [rax]
 100543f:	00 f2                	add    dl,dh
 1005441:	8b 00                	mov    eax,DWORD PTR [rax]
 1005443:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 1005446:	00 00                	add    BYTE PTR [rax],al
 1005448:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
 100544b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1005451:	57                   	push   rdi
 1005452:	c6                   	(bad)  
 1005453:	0c 07                	or     al,0x7
 1005455:	08 00                	or     BYTE PTR [rax],al
 1005457:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 100545a:	00 00                	add    BYTE PTR [rax],al
 100545c:	7c 13                	jl     1005471 <ensure_support_x64.end+0x139a>
 100545e:	00 00                	add    BYTE PTR [rax],al
 1005460:	ee                   	out    dx,al
 1005461:	8b 00                	mov    eax,DWORD PTR [rax]
 1005463:	00 20                	add    BYTE PTR [rax],ah
 1005465:	00 00                	add    BYTE PTR [rax],al
 1005467:	00 00                	add    BYTE PTR [rax],al
 1005469:	41 0e                	rex.B (bad) 
 100546b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1005471:	5b                   	pop    rbx
 1005472:	c6                   	(bad)  
 1005473:	0c 07                	or     al,0x7
 1005475:	08 00                	or     BYTE PTR [rax],al
 1005477:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 100547a:	00 00                	add    BYTE PTR [rax],al
 100547c:	9c                   	pushf  
 100547d:	13 00                	adc    eax,DWORD PTR [rax]
 100547f:	00 ee                	add    dh,ch
 1005481:	8b 00                	mov    eax,DWORD PTR [rax]
 1005483:	00 16                	add    BYTE PTR [rsi],dl
 1005485:	00 00                	add    BYTE PTR [rax],al
 1005487:	00 00                	add    BYTE PTR [rax],al
 1005489:	41 0e                	rex.B (bad) 
 100548b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1005491:	51                   	push   rcx
 1005492:	c6                   	(bad)  
 1005493:	0c 07                	or     al,0x7
 1005495:	08 00                	or     BYTE PTR [rax],al
 1005497:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 100549a:	00 00                	add    BYTE PTR [rax],al
 100549c:	bc 13 00 00 e4       	mov    esp,0xe4000013
 10054a1:	8b 00                	mov    eax,DWORD PTR [rax]
 10054a3:	00 36                	add    BYTE PTR [rsi],dh
 10054a5:	00 00                	add    BYTE PTR [rax],al
 10054a7:	00 00                	add    BYTE PTR [rax],al
 10054a9:	41 0e                	rex.B (bad) 
 10054ab:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 10054b1:	71 c6                	jno    1005479 <ensure_support_x64.end+0x13a2>
 10054b3:	0c 07                	or     al,0x7
 10054b5:	08 00                	or     BYTE PTR [rax],al
 10054b7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 10054ba:	00 00                	add    BYTE PTR [rax],al
 10054bc:	dc 13                	fcom   QWORD PTR [rbx]
 10054be:	00 00                	add    BYTE PTR [rax],al
 10054c0:	fa                   	cli    
 10054c1:	8b 00                	mov    eax,DWORD PTR [rax]
 10054c3:	00 1f                	add    BYTE PTR [rdi],bl
 10054c5:	00 00                	add    BYTE PTR [rax],al
 10054c7:	00 00                	add    BYTE PTR [rax],al
 10054c9:	41 0e                	rex.B (bad) 
 10054cb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 10054d1:	5a                   	pop    rdx
 10054d2:	c6                   	(bad)  
 10054d3:	0c 07                	or     al,0x7
 10054d5:	08 00                	or     BYTE PTR [rax],al
 10054d7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 10054da:	00 00                	add    BYTE PTR [rax],al
 10054dc:	fc                   	cld    
 10054dd:	13 00                	adc    eax,DWORD PTR [rax]
 10054df:	00 f9                	add    cl,bh
 10054e1:	8b 00                	mov    eax,DWORD PTR [rax]
 10054e3:	00 a8 00 00 00 00    	add    BYTE PTR [rax+0x0],ch
 10054e9:	41 0e                	rex.B (bad) 
 10054eb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 10054f1:	02 a3 c6 0c 07 08    	add    ah,BYTE PTR [rbx+0x8070cc6]
 10054f7:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
 10054fa:	00 00                	add    BYTE PTR [rax],al
 10054fc:	1c 14                	sbb    al,0x14
 10054fe:	00 00                	add    BYTE PTR [rax],al
 1005500:	81 8c 00 00 6c 01 00 	or     DWORD PTR [rax+rax*1+0x16c00],0xe410000
 1005507:	00 00 41 0e 
 100550b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1005511:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
 1005515:	61                   	(bad)  
 1005516:	01 c3                	add    ebx,eax
 1005518:	41 c6                	rex.B (bad) 
 100551a:	0c 07                	or     al,0x7
 100551c:	08 00                	or     BYTE PTR [rax],al
 100551e:	00 00                	add    BYTE PTR [rax],al
 1005520:	1c 00                	sbb    al,0x0
 1005522:	00 00                	add    BYTE PTR [rax],al
 1005524:	44 14 00             	rex.R adc al,0x0
 1005527:	00 c5                	add    ch,al
 1005529:	8d 00                	lea    eax,[rax]
 100552b:	00 95 00 00 00 00    	add    BYTE PTR [rbp+0x0],dl
 1005531:	41 0e                	rex.B (bad) 
 1005533:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1005539:	02 90 c6 0c 07 08    	add    dl,BYTE PTR [rax+0x8070cc6]
 100553f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 1005542:	00 00                	add    BYTE PTR [rax],al
 1005544:	64 14 00             	fs adc al,0x0
 1005547:	00 3a                	add    BYTE PTR [rdx],bh
 1005549:	8e 00                	mov    es,WORD PTR [rax]
 100554b:	00 1b                	add    BYTE PTR [rbx],bl
 100554d:	00 00                	add    BYTE PTR [rax],al
 100554f:	00 00                	add    BYTE PTR [rax],al
 1005551:	41 0e                	rex.B (bad) 
 1005553:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1005559:	56                   	push   rsi
 100555a:	c6                   	(bad)  
 100555b:	0c 07                	or     al,0x7
 100555d:	08 00                	or     BYTE PTR [rax],al
 100555f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 1005562:	00 00                	add    BYTE PTR [rax],al
 1005564:	84 14 00             	test   BYTE PTR [rax+rax*1],dl
 1005567:	00 35 8e 00 00 1b    	add    BYTE PTR [rip+0x1b00008e],dh        # 1c0055fb <kernel_end+0x1afe9603>
 100556d:	01 00                	add    DWORD PTR [rax],eax
 100556f:	00 00                	add    BYTE PTR [rax],al
 1005571:	41 0e                	rex.B (bad) 
 1005573:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1005579:	03 16                	add    edx,DWORD PTR [rsi]
 100557b:	01 c6                	add    esi,eax
 100557d:	0c 07                	or     al,0x7
 100557f:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
 1005582:	00 00                	add    BYTE PTR [rax],al
 1005584:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
 1005585:	14 00                	adc    al,0x0
 1005587:	00 30                	add    BYTE PTR [rax],dh
 1005589:	8f 00                	pop    QWORD PTR [rax]
 100558b:	00 86 00 00 00 00    	add    BYTE PTR [rsi+0x0],al
 1005591:	41 0e                	rex.B (bad) 
 1005593:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1005599:	02 81 c6 0c 07 08    	add    al,BYTE PTR [rcx+0x8070cc6]
 100559f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 10055a2:	00 00                	add    BYTE PTR [rax],al
 10055a4:	c4                   	(bad)  
 10055a5:	14 00                	adc    al,0x0
 10055a7:	00 96 8f 00 00 af    	add    BYTE PTR [rsi-0x50ffff71],dl
 10055ad:	00 00                	add    BYTE PTR [rax],al
 10055af:	00 00                	add    BYTE PTR [rax],al
 10055b1:	41 0e                	rex.B (bad) 
 10055b3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 10055b9:	02 aa c6 0c 07 08    	add    ch,BYTE PTR [rdx+0x8070cc6]
 10055bf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 10055c2:	00 00                	add    BYTE PTR [rax],al
 10055c4:	e4 14                	in     al,0x14
 10055c6:	00 00                	add    BYTE PTR [rax],al
 10055c8:	25 90 00 00 26       	and    eax,0x26000090
 10055cd:	01 00                	add    DWORD PTR [rax],eax
 10055cf:	00 00                	add    BYTE PTR [rax],al
 10055d1:	41 0e                	rex.B (bad) 
 10055d3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 10055d9:	03 21                	add    esp,DWORD PTR [rcx]
 10055db:	01 c6                	add    esi,eax
 10055dd:	0c 07                	or     al,0x7
 10055df:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
 10055e2:	00 00                	add    BYTE PTR [rax],al
 10055e4:	04 15                	add    al,0x15
 10055e6:	00 00                	add    BYTE PTR [rax],al
 10055e8:	2b 91 00 00 26 00    	sub    edx,DWORD PTR [rcx+0x260000]
 10055ee:	00 00                	add    BYTE PTR [rax],al
 10055f0:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
 10055f3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 10055f9:	61                   	(bad)  
 10055fa:	c6                   	(bad)  
 10055fb:	0c 07                	or     al,0x7
 10055fd:	08 00                	or     BYTE PTR [rax],al
 10055ff:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 1005602:	00 00                	add    BYTE PTR [rax],al
 1005604:	24 15                	and    al,0x15
 1005606:	00 00                	add    BYTE PTR [rax],al
 1005608:	31 91 00 00 94 02    	xor    DWORD PTR [rcx+0x2940000],edx
 100560e:	00 00                	add    BYTE PTR [rax],al
 1005610:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
 1005613:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1005619:	03 8f 02 c6 0c 07    	add    ecx,DWORD PTR [rdi+0x70cc602]
 100561f:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
 1005622:	00 00                	add    BYTE PTR [rax],al
 1005624:	44 15 00 00 a5 93    	rex.R adc eax,0x93a50000
 100562a:	00 00                	add    BYTE PTR [rax],al
 100562c:	2f                   	(bad)  
 100562d:	00 00                	add    BYTE PTR [rax],al
 100562f:	00 00                	add    BYTE PTR [rax],al
 1005631:	41 0e                	rex.B (bad) 
 1005633:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1005639:	6a c6                	push   0xffffffffffffffc6
 100563b:	0c 07                	or     al,0x7
 100563d:	08 00                	or     BYTE PTR [rax],al
 100563f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 1005642:	00 00                	add    BYTE PTR [rax],al
 1005644:	64 15 00 00 b4 93    	fs adc eax,0x93b40000
 100564a:	00 00                	add    BYTE PTR [rax],al
 100564c:	22 00                	and    al,BYTE PTR [rax]
 100564e:	00 00                	add    BYTE PTR [rax],al
 1005650:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
 1005653:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1005659:	5d                   	pop    rbp
 100565a:	c6                   	(bad)  
 100565b:	0c 07                	or     al,0x7
 100565d:	08 00                	or     BYTE PTR [rax],al
 100565f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 1005662:	00 00                	add    BYTE PTR [rax],al
 1005664:	84 15 00 00 b6 93    	test   BYTE PTR [rip+0xffffffff93b60000],dl        # ffffffff94b6566a <MULTIBOOT_CHECK_SUM+0x7d08a798>
 100566a:	00 00                	add    BYTE PTR [rax],al
 100566c:	37                   	(bad)  
 100566d:	02 00                	add    al,BYTE PTR [rax]
 100566f:	00 00                	add    BYTE PTR [rax],al
 1005671:	41 0e                	rex.B (bad) 
 1005673:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1005679:	03 32                	add    esi,DWORD PTR [rdx]
 100567b:	02 c6                	add    al,dh
 100567d:	0c 07                	or     al,0x7
 100567f:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
 1005682:	00 00                	add    BYTE PTR [rax],al
 1005684:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
 1005685:	15 00 00 cd 95       	adc    eax,0x95cd0000
 100568a:	00 00                	add    BYTE PTR [rax],al
 100568c:	5c                   	pop    rsp
 100568d:	00 00                	add    BYTE PTR [rax],al
 100568f:	00 00                	add    BYTE PTR [rax],al
 1005691:	41 0e                	rex.B (bad) 
 1005693:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1005699:	02 57 c6             	add    dl,BYTE PTR [rdi-0x3a]
 100569c:	0c 07                	or     al,0x7
 100569e:	08 00                	or     BYTE PTR [rax],al
 10056a0:	1c 00                	sbb    al,0x0
 10056a2:	00 00                	add    BYTE PTR [rax],al
 10056a4:	c4                   	(bad)  
 10056a5:	15 00 00 09 96       	adc    eax,0x96090000
 10056aa:	00 00                	add    BYTE PTR [rax],al
 10056ac:	80 00 00             	add    BYTE PTR [rax],0x0
 10056af:	00 00                	add    BYTE PTR [rax],al
 10056b1:	41 0e                	rex.B (bad) 
 10056b3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 10056b9:	02 7b c6             	add    bh,BYTE PTR [rbx-0x3a]
 10056bc:	0c 07                	or     al,0x7
 10056be:	08 00                	or     BYTE PTR [rax],al
 10056c0:	1c 00                	sbb    al,0x0
 10056c2:	00 00                	add    BYTE PTR [rax],al
 10056c4:	e4 15                	in     al,0x15
 10056c6:	00 00                	add    BYTE PTR [rax],al
 10056c8:	69 96 00 00 7d 00 00 	imul   edx,DWORD PTR [rsi+0x7d0000],0x41000000
 10056cf:	00 00 41 
 10056d2:	0e                   	(bad)  
 10056d3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 10056d9:	02 78 c6             	add    bh,BYTE PTR [rax-0x3a]
 10056dc:	0c 07                	or     al,0x7
 10056de:	08 00                	or     BYTE PTR [rax],al
 10056e0:	1c 00                	sbb    al,0x0
 10056e2:	00 00                	add    BYTE PTR [rax],al
 10056e4:	04 16                	add    al,0x16
 10056e6:	00 00                	add    BYTE PTR [rax],al
 10056e8:	c6                   	(bad)  
 10056e9:	96                   	xchg   esi,eax
 10056ea:	00 00                	add    BYTE PTR [rax],al
 10056ec:	0f 00 00             	sldt   WORD PTR [rax]
 10056ef:	00 00                	add    BYTE PTR [rax],al
 10056f1:	41 0e                	rex.B (bad) 
 10056f3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 10056f9:	4a c6                	rex.WX (bad) 
 10056fb:	0c 07                	or     al,0x7
 10056fd:	08 00                	or     BYTE PTR [rax],al
 10056ff:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 1005702:	00 00                	add    BYTE PTR [rax],al
 1005704:	24 16                	and    al,0x16
 1005706:	00 00                	add    BYTE PTR [rax],al
 1005708:	b5 96                	mov    ch,0x96
 100570a:	00 00                	add    BYTE PTR [rax],al
 100570c:	26 00 00             	add    BYTE PTR es:[rax],al
 100570f:	00 00                	add    BYTE PTR [rax],al
 1005711:	41 0e                	rex.B (bad) 
 1005713:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1005719:	61                   	(bad)  
 100571a:	c6                   	(bad)  
 100571b:	0c 07                	or     al,0x7
 100571d:	08 00                	or     BYTE PTR [rax],al
 100571f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 1005722:	00 00                	add    BYTE PTR [rax],al
 1005724:	44 16                	rex.R (bad) 
 1005726:	00 00                	add    BYTE PTR [rax],al
 1005728:	bb 96 00 00 26       	mov    ebx,0x26000096
 100572d:	00 00                	add    BYTE PTR [rax],al
 100572f:	00 00                	add    BYTE PTR [rax],al
 1005731:	41 0e                	rex.B (bad) 
 1005733:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1005739:	61                   	(bad)  
 100573a:	c6                   	(bad)  
 100573b:	0c 07                	or     al,0x7
 100573d:	08 00                	or     BYTE PTR [rax],al
 100573f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 1005742:	00 00                	add    BYTE PTR [rax],al
 1005744:	64 16                	fs (bad) 
 1005746:	00 00                	add    BYTE PTR [rax],al
 1005748:	c1 96 00 00 11 00 00 	rcl    DWORD PTR [rsi+0x110000],0x0
 100574f:	00 00                	add    BYTE PTR [rax],al
 1005751:	41 0e                	rex.B (bad) 
 1005753:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1005759:	4c c6                	rex.WR (bad) 
 100575b:	0c 07                	or     al,0x7
 100575d:	08 00                	or     BYTE PTR [rax],al
 100575f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 1005762:	00 00                	add    BYTE PTR [rax],al
 1005764:	84 16                	test   BYTE PTR [rsi],dl
 1005766:	00 00                	add    BYTE PTR [rax],al
 1005768:	b2 96                	mov    dl,0x96
 100576a:	00 00                	add    BYTE PTR [rax],al
 100576c:	11 00                	adc    DWORD PTR [rax],eax
 100576e:	00 00                	add    BYTE PTR [rax],al
 1005770:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
 1005773:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 1005779:	4c c6                	rex.WR (bad) 
 100577b:	0c 07                	or     al,0x7
 100577d:	08 00                	or     BYTE PTR [rax],al
	...

Disassembly of section .text:

0000000001006000 <mem_cpy>:
 1006000:	55                   	push   rbp
 1006001:	48 89 e5             	mov    rbp,rsp
 1006004:	48 83 ec 28          	sub    rsp,0x28
 1006008:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
 100600c:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
 1006010:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
 1006014:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
 1006019:	74 4a                	je     1006065 <mem_cpy+0x65>
 100601b:	48 83 7d e0 00       	cmp    QWORD PTR [rbp-0x20],0x0
 1006020:	74 43                	je     1006065 <mem_cpy+0x65>
 1006022:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 1006026:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
 100602a:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
 100602e:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
 1006032:	eb 1d                	jmp    1006051 <mem_cpy+0x51>
 1006034:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 1006038:	48 8d 50 01          	lea    rdx,[rax+0x1]
 100603c:	48 89 55 f0          	mov    QWORD PTR [rbp-0x10],rdx
 1006040:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
 1006044:	48 8d 4a 01          	lea    rcx,[rdx+0x1]
 1006048:	48 89 4d f8          	mov    QWORD PTR [rbp-0x8],rcx
 100604c:	0f b6 12             	movzx  edx,BYTE PTR [rdx]
 100604f:	88 10                	mov    BYTE PTR [rax],dl
 1006051:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 1006055:	48 8d 50 ff          	lea    rdx,[rax-0x1]
 1006059:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
 100605d:	48 85 c0             	test   rax,rax
 1006060:	75 d2                	jne    1006034 <mem_cpy+0x34>
 1006062:	90                   	nop
 1006063:	eb 01                	jmp    1006066 <mem_cpy+0x66>
 1006065:	90                   	nop
 1006066:	c9                   	leave  
 1006067:	c3                   	ret    

0000000001006068 <mem_set>:
 1006068:	55                   	push   rbp
 1006069:	48 89 e5             	mov    rbp,rsp
 100606c:	48 83 ec 18          	sub    rsp,0x18
 1006070:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
 1006074:	89 f0                	mov    eax,esi
 1006076:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
 100607a:	88 45 f4             	mov    BYTE PTR [rbp-0xc],al
 100607d:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
 1006082:	74 28                	je     10060ac <mem_set+0x44>
 1006084:	eb 12                	jmp    1006098 <mem_set+0x30>
 1006086:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 100608a:	48 8d 50 01          	lea    rdx,[rax+0x1]
 100608e:	48 89 55 f8          	mov    QWORD PTR [rbp-0x8],rdx
 1006092:	0f b6 55 f4          	movzx  edx,BYTE PTR [rbp-0xc]
 1006096:	88 10                	mov    BYTE PTR [rax],dl
 1006098:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 100609c:	48 8d 50 ff          	lea    rdx,[rax-0x1]
 10060a0:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
 10060a4:	48 85 c0             	test   rax,rax
 10060a7:	75 dd                	jne    1006086 <mem_set+0x1e>
 10060a9:	90                   	nop
 10060aa:	eb 01                	jmp    10060ad <mem_set+0x45>
 10060ac:	90                   	nop
 10060ad:	c9                   	leave  
 10060ae:	c3                   	ret    

00000000010060af <mem_move>:
 10060af:	55                   	push   rbp
 10060b0:	48 89 e5             	mov    rbp,rsp
 10060b3:	48 83 ec 18          	sub    rsp,0x18
 10060b7:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
 10060bb:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
 10060bf:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
 10060c3:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
 10060c8:	74 67                	je     1006131 <mem_move+0x82>
 10060ca:	48 83 7d f0 00       	cmp    QWORD PTR [rbp-0x10],0x0
 10060cf:	74 60                	je     1006131 <mem_move+0x82>
 10060d1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 10060d5:	48 3b 45 f0          	cmp    rax,QWORD PTR [rbp-0x10]
 10060d9:	72 19                	jb     10060f4 <mem_move+0x45>
 10060db:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
 10060df:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
 10060e3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 10060e7:	48 89 ce             	mov    rsi,rcx
 10060ea:	48 89 c7             	mov    rdi,rax
 10060ed:	e8 0e ff ff ff       	call   1006000 <mem_cpy>
 10060f2:	eb 3e                	jmp    1006132 <mem_move+0x83>
 10060f4:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 10060f8:	48 01 45 f8          	add    QWORD PTR [rbp-0x8],rax
 10060fc:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 1006100:	48 01 45 f0          	add    QWORD PTR [rbp-0x10],rax
 1006104:	eb 17                	jmp    100611d <mem_move+0x6e>
 1006106:	48 83 6d f0 01       	sub    QWORD PTR [rbp-0x10],0x1
 100610b:	48 83 6d f8 01       	sub    QWORD PTR [rbp-0x8],0x1
 1006110:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1006114:	0f b6 10             	movzx  edx,BYTE PTR [rax]
 1006117:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 100611b:	88 10                	mov    BYTE PTR [rax],dl
 100611d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 1006121:	48 8d 50 ff          	lea    rdx,[rax-0x1]
 1006125:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
 1006129:	48 85 c0             	test   rax,rax
 100612c:	75 d8                	jne    1006106 <mem_move+0x57>
 100612e:	90                   	nop
 100612f:	eb 01                	jmp    1006132 <mem_move+0x83>
 1006131:	90                   	nop
 1006132:	c9                   	leave  
 1006133:	c3                   	ret    

0000000001006134 <str_len>:
 1006134:	55                   	push   rbp
 1006135:	48 89 e5             	mov    rbp,rsp
 1006138:	48 83 ec 18          	sub    rsp,0x18
 100613c:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
 1006140:	48 c7 45 f8 00 00 00 	mov    QWORD PTR [rbp-0x8],0x0
 1006147:	00 
 1006148:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
 100614d:	75 11                	jne    1006160 <str_len+0x2c>
 100614f:	b8 00 00 00 00       	mov    eax,0x0
 1006154:	eb 19                	jmp    100616f <str_len+0x3b>
 1006156:	48 83 45 e8 01       	add    QWORD PTR [rbp-0x18],0x1
 100615b:	48 83 45 f8 01       	add    QWORD PTR [rbp-0x8],0x1
 1006160:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 1006164:	0f b6 00             	movzx  eax,BYTE PTR [rax]
 1006167:	84 c0                	test   al,al
 1006169:	75 eb                	jne    1006156 <str_len+0x22>
 100616b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 100616f:	c9                   	leave  
 1006170:	c3                   	ret    

0000000001006171 <str_cmp>:
 1006171:	55                   	push   rbp
 1006172:	48 89 e5             	mov    rbp,rsp
 1006175:	48 83 ec 20          	sub    rsp,0x20
 1006179:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
 100617d:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
 1006181:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
 1006186:	74 07                	je     100618f <str_cmp+0x1e>
 1006188:	48 83 7d e0 00       	cmp    QWORD PTR [rbp-0x20],0x0
 100618d:	75 07                	jne    1006196 <str_cmp+0x25>
 100618f:	b8 00 00 00 00       	mov    eax,0x0
 1006194:	eb 66                	jmp    10061fc <str_cmp+0x8b>
 1006196:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 100619a:	48 89 c7             	mov    rdi,rax
 100619d:	e8 92 ff ff ff       	call   1006134 <str_len>
 10061a2:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
 10061a6:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
 10061aa:	48 89 c7             	mov    rdi,rax
 10061ad:	e8 82 ff ff ff       	call   1006134 <str_len>
 10061b2:	48 3b 45 f8          	cmp    rax,QWORD PTR [rbp-0x8]
 10061b6:	74 2e                	je     10061e6 <str_cmp+0x75>
 10061b8:	b8 00 00 00 00       	mov    eax,0x0
 10061bd:	eb 3d                	jmp    10061fc <str_cmp+0x8b>
 10061bf:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
 10061c3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 10061c7:	48 01 d0             	add    rax,rdx
 10061ca:	0f b6 10             	movzx  edx,BYTE PTR [rax]
 10061cd:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
 10061d1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 10061d5:	48 01 c8             	add    rax,rcx
 10061d8:	0f b6 00             	movzx  eax,BYTE PTR [rax]
 10061db:	38 c2                	cmp    dl,al
 10061dd:	74 07                	je     10061e6 <str_cmp+0x75>
 10061df:	b8 00 00 00 00       	mov    eax,0x0
 10061e4:	eb 16                	jmp    10061fc <str_cmp+0x8b>
 10061e6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 10061ea:	48 8d 50 ff          	lea    rdx,[rax-0x1]
 10061ee:	48 89 55 f8          	mov    QWORD PTR [rbp-0x8],rdx
 10061f2:	48 85 c0             	test   rax,rax
 10061f5:	75 c8                	jne    10061bf <str_cmp+0x4e>
 10061f7:	b8 01 00 00 00       	mov    eax,0x1
 10061fc:	c9                   	leave  
 10061fd:	c3                   	ret    

00000000010061fe <rand>:
 10061fe:	55                   	push   rbp
 10061ff:	48 89 e5             	mov    rbp,rsp
 1006202:	8b 05 f8 cd 00 00    	mov    eax,DWORD PTR [rip+0xcdf8]        # 1013000 <KERNEL_STACK>
 1006208:	69 c0 9a 45 c6 41    	imul   eax,eax,0x41c6459a
 100620e:	05 a9 74 00 00       	add    eax,0x74a9
 1006213:	89 05 e7 cd 00 00    	mov    DWORD PTR [rip+0xcde7],eax        # 1013000 <KERNEL_STACK>
 1006219:	8b 05 e1 cd 00 00    	mov    eax,DWORD PTR [rip+0xcde1]        # 1013000 <KERNEL_STACK>
 100621f:	c1 e8 10             	shr    eax,0x10
 1006222:	8b 15 dc cd 00 00    	mov    edx,DWORD PTR [rip+0xcddc]        # 1013004 <max>
 1006228:	8d 4a 01             	lea    ecx,[rdx+0x1]
 100622b:	ba 00 00 00 00       	mov    edx,0x0
 1006230:	f7 f1                	div    ecx
 1006232:	89 d0                	mov    eax,edx
 1006234:	5d                   	pop    rbp
 1006235:	c3                   	ret    

0000000001006236 <srand>:
 1006236:	55                   	push   rbp
 1006237:	48 89 e5             	mov    rbp,rsp
 100623a:	48 83 ec 08          	sub    rsp,0x8
 100623e:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
 1006241:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
 1006244:	89 05 b6 cd 00 00    	mov    DWORD PTR [rip+0xcdb6],eax        # 1013000 <KERNEL_STACK>
 100624a:	90                   	nop
 100624b:	c9                   	leave  
 100624c:	c3                   	ret    

000000000100624d <mrand>:
 100624d:	55                   	push   rbp
 100624e:	48 89 e5             	mov    rbp,rsp
 1006251:	48 83 ec 08          	sub    rsp,0x8
 1006255:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
 1006258:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
 100625b:	89 05 a3 cd 00 00    	mov    DWORD PTR [rip+0xcda3],eax        # 1013004 <max>
 1006261:	90                   	nop
 1006262:	c9                   	leave  
 1006263:	c3                   	ret    

0000000001006264 <max_32>:
 1006264:	55                   	push   rbp
 1006265:	48 89 e5             	mov    rbp,rsp
 1006268:	48 83 ec 08          	sub    rsp,0x8
 100626c:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
 100626f:	89 75 f8             	mov    DWORD PTR [rbp-0x8],esi
 1006272:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
 1006275:	39 45 f8             	cmp    DWORD PTR [rbp-0x8],eax
 1006278:	0f 4d 45 f8          	cmovge eax,DWORD PTR [rbp-0x8]
 100627c:	c9                   	leave  
 100627d:	c3                   	ret    

000000000100627e <_avl_tree_node_get_height>:
 100627e:	55                   	push   rbp
 100627f:	48 89 e5             	mov    rbp,rsp
 1006282:	48 83 ec 08          	sub    rsp,0x8
 1006286:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
 100628a:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
 100628f:	74 09                	je     100629a <_avl_tree_node_get_height+0x1c>
 1006291:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1006295:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
 1006298:	eb 05                	jmp    100629f <_avl_tree_node_get_height+0x21>
 100629a:	b8 ff ff ff ff       	mov    eax,0xffffffff
 100629f:	c9                   	leave  
 10062a0:	c3                   	ret    

00000000010062a1 <_avl_tree_node_get_balance_factor>:
 10062a1:	55                   	push   rbp
 10062a2:	48 89 e5             	mov    rbp,rsp
 10062a5:	53                   	push   rbx
 10062a6:	48 83 ec 08          	sub    rsp,0x8
 10062aa:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
 10062ae:	48 83 7d f0 00       	cmp    QWORD PTR [rbp-0x10],0x0
 10062b3:	75 07                	jne    10062bc <_avl_tree_node_get_balance_factor+0x1b>
 10062b5:	b8 00 00 00 00       	mov    eax,0x0
 10062ba:	eb 25                	jmp    10062e1 <_avl_tree_node_get_balance_factor+0x40>
 10062bc:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 10062c0:	48 8b 00             	mov    rax,QWORD PTR [rax]
 10062c3:	48 89 c7             	mov    rdi,rax
 10062c6:	e8 b3 ff ff ff       	call   100627e <_avl_tree_node_get_height>
 10062cb:	89 c3                	mov    ebx,eax
 10062cd:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 10062d1:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
 10062d5:	48 89 c7             	mov    rdi,rax
 10062d8:	e8 a1 ff ff ff       	call   100627e <_avl_tree_node_get_height>
 10062dd:	29 c3                	sub    ebx,eax
 10062df:	89 d8                	mov    eax,ebx
 10062e1:	48 83 c4 08          	add    rsp,0x8
 10062e5:	5b                   	pop    rbx
 10062e6:	5d                   	pop    rbp
 10062e7:	c3                   	ret    

00000000010062e8 <_avl_tree_node_right_rotate>:
 10062e8:	55                   	push   rbp
 10062e9:	48 89 e5             	mov    rbp,rsp
 10062ec:	53                   	push   rbx
 10062ed:	48 83 ec 18          	sub    rsp,0x18
 10062f1:	48 89 7d e0          	mov    QWORD PTR [rbp-0x20],rdi
 10062f5:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
 10062f9:	48 8b 00             	mov    rax,QWORD PTR [rax]
 10062fc:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
 1006300:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
 1006304:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
 1006308:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 100630c:	48 89 50 10          	mov    QWORD PTR [rax+0x10],rdx
 1006310:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
 1006314:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
 1006318:	48 89 50 10          	mov    QWORD PTR [rax+0x10],rdx
 100631c:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 1006320:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
 1006324:	48 85 c0             	test   rax,rax
 1006327:	74 10                	je     1006339 <_avl_tree_node_right_rotate+0x51>
 1006329:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 100632d:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
 1006331:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
 1006335:	48 89 50 10          	mov    QWORD PTR [rax+0x10],rdx
 1006339:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
 100633d:	48 8b 00             	mov    rax,QWORD PTR [rax]
 1006340:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
 1006344:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
 1006348:	48 89 10             	mov    QWORD PTR [rax],rdx
 100634b:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 100634f:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
 1006353:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
 1006357:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
 100635b:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
 100635f:	48 89 c7             	mov    rdi,rax
 1006362:	e8 17 ff ff ff       	call   100627e <_avl_tree_node_get_height>
 1006367:	89 c3                	mov    ebx,eax
 1006369:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
 100636d:	48 8b 00             	mov    rax,QWORD PTR [rax]
 1006370:	48 89 c7             	mov    rdi,rax
 1006373:	e8 06 ff ff ff       	call   100627e <_avl_tree_node_get_height>
 1006378:	89 de                	mov    esi,ebx
 100637a:	89 c7                	mov    edi,eax
 100637c:	e8 e3 fe ff ff       	call   1006264 <max_32>
 1006381:	8d 50 01             	lea    edx,[rax+0x1]
 1006384:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
 1006388:	89 50 18             	mov    DWORD PTR [rax+0x18],edx
 100638b:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 100638f:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
 1006393:	48 89 c7             	mov    rdi,rax
 1006396:	e8 e3 fe ff ff       	call   100627e <_avl_tree_node_get_height>
 100639b:	89 c3                	mov    ebx,eax
 100639d:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 10063a1:	48 8b 00             	mov    rax,QWORD PTR [rax]
 10063a4:	48 89 c7             	mov    rdi,rax
 10063a7:	e8 d2 fe ff ff       	call   100627e <_avl_tree_node_get_height>
 10063ac:	89 de                	mov    esi,ebx
 10063ae:	89 c7                	mov    edi,eax
 10063b0:	e8 af fe ff ff       	call   1006264 <max_32>
 10063b5:	8d 50 01             	lea    edx,[rax+0x1]
 10063b8:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 10063bc:	89 50 18             	mov    DWORD PTR [rax+0x18],edx
 10063bf:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 10063c3:	48 83 c4 18          	add    rsp,0x18
 10063c7:	5b                   	pop    rbx
 10063c8:	5d                   	pop    rbp
 10063c9:	c3                   	ret    

00000000010063ca <_avl_tree_node_left_rotate>:
 10063ca:	55                   	push   rbp
 10063cb:	48 89 e5             	mov    rbp,rsp
 10063ce:	53                   	push   rbx
 10063cf:	48 83 ec 18          	sub    rsp,0x18
 10063d3:	48 89 7d e0          	mov    QWORD PTR [rbp-0x20],rdi
 10063d7:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
 10063db:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
 10063df:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
 10063e3:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
 10063e7:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
 10063eb:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 10063ef:	48 89 50 10          	mov    QWORD PTR [rax+0x10],rdx
 10063f3:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
 10063f7:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
 10063fb:	48 89 50 10          	mov    QWORD PTR [rax+0x10],rdx
 10063ff:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 1006403:	48 8b 00             	mov    rax,QWORD PTR [rax]
 1006406:	48 85 c0             	test   rax,rax
 1006409:	74 0f                	je     100641a <_avl_tree_node_left_rotate+0x50>
 100640b:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 100640f:	48 8b 00             	mov    rax,QWORD PTR [rax]
 1006412:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
 1006416:	48 89 50 10          	mov    QWORD PTR [rax+0x10],rdx
 100641a:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
 100641e:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
 1006422:	48 8b 10             	mov    rdx,QWORD PTR [rax]
 1006425:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
 1006429:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
 100642d:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 1006431:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
 1006435:	48 89 10             	mov    QWORD PTR [rax],rdx
 1006438:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
 100643c:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
 1006440:	48 89 c7             	mov    rdi,rax
 1006443:	e8 36 fe ff ff       	call   100627e <_avl_tree_node_get_height>
 1006448:	89 c3                	mov    ebx,eax
 100644a:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
 100644e:	48 8b 00             	mov    rax,QWORD PTR [rax]
 1006451:	48 89 c7             	mov    rdi,rax
 1006454:	e8 25 fe ff ff       	call   100627e <_avl_tree_node_get_height>
 1006459:	89 de                	mov    esi,ebx
 100645b:	89 c7                	mov    edi,eax
 100645d:	e8 02 fe ff ff       	call   1006264 <max_32>
 1006462:	8d 50 01             	lea    edx,[rax+0x1]
 1006465:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
 1006469:	89 50 18             	mov    DWORD PTR [rax+0x18],edx
 100646c:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 1006470:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
 1006474:	48 89 c7             	mov    rdi,rax
 1006477:	e8 02 fe ff ff       	call   100627e <_avl_tree_node_get_height>
 100647c:	89 c3                	mov    ebx,eax
 100647e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 1006482:	48 8b 00             	mov    rax,QWORD PTR [rax]
 1006485:	48 89 c7             	mov    rdi,rax
 1006488:	e8 f1 fd ff ff       	call   100627e <_avl_tree_node_get_height>
 100648d:	89 de                	mov    esi,ebx
 100648f:	89 c7                	mov    edi,eax
 1006491:	e8 ce fd ff ff       	call   1006264 <max_32>
 1006496:	8d 50 01             	lea    edx,[rax+0x1]
 1006499:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 100649d:	89 50 18             	mov    DWORD PTR [rax+0x18],edx
 10064a0:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 10064a4:	48 83 c4 18          	add    rsp,0x18
 10064a8:	5b                   	pop    rbx
 10064a9:	5d                   	pop    rbp
 10064aa:	c3                   	ret    

00000000010064ab <_avl_tree_node_balance>:
 10064ab:	55                   	push   rbp
 10064ac:	48 89 e5             	mov    rbp,rsp
 10064af:	48 83 ec 18          	sub    rsp,0x18
 10064b3:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
 10064b7:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 10064bb:	48 89 c7             	mov    rdi,rax
 10064be:	e8 de fd ff ff       	call   10062a1 <_avl_tree_node_get_balance_factor>
 10064c3:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
 10064c6:	83 7d fc 01          	cmp    DWORD PTR [rbp-0x4],0x1
 10064ca:	7e 50                	jle    100651c <_avl_tree_node_balance+0x71>
 10064cc:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 10064d0:	48 8b 00             	mov    rax,QWORD PTR [rax]
 10064d3:	48 89 c7             	mov    rdi,rax
 10064d6:	e8 c6 fd ff ff       	call   10062a1 <_avl_tree_node_get_balance_factor>
 10064db:	89 45 f8             	mov    DWORD PTR [rbp-0x8],eax
 10064de:	83 7d f8 00          	cmp    DWORD PTR [rbp-0x8],0x0
 10064e2:	78 11                	js     10064f5 <_avl_tree_node_balance+0x4a>
 10064e4:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 10064e8:	48 89 c7             	mov    rdi,rax
 10064eb:	e8 f8 fd ff ff       	call   10062e8 <_avl_tree_node_right_rotate>
 10064f0:	e9 81 00 00 00       	jmp    1006576 <_avl_tree_node_balance+0xcb>
 10064f5:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 10064f9:	48 8b 00             	mov    rax,QWORD PTR [rax]
 10064fc:	48 89 c7             	mov    rdi,rax
 10064ff:	e8 c6 fe ff ff       	call   10063ca <_avl_tree_node_left_rotate>
 1006504:	48 89 c2             	mov    rdx,rax
 1006507:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 100650b:	48 89 10             	mov    QWORD PTR [rax],rdx
 100650e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 1006512:	48 89 c7             	mov    rdi,rax
 1006515:	e8 ce fd ff ff       	call   10062e8 <_avl_tree_node_right_rotate>
 100651a:	eb 5a                	jmp    1006576 <_avl_tree_node_balance+0xcb>
 100651c:	83 7d fc ff          	cmp    DWORD PTR [rbp-0x4],0xffffffff
 1006520:	7d 50                	jge    1006572 <_avl_tree_node_balance+0xc7>
 1006522:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 1006526:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
 100652a:	48 89 c7             	mov    rdi,rax
 100652d:	e8 6f fd ff ff       	call   10062a1 <_avl_tree_node_get_balance_factor>
 1006532:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
 1006535:	83 7d f4 00          	cmp    DWORD PTR [rbp-0xc],0x0
 1006539:	7f 0e                	jg     1006549 <_avl_tree_node_balance+0x9e>
 100653b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 100653f:	48 89 c7             	mov    rdi,rax
 1006542:	e8 83 fe ff ff       	call   10063ca <_avl_tree_node_left_rotate>
 1006547:	eb 2d                	jmp    1006576 <_avl_tree_node_balance+0xcb>
 1006549:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 100654d:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
 1006551:	48 89 c7             	mov    rdi,rax
 1006554:	e8 8f fd ff ff       	call   10062e8 <_avl_tree_node_right_rotate>
 1006559:	48 89 c2             	mov    rdx,rax
 100655c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 1006560:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
 1006564:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 1006568:	48 89 c7             	mov    rdi,rax
 100656b:	e8 5a fe ff ff       	call   10063ca <_avl_tree_node_left_rotate>
 1006570:	eb 04                	jmp    1006576 <_avl_tree_node_balance+0xcb>
 1006572:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 1006576:	c9                   	leave  
 1006577:	c3                   	ret    

0000000001006578 <_avl_tree_node_insert>:
 1006578:	55                   	push   rbp
 1006579:	48 89 e5             	mov    rbp,rsp
 100657c:	53                   	push   rbx
 100657d:	48 83 ec 38          	sub    rsp,0x38
 1006581:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
 1006585:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
 1006589:	48 89 55 c8          	mov    QWORD PTR [rbp-0x38],rdx
 100658d:	48 89 4d c0          	mov    QWORD PTR [rbp-0x40],rcx
 1006591:	48 83 7d d0 00       	cmp    QWORD PTR [rbp-0x30],0x0
 1006596:	74 07                	je     100659f <_avl_tree_node_insert+0x27>
 1006598:	48 83 7d c8 00       	cmp    QWORD PTR [rbp-0x38],0x0
 100659d:	75 09                	jne    10065a8 <_avl_tree_node_insert+0x30>
 100659f:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 10065a3:	e9 d3 00 00 00       	jmp    100667b <_avl_tree_node_insert+0x103>
 10065a8:	48 83 7d d8 00       	cmp    QWORD PTR [rbp-0x28],0x0
 10065ad:	75 15                	jne    10065c4 <_avl_tree_node_insert+0x4c>
 10065af:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
 10065b3:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
 10065b7:	48 89 50 10          	mov    QWORD PTR [rax+0x10],rdx
 10065bb:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
 10065bf:	e9 b7 00 00 00       	jmp    100667b <_avl_tree_node_insert+0x103>
 10065c4:	48 8b 4d d0          	mov    rcx,QWORD PTR [rbp-0x30]
 10065c8:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
 10065cc:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
 10065d0:	48 89 ce             	mov    rsi,rcx
 10065d3:	48 89 d7             	mov    rdi,rdx
 10065d6:	ff d0                	call   rax
 10065d8:	89 45 ec             	mov    DWORD PTR [rbp-0x14],eax
 10065db:	83 7d ec 00          	cmp    DWORD PTR [rbp-0x14],0x0
 10065df:	79 29                	jns    100660a <_avl_tree_node_insert+0x92>
 10065e1:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 10065e5:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
 10065e9:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
 10065ed:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
 10065f1:	48 8b 75 d0          	mov    rsi,QWORD PTR [rbp-0x30]
 10065f5:	48 89 c7             	mov    rdi,rax
 10065f8:	e8 7b ff ff ff       	call   1006578 <_avl_tree_node_insert>
 10065fd:	48 89 c2             	mov    rdx,rax
 1006600:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 1006604:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
 1006608:	eb 31                	jmp    100663b <_avl_tree_node_insert+0xc3>
 100660a:	83 7d ec 00          	cmp    DWORD PTR [rbp-0x14],0x0
 100660e:	75 06                	jne    1006616 <_avl_tree_node_insert+0x9e>
 1006610:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 1006614:	eb 65                	jmp    100667b <_avl_tree_node_insert+0x103>
 1006616:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 100661a:	48 8b 00             	mov    rax,QWORD PTR [rax]
 100661d:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
 1006621:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
 1006625:	48 8b 75 d0          	mov    rsi,QWORD PTR [rbp-0x30]
 1006629:	48 89 c7             	mov    rdi,rax
 100662c:	e8 47 ff ff ff       	call   1006578 <_avl_tree_node_insert>
 1006631:	48 89 c2             	mov    rdx,rax
 1006634:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 1006638:	48 89 10             	mov    QWORD PTR [rax],rdx
 100663b:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 100663f:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
 1006643:	48 89 c7             	mov    rdi,rax
 1006646:	e8 33 fc ff ff       	call   100627e <_avl_tree_node_get_height>
 100664b:	89 c3                	mov    ebx,eax
 100664d:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 1006651:	48 8b 00             	mov    rax,QWORD PTR [rax]
 1006654:	48 89 c7             	mov    rdi,rax
 1006657:	e8 22 fc ff ff       	call   100627e <_avl_tree_node_get_height>
 100665c:	89 de                	mov    esi,ebx
 100665e:	89 c7                	mov    edi,eax
 1006660:	e8 ff fb ff ff       	call   1006264 <max_32>
 1006665:	8d 50 01             	lea    edx,[rax+0x1]
 1006668:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 100666c:	89 50 18             	mov    DWORD PTR [rax+0x18],edx
 100666f:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 1006673:	48 89 c7             	mov    rdi,rax
 1006676:	e8 30 fe ff ff       	call   10064ab <_avl_tree_node_balance>
 100667b:	48 83 c4 38          	add    rsp,0x38
 100667f:	5b                   	pop    rbx
 1006680:	5d                   	pop    rbp
 1006681:	c3                   	ret    

0000000001006682 <_avl_tree_swap_nodes>:
 1006682:	55                   	push   rbp
 1006683:	48 89 e5             	mov    rbp,rsp
 1006686:	48 83 ec 30          	sub    rsp,0x30
 100668a:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
 100668e:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
 1006692:	48 83 7d d8 00       	cmp    QWORD PTR [rbp-0x28],0x0
 1006697:	0f 84 96 03 00 00    	je     1006a33 <_avl_tree_swap_nodes+0x3b1>
 100669d:	48 83 7d d0 00       	cmp    QWORD PTR [rbp-0x30],0x0
 10066a2:	0f 84 8b 03 00 00    	je     1006a33 <_avl_tree_swap_nodes+0x3b1>
 10066a8:	48 c7 45 f8 00 00 00 	mov    QWORD PTR [rbp-0x8],0x0
 10066af:	00 
 10066b0:	48 c7 45 f0 00 00 00 	mov    QWORD PTR [rbp-0x10],0x0
 10066b7:	00 
 10066b8:	48 c7 45 e8 00 00 00 	mov    QWORD PTR [rbp-0x18],0x0
 10066bf:	00 
 10066c0:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 10066c4:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
 10066c8:	48 85 c0             	test   rax,rax
 10066cb:	74 20                	je     10066ed <_avl_tree_swap_nodes+0x6b>
 10066cd:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 10066d1:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
 10066d5:	48 3b 45 d0          	cmp    rax,QWORD PTR [rbp-0x30]
 10066d9:	75 12                	jne    10066ed <_avl_tree_swap_nodes+0x6b>
 10066db:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
 10066df:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
 10066e3:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 10066e7:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
 10066eb:	eb 2b                	jmp    1006718 <_avl_tree_swap_nodes+0x96>
 10066ed:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
 10066f1:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
 10066f5:	48 85 c0             	test   rax,rax
 10066f8:	74 1e                	je     1006718 <_avl_tree_swap_nodes+0x96>
 10066fa:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
 10066fe:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
 1006702:	48 3b 45 d8          	cmp    rax,QWORD PTR [rbp-0x28]
 1006706:	75 10                	jne    1006718 <_avl_tree_swap_nodes+0x96>
 1006708:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 100670c:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
 1006710:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
 1006714:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
 1006718:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
 100671d:	0f 84 89 01 00 00    	je     10068ac <_avl_tree_swap_nodes+0x22a>
 1006723:	48 83 7d f0 00       	cmp    QWORD PTR [rbp-0x10],0x0
 1006728:	0f 84 7e 01 00 00    	je     10068ac <_avl_tree_swap_nodes+0x22a>
 100672e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1006732:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
 1006736:	48 85 c0             	test   rax,rax
 1006739:	74 32                	je     100676d <_avl_tree_swap_nodes+0xeb>
 100673b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 100673f:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
 1006743:	48 8b 00             	mov    rax,QWORD PTR [rax]
 1006746:	48 3b 45 f8          	cmp    rax,QWORD PTR [rbp-0x8]
 100674a:	75 11                	jne    100675d <_avl_tree_swap_nodes+0xdb>
 100674c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1006750:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
 1006754:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
 1006758:	48 89 10             	mov    QWORD PTR [rax],rdx
 100675b:	eb 10                	jmp    100676d <_avl_tree_swap_nodes+0xeb>
 100675d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1006761:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
 1006765:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
 1006769:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
 100676d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1006771:	48 8b 00             	mov    rax,QWORD PTR [rax]
 1006774:	48 85 c0             	test   rax,rax
 1006777:	74 1c                	je     1006795 <_avl_tree_swap_nodes+0x113>
 1006779:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 100677d:	48 8b 00             	mov    rax,QWORD PTR [rax]
 1006780:	48 3b 45 f0          	cmp    rax,QWORD PTR [rbp-0x10]
 1006784:	74 0f                	je     1006795 <_avl_tree_swap_nodes+0x113>
 1006786:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 100678a:	48 8b 00             	mov    rax,QWORD PTR [rax]
 100678d:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
 1006791:	48 89 50 10          	mov    QWORD PTR [rax+0x10],rdx
 1006795:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1006799:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
 100679d:	48 85 c0             	test   rax,rax
 10067a0:	74 1e                	je     10067c0 <_avl_tree_swap_nodes+0x13e>
 10067a2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 10067a6:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
 10067aa:	48 3b 45 f0          	cmp    rax,QWORD PTR [rbp-0x10]
 10067ae:	74 10                	je     10067c0 <_avl_tree_swap_nodes+0x13e>
 10067b0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 10067b4:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
 10067b8:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
 10067bc:	48 89 50 10          	mov    QWORD PTR [rax+0x10],rdx
 10067c0:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 10067c4:	48 8b 00             	mov    rax,QWORD PTR [rax]
 10067c7:	48 85 c0             	test   rax,rax
 10067ca:	74 0f                	je     10067db <_avl_tree_swap_nodes+0x159>
 10067cc:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 10067d0:	48 8b 00             	mov    rax,QWORD PTR [rax]
 10067d3:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
 10067d7:	48 89 50 10          	mov    QWORD PTR [rax+0x10],rdx
 10067db:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 10067df:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
 10067e3:	48 85 c0             	test   rax,rax
 10067e6:	74 10                	je     10067f8 <_avl_tree_swap_nodes+0x176>
 10067e8:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 10067ec:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
 10067f0:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
 10067f4:	48 89 50 10          	mov    QWORD PTR [rax+0x10],rdx
 10067f8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 10067fc:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
 1006800:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 1006804:	48 89 50 10          	mov    QWORD PTR [rax+0x10],rdx
 1006808:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 100680c:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
 1006810:	48 89 50 10          	mov    QWORD PTR [rax+0x10],rdx
 1006814:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1006818:	48 8b 00             	mov    rax,QWORD PTR [rax]
 100681b:	48 3b 45 f0          	cmp    rax,QWORD PTR [rbp-0x10]
 100681f:	75 46                	jne    1006867 <_avl_tree_swap_nodes+0x1e5>
 1006821:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 1006825:	48 8b 10             	mov    rdx,QWORD PTR [rax]
 1006828:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 100682c:	48 89 10             	mov    QWORD PTR [rax],rdx
 100682f:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 1006833:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
 1006837:	48 89 10             	mov    QWORD PTR [rax],rdx
 100683a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 100683e:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
 1006842:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
 1006846:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 100684a:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
 100684e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1006852:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
 1006856:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 100685a:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
 100685e:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
 1006862:	e9 a7 01 00 00       	jmp    1006a0e <_avl_tree_swap_nodes+0x38c>
 1006867:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 100686b:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
 100686f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1006873:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
 1006877:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 100687b:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
 100687f:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
 1006883:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1006887:	48 8b 00             	mov    rax,QWORD PTR [rax]
 100688a:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
 100688e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 1006892:	48 8b 10             	mov    rdx,QWORD PTR [rax]
 1006895:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1006899:	48 89 10             	mov    QWORD PTR [rax],rdx
 100689c:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 10068a0:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
 10068a4:	48 89 10             	mov    QWORD PTR [rax],rdx
 10068a7:	e9 62 01 00 00       	jmp    1006a0e <_avl_tree_swap_nodes+0x38c>
 10068ac:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 10068b0:	48 8b 00             	mov    rax,QWORD PTR [rax]
 10068b3:	48 85 c0             	test   rax,rax
 10068b6:	74 0f                	je     10068c7 <_avl_tree_swap_nodes+0x245>
 10068b8:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 10068bc:	48 8b 00             	mov    rax,QWORD PTR [rax]
 10068bf:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
 10068c3:	48 89 50 10          	mov    QWORD PTR [rax+0x10],rdx
 10068c7:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 10068cb:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
 10068cf:	48 85 c0             	test   rax,rax
 10068d2:	74 10                	je     10068e4 <_avl_tree_swap_nodes+0x262>
 10068d4:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 10068d8:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
 10068dc:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
 10068e0:	48 89 50 10          	mov    QWORD PTR [rax+0x10],rdx
 10068e4:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
 10068e8:	48 8b 00             	mov    rax,QWORD PTR [rax]
 10068eb:	48 85 c0             	test   rax,rax
 10068ee:	74 0f                	je     10068ff <_avl_tree_swap_nodes+0x27d>
 10068f0:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
 10068f4:	48 8b 00             	mov    rax,QWORD PTR [rax]
 10068f7:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
 10068fb:	48 89 50 10          	mov    QWORD PTR [rax+0x10],rdx
 10068ff:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
 1006903:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
 1006907:	48 85 c0             	test   rax,rax
 100690a:	74 10                	je     100691c <_avl_tree_swap_nodes+0x29a>
 100690c:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
 1006910:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
 1006914:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
 1006918:	48 89 50 10          	mov    QWORD PTR [rax+0x10],rdx
 100691c:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 1006920:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
 1006924:	48 85 c0             	test   rax,rax
 1006927:	74 32                	je     100695b <_avl_tree_swap_nodes+0x2d9>
 1006929:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 100692d:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
 1006931:	48 8b 00             	mov    rax,QWORD PTR [rax]
 1006934:	48 3b 45 d8          	cmp    rax,QWORD PTR [rbp-0x28]
 1006938:	75 11                	jne    100694b <_avl_tree_swap_nodes+0x2c9>
 100693a:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 100693e:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
 1006942:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
 1006946:	48 89 10             	mov    QWORD PTR [rax],rdx
 1006949:	eb 10                	jmp    100695b <_avl_tree_swap_nodes+0x2d9>
 100694b:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 100694f:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
 1006953:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
 1006957:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
 100695b:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
 100695f:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
 1006963:	48 85 c0             	test   rax,rax
 1006966:	74 32                	je     100699a <_avl_tree_swap_nodes+0x318>
 1006968:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
 100696c:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
 1006970:	48 8b 00             	mov    rax,QWORD PTR [rax]
 1006973:	48 3b 45 d0          	cmp    rax,QWORD PTR [rbp-0x30]
 1006977:	75 11                	jne    100698a <_avl_tree_swap_nodes+0x308>
 1006979:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
 100697d:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
 1006981:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
 1006985:	48 89 10             	mov    QWORD PTR [rax],rdx
 1006988:	eb 10                	jmp    100699a <_avl_tree_swap_nodes+0x318>
 100698a:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
 100698e:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
 1006992:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
 1006996:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
 100699a:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 100699e:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
 10069a2:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
 10069a6:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
 10069aa:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
 10069ae:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 10069b2:	48 89 50 10          	mov    QWORD PTR [rax+0x10],rdx
 10069b6:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
 10069ba:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
 10069be:	48 89 50 10          	mov    QWORD PTR [rax+0x10],rdx
 10069c2:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 10069c6:	48 8b 00             	mov    rax,QWORD PTR [rax]
 10069c9:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
 10069cd:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
 10069d1:	48 8b 10             	mov    rdx,QWORD PTR [rax]
 10069d4:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 10069d8:	48 89 10             	mov    QWORD PTR [rax],rdx
 10069db:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
 10069df:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
 10069e3:	48 89 10             	mov    QWORD PTR [rax],rdx
 10069e6:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 10069ea:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
 10069ee:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
 10069f2:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
 10069f6:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
 10069fa:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 10069fe:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
 1006a02:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
 1006a06:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
 1006a0a:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
 1006a0e:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 1006a12:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
 1006a15:	89 45 e4             	mov    DWORD PTR [rbp-0x1c],eax
 1006a18:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
 1006a1c:	8b 50 18             	mov    edx,DWORD PTR [rax+0x18]
 1006a1f:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 1006a23:	89 50 18             	mov    DWORD PTR [rax+0x18],edx
 1006a26:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
 1006a2a:	8b 55 e4             	mov    edx,DWORD PTR [rbp-0x1c]
 1006a2d:	89 50 18             	mov    DWORD PTR [rax+0x18],edx
 1006a30:	90                   	nop
 1006a31:	eb 01                	jmp    1006a34 <_avl_tree_swap_nodes+0x3b2>
 1006a33:	90                   	nop
 1006a34:	c9                   	leave  
 1006a35:	c3                   	ret    

0000000001006a36 <_avl_tree_node_delete>:
 1006a36:	55                   	push   rbp
 1006a37:	48 89 e5             	mov    rbp,rsp
 1006a3a:	53                   	push   rbx
 1006a3b:	48 83 ec 48          	sub    rsp,0x48
 1006a3f:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
 1006a43:	48 89 75 c0          	mov    QWORD PTR [rbp-0x40],rsi
 1006a47:	48 89 55 b8          	mov    QWORD PTR [rbp-0x48],rdx
 1006a4b:	48 83 7d c8 00       	cmp    QWORD PTR [rbp-0x38],0x0
 1006a50:	74 0e                	je     1006a60 <_avl_tree_node_delete+0x2a>
 1006a52:	48 83 7d c0 00       	cmp    QWORD PTR [rbp-0x40],0x0
 1006a57:	74 07                	je     1006a60 <_avl_tree_node_delete+0x2a>
 1006a59:	48 83 7d b8 00       	cmp    QWORD PTR [rbp-0x48],0x0
 1006a5e:	75 09                	jne    1006a69 <_avl_tree_node_delete+0x33>
 1006a60:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
 1006a64:	e9 82 01 00 00       	jmp    1006beb <_avl_tree_node_delete+0x1b5>
 1006a69:	48 8b 4d c0          	mov    rcx,QWORD PTR [rbp-0x40]
 1006a6d:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
 1006a71:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
 1006a75:	48 89 ce             	mov    rsi,rcx
 1006a78:	48 89 d7             	mov    rdi,rdx
 1006a7b:	ff d0                	call   rax
 1006a7d:	89 45 ec             	mov    DWORD PTR [rbp-0x14],eax
 1006a80:	83 7d ec 00          	cmp    DWORD PTR [rbp-0x14],0x0
 1006a84:	79 2b                	jns    1006ab1 <_avl_tree_node_delete+0x7b>
 1006a86:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
 1006a8a:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
 1006a8e:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
 1006a92:	48 8b 4d c0          	mov    rcx,QWORD PTR [rbp-0x40]
 1006a96:	48 89 ce             	mov    rsi,rcx
 1006a99:	48 89 c7             	mov    rdi,rax
 1006a9c:	e8 95 ff ff ff       	call   1006a36 <_avl_tree_node_delete>
 1006aa1:	48 89 c2             	mov    rdx,rax
 1006aa4:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
 1006aa8:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
 1006aac:	e9 e5 00 00 00       	jmp    1006b96 <_avl_tree_node_delete+0x160>
 1006ab1:	83 7d ec 00          	cmp    DWORD PTR [rbp-0x14],0x0
 1006ab5:	7e 29                	jle    1006ae0 <_avl_tree_node_delete+0xaa>
 1006ab7:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
 1006abb:	48 8b 00             	mov    rax,QWORD PTR [rax]
 1006abe:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
 1006ac2:	48 8b 4d c0          	mov    rcx,QWORD PTR [rbp-0x40]
 1006ac6:	48 89 ce             	mov    rsi,rcx
 1006ac9:	48 89 c7             	mov    rdi,rax
 1006acc:	e8 65 ff ff ff       	call   1006a36 <_avl_tree_node_delete>
 1006ad1:	48 89 c2             	mov    rdx,rax
 1006ad4:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
 1006ad8:	48 89 10             	mov    QWORD PTR [rax],rdx
 1006adb:	e9 b6 00 00 00       	jmp    1006b96 <_avl_tree_node_delete+0x160>
 1006ae0:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
 1006ae4:	48 8b 00             	mov    rax,QWORD PTR [rax]
 1006ae7:	48 85 c0             	test   rax,rax
 1006aea:	74 0d                	je     1006af9 <_avl_tree_node_delete+0xc3>
 1006aec:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
 1006af0:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
 1006af4:	48 85 c0             	test   rax,rax
 1006af7:	75 4c                	jne    1006b45 <_avl_tree_node_delete+0x10f>
 1006af9:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
 1006afd:	48 8b 00             	mov    rax,QWORD PTR [rax]
 1006b00:	48 85 c0             	test   rax,rax
 1006b03:	74 09                	je     1006b0e <_avl_tree_node_delete+0xd8>
 1006b05:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
 1006b09:	48 8b 00             	mov    rax,QWORD PTR [rax]
 1006b0c:	eb 08                	jmp    1006b16 <_avl_tree_node_delete+0xe0>
 1006b0e:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
 1006b12:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
 1006b16:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
 1006b1a:	48 83 7d d8 00       	cmp    QWORD PTR [rbp-0x28],0x0
 1006b1f:	75 0a                	jne    1006b2b <_avl_tree_node_delete+0xf5>
 1006b21:	48 c7 45 c8 00 00 00 	mov    QWORD PTR [rbp-0x38],0x0
 1006b28:	00 
 1006b29:	eb 6b                	jmp    1006b96 <_avl_tree_node_delete+0x160>
 1006b2b:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
 1006b2f:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
 1006b33:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 1006b37:	48 89 50 10          	mov    QWORD PTR [rax+0x10],rdx
 1006b3b:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 1006b3f:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
 1006b43:	eb 51                	jmp    1006b96 <_avl_tree_node_delete+0x160>
 1006b45:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
 1006b49:	48 89 c7             	mov    rdi,rax
 1006b4c:	e8 13 02 00 00       	call   1006d64 <avl_tree_larger>
 1006b51:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
 1006b55:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
 1006b59:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
 1006b5d:	48 89 d6             	mov    rsi,rdx
 1006b60:	48 89 c7             	mov    rdi,rax
 1006b63:	e8 1a fb ff ff       	call   1006682 <_avl_tree_swap_nodes>
 1006b68:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
 1006b6c:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
 1006b70:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
 1006b74:	48 8b 4d c8          	mov    rcx,QWORD PTR [rbp-0x38]
 1006b78:	48 89 ce             	mov    rsi,rcx
 1006b7b:	48 89 c7             	mov    rdi,rax
 1006b7e:	e8 b3 fe ff ff       	call   1006a36 <_avl_tree_node_delete>
 1006b83:	48 89 c2             	mov    rdx,rax
 1006b86:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
 1006b8a:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
 1006b8e:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
 1006b92:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
 1006b96:	48 83 7d c8 00       	cmp    QWORD PTR [rbp-0x38],0x0
 1006b9b:	75 06                	jne    1006ba3 <_avl_tree_node_delete+0x16d>
 1006b9d:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
 1006ba1:	eb 48                	jmp    1006beb <_avl_tree_node_delete+0x1b5>
 1006ba3:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
 1006ba7:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
 1006bab:	48 89 c7             	mov    rdi,rax
 1006bae:	e8 cb f6 ff ff       	call   100627e <_avl_tree_node_get_height>
 1006bb3:	89 c3                	mov    ebx,eax
 1006bb5:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
 1006bb9:	48 8b 00             	mov    rax,QWORD PTR [rax]
 1006bbc:	48 89 c7             	mov    rdi,rax
 1006bbf:	e8 ba f6 ff ff       	call   100627e <_avl_tree_node_get_height>
 1006bc4:	89 de                	mov    esi,ebx
 1006bc6:	89 c7                	mov    edi,eax
 1006bc8:	e8 97 f6 ff ff       	call   1006264 <max_32>
 1006bcd:	8d 50 01             	lea    edx,[rax+0x1]
 1006bd0:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
 1006bd4:	89 50 18             	mov    DWORD PTR [rax+0x18],edx
 1006bd7:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
 1006bdb:	48 89 c7             	mov    rdi,rax
 1006bde:	e8 c8 f8 ff ff       	call   10064ab <_avl_tree_node_balance>
 1006be3:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
 1006be7:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
 1006beb:	48 83 c4 48          	add    rsp,0x48
 1006bef:	5b                   	pop    rbx
 1006bf0:	5d                   	pop    rbp
 1006bf1:	c3                   	ret    

0000000001006bf2 <_avl_tree_node_search>:
 1006bf2:	55                   	push   rbp
 1006bf3:	48 89 e5             	mov    rbp,rsp
 1006bf6:	48 83 ec 30          	sub    rsp,0x30
 1006bfa:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
 1006bfe:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
 1006c02:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
 1006c06:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
 1006c0b:	74 07                	je     1006c14 <_avl_tree_node_search+0x22>
 1006c0d:	48 83 7d d8 00       	cmp    QWORD PTR [rbp-0x28],0x0
 1006c12:	75 07                	jne    1006c1b <_avl_tree_node_search+0x29>
 1006c14:	b8 00 00 00 00       	mov    eax,0x0
 1006c19:	eb 60                	jmp    1006c7b <_avl_tree_node_search+0x89>
 1006c1b:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
 1006c1f:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
 1006c23:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 1006c27:	48 89 ce             	mov    rsi,rcx
 1006c2a:	48 89 d7             	mov    rdi,rdx
 1006c2d:	ff d0                	call   rax
 1006c2f:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
 1006c32:	83 7d fc 00          	cmp    DWORD PTR [rbp-0x4],0x0
 1006c36:	79 1d                	jns    1006c55 <_avl_tree_node_search+0x63>
 1006c38:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 1006c3c:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
 1006c40:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
 1006c44:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
 1006c48:	48 89 ce             	mov    rsi,rcx
 1006c4b:	48 89 c7             	mov    rdi,rax
 1006c4e:	e8 9f ff ff ff       	call   1006bf2 <_avl_tree_node_search>
 1006c53:	eb 26                	jmp    1006c7b <_avl_tree_node_search+0x89>
 1006c55:	83 7d fc 00          	cmp    DWORD PTR [rbp-0x4],0x0
 1006c59:	75 06                	jne    1006c61 <_avl_tree_node_search+0x6f>
 1006c5b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 1006c5f:	eb 1a                	jmp    1006c7b <_avl_tree_node_search+0x89>
 1006c61:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 1006c65:	48 8b 00             	mov    rax,QWORD PTR [rax]
 1006c68:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
 1006c6c:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
 1006c70:	48 89 ce             	mov    rsi,rcx
 1006c73:	48 89 c7             	mov    rdi,rax
 1006c76:	e8 77 ff ff ff       	call   1006bf2 <_avl_tree_node_search>
 1006c7b:	c9                   	leave  
 1006c7c:	c3                   	ret    

0000000001006c7d <_avl_tree_node_init>:
 1006c7d:	55                   	push   rbp
 1006c7e:	48 89 e5             	mov    rbp,rsp
 1006c81:	48 83 ec 08          	sub    rsp,0x8
 1006c85:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
 1006c89:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
 1006c8e:	74 2f                	je     1006cbf <_avl_tree_node_init+0x42>
 1006c90:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1006c94:	c7 40 18 00 00 00 00 	mov    DWORD PTR [rax+0x18],0x0
 1006c9b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1006c9f:	48 c7 00 00 00 00 00 	mov    QWORD PTR [rax],0x0
 1006ca6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1006caa:	48 c7 40 08 00 00 00 	mov    QWORD PTR [rax+0x8],0x0
 1006cb1:	00 
 1006cb2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1006cb6:	48 c7 40 10 00 00 00 	mov    QWORD PTR [rax+0x10],0x0
 1006cbd:	00 
 1006cbe:	90                   	nop
 1006cbf:	90                   	nop
 1006cc0:	c9                   	leave  
 1006cc1:	c3                   	ret    

0000000001006cc2 <avl_tree_smallest>:
 1006cc2:	55                   	push   rbp
 1006cc3:	48 89 e5             	mov    rbp,rsp
 1006cc6:	48 83 ec 18          	sub    rsp,0x18
 1006cca:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
 1006cce:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
 1006cd3:	75 07                	jne    1006cdc <avl_tree_smallest+0x1a>
 1006cd5:	b8 00 00 00 00       	mov    eax,0x0
 1006cda:	eb 34                	jmp    1006d10 <avl_tree_smallest+0x4e>
 1006cdc:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 1006ce0:	48 8b 00             	mov    rax,QWORD PTR [rax]
 1006ce3:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
 1006ce7:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
 1006cec:	75 12                	jne    1006d00 <avl_tree_smallest+0x3e>
 1006cee:	b8 00 00 00 00       	mov    eax,0x0
 1006cf3:	eb 1b                	jmp    1006d10 <avl_tree_smallest+0x4e>
 1006cf5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1006cf9:	48 8b 00             	mov    rax,QWORD PTR [rax]
 1006cfc:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
 1006d00:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1006d04:	48 8b 00             	mov    rax,QWORD PTR [rax]
 1006d07:	48 85 c0             	test   rax,rax
 1006d0a:	75 e9                	jne    1006cf5 <avl_tree_smallest+0x33>
 1006d0c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1006d10:	c9                   	leave  
 1006d11:	c3                   	ret    

0000000001006d12 <avl_tree_largest>:
 1006d12:	55                   	push   rbp
 1006d13:	48 89 e5             	mov    rbp,rsp
 1006d16:	48 83 ec 18          	sub    rsp,0x18
 1006d1a:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
 1006d1e:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
 1006d23:	75 07                	jne    1006d2c <avl_tree_largest+0x1a>
 1006d25:	b8 00 00 00 00       	mov    eax,0x0
 1006d2a:	eb 36                	jmp    1006d62 <avl_tree_largest+0x50>
 1006d2c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 1006d30:	48 8b 00             	mov    rax,QWORD PTR [rax]
 1006d33:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
 1006d37:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
 1006d3c:	75 13                	jne    1006d51 <avl_tree_largest+0x3f>
 1006d3e:	b8 00 00 00 00       	mov    eax,0x0
 1006d43:	eb 1d                	jmp    1006d62 <avl_tree_largest+0x50>
 1006d45:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1006d49:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
 1006d4d:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
 1006d51:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1006d55:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
 1006d59:	48 85 c0             	test   rax,rax
 1006d5c:	75 e7                	jne    1006d45 <avl_tree_largest+0x33>
 1006d5e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1006d62:	c9                   	leave  
 1006d63:	c3                   	ret    

0000000001006d64 <avl_tree_larger>:
 1006d64:	55                   	push   rbp
 1006d65:	48 89 e5             	mov    rbp,rsp
 1006d68:	48 83 ec 18          	sub    rsp,0x18
 1006d6c:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
 1006d70:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
 1006d75:	75 07                	jne    1006d7e <avl_tree_larger+0x1a>
 1006d77:	b8 00 00 00 00       	mov    eax,0x0
 1006d7c:	eb 79                	jmp    1006df7 <avl_tree_larger+0x93>
 1006d7e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 1006d82:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
 1006d86:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1006d8a:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
 1006d8e:	48 85 c0             	test   rax,rax
 1006d91:	74 52                	je     1006de5 <avl_tree_larger+0x81>
 1006d93:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1006d97:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
 1006d9b:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
 1006d9f:	eb 0b                	jmp    1006dac <avl_tree_larger+0x48>
 1006da1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1006da5:	48 8b 00             	mov    rax,QWORD PTR [rax]
 1006da8:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
 1006dac:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1006db0:	48 8b 00             	mov    rax,QWORD PTR [rax]
 1006db3:	48 85 c0             	test   rax,rax
 1006db6:	75 e9                	jne    1006da1 <avl_tree_larger+0x3d>
 1006db8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1006dbc:	eb 39                	jmp    1006df7 <avl_tree_larger+0x93>
 1006dbe:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1006dc2:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
 1006dc6:	48 8b 00             	mov    rax,QWORD PTR [rax]
 1006dc9:	48 3b 45 f8          	cmp    rax,QWORD PTR [rbp-0x8]
 1006dcd:	75 0a                	jne    1006dd9 <avl_tree_larger+0x75>
 1006dcf:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1006dd3:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
 1006dd7:	eb 1e                	jmp    1006df7 <avl_tree_larger+0x93>
 1006dd9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1006ddd:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
 1006de1:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
 1006de5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1006de9:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
 1006ded:	48 85 c0             	test   rax,rax
 1006df0:	75 cc                	jne    1006dbe <avl_tree_larger+0x5a>
 1006df2:	b8 00 00 00 00       	mov    eax,0x0
 1006df7:	c9                   	leave  
 1006df8:	c3                   	ret    

0000000001006df9 <avl_tree_smaller>:
 1006df9:	55                   	push   rbp
 1006dfa:	48 89 e5             	mov    rbp,rsp
 1006dfd:	48 83 ec 18          	sub    rsp,0x18
 1006e01:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
 1006e05:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
 1006e0a:	75 07                	jne    1006e13 <avl_tree_smaller+0x1a>
 1006e0c:	b8 00 00 00 00       	mov    eax,0x0
 1006e11:	eb 7a                	jmp    1006e8d <avl_tree_smaller+0x94>
 1006e13:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 1006e17:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
 1006e1b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1006e1f:	48 8b 00             	mov    rax,QWORD PTR [rax]
 1006e22:	48 85 c0             	test   rax,rax
 1006e25:	74 54                	je     1006e7b <avl_tree_smaller+0x82>
 1006e27:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1006e2b:	48 8b 00             	mov    rax,QWORD PTR [rax]
 1006e2e:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
 1006e32:	eb 0c                	jmp    1006e40 <avl_tree_smaller+0x47>
 1006e34:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1006e38:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
 1006e3c:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
 1006e40:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1006e44:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
 1006e48:	48 85 c0             	test   rax,rax
 1006e4b:	75 e7                	jne    1006e34 <avl_tree_smaller+0x3b>
 1006e4d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1006e51:	eb 3a                	jmp    1006e8d <avl_tree_smaller+0x94>
 1006e53:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1006e57:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
 1006e5b:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
 1006e5f:	48 3b 45 f8          	cmp    rax,QWORD PTR [rbp-0x8]
 1006e63:	75 0a                	jne    1006e6f <avl_tree_smaller+0x76>
 1006e65:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1006e69:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
 1006e6d:	eb 1e                	jmp    1006e8d <avl_tree_smaller+0x94>
 1006e6f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1006e73:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
 1006e77:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
 1006e7b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1006e7f:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
 1006e83:	48 85 c0             	test   rax,rax
 1006e86:	75 cb                	jne    1006e53 <avl_tree_smaller+0x5a>
 1006e88:	b8 00 00 00 00       	mov    eax,0x0
 1006e8d:	c9                   	leave  
 1006e8e:	c3                   	ret    

0000000001006e8f <avl_tree_search>:
 1006e8f:	55                   	push   rbp
 1006e90:	48 89 e5             	mov    rbp,rsp
 1006e93:	48 83 ec 20          	sub    rsp,0x20
 1006e97:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
 1006e9b:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
 1006e9f:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
 1006ea3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1006ea7:	48 8b 00             	mov    rax,QWORD PTR [rax]
 1006eaa:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
 1006eae:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
 1006eb2:	48 89 ce             	mov    rsi,rcx
 1006eb5:	48 89 c7             	mov    rdi,rax
 1006eb8:	e8 35 fd ff ff       	call   1006bf2 <_avl_tree_node_search>
 1006ebd:	c9                   	leave  
 1006ebe:	c3                   	ret    

0000000001006ebf <avl_tree_insert>:
 1006ebf:	55                   	push   rbp
 1006ec0:	48 89 e5             	mov    rbp,rsp
 1006ec3:	48 83 ec 20          	sub    rsp,0x20
 1006ec7:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
 1006ecb:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
 1006ecf:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
 1006ed3:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
 1006ed8:	74 3a                	je     1006f14 <avl_tree_insert+0x55>
 1006eda:	48 83 7d f0 00       	cmp    QWORD PTR [rbp-0x10],0x0
 1006edf:	74 33                	je     1006f14 <avl_tree_insert+0x55>
 1006ee1:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 1006ee5:	48 89 c7             	mov    rdi,rax
 1006ee8:	e8 90 fd ff ff       	call   1006c7d <_avl_tree_node_init>
 1006eed:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1006ef1:	48 8b 00             	mov    rax,QWORD PTR [rax]
 1006ef4:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
 1006ef8:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
 1006efc:	b9 00 00 00 00       	mov    ecx,0x0
 1006f01:	48 89 c7             	mov    rdi,rax
 1006f04:	e8 6f f6 ff ff       	call   1006578 <_avl_tree_node_insert>
 1006f09:	48 89 c2             	mov    rdx,rax
 1006f0c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1006f10:	48 89 10             	mov    QWORD PTR [rax],rdx
 1006f13:	90                   	nop
 1006f14:	90                   	nop
 1006f15:	c9                   	leave  
 1006f16:	c3                   	ret    

0000000001006f17 <avl_tree_delete>:
 1006f17:	55                   	push   rbp
 1006f18:	48 89 e5             	mov    rbp,rsp
 1006f1b:	48 83 ec 20          	sub    rsp,0x20
 1006f1f:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
 1006f23:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
 1006f27:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
 1006f2b:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
 1006f30:	74 2c                	je     1006f5e <avl_tree_delete+0x47>
 1006f32:	48 83 7d f0 00       	cmp    QWORD PTR [rbp-0x10],0x0
 1006f37:	74 25                	je     1006f5e <avl_tree_delete+0x47>
 1006f39:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1006f3d:	48 8b 00             	mov    rax,QWORD PTR [rax]
 1006f40:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
 1006f44:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
 1006f48:	48 89 ce             	mov    rsi,rcx
 1006f4b:	48 89 c7             	mov    rdi,rax
 1006f4e:	e8 e3 fa ff ff       	call   1006a36 <_avl_tree_node_delete>
 1006f53:	48 89 c2             	mov    rdx,rax
 1006f56:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1006f5a:	48 89 10             	mov    QWORD PTR [rax],rdx
 1006f5d:	90                   	nop
 1006f5e:	90                   	nop
 1006f5f:	c9                   	leave  
 1006f60:	c3                   	ret    

0000000001006f61 <avl_tree_size>:
 1006f61:	55                   	push   rbp
 1006f62:	48 89 e5             	mov    rbp,rsp
 1006f65:	48 83 ec 18          	sub    rsp,0x18
 1006f69:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
 1006f6d:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
 1006f72:	75 07                	jne    1006f7b <avl_tree_size+0x1a>
 1006f74:	b8 ff ff ff ff       	mov    eax,0xffffffff
 1006f79:	eb 4a                	jmp    1006fc5 <avl_tree_size+0x64>
 1006f7b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 1006f7f:	48 8b 00             	mov    rax,QWORD PTR [rax]
 1006f82:	48 85 c0             	test   rax,rax
 1006f85:	75 07                	jne    1006f8e <avl_tree_size+0x2d>
 1006f87:	b8 00 00 00 00       	mov    eax,0x0
 1006f8c:	eb 37                	jmp    1006fc5 <avl_tree_size+0x64>
 1006f8e:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
 1006f95:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 1006f99:	48 89 c7             	mov    rdi,rax
 1006f9c:	e8 21 fd ff ff       	call   1006cc2 <avl_tree_smallest>
 1006fa1:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
 1006fa5:	eb 14                	jmp    1006fbb <avl_tree_size+0x5a>
 1006fa7:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
 1006fab:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 1006faf:	48 89 c7             	mov    rdi,rax
 1006fb2:	e8 ad fd ff ff       	call   1006d64 <avl_tree_larger>
 1006fb7:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
 1006fbb:	48 83 7d f0 00       	cmp    QWORD PTR [rbp-0x10],0x0
 1006fc0:	75 e5                	jne    1006fa7 <avl_tree_size+0x46>
 1006fc2:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
 1006fc5:	c9                   	leave  
 1006fc6:	c3                   	ret    

0000000001006fc7 <avl_tree_init>:
 1006fc7:	55                   	push   rbp
 1006fc8:	48 89 e5             	mov    rbp,rsp
 1006fcb:	48 83 ec 08          	sub    rsp,0x8
 1006fcf:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
 1006fd3:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
 1006fd8:	74 0c                	je     1006fe6 <avl_tree_init+0x1f>
 1006fda:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1006fde:	48 c7 00 00 00 00 00 	mov    QWORD PTR [rax],0x0
 1006fe5:	90                   	nop
 1006fe6:	90                   	nop
 1006fe7:	c9                   	leave  
 1006fe8:	c3                   	ret    

0000000001006fe9 <_avl_tree_node_calculate_height>:
 1006fe9:	55                   	push   rbp
 1006fea:	48 89 e5             	mov    rbp,rsp
 1006fed:	53                   	push   rbx
 1006fee:	48 83 ec 18          	sub    rsp,0x18
 1006ff2:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
 1006ff6:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
 1006ffb:	75 07                	jne    1007004 <_avl_tree_node_calculate_height+0x1b>
 1006ffd:	b8 ff ff ff ff       	mov    eax,0xffffffff
 1007002:	eb 2d                	jmp    1007031 <_avl_tree_node_calculate_height+0x48>
 1007004:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 1007008:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
 100700c:	48 89 c7             	mov    rdi,rax
 100700f:	e8 d5 ff ff ff       	call   1006fe9 <_avl_tree_node_calculate_height>
 1007014:	89 c3                	mov    ebx,eax
 1007016:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 100701a:	48 8b 00             	mov    rax,QWORD PTR [rax]
 100701d:	48 89 c7             	mov    rdi,rax
 1007020:	e8 c4 ff ff ff       	call   1006fe9 <_avl_tree_node_calculate_height>
 1007025:	89 de                	mov    esi,ebx
 1007027:	89 c7                	mov    edi,eax
 1007029:	e8 36 f2 ff ff       	call   1006264 <max_32>
 100702e:	83 c0 01             	add    eax,0x1
 1007031:	48 83 c4 18          	add    rsp,0x18
 1007035:	5b                   	pop    rbx
 1007036:	5d                   	pop    rbp
 1007037:	c3                   	ret    

0000000001007038 <_avl_tree_node_test>:
 1007038:	55                   	push   rbp
 1007039:	48 89 e5             	mov    rbp,rsp
 100703c:	48 83 ec 10          	sub    rsp,0x10
 1007040:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
 1007044:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
 1007048:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
 100704d:	75 0a                	jne    1007059 <_avl_tree_node_test+0x21>
 100704f:	b8 01 00 00 00       	mov    eax,0x1
 1007054:	e9 37 01 00 00       	jmp    1007190 <_avl_tree_node_test+0x158>
 1007059:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 100705d:	48 89 c7             	mov    rdi,rax
 1007060:	e8 3c f2 ff ff       	call   10062a1 <_avl_tree_node_get_balance_factor>
 1007065:	83 f8 ff             	cmp    eax,0xffffffff
 1007068:	7c 2a                	jl     1007094 <_avl_tree_node_test+0x5c>
 100706a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 100706e:	48 89 c7             	mov    rdi,rax
 1007071:	e8 2b f2 ff ff       	call   10062a1 <_avl_tree_node_get_balance_factor>
 1007076:	83 f8 01             	cmp    eax,0x1
 1007079:	7f 19                	jg     1007094 <_avl_tree_node_test+0x5c>
 100707b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 100707f:	48 89 c7             	mov    rdi,rax
 1007082:	e8 62 ff ff ff       	call   1006fe9 <_avl_tree_node_calculate_height>
 1007087:	89 c2                	mov    edx,eax
 1007089:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 100708d:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
 1007090:	39 c2                	cmp    edx,eax
 1007092:	74 0a                	je     100709e <_avl_tree_node_test+0x66>
 1007094:	b8 00 00 00 00       	mov    eax,0x0
 1007099:	e9 f2 00 00 00       	jmp    1007190 <_avl_tree_node_test+0x158>
 100709e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 10070a2:	48 8b 00             	mov    rax,QWORD PTR [rax]
 10070a5:	48 85 c0             	test   rax,rax
 10070a8:	74 1b                	je     10070c5 <_avl_tree_node_test+0x8d>
 10070aa:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 10070ae:	48 8b 00             	mov    rax,QWORD PTR [rax]
 10070b1:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
 10070b5:	48 3b 45 f8          	cmp    rax,QWORD PTR [rbp-0x8]
 10070b9:	74 0a                	je     10070c5 <_avl_tree_node_test+0x8d>
 10070bb:	b8 00 00 00 00       	mov    eax,0x0
 10070c0:	e9 cb 00 00 00       	jmp    1007190 <_avl_tree_node_test+0x158>
 10070c5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 10070c9:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
 10070cd:	48 85 c0             	test   rax,rax
 10070d0:	74 1c                	je     10070ee <_avl_tree_node_test+0xb6>
 10070d2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 10070d6:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
 10070da:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
 10070de:	48 3b 45 f8          	cmp    rax,QWORD PTR [rbp-0x8]
 10070e2:	74 0a                	je     10070ee <_avl_tree_node_test+0xb6>
 10070e4:	b8 00 00 00 00       	mov    eax,0x0
 10070e9:	e9 a2 00 00 00       	jmp    1007190 <_avl_tree_node_test+0x158>
 10070ee:	48 83 7d f0 00       	cmp    QWORD PTR [rbp-0x10],0x0
 10070f3:	74 57                	je     100714c <_avl_tree_node_test+0x114>
 10070f5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 10070f9:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
 10070fd:	48 85 c0             	test   rax,rax
 1007100:	74 1c                	je     100711e <_avl_tree_node_test+0xe6>
 1007102:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1007106:	48 8b 48 08          	mov    rcx,QWORD PTR [rax+0x8]
 100710a:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
 100710e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 1007112:	48 89 ce             	mov    rsi,rcx
 1007115:	48 89 d7             	mov    rdi,rdx
 1007118:	ff d0                	call   rax
 100711a:	85 c0                	test   eax,eax
 100711c:	7f 27                	jg     1007145 <_avl_tree_node_test+0x10d>
 100711e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1007122:	48 8b 00             	mov    rax,QWORD PTR [rax]
 1007125:	48 85 c0             	test   rax,rax
 1007128:	74 22                	je     100714c <_avl_tree_node_test+0x114>
 100712a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 100712e:	48 8b 08             	mov    rcx,QWORD PTR [rax]
 1007131:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
 1007135:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 1007139:	48 89 ce             	mov    rsi,rcx
 100713c:	48 89 d7             	mov    rdi,rdx
 100713f:	ff d0                	call   rax
 1007141:	85 c0                	test   eax,eax
 1007143:	79 07                	jns    100714c <_avl_tree_node_test+0x114>
 1007145:	b8 00 00 00 00       	mov    eax,0x0
 100714a:	eb 44                	jmp    1007190 <_avl_tree_node_test+0x158>
 100714c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1007150:	48 8b 00             	mov    rax,QWORD PTR [rax]
 1007153:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
 1007157:	48 89 d6             	mov    rsi,rdx
 100715a:	48 89 c7             	mov    rdi,rax
 100715d:	e8 d6 fe ff ff       	call   1007038 <_avl_tree_node_test>
 1007162:	84 c0                	test   al,al
 1007164:	74 22                	je     1007188 <_avl_tree_node_test+0x150>
 1007166:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 100716a:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
 100716e:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
 1007172:	48 89 d6             	mov    rsi,rdx
 1007175:	48 89 c7             	mov    rdi,rax
 1007178:	e8 bb fe ff ff       	call   1007038 <_avl_tree_node_test>
 100717d:	84 c0                	test   al,al
 100717f:	74 07                	je     1007188 <_avl_tree_node_test+0x150>
 1007181:	b8 01 00 00 00       	mov    eax,0x1
 1007186:	eb 05                	jmp    100718d <_avl_tree_node_test+0x155>
 1007188:	b8 00 00 00 00       	mov    eax,0x0
 100718d:	83 e0 01             	and    eax,0x1
 1007190:	c9                   	leave  
 1007191:	c3                   	ret    

0000000001007192 <avl_tree_validate>:
 1007192:	55                   	push   rbp
 1007193:	48 89 e5             	mov    rbp,rsp
 1007196:	48 83 ec 10          	sub    rsp,0x10
 100719a:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
 100719e:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
 10071a2:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
 10071a7:	75 07                	jne    10071b0 <avl_tree_validate+0x1e>
 10071a9:	b8 01 00 00 00       	mov    eax,0x1
 10071ae:	eb 16                	jmp    10071c6 <avl_tree_validate+0x34>
 10071b0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 10071b4:	48 8b 00             	mov    rax,QWORD PTR [rax]
 10071b7:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
 10071bb:	48 89 d6             	mov    rsi,rdx
 10071be:	48 89 c7             	mov    rdi,rax
 10071c1:	e8 72 fe ff ff       	call   1007038 <_avl_tree_node_test>
 10071c6:	c9                   	leave  
 10071c7:	c3                   	ret    

00000000010071c8 <bit_mask_32>:
 10071c8:	55                   	push   rbp
 10071c9:	48 89 e5             	mov    rbp,rsp
 10071cc:	48 83 ec 08          	sub    rsp,0x8
 10071d0:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
 10071d3:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
 10071d6:	ba 01 00 00 00       	mov    edx,0x1
 10071db:	89 c1                	mov    ecx,eax
 10071dd:	d3 e2                	shl    edx,cl
 10071df:	89 d0                	mov    eax,edx
 10071e1:	c9                   	leave  
 10071e2:	c3                   	ret    

00000000010071e3 <bit_field_mask_32>:
 10071e3:	55                   	push   rbp
 10071e4:	48 89 e5             	mov    rbp,rsp
 10071e7:	48 83 ec 08          	sub    rsp,0x8
 10071eb:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
 10071ee:	89 75 f8             	mov    DWORD PTR [rbp-0x8],esi
 10071f1:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
 10071f4:	ba ff ff ff ff       	mov    edx,0xffffffff
 10071f9:	89 c1                	mov    ecx,eax
 10071fb:	d3 e2                	shl    edx,cl
 10071fd:	89 d0                	mov    eax,edx
 10071ff:	01 c0                	add    eax,eax
 1007201:	f7 d0                	not    eax
 1007203:	89 c2                	mov    edx,eax
 1007205:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
 1007208:	89 c1                	mov    ecx,eax
 100720a:	d3 e2                	shl    edx,cl
 100720c:	89 d0                	mov    eax,edx
 100720e:	c9                   	leave  
 100720f:	c3                   	ret    

0000000001007210 <_set_salloc_header_size>:
 1007210:	55                   	push   rbp
 1007211:	48 89 e5             	mov    rbp,rsp
 1007214:	48 83 ec 10          	sub    rsp,0x10
 1007218:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
 100721c:	89 75 f4             	mov    DWORD PTR [rbp-0xc],esi
 100721f:	c1 65 f4 02          	shl    DWORD PTR [rbp-0xc],0x2
 1007223:	be 1f 00 00 00       	mov    esi,0x1f
 1007228:	bf 02 00 00 00       	mov    edi,0x2
 100722d:	e8 b1 ff ff ff       	call   10071e3 <bit_field_mask_32>
 1007232:	f7 d0                	not    eax
 1007234:	89 c2                	mov    edx,eax
 1007236:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 100723a:	8b 00                	mov    eax,DWORD PTR [rax]
 100723c:	21 c2                	and    edx,eax
 100723e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1007242:	89 10                	mov    DWORD PTR [rax],edx
 1007244:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1007248:	8b 00                	mov    eax,DWORD PTR [rax]
 100724a:	0b 45 f4             	or     eax,DWORD PTR [rbp-0xc]
 100724d:	89 c2                	mov    edx,eax
 100724f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1007253:	89 10                	mov    DWORD PTR [rax],edx
 1007255:	90                   	nop
 1007256:	c9                   	leave  
 1007257:	c3                   	ret    

0000000001007258 <_read_salloc_header_size>:
 1007258:	55                   	push   rbp
 1007259:	48 89 e5             	mov    rbp,rsp
 100725c:	48 83 ec 08          	sub    rsp,0x8
 1007260:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
 1007264:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1007268:	8b 00                	mov    eax,DWORD PTR [rax]
 100726a:	c1 e8 02             	shr    eax,0x2
 100726d:	c9                   	leave  
 100726e:	c3                   	ret    

000000000100726f <_read_salloc_header_flag>:
 100726f:	55                   	push   rbp
 1007270:	48 89 e5             	mov    rbp,rsp
 1007273:	53                   	push   rbx
 1007274:	48 83 ec 10          	sub    rsp,0x10
 1007278:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
 100727c:	89 75 ec             	mov    DWORD PTR [rbp-0x14],esi
 100727f:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 1007283:	8b 18                	mov    ebx,DWORD PTR [rax]
 1007285:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
 1007288:	89 c7                	mov    edi,eax
 100728a:	e8 39 ff ff ff       	call   10071c8 <bit_mask_32>
 100728f:	21 d8                	and    eax,ebx
 1007291:	85 c0                	test   eax,eax
 1007293:	0f 95 c0             	setne  al
 1007296:	0f b6 c0             	movzx  eax,al
 1007299:	48 83 c4 10          	add    rsp,0x10
 100729d:	5b                   	pop    rbx
 100729e:	5d                   	pop    rbp
 100729f:	c3                   	ret    

00000000010072a0 <_set_salloc_header_flag>:
 10072a0:	55                   	push   rbp
 10072a1:	48 89 e5             	mov    rbp,rsp
 10072a4:	48 83 ec 10          	sub    rsp,0x10
 10072a8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
 10072ac:	89 75 f4             	mov    DWORD PTR [rbp-0xc],esi
 10072af:	89 55 f0             	mov    DWORD PTR [rbp-0x10],edx
 10072b2:	bf 00 00 00 00       	mov    edi,0x0
 10072b7:	e8 0c ff ff ff       	call   10071c8 <bit_mask_32>
 10072bc:	21 45 f0             	and    DWORD PTR [rbp-0x10],eax
 10072bf:	83 7d f0 01          	cmp    DWORD PTR [rbp-0x10],0x1
 10072c3:	75 1c                	jne    10072e1 <_set_salloc_header_flag+0x41>
 10072c5:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
 10072c8:	89 c7                	mov    edi,eax
 10072ca:	e8 f9 fe ff ff       	call   10071c8 <bit_mask_32>
 10072cf:	89 c2                	mov    edx,eax
 10072d1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 10072d5:	8b 00                	mov    eax,DWORD PTR [rax]
 10072d7:	09 c2                	or     edx,eax
 10072d9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 10072dd:	89 10                	mov    DWORD PTR [rax],edx
 10072df:	eb 1d                	jmp    10072fe <_set_salloc_header_flag+0x5e>
 10072e1:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
 10072e4:	89 c7                	mov    edi,eax
 10072e6:	e8 dd fe ff ff       	call   10071c8 <bit_mask_32>
 10072eb:	f7 d0                	not    eax
 10072ed:	89 c2                	mov    edx,eax
 10072ef:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 10072f3:	8b 00                	mov    eax,DWORD PTR [rax]
 10072f5:	21 c2                	and    edx,eax
 10072f7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 10072fb:	89 10                	mov    DWORD PTR [rax],edx
 10072fd:	90                   	nop
 10072fe:	c9                   	leave  
 10072ff:	c3                   	ret    

0000000001007300 <_salloc_join>:
 1007300:	55                   	push   rbp
 1007301:	48 89 e5             	mov    rbp,rsp
 1007304:	48 83 ec 38          	sub    rsp,0x38
 1007308:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
 100730c:	48 83 7d c8 00       	cmp    QWORD PTR [rbp-0x38],0x0
 1007311:	0f 84 e3 00 00 00    	je     10073fa <_salloc_join+0xfa>
 1007317:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
 100731b:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
 100731f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1007323:	be 00 00 00 00       	mov    esi,0x0
 1007328:	48 89 c7             	mov    rdi,rax
 100732b:	e8 3f ff ff ff       	call   100726f <_read_salloc_header_flag>
 1007330:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
 1007333:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1007337:	be 01 00 00 00       	mov    esi,0x1
 100733c:	48 89 c7             	mov    rdi,rax
 100733f:	e8 2b ff ff ff       	call   100726f <_read_salloc_header_flag>
 1007344:	89 45 f0             	mov    DWORD PTR [rbp-0x10],eax
 1007347:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 100734b:	48 89 c7             	mov    rdi,rax
 100734e:	e8 05 ff ff ff       	call   1007258 <_read_salloc_header_size>
 1007353:	89 45 ec             	mov    DWORD PTR [rbp-0x14],eax
 1007356:	83 7d f0 01          	cmp    DWORD PTR [rbp-0x10],0x1
 100735a:	74 0c                	je     1007368 <_salloc_join+0x68>
 100735c:	8b 55 ec             	mov    edx,DWORD PTR [rbp-0x14]
 100735f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1007363:	48 01 d0             	add    rax,rdx
 1007366:	eb 05                	jmp    100736d <_salloc_join+0x6d>
 1007368:	b8 00 00 00 00       	mov    eax,0x0
 100736d:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
 1007371:	48 83 7d e0 00       	cmp    QWORD PTR [rbp-0x20],0x0
 1007376:	74 6f                	je     10073e7 <_salloc_join+0xe7>
 1007378:	83 7d f4 01          	cmp    DWORD PTR [rbp-0xc],0x1
 100737c:	75 69                	jne    10073e7 <_salloc_join+0xe7>
 100737e:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
 1007382:	be 00 00 00 00       	mov    esi,0x0
 1007387:	48 89 c7             	mov    rdi,rax
 100738a:	e8 e0 fe ff ff       	call   100726f <_read_salloc_header_flag>
 100738f:	89 45 dc             	mov    DWORD PTR [rbp-0x24],eax
 1007392:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
 1007396:	be 01 00 00 00       	mov    esi,0x1
 100739b:	48 89 c7             	mov    rdi,rax
 100739e:	e8 cc fe ff ff       	call   100726f <_read_salloc_header_flag>
 10073a3:	89 45 d8             	mov    DWORD PTR [rbp-0x28],eax
 10073a6:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
 10073aa:	48 89 c7             	mov    rdi,rax
 10073ad:	e8 a6 fe ff ff       	call   1007258 <_read_salloc_header_size>
 10073b2:	89 45 d4             	mov    DWORD PTR [rbp-0x2c],eax
 10073b5:	83 7d dc 01          	cmp    DWORD PTR [rbp-0x24],0x1
 10073b9:	75 2c                	jne    10073e7 <_salloc_join+0xe7>
 10073bb:	8b 55 d4             	mov    edx,DWORD PTR [rbp-0x2c]
 10073be:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
 10073c1:	01 c2                	add    edx,eax
 10073c3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 10073c7:	89 d6                	mov    esi,edx
 10073c9:	48 89 c7             	mov    rdi,rax
 10073cc:	e8 3f fe ff ff       	call   1007210 <_set_salloc_header_size>
 10073d1:	8b 55 d8             	mov    edx,DWORD PTR [rbp-0x28]
 10073d4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 10073d8:	be 01 00 00 00       	mov    esi,0x1
 10073dd:	48 89 c7             	mov    rdi,rax
 10073e0:	e8 bb fe ff ff       	call   10072a0 <_set_salloc_header_flag>
 10073e5:	eb 0d                	jmp    10073f4 <_salloc_join+0xf4>
 10073e7:	83 7d f0 00          	cmp    DWORD PTR [rbp-0x10],0x0
 10073eb:	75 0c                	jne    10073f9 <_salloc_join+0xf9>
 10073ed:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
 10073f0:	48 01 45 f8          	add    QWORD PTR [rbp-0x8],rax
 10073f4:	e9 26 ff ff ff       	jmp    100731f <_salloc_join+0x1f>
 10073f9:	90                   	nop
 10073fa:	90                   	nop
 10073fb:	c9                   	leave  
 10073fc:	c3                   	ret    

00000000010073fd <salloc_assert>:
 10073fd:	55                   	push   rbp
 10073fe:	48 89 e5             	mov    rbp,rsp
 1007401:	48 83 ec 40          	sub    rsp,0x40
 1007405:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
 1007409:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
 100740d:	48 89 55 c8          	mov    QWORD PTR [rbp-0x38],rdx
 1007411:	89 4d c4             	mov    DWORD PTR [rbp-0x3c],ecx
 1007414:	48 83 7d d8 00       	cmp    QWORD PTR [rbp-0x28],0x0
 1007419:	74 0e                	je     1007429 <salloc_assert+0x2c>
 100741b:	48 83 7d c8 00       	cmp    QWORD PTR [rbp-0x38],0x0
 1007420:	74 07                	je     1007429 <salloc_assert+0x2c>
 1007422:	48 83 7d d0 00       	cmp    QWORD PTR [rbp-0x30],0x0
 1007427:	75 0a                	jne    1007433 <salloc_assert+0x36>
 1007429:	b8 00 00 00 00       	mov    eax,0x0
 100742e:	e9 95 00 00 00       	jmp    10074c8 <salloc_assert+0xcb>
 1007433:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
 100743a:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 100743e:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
 1007442:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 1007446:	be 00 00 00 00       	mov    esi,0x0
 100744b:	48 89 c7             	mov    rdi,rax
 100744e:	e8 1c fe ff ff       	call   100726f <_read_salloc_header_flag>
 1007453:	89 45 ec             	mov    DWORD PTR [rbp-0x14],eax
 1007456:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 100745a:	be 01 00 00 00       	mov    esi,0x1
 100745f:	48 89 c7             	mov    rdi,rax
 1007462:	e8 08 fe ff ff       	call   100726f <_read_salloc_header_flag>
 1007467:	89 45 e8             	mov    DWORD PTR [rbp-0x18],eax
 100746a:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 100746e:	48 89 c7             	mov    rdi,rax
 1007471:	e8 e2 fd ff ff       	call   1007258 <_read_salloc_header_size>
 1007476:	89 45 e4             	mov    DWORD PTR [rbp-0x1c],eax
 1007479:	8b 55 fc             	mov    edx,DWORD PTR [rbp-0x4]
 100747c:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
 1007480:	48 01 d0             	add    rax,rdx
 1007483:	0f b6 00             	movzx  eax,BYTE PTR [rax]
 1007486:	0f b6 c0             	movzx  eax,al
 1007489:	3b 45 ec             	cmp    eax,DWORD PTR [rbp-0x14]
 100748c:	75 19                	jne    10074a7 <salloc_assert+0xaa>
 100748e:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
 1007491:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
 1007498:	00 
 1007499:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
 100749d:	48 01 d0             	add    rax,rdx
 10074a0:	8b 00                	mov    eax,DWORD PTR [rax]
 10074a2:	3b 45 e4             	cmp    eax,DWORD PTR [rbp-0x1c]
 10074a5:	74 07                	je     10074ae <salloc_assert+0xb1>
 10074a7:	b8 00 00 00 00       	mov    eax,0x0
 10074ac:	eb 1a                	jmp    10074c8 <salloc_assert+0xcb>
 10074ae:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
 10074b1:	48 01 45 f0          	add    QWORD PTR [rbp-0x10],rax
 10074b5:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
 10074b9:	83 7d e8 01          	cmp    DWORD PTR [rbp-0x18],0x1
 10074bd:	75 83                	jne    1007442 <salloc_assert+0x45>
 10074bf:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
 10074c2:	3b 45 c4             	cmp    eax,DWORD PTR [rbp-0x3c]
 10074c5:	0f 94 c0             	sete   al
 10074c8:	c9                   	leave  
 10074c9:	c3                   	ret    

00000000010074ca <salloc_init>:
 10074ca:	55                   	push   rbp
 10074cb:	48 89 e5             	mov    rbp,rsp
 10074ce:	48 83 ec 20          	sub    rsp,0x20
 10074d2:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
 10074d6:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
 10074d9:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
 10074de:	74 4c                	je     100752c <salloc_init+0x62>
 10074e0:	83 7d e4 03          	cmp    DWORD PTR [rbp-0x1c],0x3
 10074e4:	76 46                	jbe    100752c <salloc_init+0x62>
 10074e6:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 10074ea:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
 10074ee:	8b 55 e4             	mov    edx,DWORD PTR [rbp-0x1c]
 10074f1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 10074f5:	89 d6                	mov    esi,edx
 10074f7:	48 89 c7             	mov    rdi,rax
 10074fa:	e8 11 fd ff ff       	call   1007210 <_set_salloc_header_size>
 10074ff:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1007503:	ba 01 00 00 00       	mov    edx,0x1
 1007508:	be 00 00 00 00       	mov    esi,0x0
 100750d:	48 89 c7             	mov    rdi,rax
 1007510:	e8 8b fd ff ff       	call   10072a0 <_set_salloc_header_flag>
 1007515:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1007519:	ba 01 00 00 00       	mov    edx,0x1
 100751e:	be 01 00 00 00       	mov    esi,0x1
 1007523:	48 89 c7             	mov    rdi,rax
 1007526:	e8 75 fd ff ff       	call   10072a0 <_set_salloc_header_flag>
 100752b:	90                   	nop
 100752c:	90                   	nop
 100752d:	c9                   	leave  
 100752e:	c3                   	ret    

000000000100752f <salloc>:
 100752f:	55                   	push   rbp
 1007530:	48 89 e5             	mov    rbp,rsp
 1007533:	48 83 ec 30          	sub    rsp,0x30
 1007537:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
 100753b:	89 75 d4             	mov    DWORD PTR [rbp-0x2c],esi
 100753e:	48 c7 45 f8 00 00 00 	mov    QWORD PTR [rbp-0x8],0x0
 1007545:	00 
 1007546:	48 83 7d d8 00       	cmp    QWORD PTR [rbp-0x28],0x0
 100754b:	0f 84 48 01 00 00    	je     1007699 <salloc+0x16a>
 1007551:	83 7d d4 00          	cmp    DWORD PTR [rbp-0x2c],0x0
 1007555:	0f 84 3e 01 00 00    	je     1007699 <salloc+0x16a>
 100755b:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
 100755e:	83 c0 04             	add    eax,0x4
 1007561:	89 45 ec             	mov    DWORD PTR [rbp-0x14],eax
 1007564:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 1007568:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
 100756c:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 1007570:	be 00 00 00 00       	mov    esi,0x0
 1007575:	48 89 c7             	mov    rdi,rax
 1007578:	e8 f2 fc ff ff       	call   100726f <_read_salloc_header_flag>
 100757d:	89 45 e8             	mov    DWORD PTR [rbp-0x18],eax
 1007580:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 1007584:	48 89 c7             	mov    rdi,rax
 1007587:	e8 cc fc ff ff       	call   1007258 <_read_salloc_header_size>
 100758c:	89 45 e4             	mov    DWORD PTR [rbp-0x1c],eax
 100758f:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 1007593:	be 01 00 00 00       	mov    esi,0x1
 1007598:	48 89 c7             	mov    rdi,rax
 100759b:	e8 cf fc ff ff       	call   100726f <_read_salloc_header_flag>
 10075a0:	89 45 e0             	mov    DWORD PTR [rbp-0x20],eax
 10075a3:	83 7d e8 00          	cmp    DWORD PTR [rbp-0x18],0x0
 10075a7:	74 08                	je     10075b1 <salloc+0x82>
 10075a9:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
 10075ac:	3b 45 ec             	cmp    eax,DWORD PTR [rbp-0x14]
 10075af:	73 16                	jae    10075c7 <salloc+0x98>
 10075b1:	83 7d e0 01          	cmp    DWORD PTR [rbp-0x20],0x1
 10075b5:	0f 84 dd 00 00 00    	je     1007698 <salloc+0x169>
 10075bb:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
 10075be:	48 01 45 f0          	add    QWORD PTR [rbp-0x10],rax
 10075c2:	e9 cc 00 00 00       	jmp    1007693 <salloc+0x164>
 10075c7:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
 10075ca:	3b 45 e4             	cmp    eax,DWORD PTR [rbp-0x1c]
 10075cd:	74 0b                	je     10075da <salloc+0xab>
 10075cf:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
 10075d2:	2b 45 ec             	sub    eax,DWORD PTR [rbp-0x14]
 10075d5:	83 f8 03             	cmp    eax,0x3
 10075d8:	77 1b                	ja     10075f5 <salloc+0xc6>
 10075da:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 10075de:	ba 00 00 00 00       	mov    edx,0x0
 10075e3:	be 00 00 00 00       	mov    esi,0x0
 10075e8:	48 89 c7             	mov    rdi,rax
 10075eb:	e8 b0 fc ff ff       	call   10072a0 <_set_salloc_header_flag>
 10075f0:	e9 90 00 00 00       	jmp    1007685 <salloc+0x156>
 10075f5:	8b 55 ec             	mov    edx,DWORD PTR [rbp-0x14]
 10075f8:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 10075fc:	89 d6                	mov    esi,edx
 10075fe:	48 89 c7             	mov    rdi,rax
 1007601:	e8 0a fc ff ff       	call   1007210 <_set_salloc_header_size>
 1007606:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 100760a:	ba 00 00 00 00       	mov    edx,0x0
 100760f:	be 01 00 00 00       	mov    esi,0x1
 1007614:	48 89 c7             	mov    rdi,rax
 1007617:	e8 84 fc ff ff       	call   10072a0 <_set_salloc_header_flag>
 100761c:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 1007620:	ba 00 00 00 00       	mov    edx,0x0
 1007625:	be 00 00 00 00       	mov    esi,0x0
 100762a:	48 89 c7             	mov    rdi,rax
 100762d:	e8 6e fc ff ff       	call   10072a0 <_set_salloc_header_flag>
 1007632:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
 1007635:	2b 45 ec             	sub    eax,DWORD PTR [rbp-0x14]
 1007638:	8b 4d ec             	mov    ecx,DWORD PTR [rbp-0x14]
 100763b:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
 100763f:	48 01 ca             	add    rdx,rcx
 1007642:	89 c6                	mov    esi,eax
 1007644:	48 89 d7             	mov    rdi,rdx
 1007647:	e8 c4 fb ff ff       	call   1007210 <_set_salloc_header_size>
 100764c:	8b 55 ec             	mov    edx,DWORD PTR [rbp-0x14]
 100764f:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 1007653:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
 1007657:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
 100765a:	89 c2                	mov    edx,eax
 100765c:	be 01 00 00 00       	mov    esi,0x1
 1007661:	48 89 cf             	mov    rdi,rcx
 1007664:	e8 37 fc ff ff       	call   10072a0 <_set_salloc_header_flag>
 1007669:	8b 55 ec             	mov    edx,DWORD PTR [rbp-0x14]
 100766c:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 1007670:	48 01 d0             	add    rax,rdx
 1007673:	ba 01 00 00 00       	mov    edx,0x1
 1007678:	be 00 00 00 00       	mov    esi,0x0
 100767d:	48 89 c7             	mov    rdi,rax
 1007680:	e8 1b fc ff ff       	call   10072a0 <_set_salloc_header_flag>
 1007685:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 1007689:	48 83 c0 04          	add    rax,0x4
 100768d:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
 1007691:	eb 06                	jmp    1007699 <salloc+0x16a>
 1007693:	e9 d4 fe ff ff       	jmp    100756c <salloc+0x3d>
 1007698:	90                   	nop
 1007699:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 100769d:	c9                   	leave  
 100769e:	c3                   	ret    

000000000100769f <sfree>:
 100769f:	55                   	push   rbp
 10076a0:	48 89 e5             	mov    rbp,rsp
 10076a3:	48 83 ec 30          	sub    rsp,0x30
 10076a7:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
 10076ab:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
 10076af:	48 83 7d d8 00       	cmp    QWORD PTR [rbp-0x28],0x0
 10076b4:	0f 84 93 00 00 00    	je     100774d <sfree+0xae>
 10076ba:	48 83 7d d0 00       	cmp    QWORD PTR [rbp-0x30],0x0
 10076bf:	0f 84 88 00 00 00    	je     100774d <sfree+0xae>
 10076c5:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 10076c9:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
 10076cd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 10076d1:	be 00 00 00 00       	mov    esi,0x0
 10076d6:	48 89 c7             	mov    rdi,rax
 10076d9:	e8 91 fb ff ff       	call   100726f <_read_salloc_header_flag>
 10076de:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
 10076e1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 10076e5:	be 01 00 00 00       	mov    esi,0x1
 10076ea:	48 89 c7             	mov    rdi,rax
 10076ed:	e8 7d fb ff ff       	call   100726f <_read_salloc_header_flag>
 10076f2:	89 45 f0             	mov    DWORD PTR [rbp-0x10],eax
 10076f5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 10076f9:	48 89 c7             	mov    rdi,rax
 10076fc:	e8 57 fb ff ff       	call   1007258 <_read_salloc_header_size>
 1007701:	89 45 ec             	mov    DWORD PTR [rbp-0x14],eax
 1007704:	83 7d f4 00          	cmp    DWORD PTR [rbp-0xc],0x0
 1007708:	75 32                	jne    100773c <sfree+0x9d>
 100770a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 100770e:	48 83 c0 04          	add    rax,0x4
 1007712:	48 3b 45 d0          	cmp    rax,QWORD PTR [rbp-0x30]
 1007716:	75 24                	jne    100773c <sfree+0x9d>
 1007718:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 100771c:	ba 01 00 00 00       	mov    edx,0x1
 1007721:	be 00 00 00 00       	mov    esi,0x0
 1007726:	48 89 c7             	mov    rdi,rax
 1007729:	e8 72 fb ff ff       	call   10072a0 <_set_salloc_header_flag>
 100772e:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 1007732:	48 89 c7             	mov    rdi,rax
 1007735:	e8 c6 fb ff ff       	call   1007300 <_salloc_join>
 100773a:	eb 10                	jmp    100774c <sfree+0xad>
 100773c:	83 7d f0 01          	cmp    DWORD PTR [rbp-0x10],0x1
 1007740:	74 09                	je     100774b <sfree+0xac>
 1007742:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
 1007745:	48 01 45 f8          	add    QWORD PTR [rbp-0x8],rax
 1007749:	eb 82                	jmp    10076cd <sfree+0x2e>
 100774b:	90                   	nop
 100774c:	90                   	nop
 100774d:	90                   	nop
 100774e:	c9                   	leave  
 100774f:	c3                   	ret    

0000000001007750 <_init_linked_list_node>:
 1007750:	55                   	push   rbp
 1007751:	48 89 e5             	mov    rbp,rsp
 1007754:	48 83 ec 08          	sub    rsp,0x8
 1007758:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
 100775c:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
 1007761:	74 18                	je     100777b <_init_linked_list_node+0x2b>
 1007763:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1007767:	48 c7 40 08 00 00 00 	mov    QWORD PTR [rax+0x8],0x0
 100776e:	00 
 100776f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1007773:	48 c7 00 00 00 00 00 	mov    QWORD PTR [rax],0x0
 100777a:	90                   	nop
 100777b:	90                   	nop
 100777c:	c9                   	leave  
 100777d:	c3                   	ret    

000000000100777e <_append_node>:
 100777e:	55                   	push   rbp
 100777f:	48 89 e5             	mov    rbp,rsp
 1007782:	48 83 ec 20          	sub    rsp,0x20
 1007786:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
 100778a:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
 100778e:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
 1007793:	74 4b                	je     10077e0 <_append_node+0x62>
 1007795:	48 83 7d e0 00       	cmp    QWORD PTR [rbp-0x20],0x0
 100779a:	74 44                	je     10077e0 <_append_node+0x62>
 100779c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 10077a0:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
 10077a4:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
 10077a8:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
 10077ad:	74 0b                	je     10077ba <_append_node+0x3c>
 10077af:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 10077b3:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
 10077b7:	48 89 10             	mov    QWORD PTR [rax],rdx
 10077ba:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 10077be:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
 10077c2:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
 10077c6:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
 10077ca:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
 10077ce:	48 89 10             	mov    QWORD PTR [rax],rdx
 10077d1:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
 10077d5:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
 10077d9:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
 10077dd:	90                   	nop
 10077de:	eb 01                	jmp    10077e1 <_append_node+0x63>
 10077e0:	90                   	nop
 10077e1:	c9                   	leave  
 10077e2:	c3                   	ret    

00000000010077e3 <_prepend_node>:
 10077e3:	55                   	push   rbp
 10077e4:	48 89 e5             	mov    rbp,rsp
 10077e7:	48 83 ec 20          	sub    rsp,0x20
 10077eb:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
 10077ef:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
 10077f3:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
 10077f8:	74 4a                	je     1007844 <_prepend_node+0x61>
 10077fa:	48 83 7d e0 00       	cmp    QWORD PTR [rbp-0x20],0x0
 10077ff:	74 43                	je     1007844 <_prepend_node+0x61>
 1007801:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 1007805:	48 8b 00             	mov    rax,QWORD PTR [rax]
 1007808:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
 100780c:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
 1007811:	74 0c                	je     100781f <_prepend_node+0x3c>
 1007813:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1007817:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
 100781b:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
 100781f:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 1007823:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
 1007827:	48 89 10             	mov    QWORD PTR [rax],rdx
 100782a:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
 100782e:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
 1007832:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
 1007836:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
 100783a:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
 100783e:	48 89 10             	mov    QWORD PTR [rax],rdx
 1007841:	90                   	nop
 1007842:	eb 01                	jmp    1007845 <_prepend_node+0x62>
 1007844:	90                   	nop
 1007845:	c9                   	leave  
 1007846:	c3                   	ret    

0000000001007847 <_unlink_node>:
 1007847:	55                   	push   rbp
 1007848:	48 89 e5             	mov    rbp,rsp
 100784b:	48 83 ec 08          	sub    rsp,0x8
 100784f:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
 1007853:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
 1007858:	74 41                	je     100789b <_unlink_node+0x54>
 100785a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 100785e:	48 8b 00             	mov    rax,QWORD PTR [rax]
 1007861:	48 85 c0             	test   rax,rax
 1007864:	74 13                	je     1007879 <_unlink_node+0x32>
 1007866:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 100786a:	48 8b 00             	mov    rax,QWORD PTR [rax]
 100786d:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
 1007871:	48 8b 52 08          	mov    rdx,QWORD PTR [rdx+0x8]
 1007875:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
 1007879:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 100787d:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
 1007881:	48 85 c0             	test   rax,rax
 1007884:	74 18                	je     100789e <_unlink_node+0x57>
 1007886:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 100788a:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
 100788e:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
 1007892:	48 8b 12             	mov    rdx,QWORD PTR [rdx]
 1007895:	48 89 10             	mov    QWORD PTR [rax],rdx
 1007898:	90                   	nop
 1007899:	eb 03                	jmp    100789e <_unlink_node+0x57>
 100789b:	90                   	nop
 100789c:	eb 01                	jmp    100789f <_unlink_node+0x58>
 100789e:	90                   	nop
 100789f:	c9                   	leave  
 10078a0:	c3                   	ret    

00000000010078a1 <linked_list_init>:
 10078a1:	55                   	push   rbp
 10078a2:	48 89 e5             	mov    rbp,rsp
 10078a5:	48 83 ec 08          	sub    rsp,0x8
 10078a9:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
 10078ad:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
 10078b2:	74 18                	je     10078cc <linked_list_init+0x2b>
 10078b4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 10078b8:	48 c7 00 00 00 00 00 	mov    QWORD PTR [rax],0x0
 10078bf:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 10078c3:	48 c7 40 08 00 00 00 	mov    QWORD PTR [rax+0x8],0x0
 10078ca:	00 
 10078cb:	90                   	nop
 10078cc:	90                   	nop
 10078cd:	c9                   	leave  
 10078ce:	c3                   	ret    

00000000010078cf <linked_list_size>:
 10078cf:	55                   	push   rbp
 10078d0:	48 89 e5             	mov    rbp,rsp
 10078d3:	48 83 ec 28          	sub    rsp,0x28
 10078d7:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
 10078db:	48 83 7d d8 00       	cmp    QWORD PTR [rbp-0x28],0x0
 10078e0:	75 07                	jne    10078e9 <linked_list_size+0x1a>
 10078e2:	b8 ff ff ff ff       	mov    eax,0xffffffff
 10078e7:	eb 57                	jmp    1007940 <linked_list_size+0x71>
 10078e9:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 10078ed:	48 8b 00             	mov    rax,QWORD PTR [rax]
 10078f0:	48 85 c0             	test   rax,rax
 10078f3:	75 07                	jne    10078fc <linked_list_size+0x2d>
 10078f5:	b8 00 00 00 00       	mov    eax,0x0
 10078fa:	eb 44                	jmp    1007940 <linked_list_size+0x71>
 10078fc:	c7 45 fc 01 00 00 00 	mov    DWORD PTR [rbp-0x4],0x1
 1007903:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 1007907:	48 8b 00             	mov    rax,QWORD PTR [rax]
 100790a:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
 100790e:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 1007912:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
 1007916:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
 100791a:	eb 04                	jmp    1007920 <linked_list_size+0x51>
 100791c:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
 1007920:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 1007924:	48 3b 45 e8          	cmp    rax,QWORD PTR [rbp-0x18]
 1007928:	74 13                	je     100793d <linked_list_size+0x6e>
 100792a:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 100792e:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
 1007932:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
 1007936:	48 83 7d f0 00       	cmp    QWORD PTR [rbp-0x10],0x0
 100793b:	75 df                	jne    100791c <linked_list_size+0x4d>
 100793d:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
 1007940:	c9                   	leave  
 1007941:	c3                   	ret    

0000000001007942 <linked_list_push_front>:
 1007942:	55                   	push   rbp
 1007943:	48 89 e5             	mov    rbp,rsp
 1007946:	48 83 ec 10          	sub    rsp,0x10
 100794a:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
 100794e:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
 1007952:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
 1007957:	74 2b                	je     1007984 <linked_list_push_front+0x42>
 1007959:	48 83 7d f0 00       	cmp    QWORD PTR [rbp-0x10],0x0
 100795e:	74 24                	je     1007984 <linked_list_push_front+0x42>
 1007960:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 1007964:	48 89 c7             	mov    rdi,rax
 1007967:	e8 e4 fd ff ff       	call   1007750 <_init_linked_list_node>
 100796c:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
 1007970:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1007974:	be 00 00 00 00       	mov    esi,0x0
 1007979:	48 89 c7             	mov    rdi,rax
 100797c:	e8 b6 00 00 00       	call   1007a37 <linked_list_insert_ref>
 1007981:	90                   	nop
 1007982:	eb 01                	jmp    1007985 <linked_list_push_front+0x43>
 1007984:	90                   	nop
 1007985:	c9                   	leave  
 1007986:	c3                   	ret    

0000000001007987 <linked_list_push_back>:
 1007987:	55                   	push   rbp
 1007988:	48 89 e5             	mov    rbp,rsp
 100798b:	48 83 ec 10          	sub    rsp,0x10
 100798f:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
 1007993:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
 1007997:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
 100799c:	74 31                	je     10079cf <linked_list_push_back+0x48>
 100799e:	48 83 7d f0 00       	cmp    QWORD PTR [rbp-0x10],0x0
 10079a3:	74 2a                	je     10079cf <linked_list_push_back+0x48>
 10079a5:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 10079a9:	48 89 c7             	mov    rdi,rax
 10079ac:	e8 9f fd ff ff       	call   1007750 <_init_linked_list_node>
 10079b1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 10079b5:	48 8b 48 08          	mov    rcx,QWORD PTR [rax+0x8]
 10079b9:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
 10079bd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 10079c1:	48 89 ce             	mov    rsi,rcx
 10079c4:	48 89 c7             	mov    rdi,rax
 10079c7:	e8 6b 00 00 00       	call   1007a37 <linked_list_insert_ref>
 10079cc:	90                   	nop
 10079cd:	eb 01                	jmp    10079d0 <linked_list_push_back+0x49>
 10079cf:	90                   	nop
 10079d0:	c9                   	leave  
 10079d1:	c3                   	ret    

00000000010079d2 <linked_list_pop_front>:
 10079d2:	55                   	push   rbp
 10079d3:	48 89 e5             	mov    rbp,rsp
 10079d6:	48 83 ec 10          	sub    rsp,0x10
 10079da:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
 10079de:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
 10079e3:	75 07                	jne    10079ec <linked_list_pop_front+0x1a>
 10079e5:	b8 00 00 00 00       	mov    eax,0x0
 10079ea:	eb 16                	jmp    1007a02 <linked_list_pop_front+0x30>
 10079ec:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 10079f0:	48 8b 10             	mov    rdx,QWORD PTR [rax]
 10079f3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 10079f7:	48 89 d6             	mov    rsi,rdx
 10079fa:	48 89 c7             	mov    rdi,rax
 10079fd:	e8 c5 01 00 00       	call   1007bc7 <linked_list_remove_ref>
 1007a02:	c9                   	leave  
 1007a03:	c3                   	ret    

0000000001007a04 <linked_list_pop_back>:
 1007a04:	55                   	push   rbp
 1007a05:	48 89 e5             	mov    rbp,rsp
 1007a08:	48 83 ec 10          	sub    rsp,0x10
 1007a0c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
 1007a10:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
 1007a15:	75 07                	jne    1007a1e <linked_list_pop_back+0x1a>
 1007a17:	b8 00 00 00 00       	mov    eax,0x0
 1007a1c:	eb 17                	jmp    1007a35 <linked_list_pop_back+0x31>
 1007a1e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1007a22:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
 1007a26:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1007a2a:	48 89 d6             	mov    rsi,rdx
 1007a2d:	48 89 c7             	mov    rdi,rax
 1007a30:	e8 92 01 00 00       	call   1007bc7 <linked_list_remove_ref>
 1007a35:	c9                   	leave  
 1007a36:	c3                   	ret    

0000000001007a37 <linked_list_insert_ref>:
 1007a37:	55                   	push   rbp
 1007a38:	48 89 e5             	mov    rbp,rsp
 1007a3b:	48 83 ec 18          	sub    rsp,0x18
 1007a3f:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
 1007a43:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
 1007a47:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
 1007a4b:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
 1007a50:	0f 84 84 00 00 00    	je     1007ada <linked_list_insert_ref+0xa3>
 1007a56:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
 1007a5b:	74 7d                	je     1007ada <linked_list_insert_ref+0xa3>
 1007a5d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 1007a61:	48 89 c7             	mov    rdi,rax
 1007a64:	e8 e7 fc ff ff       	call   1007750 <_init_linked_list_node>
 1007a69:	48 83 7d f0 00       	cmp    QWORD PTR [rbp-0x10],0x0
 1007a6e:	75 3c                	jne    1007aac <linked_list_insert_ref+0x75>
 1007a70:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1007a74:	48 8b 00             	mov    rax,QWORD PTR [rax]
 1007a77:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
 1007a7b:	48 89 d6             	mov    rsi,rdx
 1007a7e:	48 89 c7             	mov    rdi,rax
 1007a81:	e8 5d fd ff ff       	call   10077e3 <_prepend_node>
 1007a86:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1007a8a:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
 1007a8e:	48 85 c0             	test   rax,rax
 1007a91:	75 0c                	jne    1007a9f <linked_list_insert_ref+0x68>
 1007a93:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1007a97:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
 1007a9b:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
 1007a9f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1007aa3:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
 1007aa7:	48 89 10             	mov    QWORD PTR [rax],rdx
 1007aaa:	eb 2f                	jmp    1007adb <linked_list_insert_ref+0xa4>
 1007aac:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
 1007ab0:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 1007ab4:	48 89 d6             	mov    rsi,rdx
 1007ab7:	48 89 c7             	mov    rdi,rax
 1007aba:	e8 bf fc ff ff       	call   100777e <_append_node>
 1007abf:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 1007ac3:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
 1007ac7:	48 85 c0             	test   rax,rax
 1007aca:	75 0f                	jne    1007adb <linked_list_insert_ref+0xa4>
 1007acc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1007ad0:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
 1007ad4:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
 1007ad8:	eb 01                	jmp    1007adb <linked_list_insert_ref+0xa4>
 1007ada:	90                   	nop
 1007adb:	c9                   	leave  
 1007adc:	c3                   	ret    

0000000001007add <linked_list_insert_idx>:
 1007add:	55                   	push   rbp
 1007ade:	48 89 e5             	mov    rbp,rsp
 1007ae1:	48 83 ec 30          	sub    rsp,0x30
 1007ae5:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
 1007ae9:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
 1007aec:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
 1007af0:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
 1007af5:	74 6f                	je     1007b66 <linked_list_insert_idx+0x89>
 1007af7:	83 7d e4 00          	cmp    DWORD PTR [rbp-0x1c],0x0
 1007afb:	78 69                	js     1007b66 <linked_list_insert_idx+0x89>
 1007afd:	48 83 7d d8 00       	cmp    QWORD PTR [rbp-0x28],0x0
 1007b02:	74 62                	je     1007b66 <linked_list_insert_idx+0x89>
 1007b04:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
 1007b07:	8d 50 ff             	lea    edx,[rax-0x1]
 1007b0a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 1007b0e:	89 d6                	mov    esi,edx
 1007b10:	48 89 c7             	mov    rdi,rax
 1007b13:	e8 29 01 00 00       	call   1007c41 <linked_list_get>
 1007b18:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
 1007b1c:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 1007b20:	48 89 c7             	mov    rdi,rax
 1007b23:	e8 28 fc ff ff       	call   1007750 <_init_linked_list_node>
 1007b28:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
 1007b2d:	75 1d                	jne    1007b4c <linked_list_insert_idx+0x6f>
 1007b2f:	83 7d e4 00          	cmp    DWORD PTR [rbp-0x1c],0x0
 1007b33:	75 34                	jne    1007b69 <linked_list_insert_idx+0x8c>
 1007b35:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
 1007b39:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 1007b3d:	be 00 00 00 00       	mov    esi,0x0
 1007b42:	48 89 c7             	mov    rdi,rax
 1007b45:	e8 ed fe ff ff       	call   1007a37 <linked_list_insert_ref>
 1007b4a:	eb 1d                	jmp    1007b69 <linked_list_insert_idx+0x8c>
 1007b4c:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
 1007b50:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
 1007b54:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 1007b58:	48 89 ce             	mov    rsi,rcx
 1007b5b:	48 89 c7             	mov    rdi,rax
 1007b5e:	e8 d4 fe ff ff       	call   1007a37 <linked_list_insert_ref>
 1007b63:	90                   	nop
 1007b64:	eb 03                	jmp    1007b69 <linked_list_insert_idx+0x8c>
 1007b66:	90                   	nop
 1007b67:	eb 01                	jmp    1007b6a <linked_list_insert_idx+0x8d>
 1007b69:	90                   	nop
 1007b6a:	c9                   	leave  
 1007b6b:	c3                   	ret    

0000000001007b6c <linked_list_remove_idx>:
 1007b6c:	55                   	push   rbp
 1007b6d:	48 89 e5             	mov    rbp,rsp
 1007b70:	48 83 ec 20          	sub    rsp,0x20
 1007b74:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
 1007b78:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
 1007b7b:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
 1007b80:	74 06                	je     1007b88 <linked_list_remove_idx+0x1c>
 1007b82:	83 7d e4 00          	cmp    DWORD PTR [rbp-0x1c],0x0
 1007b86:	79 07                	jns    1007b8f <linked_list_remove_idx+0x23>
 1007b88:	b8 00 00 00 00       	mov    eax,0x0
 1007b8d:	eb 36                	jmp    1007bc5 <linked_list_remove_idx+0x59>
 1007b8f:	8b 55 e4             	mov    edx,DWORD PTR [rbp-0x1c]
 1007b92:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 1007b96:	89 d6                	mov    esi,edx
 1007b98:	48 89 c7             	mov    rdi,rax
 1007b9b:	e8 a1 00 00 00       	call   1007c41 <linked_list_get>
 1007ba0:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
 1007ba4:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
 1007ba9:	75 07                	jne    1007bb2 <linked_list_remove_idx+0x46>
 1007bab:	b8 00 00 00 00       	mov    eax,0x0
 1007bb0:	eb 13                	jmp    1007bc5 <linked_list_remove_idx+0x59>
 1007bb2:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
 1007bb6:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 1007bba:	48 89 d6             	mov    rsi,rdx
 1007bbd:	48 89 c7             	mov    rdi,rax
 1007bc0:	e8 02 00 00 00       	call   1007bc7 <linked_list_remove_ref>
 1007bc5:	c9                   	leave  
 1007bc6:	c3                   	ret    

0000000001007bc7 <linked_list_remove_ref>:
 1007bc7:	55                   	push   rbp
 1007bc8:	48 89 e5             	mov    rbp,rsp
 1007bcb:	48 83 ec 10          	sub    rsp,0x10
 1007bcf:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
 1007bd3:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
 1007bd7:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
 1007bdc:	74 07                	je     1007be5 <linked_list_remove_ref+0x1e>
 1007bde:	48 83 7d f0 00       	cmp    QWORD PTR [rbp-0x10],0x0
 1007be3:	75 07                	jne    1007bec <linked_list_remove_ref+0x25>
 1007be5:	b8 00 00 00 00       	mov    eax,0x0
 1007bea:	eb 53                	jmp    1007c3f <linked_list_remove_ref+0x78>
 1007bec:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 1007bf0:	48 89 c7             	mov    rdi,rax
 1007bf3:	e8 4f fc ff ff       	call   1007847 <_unlink_node>
 1007bf8:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 1007bfc:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
 1007c00:	48 85 c0             	test   rax,rax
 1007c03:	75 0f                	jne    1007c14 <linked_list_remove_ref+0x4d>
 1007c05:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 1007c09:	48 8b 10             	mov    rdx,QWORD PTR [rax]
 1007c0c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1007c10:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
 1007c14:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 1007c18:	48 8b 00             	mov    rax,QWORD PTR [rax]
 1007c1b:	48 85 c0             	test   rax,rax
 1007c1e:	75 0f                	jne    1007c2f <linked_list_remove_ref+0x68>
 1007c20:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 1007c24:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
 1007c28:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1007c2c:	48 89 10             	mov    QWORD PTR [rax],rdx
 1007c2f:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 1007c33:	48 89 c7             	mov    rdi,rax
 1007c36:	e8 15 fb ff ff       	call   1007750 <_init_linked_list_node>
 1007c3b:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 1007c3f:	c9                   	leave  
 1007c40:	c3                   	ret    

0000000001007c41 <linked_list_get>:
 1007c41:	55                   	push   rbp
 1007c42:	48 89 e5             	mov    rbp,rsp
 1007c45:	48 83 ec 20          	sub    rsp,0x20
 1007c49:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
 1007c4d:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
 1007c50:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
 1007c55:	74 12                	je     1007c69 <linked_list_get+0x28>
 1007c57:	83 7d e4 00          	cmp    DWORD PTR [rbp-0x1c],0x0
 1007c5b:	78 0c                	js     1007c69 <linked_list_get+0x28>
 1007c5d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 1007c61:	48 8b 00             	mov    rax,QWORD PTR [rax]
 1007c64:	48 85 c0             	test   rax,rax
 1007c67:	75 07                	jne    1007c70 <linked_list_get+0x2f>
 1007c69:	b8 00 00 00 00       	mov    eax,0x0
 1007c6e:	eb 30                	jmp    1007ca0 <linked_list_get+0x5f>
 1007c70:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 1007c74:	48 8b 00             	mov    rax,QWORD PTR [rax]
 1007c77:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
 1007c7b:	90                   	nop
 1007c7c:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
 1007c7f:	8d 50 ff             	lea    edx,[rax-0x1]
 1007c82:	89 55 e4             	mov    DWORD PTR [rbp-0x1c],edx
 1007c85:	85 c0                	test   eax,eax
 1007c87:	74 13                	je     1007c9c <linked_list_get+0x5b>
 1007c89:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1007c8d:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
 1007c91:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
 1007c95:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
 1007c9a:	75 e0                	jne    1007c7c <linked_list_get+0x3b>
 1007c9c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1007ca0:	c9                   	leave  
 1007ca1:	c3                   	ret    

0000000001007ca2 <linked_list_next>:
 1007ca2:	55                   	push   rbp
 1007ca3:	48 89 e5             	mov    rbp,rsp
 1007ca6:	48 83 ec 08          	sub    rsp,0x8
 1007caa:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
 1007cae:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
 1007cb3:	74 0c                	je     1007cc1 <linked_list_next+0x1f>
 1007cb5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1007cb9:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
 1007cbd:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
 1007cc1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1007cc5:	c9                   	leave  
 1007cc6:	c3                   	ret    

0000000001007cc7 <linked_list_prev>:
 1007cc7:	55                   	push   rbp
 1007cc8:	48 89 e5             	mov    rbp,rsp
 1007ccb:	48 83 ec 08          	sub    rsp,0x8
 1007ccf:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
 1007cd3:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
 1007cd8:	74 0b                	je     1007ce5 <linked_list_prev+0x1e>
 1007cda:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1007cde:	48 8b 00             	mov    rax,QWORD PTR [rax]
 1007ce1:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
 1007ce5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1007ce9:	c9                   	leave  
 1007cea:	c3                   	ret    

0000000001007ceb <linked_list_first>:
 1007ceb:	55                   	push   rbp
 1007cec:	48 89 e5             	mov    rbp,rsp
 1007cef:	48 83 ec 18          	sub    rsp,0x18
 1007cf3:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
 1007cf7:	48 c7 45 f8 00 00 00 	mov    QWORD PTR [rbp-0x8],0x0
 1007cfe:	00 
 1007cff:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
 1007d04:	74 0b                	je     1007d11 <linked_list_first+0x26>
 1007d06:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 1007d0a:	48 8b 00             	mov    rax,QWORD PTR [rax]
 1007d0d:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
 1007d11:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1007d15:	c9                   	leave  
 1007d16:	c3                   	ret    

0000000001007d17 <linked_list_last>:
 1007d17:	55                   	push   rbp
 1007d18:	48 89 e5             	mov    rbp,rsp
 1007d1b:	48 83 ec 18          	sub    rsp,0x18
 1007d1f:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
 1007d23:	48 c7 45 f8 00 00 00 	mov    QWORD PTR [rbp-0x8],0x0
 1007d2a:	00 
 1007d2b:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
 1007d30:	74 0c                	je     1007d3e <linked_list_last+0x27>
 1007d32:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 1007d36:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
 1007d3a:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
 1007d3e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1007d42:	c9                   	leave  
 1007d43:	c3                   	ret    

0000000001007d44 <linked_list_search>:
 1007d44:	55                   	push   rbp
 1007d45:	48 89 e5             	mov    rbp,rsp
 1007d48:	48 83 ec 30          	sub    rsp,0x30
 1007d4c:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
 1007d50:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
 1007d54:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
 1007d58:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
 1007d5d:	74 07                	je     1007d66 <linked_list_search+0x22>
 1007d5f:	48 83 7d e0 00       	cmp    QWORD PTR [rbp-0x20],0x0
 1007d64:	75 0a                	jne    1007d70 <linked_list_search+0x2c>
 1007d66:	b8 ff ff ff ff       	mov    eax,0xffffffff
 1007d6b:	e9 8a 00 00 00       	jmp    1007dfa <linked_list_search+0xb6>
 1007d70:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
 1007d77:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 1007d7b:	48 89 c7             	mov    rdi,rax
 1007d7e:	e8 68 ff ff ff       	call   1007ceb <linked_list_first>
 1007d83:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
 1007d87:	eb 65                	jmp    1007dee <linked_list_search+0xaa>
 1007d89:	48 83 7d d8 00       	cmp    QWORD PTR [rbp-0x28],0x0
 1007d8e:	74 1d                	je     1007dad <linked_list_search+0x69>
 1007d90:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
 1007d94:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
 1007d98:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 1007d9c:	48 89 ce             	mov    rsi,rcx
 1007d9f:	48 89 d7             	mov    rdi,rdx
 1007da2:	ff d0                	call   rax
 1007da4:	84 c0                	test   al,al
 1007da6:	74 32                	je     1007dda <linked_list_search+0x96>
 1007da8:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
 1007dab:	eb 4d                	jmp    1007dfa <linked_list_search+0xb6>
 1007dad:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
 1007db1:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
 1007db5:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 1007db9:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
 1007dbd:	48 39 c2             	cmp    rdx,rax
 1007dc0:	75 18                	jne    1007dda <linked_list_search+0x96>
 1007dc2:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
 1007dc6:	48 8b 10             	mov    rdx,QWORD PTR [rax]
 1007dc9:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 1007dcd:	48 8b 00             	mov    rax,QWORD PTR [rax]
 1007dd0:	48 39 c2             	cmp    rdx,rax
 1007dd3:	75 05                	jne    1007dda <linked_list_search+0x96>
 1007dd5:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
 1007dd8:	eb 20                	jmp    1007dfa <linked_list_search+0xb6>
 1007dda:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
 1007dde:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 1007de2:	48 89 c7             	mov    rdi,rax
 1007de5:	e8 b8 fe ff ff       	call   1007ca2 <linked_list_next>
 1007dea:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
 1007dee:	48 83 7d f0 00       	cmp    QWORD PTR [rbp-0x10],0x0
 1007df3:	75 94                	jne    1007d89 <linked_list_search+0x45>
 1007df5:	b8 ff ff ff ff       	mov    eax,0xffffffff
 1007dfa:	c9                   	leave  
 1007dfb:	c3                   	ret    

0000000001007dfc <salloc_init_test>:
 1007dfc:	55                   	push   rbp
 1007dfd:	48 89 e5             	mov    rbp,rsp
 1007e00:	48 83 ec 10          	sub    rsp,0x10
 1007e04:	be 00 04 00 00       	mov    esi,0x400
 1007e09:	bf 00 40 01 01       	mov    edi,0x1014000
 1007e0e:	e8 b7 f6 ff ff       	call   10074ca <salloc_init>
 1007e13:	c7 45 fc 00 04 00 00 	mov    DWORD PTR [rbp-0x4],0x400
 1007e1a:	c6 45 fb 01          	mov    BYTE PTR [rbp-0x5],0x1
 1007e1e:	48 8d 55 fb          	lea    rdx,[rbp-0x5]
 1007e22:	48 8d 45 fc          	lea    rax,[rbp-0x4]
 1007e26:	b9 01 00 00 00       	mov    ecx,0x1
 1007e2b:	48 89 c6             	mov    rsi,rax
 1007e2e:	bf 00 40 01 01       	mov    edi,0x1014000
 1007e33:	e8 c5 f5 ff ff       	call   10073fd <salloc_assert>
 1007e38:	c9                   	leave  
 1007e39:	c3                   	ret    

0000000001007e3a <salloc_basic_alloc>:
 1007e3a:	55                   	push   rbp
 1007e3b:	48 89 e5             	mov    rbp,rsp
 1007e3e:	48 83 ec 10          	sub    rsp,0x10
 1007e42:	c6 45 ff 01          	mov    BYTE PTR [rbp-0x1],0x1
 1007e46:	be 00 04 00 00       	mov    esi,0x400
 1007e4b:	bf 00 40 01 01       	mov    edi,0x1014000
 1007e50:	e8 75 f6 ff ff       	call   10074ca <salloc_init>
 1007e55:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 1007e59:	74 1b                	je     1007e76 <salloc_basic_alloc+0x3c>
 1007e5b:	be 0a 00 00 00       	mov    esi,0xa
 1007e60:	bf 00 40 01 01       	mov    edi,0x1014000
 1007e65:	e8 c5 f6 ff ff       	call   100752f <salloc>
 1007e6a:	48 85 c0             	test   rax,rax
 1007e6d:	74 07                	je     1007e76 <salloc_basic_alloc+0x3c>
 1007e6f:	b8 01 00 00 00       	mov    eax,0x1
 1007e74:	eb 05                	jmp    1007e7b <salloc_basic_alloc+0x41>
 1007e76:	b8 00 00 00 00       	mov    eax,0x0
 1007e7b:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 1007e7e:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 1007e82:	b8 04 00 00 00       	mov    eax,0x4
 1007e87:	83 c0 0a             	add    eax,0xa
 1007e8a:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
 1007e8d:	b8 04 00 00 00       	mov    eax,0x4
 1007e92:	ba f6 03 00 00       	mov    edx,0x3f6
 1007e97:	29 c2                	sub    edx,eax
 1007e99:	89 d0                	mov    eax,edx
 1007e9b:	89 45 f8             	mov    DWORD PTR [rbp-0x8],eax
 1007e9e:	c6 45 f2 00          	mov    BYTE PTR [rbp-0xe],0x0
 1007ea2:	c6 45 f3 01          	mov    BYTE PTR [rbp-0xd],0x1
 1007ea6:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 1007eaa:	74 25                	je     1007ed1 <salloc_basic_alloc+0x97>
 1007eac:	48 8d 55 f2          	lea    rdx,[rbp-0xe]
 1007eb0:	48 8d 45 f4          	lea    rax,[rbp-0xc]
 1007eb4:	b9 02 00 00 00       	mov    ecx,0x2
 1007eb9:	48 89 c6             	mov    rsi,rax
 1007ebc:	bf 00 40 01 01       	mov    edi,0x1014000
 1007ec1:	e8 37 f5 ff ff       	call   10073fd <salloc_assert>
 1007ec6:	84 c0                	test   al,al
 1007ec8:	74 07                	je     1007ed1 <salloc_basic_alloc+0x97>
 1007eca:	b8 01 00 00 00       	mov    eax,0x1
 1007ecf:	eb 05                	jmp    1007ed6 <salloc_basic_alloc+0x9c>
 1007ed1:	b8 00 00 00 00       	mov    eax,0x0
 1007ed6:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 1007ed9:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 1007edd:	0f b6 45 ff          	movzx  eax,BYTE PTR [rbp-0x1]
 1007ee1:	c9                   	leave  
 1007ee2:	c3                   	ret    

0000000001007ee3 <salloc_full_alloc>:
 1007ee3:	55                   	push   rbp
 1007ee4:	48 89 e5             	mov    rbp,rsp
 1007ee7:	48 83 ec 10          	sub    rsp,0x10
 1007eeb:	c6 45 ff 01          	mov    BYTE PTR [rbp-0x1],0x1
 1007eef:	be 00 04 00 00       	mov    esi,0x400
 1007ef4:	bf 00 40 01 01       	mov    edi,0x1014000
 1007ef9:	e8 cc f5 ff ff       	call   10074ca <salloc_init>
 1007efe:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 1007f02:	74 26                	je     1007f2a <salloc_full_alloc+0x47>
 1007f04:	b8 04 00 00 00       	mov    eax,0x4
 1007f09:	ba 00 04 00 00       	mov    edx,0x400
 1007f0e:	29 c2                	sub    edx,eax
 1007f10:	89 d0                	mov    eax,edx
 1007f12:	89 c6                	mov    esi,eax
 1007f14:	bf 00 40 01 01       	mov    edi,0x1014000
 1007f19:	e8 11 f6 ff ff       	call   100752f <salloc>
 1007f1e:	48 85 c0             	test   rax,rax
 1007f21:	74 07                	je     1007f2a <salloc_full_alloc+0x47>
 1007f23:	b8 01 00 00 00       	mov    eax,0x1
 1007f28:	eb 05                	jmp    1007f2f <salloc_full_alloc+0x4c>
 1007f2a:	b8 00 00 00 00       	mov    eax,0x0
 1007f2f:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 1007f32:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 1007f36:	c7 45 f8 00 04 00 00 	mov    DWORD PTR [rbp-0x8],0x400
 1007f3d:	c6 45 f7 00          	mov    BYTE PTR [rbp-0x9],0x0
 1007f41:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 1007f45:	74 25                	je     1007f6c <salloc_full_alloc+0x89>
 1007f47:	48 8d 55 f7          	lea    rdx,[rbp-0x9]
 1007f4b:	48 8d 45 f8          	lea    rax,[rbp-0x8]
 1007f4f:	b9 01 00 00 00       	mov    ecx,0x1
 1007f54:	48 89 c6             	mov    rsi,rax
 1007f57:	bf 00 40 01 01       	mov    edi,0x1014000
 1007f5c:	e8 9c f4 ff ff       	call   10073fd <salloc_assert>
 1007f61:	84 c0                	test   al,al
 1007f63:	74 07                	je     1007f6c <salloc_full_alloc+0x89>
 1007f65:	b8 01 00 00 00       	mov    eax,0x1
 1007f6a:	eb 05                	jmp    1007f71 <salloc_full_alloc+0x8e>
 1007f6c:	b8 00 00 00 00       	mov    eax,0x0
 1007f71:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 1007f74:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 1007f78:	0f b6 45 ff          	movzx  eax,BYTE PTR [rbp-0x1]
 1007f7c:	c9                   	leave  
 1007f7d:	c3                   	ret    

0000000001007f7e <salloc_overflow_alloc>:
 1007f7e:	55                   	push   rbp
 1007f7f:	48 89 e5             	mov    rbp,rsp
 1007f82:	48 83 ec 10          	sub    rsp,0x10
 1007f86:	c6 45 ff 01          	mov    BYTE PTR [rbp-0x1],0x1
 1007f8a:	be 00 04 00 00       	mov    esi,0x400
 1007f8f:	bf 00 40 01 01       	mov    edi,0x1014000
 1007f94:	e8 31 f5 ff ff       	call   10074ca <salloc_init>
 1007f99:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 1007f9d:	74 26                	je     1007fc5 <salloc_overflow_alloc+0x47>
 1007f9f:	b8 04 00 00 00       	mov    eax,0x4
 1007fa4:	ba 01 04 00 00       	mov    edx,0x401
 1007fa9:	29 c2                	sub    edx,eax
 1007fab:	89 d0                	mov    eax,edx
 1007fad:	89 c6                	mov    esi,eax
 1007faf:	bf 00 40 01 01       	mov    edi,0x1014000
 1007fb4:	e8 76 f5 ff ff       	call   100752f <salloc>
 1007fb9:	48 85 c0             	test   rax,rax
 1007fbc:	75 07                	jne    1007fc5 <salloc_overflow_alloc+0x47>
 1007fbe:	b8 01 00 00 00       	mov    eax,0x1
 1007fc3:	eb 05                	jmp    1007fca <salloc_overflow_alloc+0x4c>
 1007fc5:	b8 00 00 00 00       	mov    eax,0x0
 1007fca:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 1007fcd:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 1007fd1:	c7 45 f8 00 04 00 00 	mov    DWORD PTR [rbp-0x8],0x400
 1007fd8:	c6 45 f7 01          	mov    BYTE PTR [rbp-0x9],0x1
 1007fdc:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 1007fe0:	74 25                	je     1008007 <salloc_overflow_alloc+0x89>
 1007fe2:	48 8d 55 f7          	lea    rdx,[rbp-0x9]
 1007fe6:	48 8d 45 f8          	lea    rax,[rbp-0x8]
 1007fea:	b9 01 00 00 00       	mov    ecx,0x1
 1007fef:	48 89 c6             	mov    rsi,rax
 1007ff2:	bf 00 40 01 01       	mov    edi,0x1014000
 1007ff7:	e8 01 f4 ff ff       	call   10073fd <salloc_assert>
 1007ffc:	84 c0                	test   al,al
 1007ffe:	74 07                	je     1008007 <salloc_overflow_alloc+0x89>
 1008000:	b8 01 00 00 00       	mov    eax,0x1
 1008005:	eb 05                	jmp    100800c <salloc_overflow_alloc+0x8e>
 1008007:	b8 00 00 00 00       	mov    eax,0x0
 100800c:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 100800f:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 1008013:	0f b6 45 ff          	movzx  eax,BYTE PTR [rbp-0x1]
 1008017:	c9                   	leave  
 1008018:	c3                   	ret    

0000000001008019 <salloc_multiple_alloc>:
 1008019:	55                   	push   rbp
 100801a:	48 89 e5             	mov    rbp,rsp
 100801d:	48 83 ec 20          	sub    rsp,0x20
 1008021:	c6 45 ff 01          	mov    BYTE PTR [rbp-0x1],0x1
 1008025:	be 00 04 00 00       	mov    esi,0x400
 100802a:	bf 00 40 01 01       	mov    edi,0x1014000
 100802f:	e8 96 f4 ff ff       	call   10074ca <salloc_init>
 1008034:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 1008038:	74 1b                	je     1008055 <salloc_multiple_alloc+0x3c>
 100803a:	be 0a 00 00 00       	mov    esi,0xa
 100803f:	bf 00 40 01 01       	mov    edi,0x1014000
 1008044:	e8 e6 f4 ff ff       	call   100752f <salloc>
 1008049:	48 85 c0             	test   rax,rax
 100804c:	74 07                	je     1008055 <salloc_multiple_alloc+0x3c>
 100804e:	b8 01 00 00 00       	mov    eax,0x1
 1008053:	eb 05                	jmp    100805a <salloc_multiple_alloc+0x41>
 1008055:	b8 00 00 00 00       	mov    eax,0x0
 100805a:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 100805d:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 1008061:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 1008065:	74 1b                	je     1008082 <salloc_multiple_alloc+0x69>
 1008067:	be 0a 00 00 00       	mov    esi,0xa
 100806c:	bf 00 40 01 01       	mov    edi,0x1014000
 1008071:	e8 b9 f4 ff ff       	call   100752f <salloc>
 1008076:	48 85 c0             	test   rax,rax
 1008079:	74 07                	je     1008082 <salloc_multiple_alloc+0x69>
 100807b:	b8 01 00 00 00       	mov    eax,0x1
 1008080:	eb 05                	jmp    1008087 <salloc_multiple_alloc+0x6e>
 1008082:	b8 00 00 00 00       	mov    eax,0x0
 1008087:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 100808a:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 100808e:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 1008092:	74 1b                	je     10080af <salloc_multiple_alloc+0x96>
 1008094:	be 0a 00 00 00       	mov    esi,0xa
 1008099:	bf 00 40 01 01       	mov    edi,0x1014000
 100809e:	e8 8c f4 ff ff       	call   100752f <salloc>
 10080a3:	48 85 c0             	test   rax,rax
 10080a6:	74 07                	je     10080af <salloc_multiple_alloc+0x96>
 10080a8:	b8 01 00 00 00       	mov    eax,0x1
 10080ad:	eb 05                	jmp    10080b4 <salloc_multiple_alloc+0x9b>
 10080af:	b8 00 00 00 00       	mov    eax,0x0
 10080b4:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 10080b7:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 10080bb:	b8 04 00 00 00       	mov    eax,0x4
 10080c0:	83 c0 0a             	add    eax,0xa
 10080c3:	89 45 ec             	mov    DWORD PTR [rbp-0x14],eax
 10080c6:	b8 04 00 00 00       	mov    eax,0x4
 10080cb:	83 c0 0a             	add    eax,0xa
 10080ce:	89 45 f0             	mov    DWORD PTR [rbp-0x10],eax
 10080d1:	b8 04 00 00 00       	mov    eax,0x4
 10080d6:	83 c0 0a             	add    eax,0xa
 10080d9:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
 10080dc:	ba 04 00 00 00       	mov    edx,0x4
 10080e1:	89 d0                	mov    eax,edx
 10080e3:	01 c0                	add    eax,eax
 10080e5:	01 d0                	add    eax,edx
 10080e7:	ba e2 03 00 00       	mov    edx,0x3e2
 10080ec:	29 c2                	sub    edx,eax
 10080ee:	89 d0                	mov    eax,edx
 10080f0:	89 45 f8             	mov    DWORD PTR [rbp-0x8],eax
 10080f3:	c6 45 e8 00          	mov    BYTE PTR [rbp-0x18],0x0
 10080f7:	c6 45 e9 00          	mov    BYTE PTR [rbp-0x17],0x0
 10080fb:	c6 45 ea 00          	mov    BYTE PTR [rbp-0x16],0x0
 10080ff:	c6 45 eb 01          	mov    BYTE PTR [rbp-0x15],0x1
 1008103:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 1008107:	74 25                	je     100812e <salloc_multiple_alloc+0x115>
 1008109:	48 8d 55 e8          	lea    rdx,[rbp-0x18]
 100810d:	48 8d 45 ec          	lea    rax,[rbp-0x14]
 1008111:	b9 04 00 00 00       	mov    ecx,0x4
 1008116:	48 89 c6             	mov    rsi,rax
 1008119:	bf 00 40 01 01       	mov    edi,0x1014000
 100811e:	e8 da f2 ff ff       	call   10073fd <salloc_assert>
 1008123:	84 c0                	test   al,al
 1008125:	74 07                	je     100812e <salloc_multiple_alloc+0x115>
 1008127:	b8 01 00 00 00       	mov    eax,0x1
 100812c:	eb 05                	jmp    1008133 <salloc_multiple_alloc+0x11a>
 100812e:	b8 00 00 00 00       	mov    eax,0x0
 1008133:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 1008136:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 100813a:	0f b6 45 ff          	movzx  eax,BYTE PTR [rbp-0x1]
 100813e:	c9                   	leave  
 100813f:	c3                   	ret    

0000000001008140 <salloc_alloc_not_enough>:
 1008140:	55                   	push   rbp
 1008141:	48 89 e5             	mov    rbp,rsp
 1008144:	48 83 ec 20          	sub    rsp,0x20
 1008148:	c6 45 ff 01          	mov    BYTE PTR [rbp-0x1],0x1
 100814c:	ba 04 00 00 00       	mov    edx,0x4
 1008151:	b8 04 00 00 00       	mov    eax,0x4
 1008156:	01 d0                	add    eax,edx
 1008158:	ba 04 00 00 00       	mov    edx,0x4
 100815d:	01 d0                	add    eax,edx
 100815f:	83 e8 01             	sub    eax,0x1
 1008162:	89 c6                	mov    esi,eax
 1008164:	bf 00 40 01 01       	mov    edi,0x1014000
 1008169:	e8 5c f3 ff ff       	call   10074ca <salloc_init>
 100816e:	b8 04 00 00 00       	mov    eax,0x4
 1008173:	89 c6                	mov    esi,eax
 1008175:	bf 00 40 01 01       	mov    edi,0x1014000
 100817a:	e8 b0 f3 ff ff       	call   100752f <salloc>
 100817f:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
 1008183:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 1008187:	74 0e                	je     1008197 <salloc_alloc_not_enough+0x57>
 1008189:	48 83 7d f0 00       	cmp    QWORD PTR [rbp-0x10],0x0
 100818e:	74 07                	je     1008197 <salloc_alloc_not_enough+0x57>
 1008190:	b8 01 00 00 00       	mov    eax,0x1
 1008195:	eb 05                	jmp    100819c <salloc_alloc_not_enough+0x5c>
 1008197:	b8 00 00 00 00       	mov    eax,0x0
 100819c:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 100819f:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 10081a3:	ba 04 00 00 00       	mov    edx,0x4
 10081a8:	b8 04 00 00 00       	mov    eax,0x4
 10081ad:	01 d0                	add    eax,edx
 10081af:	ba 04 00 00 00       	mov    edx,0x4
 10081b4:	01 d0                	add    eax,edx
 10081b6:	83 e8 01             	sub    eax,0x1
 10081b9:	89 45 ec             	mov    DWORD PTR [rbp-0x14],eax
 10081bc:	c6 45 eb 00          	mov    BYTE PTR [rbp-0x15],0x0
 10081c0:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 10081c4:	74 25                	je     10081eb <salloc_alloc_not_enough+0xab>
 10081c6:	48 8d 55 eb          	lea    rdx,[rbp-0x15]
 10081ca:	48 8d 45 ec          	lea    rax,[rbp-0x14]
 10081ce:	b9 01 00 00 00       	mov    ecx,0x1
 10081d3:	48 89 c6             	mov    rsi,rax
 10081d6:	bf 00 40 01 01       	mov    edi,0x1014000
 10081db:	e8 1d f2 ff ff       	call   10073fd <salloc_assert>
 10081e0:	84 c0                	test   al,al
 10081e2:	74 07                	je     10081eb <salloc_alloc_not_enough+0xab>
 10081e4:	b8 01 00 00 00       	mov    eax,0x1
 10081e9:	eb 05                	jmp    10081f0 <salloc_alloc_not_enough+0xb0>
 10081eb:	b8 00 00 00 00       	mov    eax,0x0
 10081f0:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 10081f3:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 10081f7:	0f b6 45 ff          	movzx  eax,BYTE PTR [rbp-0x1]
 10081fb:	c9                   	leave  
 10081fc:	c3                   	ret    

00000000010081fd <salloc_basic_free>:
 10081fd:	55                   	push   rbp
 10081fe:	48 89 e5             	mov    rbp,rsp
 1008201:	48 83 ec 20          	sub    rsp,0x20
 1008205:	c6 45 ff 01          	mov    BYTE PTR [rbp-0x1],0x1
 1008209:	be 00 04 00 00       	mov    esi,0x400
 100820e:	bf 00 40 01 01       	mov    edi,0x1014000
 1008213:	e8 b2 f2 ff ff       	call   10074ca <salloc_init>
 1008218:	be 0a 00 00 00       	mov    esi,0xa
 100821d:	bf 00 40 01 01       	mov    edi,0x1014000
 1008222:	e8 08 f3 ff ff       	call   100752f <salloc>
 1008227:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
 100822b:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100822f:	74 0e                	je     100823f <salloc_basic_free+0x42>
 1008231:	48 83 7d f0 00       	cmp    QWORD PTR [rbp-0x10],0x0
 1008236:	74 07                	je     100823f <salloc_basic_free+0x42>
 1008238:	b8 01 00 00 00       	mov    eax,0x1
 100823d:	eb 05                	jmp    1008244 <salloc_basic_free+0x47>
 100823f:	b8 00 00 00 00       	mov    eax,0x0
 1008244:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 1008247:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 100824b:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 100824f:	48 89 c6             	mov    rsi,rax
 1008252:	bf 00 40 01 01       	mov    edi,0x1014000
 1008257:	e8 43 f4 ff ff       	call   100769f <sfree>
 100825c:	c7 45 ec 00 04 00 00 	mov    DWORD PTR [rbp-0x14],0x400
 1008263:	c6 45 eb 01          	mov    BYTE PTR [rbp-0x15],0x1
 1008267:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100826b:	74 25                	je     1008292 <salloc_basic_free+0x95>
 100826d:	48 8d 55 eb          	lea    rdx,[rbp-0x15]
 1008271:	48 8d 45 ec          	lea    rax,[rbp-0x14]
 1008275:	b9 01 00 00 00       	mov    ecx,0x1
 100827a:	48 89 c6             	mov    rsi,rax
 100827d:	bf 00 40 01 01       	mov    edi,0x1014000
 1008282:	e8 76 f1 ff ff       	call   10073fd <salloc_assert>
 1008287:	84 c0                	test   al,al
 1008289:	74 07                	je     1008292 <salloc_basic_free+0x95>
 100828b:	b8 01 00 00 00       	mov    eax,0x1
 1008290:	eb 05                	jmp    1008297 <salloc_basic_free+0x9a>
 1008292:	b8 00 00 00 00       	mov    eax,0x0
 1008297:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 100829a:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 100829e:	0f b6 45 ff          	movzx  eax,BYTE PTR [rbp-0x1]
 10082a2:	c9                   	leave  
 10082a3:	c3                   	ret    

00000000010082a4 <salloc_full_free>:
 10082a4:	55                   	push   rbp
 10082a5:	48 89 e5             	mov    rbp,rsp
 10082a8:	48 83 ec 20          	sub    rsp,0x20
 10082ac:	c6 45 ff 01          	mov    BYTE PTR [rbp-0x1],0x1
 10082b0:	be 00 04 00 00       	mov    esi,0x400
 10082b5:	bf 00 40 01 01       	mov    edi,0x1014000
 10082ba:	e8 0b f2 ff ff       	call   10074ca <salloc_init>
 10082bf:	b8 04 00 00 00       	mov    eax,0x4
 10082c4:	ba 00 04 00 00       	mov    edx,0x400
 10082c9:	29 c2                	sub    edx,eax
 10082cb:	89 d0                	mov    eax,edx
 10082cd:	89 c6                	mov    esi,eax
 10082cf:	bf 00 40 01 01       	mov    edi,0x1014000
 10082d4:	e8 56 f2 ff ff       	call   100752f <salloc>
 10082d9:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
 10082dd:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 10082e1:	74 0e                	je     10082f1 <salloc_full_free+0x4d>
 10082e3:	48 83 7d f0 00       	cmp    QWORD PTR [rbp-0x10],0x0
 10082e8:	74 07                	je     10082f1 <salloc_full_free+0x4d>
 10082ea:	b8 01 00 00 00       	mov    eax,0x1
 10082ef:	eb 05                	jmp    10082f6 <salloc_full_free+0x52>
 10082f1:	b8 00 00 00 00       	mov    eax,0x0
 10082f6:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 10082f9:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 10082fd:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 1008301:	48 89 c6             	mov    rsi,rax
 1008304:	bf 00 40 01 01       	mov    edi,0x1014000
 1008309:	e8 91 f3 ff ff       	call   100769f <sfree>
 100830e:	c7 45 ec 00 04 00 00 	mov    DWORD PTR [rbp-0x14],0x400
 1008315:	c6 45 eb 01          	mov    BYTE PTR [rbp-0x15],0x1
 1008319:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100831d:	74 25                	je     1008344 <salloc_full_free+0xa0>
 100831f:	48 8d 55 eb          	lea    rdx,[rbp-0x15]
 1008323:	48 8d 45 ec          	lea    rax,[rbp-0x14]
 1008327:	b9 01 00 00 00       	mov    ecx,0x1
 100832c:	48 89 c6             	mov    rsi,rax
 100832f:	bf 00 40 01 01       	mov    edi,0x1014000
 1008334:	e8 c4 f0 ff ff       	call   10073fd <salloc_assert>
 1008339:	84 c0                	test   al,al
 100833b:	74 07                	je     1008344 <salloc_full_free+0xa0>
 100833d:	b8 01 00 00 00       	mov    eax,0x1
 1008342:	eb 05                	jmp    1008349 <salloc_full_free+0xa5>
 1008344:	b8 00 00 00 00       	mov    eax,0x0
 1008349:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 100834c:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 1008350:	0f b6 45 ff          	movzx  eax,BYTE PTR [rbp-0x1]
 1008354:	c9                   	leave  
 1008355:	c3                   	ret    

0000000001008356 <salloc_multiple_free>:
 1008356:	55                   	push   rbp
 1008357:	48 89 e5             	mov    rbp,rsp
 100835a:	48 83 ec 50          	sub    rsp,0x50
 100835e:	c6 45 ff 01          	mov    BYTE PTR [rbp-0x1],0x1
 1008362:	be 00 04 00 00       	mov    esi,0x400
 1008367:	bf 00 40 01 01       	mov    edi,0x1014000
 100836c:	e8 59 f1 ff ff       	call   10074ca <salloc_init>
 1008371:	be 0a 00 00 00       	mov    esi,0xa
 1008376:	bf 00 40 01 01       	mov    edi,0x1014000
 100837b:	e8 af f1 ff ff       	call   100752f <salloc>
 1008380:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
 1008384:	be 0a 00 00 00       	mov    esi,0xa
 1008389:	bf 00 40 01 01       	mov    edi,0x1014000
 100838e:	e8 9c f1 ff ff       	call   100752f <salloc>
 1008393:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
 1008397:	be 0a 00 00 00       	mov    esi,0xa
 100839c:	bf 00 40 01 01       	mov    edi,0x1014000
 10083a1:	e8 89 f1 ff ff       	call   100752f <salloc>
 10083a6:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
 10083aa:	be 0a 00 00 00       	mov    esi,0xa
 10083af:	bf 00 40 01 01       	mov    edi,0x1014000
 10083b4:	e8 76 f1 ff ff       	call   100752f <salloc>
 10083b9:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
 10083bd:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 10083c1:	74 23                	je     10083e6 <salloc_multiple_free+0x90>
 10083c3:	48 83 7d f0 00       	cmp    QWORD PTR [rbp-0x10],0x0
 10083c8:	74 1c                	je     10083e6 <salloc_multiple_free+0x90>
 10083ca:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
 10083cf:	74 15                	je     10083e6 <salloc_multiple_free+0x90>
 10083d1:	48 83 7d e0 00       	cmp    QWORD PTR [rbp-0x20],0x0
 10083d6:	74 0e                	je     10083e6 <salloc_multiple_free+0x90>
 10083d8:	48 83 7d d8 00       	cmp    QWORD PTR [rbp-0x28],0x0
 10083dd:	74 07                	je     10083e6 <salloc_multiple_free+0x90>
 10083df:	b8 01 00 00 00       	mov    eax,0x1
 10083e4:	eb 05                	jmp    10083eb <salloc_multiple_free+0x95>
 10083e6:	b8 00 00 00 00       	mov    eax,0x0
 10083eb:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 10083ee:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 10083f2:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 10083f6:	48 89 c6             	mov    rsi,rax
 10083f9:	bf 00 40 01 01       	mov    edi,0x1014000
 10083fe:	e8 9c f2 ff ff       	call   100769f <sfree>
 1008403:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
 1008407:	48 89 c6             	mov    rsi,rax
 100840a:	bf 00 40 01 01       	mov    edi,0x1014000
 100840f:	e8 8b f2 ff ff       	call   100769f <sfree>
 1008414:	b8 04 00 00 00       	mov    eax,0x4
 1008419:	83 c0 0a             	add    eax,0xa
 100841c:	89 45 c4             	mov    DWORD PTR [rbp-0x3c],eax
 100841f:	b8 04 00 00 00       	mov    eax,0x4
 1008424:	83 c0 0a             	add    eax,0xa
 1008427:	89 45 c8             	mov    DWORD PTR [rbp-0x38],eax
 100842a:	b8 04 00 00 00       	mov    eax,0x4
 100842f:	83 c0 0a             	add    eax,0xa
 1008432:	89 45 cc             	mov    DWORD PTR [rbp-0x34],eax
 1008435:	b8 04 00 00 00       	mov    eax,0x4
 100843a:	83 c0 0a             	add    eax,0xa
 100843d:	89 45 d0             	mov    DWORD PTR [rbp-0x30],eax
 1008440:	ba 04 00 00 00       	mov    edx,0x4
 1008445:	b8 00 00 00 00       	mov    eax,0x0
 100844a:	29 d0                	sub    eax,edx
 100844c:	c1 e0 02             	shl    eax,0x2
 100844f:	05 d8 03 00 00       	add    eax,0x3d8
 1008454:	89 45 d4             	mov    DWORD PTR [rbp-0x2c],eax
 1008457:	c6 45 bf 01          	mov    BYTE PTR [rbp-0x41],0x1
 100845b:	c6 45 c0 00          	mov    BYTE PTR [rbp-0x40],0x0
 100845f:	c6 45 c1 01          	mov    BYTE PTR [rbp-0x3f],0x1
 1008463:	c6 45 c2 00          	mov    BYTE PTR [rbp-0x3e],0x0
 1008467:	c6 45 c3 01          	mov    BYTE PTR [rbp-0x3d],0x1
 100846b:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100846f:	74 25                	je     1008496 <salloc_multiple_free+0x140>
 1008471:	48 8d 55 bf          	lea    rdx,[rbp-0x41]
 1008475:	48 8d 45 c4          	lea    rax,[rbp-0x3c]
 1008479:	b9 05 00 00 00       	mov    ecx,0x5
 100847e:	48 89 c6             	mov    rsi,rax
 1008481:	bf 00 40 01 01       	mov    edi,0x1014000
 1008486:	e8 72 ef ff ff       	call   10073fd <salloc_assert>
 100848b:	84 c0                	test   al,al
 100848d:	74 07                	je     1008496 <salloc_multiple_free+0x140>
 100848f:	b8 01 00 00 00       	mov    eax,0x1
 1008494:	eb 05                	jmp    100849b <salloc_multiple_free+0x145>
 1008496:	b8 00 00 00 00       	mov    eax,0x0
 100849b:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 100849e:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 10084a2:	0f b6 45 ff          	movzx  eax,BYTE PTR [rbp-0x1]
 10084a6:	c9                   	leave  
 10084a7:	c3                   	ret    

00000000010084a8 <salloc_free_join_tail>:
 10084a8:	55                   	push   rbp
 10084a9:	48 89 e5             	mov    rbp,rsp
 10084ac:	48 83 ec 40          	sub    rsp,0x40
 10084b0:	c6 45 ff 01          	mov    BYTE PTR [rbp-0x1],0x1
 10084b4:	be 00 04 00 00       	mov    esi,0x400
 10084b9:	bf 00 40 01 01       	mov    edi,0x1014000
 10084be:	e8 07 f0 ff ff       	call   10074ca <salloc_init>
 10084c3:	be 0a 00 00 00       	mov    esi,0xa
 10084c8:	bf 00 40 01 01       	mov    edi,0x1014000
 10084cd:	e8 5d f0 ff ff       	call   100752f <salloc>
 10084d2:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
 10084d6:	be 0a 00 00 00       	mov    esi,0xa
 10084db:	bf 00 40 01 01       	mov    edi,0x1014000
 10084e0:	e8 4a f0 ff ff       	call   100752f <salloc>
 10084e5:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
 10084e9:	be 0a 00 00 00       	mov    esi,0xa
 10084ee:	bf 00 40 01 01       	mov    edi,0x1014000
 10084f3:	e8 37 f0 ff ff       	call   100752f <salloc>
 10084f8:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
 10084fc:	be 0a 00 00 00       	mov    esi,0xa
 1008501:	bf 00 40 01 01       	mov    edi,0x1014000
 1008506:	e8 24 f0 ff ff       	call   100752f <salloc>
 100850b:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
 100850f:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 1008513:	74 23                	je     1008538 <salloc_free_join_tail+0x90>
 1008515:	48 83 7d f0 00       	cmp    QWORD PTR [rbp-0x10],0x0
 100851a:	74 1c                	je     1008538 <salloc_free_join_tail+0x90>
 100851c:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
 1008521:	74 15                	je     1008538 <salloc_free_join_tail+0x90>
 1008523:	48 83 7d e0 00       	cmp    QWORD PTR [rbp-0x20],0x0
 1008528:	74 0e                	je     1008538 <salloc_free_join_tail+0x90>
 100852a:	48 83 7d d8 00       	cmp    QWORD PTR [rbp-0x28],0x0
 100852f:	74 07                	je     1008538 <salloc_free_join_tail+0x90>
 1008531:	b8 01 00 00 00       	mov    eax,0x1
 1008536:	eb 05                	jmp    100853d <salloc_free_join_tail+0x95>
 1008538:	b8 00 00 00 00       	mov    eax,0x0
 100853d:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 1008540:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 1008544:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 1008548:	48 89 c6             	mov    rsi,rax
 100854b:	bf 00 40 01 01       	mov    edi,0x1014000
 1008550:	e8 4a f1 ff ff       	call   100769f <sfree>
 1008555:	b8 04 00 00 00       	mov    eax,0x4
 100855a:	83 c0 0a             	add    eax,0xa
 100855d:	89 45 c8             	mov    DWORD PTR [rbp-0x38],eax
 1008560:	b8 04 00 00 00       	mov    eax,0x4
 1008565:	83 c0 0a             	add    eax,0xa
 1008568:	89 45 cc             	mov    DWORD PTR [rbp-0x34],eax
 100856b:	b8 04 00 00 00       	mov    eax,0x4
 1008570:	83 c0 0a             	add    eax,0xa
 1008573:	89 45 d0             	mov    DWORD PTR [rbp-0x30],eax
 1008576:	ba 04 00 00 00       	mov    edx,0x4
 100857b:	89 d0                	mov    eax,edx
 100857d:	01 c0                	add    eax,eax
 100857f:	01 d0                	add    eax,edx
 1008581:	ba e2 03 00 00       	mov    edx,0x3e2
 1008586:	29 c2                	sub    edx,eax
 1008588:	89 d0                	mov    eax,edx
 100858a:	89 45 d4             	mov    DWORD PTR [rbp-0x2c],eax
 100858d:	c6 45 c4 00          	mov    BYTE PTR [rbp-0x3c],0x0
 1008591:	c6 45 c5 00          	mov    BYTE PTR [rbp-0x3b],0x0
 1008595:	c6 45 c6 00          	mov    BYTE PTR [rbp-0x3a],0x0
 1008599:	c6 45 c7 01          	mov    BYTE PTR [rbp-0x39],0x1
 100859d:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 10085a1:	74 25                	je     10085c8 <salloc_free_join_tail+0x120>
 10085a3:	48 8d 55 c4          	lea    rdx,[rbp-0x3c]
 10085a7:	48 8d 45 c8          	lea    rax,[rbp-0x38]
 10085ab:	b9 04 00 00 00       	mov    ecx,0x4
 10085b0:	48 89 c6             	mov    rsi,rax
 10085b3:	bf 00 40 01 01       	mov    edi,0x1014000
 10085b8:	e8 40 ee ff ff       	call   10073fd <salloc_assert>
 10085bd:	84 c0                	test   al,al
 10085bf:	74 07                	je     10085c8 <salloc_free_join_tail+0x120>
 10085c1:	b8 01 00 00 00       	mov    eax,0x1
 10085c6:	eb 05                	jmp    10085cd <salloc_free_join_tail+0x125>
 10085c8:	b8 00 00 00 00       	mov    eax,0x0
 10085cd:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 10085d0:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 10085d4:	0f b6 45 ff          	movzx  eax,BYTE PTR [rbp-0x1]
 10085d8:	c9                   	leave  
 10085d9:	c3                   	ret    

00000000010085da <salloc_free_join_head>:
 10085da:	55                   	push   rbp
 10085db:	48 89 e5             	mov    rbp,rsp
 10085de:	48 83 ec 40          	sub    rsp,0x40
 10085e2:	c6 45 ff 01          	mov    BYTE PTR [rbp-0x1],0x1
 10085e6:	be 00 04 00 00       	mov    esi,0x400
 10085eb:	bf 00 40 01 01       	mov    edi,0x1014000
 10085f0:	e8 d5 ee ff ff       	call   10074ca <salloc_init>
 10085f5:	be 0a 00 00 00       	mov    esi,0xa
 10085fa:	bf 00 40 01 01       	mov    edi,0x1014000
 10085ff:	e8 2b ef ff ff       	call   100752f <salloc>
 1008604:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
 1008608:	be 0a 00 00 00       	mov    esi,0xa
 100860d:	bf 00 40 01 01       	mov    edi,0x1014000
 1008612:	e8 18 ef ff ff       	call   100752f <salloc>
 1008617:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
 100861b:	be 0a 00 00 00       	mov    esi,0xa
 1008620:	bf 00 40 01 01       	mov    edi,0x1014000
 1008625:	e8 05 ef ff ff       	call   100752f <salloc>
 100862a:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
 100862e:	be 0a 00 00 00       	mov    esi,0xa
 1008633:	bf 00 40 01 01       	mov    edi,0x1014000
 1008638:	e8 f2 ee ff ff       	call   100752f <salloc>
 100863d:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
 1008641:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 1008645:	74 23                	je     100866a <salloc_free_join_head+0x90>
 1008647:	48 83 7d f0 00       	cmp    QWORD PTR [rbp-0x10],0x0
 100864c:	74 1c                	je     100866a <salloc_free_join_head+0x90>
 100864e:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
 1008653:	74 15                	je     100866a <salloc_free_join_head+0x90>
 1008655:	48 83 7d e0 00       	cmp    QWORD PTR [rbp-0x20],0x0
 100865a:	74 0e                	je     100866a <salloc_free_join_head+0x90>
 100865c:	48 83 7d d8 00       	cmp    QWORD PTR [rbp-0x28],0x0
 1008661:	74 07                	je     100866a <salloc_free_join_head+0x90>
 1008663:	b8 01 00 00 00       	mov    eax,0x1
 1008668:	eb 05                	jmp    100866f <salloc_free_join_head+0x95>
 100866a:	b8 00 00 00 00       	mov    eax,0x0
 100866f:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 1008672:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 1008676:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 100867a:	48 89 c6             	mov    rsi,rax
 100867d:	bf 00 40 01 01       	mov    edi,0x1014000
 1008682:	e8 18 f0 ff ff       	call   100769f <sfree>
 1008687:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 100868b:	48 89 c6             	mov    rsi,rax
 100868e:	bf 00 40 01 01       	mov    edi,0x1014000
 1008693:	e8 07 f0 ff ff       	call   100769f <sfree>
 1008698:	b8 04 00 00 00       	mov    eax,0x4
 100869d:	83 c0 0a             	add    eax,0xa
 10086a0:	01 c0                	add    eax,eax
 10086a2:	89 45 c8             	mov    DWORD PTR [rbp-0x38],eax
 10086a5:	b8 04 00 00 00       	mov    eax,0x4
 10086aa:	83 c0 0a             	add    eax,0xa
 10086ad:	89 45 cc             	mov    DWORD PTR [rbp-0x34],eax
 10086b0:	b8 04 00 00 00       	mov    eax,0x4
 10086b5:	83 c0 0a             	add    eax,0xa
 10086b8:	89 45 d0             	mov    DWORD PTR [rbp-0x30],eax
 10086bb:	ba 04 00 00 00       	mov    edx,0x4
 10086c0:	b8 00 00 00 00       	mov    eax,0x0
 10086c5:	29 d0                	sub    eax,edx
 10086c7:	c1 e0 02             	shl    eax,0x2
 10086ca:	05 d8 03 00 00       	add    eax,0x3d8
 10086cf:	89 45 d4             	mov    DWORD PTR [rbp-0x2c],eax
 10086d2:	c6 45 c4 01          	mov    BYTE PTR [rbp-0x3c],0x1
 10086d6:	c6 45 c5 00          	mov    BYTE PTR [rbp-0x3b],0x0
 10086da:	c6 45 c6 00          	mov    BYTE PTR [rbp-0x3a],0x0
 10086de:	c6 45 c7 01          	mov    BYTE PTR [rbp-0x39],0x1
 10086e2:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 10086e6:	74 25                	je     100870d <salloc_free_join_head+0x133>
 10086e8:	48 8d 55 c4          	lea    rdx,[rbp-0x3c]
 10086ec:	48 8d 45 c8          	lea    rax,[rbp-0x38]
 10086f0:	b9 04 00 00 00       	mov    ecx,0x4
 10086f5:	48 89 c6             	mov    rsi,rax
 10086f8:	bf 00 40 01 01       	mov    edi,0x1014000
 10086fd:	e8 fb ec ff ff       	call   10073fd <salloc_assert>
 1008702:	84 c0                	test   al,al
 1008704:	74 07                	je     100870d <salloc_free_join_head+0x133>
 1008706:	b8 01 00 00 00       	mov    eax,0x1
 100870b:	eb 05                	jmp    1008712 <salloc_free_join_head+0x138>
 100870d:	b8 00 00 00 00       	mov    eax,0x0
 1008712:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 1008715:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 1008719:	0f b6 45 ff          	movzx  eax,BYTE PTR [rbp-0x1]
 100871d:	c9                   	leave  
 100871e:	c3                   	ret    

000000000100871f <salloc_free_join_mid>:
 100871f:	55                   	push   rbp
 1008720:	48 89 e5             	mov    rbp,rsp
 1008723:	48 83 ec 40          	sub    rsp,0x40
 1008727:	c6 45 ff 01          	mov    BYTE PTR [rbp-0x1],0x1
 100872b:	be 00 04 00 00       	mov    esi,0x400
 1008730:	bf 00 40 01 01       	mov    edi,0x1014000
 1008735:	e8 90 ed ff ff       	call   10074ca <salloc_init>
 100873a:	be 0a 00 00 00       	mov    esi,0xa
 100873f:	bf 00 40 01 01       	mov    edi,0x1014000
 1008744:	e8 e6 ed ff ff       	call   100752f <salloc>
 1008749:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
 100874d:	be 0a 00 00 00       	mov    esi,0xa
 1008752:	bf 00 40 01 01       	mov    edi,0x1014000
 1008757:	e8 d3 ed ff ff       	call   100752f <salloc>
 100875c:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
 1008760:	be 0a 00 00 00       	mov    esi,0xa
 1008765:	bf 00 40 01 01       	mov    edi,0x1014000
 100876a:	e8 c0 ed ff ff       	call   100752f <salloc>
 100876f:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
 1008773:	be 0a 00 00 00       	mov    esi,0xa
 1008778:	bf 00 40 01 01       	mov    edi,0x1014000
 100877d:	e8 ad ed ff ff       	call   100752f <salloc>
 1008782:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
 1008786:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100878a:	74 23                	je     10087af <salloc_free_join_mid+0x90>
 100878c:	48 83 7d f0 00       	cmp    QWORD PTR [rbp-0x10],0x0
 1008791:	74 1c                	je     10087af <salloc_free_join_mid+0x90>
 1008793:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
 1008798:	74 15                	je     10087af <salloc_free_join_mid+0x90>
 100879a:	48 83 7d e0 00       	cmp    QWORD PTR [rbp-0x20],0x0
 100879f:	74 0e                	je     10087af <salloc_free_join_mid+0x90>
 10087a1:	48 83 7d d8 00       	cmp    QWORD PTR [rbp-0x28],0x0
 10087a6:	74 07                	je     10087af <salloc_free_join_mid+0x90>
 10087a8:	b8 01 00 00 00       	mov    eax,0x1
 10087ad:	eb 05                	jmp    10087b4 <salloc_free_join_mid+0x95>
 10087af:	b8 00 00 00 00       	mov    eax,0x0
 10087b4:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 10087b7:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 10087bb:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 10087bf:	48 89 c6             	mov    rsi,rax
 10087c2:	bf 00 40 01 01       	mov    edi,0x1014000
 10087c7:	e8 d3 ee ff ff       	call   100769f <sfree>
 10087cc:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
 10087d0:	48 89 c6             	mov    rsi,rax
 10087d3:	bf 00 40 01 01       	mov    edi,0x1014000
 10087d8:	e8 c2 ee ff ff       	call   100769f <sfree>
 10087dd:	b8 04 00 00 00       	mov    eax,0x4
 10087e2:	83 c0 0a             	add    eax,0xa
 10087e5:	89 45 c8             	mov    DWORD PTR [rbp-0x38],eax
 10087e8:	b8 04 00 00 00       	mov    eax,0x4
 10087ed:	83 c0 0a             	add    eax,0xa
 10087f0:	01 c0                	add    eax,eax
 10087f2:	89 45 cc             	mov    DWORD PTR [rbp-0x34],eax
 10087f5:	b8 04 00 00 00       	mov    eax,0x4
 10087fa:	83 c0 0a             	add    eax,0xa
 10087fd:	89 45 d0             	mov    DWORD PTR [rbp-0x30],eax
 1008800:	ba 04 00 00 00       	mov    edx,0x4
 1008805:	b8 00 00 00 00       	mov    eax,0x0
 100880a:	29 d0                	sub    eax,edx
 100880c:	c1 e0 02             	shl    eax,0x2
 100880f:	05 d8 03 00 00       	add    eax,0x3d8
 1008814:	89 45 d4             	mov    DWORD PTR [rbp-0x2c],eax
 1008817:	c6 45 c4 00          	mov    BYTE PTR [rbp-0x3c],0x0
 100881b:	c6 45 c5 01          	mov    BYTE PTR [rbp-0x3b],0x1
 100881f:	c6 45 c6 00          	mov    BYTE PTR [rbp-0x3a],0x0
 1008823:	c6 45 c7 01          	mov    BYTE PTR [rbp-0x39],0x1
 1008827:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100882b:	74 25                	je     1008852 <salloc_free_join_mid+0x133>
 100882d:	48 8d 55 c4          	lea    rdx,[rbp-0x3c]
 1008831:	48 8d 45 c8          	lea    rax,[rbp-0x38]
 1008835:	b9 04 00 00 00       	mov    ecx,0x4
 100883a:	48 89 c6             	mov    rsi,rax
 100883d:	bf 00 40 01 01       	mov    edi,0x1014000
 1008842:	e8 b6 eb ff ff       	call   10073fd <salloc_assert>
 1008847:	84 c0                	test   al,al
 1008849:	74 07                	je     1008852 <salloc_free_join_mid+0x133>
 100884b:	b8 01 00 00 00       	mov    eax,0x1
 1008850:	eb 05                	jmp    1008857 <salloc_free_join_mid+0x138>
 1008852:	b8 00 00 00 00       	mov    eax,0x0
 1008857:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 100885a:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 100885e:	0f b6 45 ff          	movzx  eax,BYTE PTR [rbp-0x1]
 1008862:	c9                   	leave  
 1008863:	c3                   	ret    

0000000001008864 <salloc_free_join_consecutive>:
 1008864:	55                   	push   rbp
 1008865:	48 89 e5             	mov    rbp,rsp
 1008868:	48 83 ec 70          	sub    rsp,0x70
 100886c:	c6 45 ff 01          	mov    BYTE PTR [rbp-0x1],0x1
 1008870:	be 00 04 00 00       	mov    esi,0x400
 1008875:	bf 00 40 01 01       	mov    edi,0x1014000
 100887a:	e8 4b ec ff ff       	call   10074ca <salloc_init>
 100887f:	be 0a 00 00 00       	mov    esi,0xa
 1008884:	bf 00 40 01 01       	mov    edi,0x1014000
 1008889:	e8 a1 ec ff ff       	call   100752f <salloc>
 100888e:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
 1008892:	be 0a 00 00 00       	mov    esi,0xa
 1008897:	bf 00 40 01 01       	mov    edi,0x1014000
 100889c:	e8 8e ec ff ff       	call   100752f <salloc>
 10088a1:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
 10088a5:	be 0a 00 00 00       	mov    esi,0xa
 10088aa:	bf 00 40 01 01       	mov    edi,0x1014000
 10088af:	e8 7b ec ff ff       	call   100752f <salloc>
 10088b4:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
 10088b8:	be 0a 00 00 00       	mov    esi,0xa
 10088bd:	bf 00 40 01 01       	mov    edi,0x1014000
 10088c2:	e8 68 ec ff ff       	call   100752f <salloc>
 10088c7:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
 10088cb:	be 0a 00 00 00       	mov    esi,0xa
 10088d0:	bf 00 40 01 01       	mov    edi,0x1014000
 10088d5:	e8 55 ec ff ff       	call   100752f <salloc>
 10088da:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
 10088de:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 10088e2:	74 2a                	je     100890e <salloc_free_join_consecutive+0xaa>
 10088e4:	48 83 7d f0 00       	cmp    QWORD PTR [rbp-0x10],0x0
 10088e9:	74 23                	je     100890e <salloc_free_join_consecutive+0xaa>
 10088eb:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
 10088f0:	74 1c                	je     100890e <salloc_free_join_consecutive+0xaa>
 10088f2:	48 83 7d e0 00       	cmp    QWORD PTR [rbp-0x20],0x0
 10088f7:	74 15                	je     100890e <salloc_free_join_consecutive+0xaa>
 10088f9:	48 83 7d d8 00       	cmp    QWORD PTR [rbp-0x28],0x0
 10088fe:	74 0e                	je     100890e <salloc_free_join_consecutive+0xaa>
 1008900:	48 83 7d d0 00       	cmp    QWORD PTR [rbp-0x30],0x0
 1008905:	74 07                	je     100890e <salloc_free_join_consecutive+0xaa>
 1008907:	b8 01 00 00 00       	mov    eax,0x1
 100890c:	eb 05                	jmp    1008913 <salloc_free_join_consecutive+0xaf>
 100890e:	b8 00 00 00 00       	mov    eax,0x0
 1008913:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 1008916:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 100891a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 100891e:	48 89 c6             	mov    rsi,rax
 1008921:	bf 00 40 01 01       	mov    edi,0x1014000
 1008926:	e8 74 ed ff ff       	call   100769f <sfree>
 100892b:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 100892f:	48 89 c6             	mov    rsi,rax
 1008932:	bf 00 40 01 01       	mov    edi,0x1014000
 1008937:	e8 63 ed ff ff       	call   100769f <sfree>
 100893c:	b8 04 00 00 00       	mov    eax,0x4
 1008941:	83 c0 0a             	add    eax,0xa
 1008944:	89 45 b8             	mov    DWORD PTR [rbp-0x48],eax
 1008947:	b8 04 00 00 00       	mov    eax,0x4
 100894c:	83 c0 0a             	add    eax,0xa
 100894f:	89 45 bc             	mov    DWORD PTR [rbp-0x44],eax
 1008952:	b8 04 00 00 00       	mov    eax,0x4
 1008957:	83 c0 0a             	add    eax,0xa
 100895a:	89 45 c0             	mov    DWORD PTR [rbp-0x40],eax
 100895d:	b8 04 00 00 00       	mov    eax,0x4
 1008962:	83 c0 0a             	add    eax,0xa
 1008965:	89 45 c4             	mov    DWORD PTR [rbp-0x3c],eax
 1008968:	b8 04 00 00 00       	mov    eax,0x4
 100896d:	83 c0 0a             	add    eax,0xa
 1008970:	89 45 c8             	mov    DWORD PTR [rbp-0x38],eax
 1008973:	ba 04 00 00 00       	mov    edx,0x4
 1008978:	89 d0                	mov    eax,edx
 100897a:	c1 e0 02             	shl    eax,0x2
 100897d:	01 d0                	add    eax,edx
 100897f:	ba ce 03 00 00       	mov    edx,0x3ce
 1008984:	29 c2                	sub    edx,eax
 1008986:	89 d0                	mov    eax,edx
 1008988:	89 45 cc             	mov    DWORD PTR [rbp-0x34],eax
 100898b:	c6 45 b2 00          	mov    BYTE PTR [rbp-0x4e],0x0
 100898f:	c6 45 b3 01          	mov    BYTE PTR [rbp-0x4d],0x1
 1008993:	c6 45 b4 00          	mov    BYTE PTR [rbp-0x4c],0x0
 1008997:	c6 45 b5 01          	mov    BYTE PTR [rbp-0x4b],0x1
 100899b:	c6 45 b6 00          	mov    BYTE PTR [rbp-0x4a],0x0
 100899f:	c6 45 b7 01          	mov    BYTE PTR [rbp-0x49],0x1
 10089a3:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 10089a7:	74 25                	je     10089ce <salloc_free_join_consecutive+0x16a>
 10089a9:	48 8d 55 b2          	lea    rdx,[rbp-0x4e]
 10089ad:	48 8d 45 b8          	lea    rax,[rbp-0x48]
 10089b1:	b9 06 00 00 00       	mov    ecx,0x6
 10089b6:	48 89 c6             	mov    rsi,rax
 10089b9:	bf 00 40 01 01       	mov    edi,0x1014000
 10089be:	e8 3a ea ff ff       	call   10073fd <salloc_assert>
 10089c3:	84 c0                	test   al,al
 10089c5:	74 07                	je     10089ce <salloc_free_join_consecutive+0x16a>
 10089c7:	b8 01 00 00 00       	mov    eax,0x1
 10089cc:	eb 05                	jmp    10089d3 <salloc_free_join_consecutive+0x16f>
 10089ce:	b8 00 00 00 00       	mov    eax,0x0
 10089d3:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 10089d6:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 10089da:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
 10089de:	48 89 c6             	mov    rsi,rax
 10089e1:	bf 00 40 01 01       	mov    edi,0x1014000
 10089e6:	e8 b4 ec ff ff       	call   100769f <sfree>
 10089eb:	b8 04 00 00 00       	mov    eax,0x4
 10089f0:	83 c0 0a             	add    eax,0xa
 10089f3:	89 45 a0             	mov    DWORD PTR [rbp-0x60],eax
 10089f6:	ba 04 00 00 00       	mov    edx,0x4
 10089fb:	89 d0                	mov    eax,edx
 10089fd:	01 c0                	add    eax,eax
 10089ff:	01 d0                	add    eax,edx
 1008a01:	83 c0 1e             	add    eax,0x1e
 1008a04:	89 45 a4             	mov    DWORD PTR [rbp-0x5c],eax
 1008a07:	b8 04 00 00 00       	mov    eax,0x4
 1008a0c:	83 c0 0a             	add    eax,0xa
 1008a0f:	89 45 a8             	mov    DWORD PTR [rbp-0x58],eax
 1008a12:	ba 04 00 00 00       	mov    edx,0x4
 1008a17:	89 d0                	mov    eax,edx
 1008a19:	c1 e0 02             	shl    eax,0x2
 1008a1c:	01 d0                	add    eax,edx
 1008a1e:	ba ce 03 00 00       	mov    edx,0x3ce
 1008a23:	29 c2                	sub    edx,eax
 1008a25:	89 d0                	mov    eax,edx
 1008a27:	89 45 ac             	mov    DWORD PTR [rbp-0x54],eax
 1008a2a:	c6 45 9c 00          	mov    BYTE PTR [rbp-0x64],0x0
 1008a2e:	c6 45 9d 01          	mov    BYTE PTR [rbp-0x63],0x1
 1008a32:	c6 45 9e 00          	mov    BYTE PTR [rbp-0x62],0x0
 1008a36:	c6 45 9f 01          	mov    BYTE PTR [rbp-0x61],0x1
 1008a3a:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 1008a3e:	74 25                	je     1008a65 <salloc_free_join_consecutive+0x201>
 1008a40:	48 8d 55 9c          	lea    rdx,[rbp-0x64]
 1008a44:	48 8d 45 a0          	lea    rax,[rbp-0x60]
 1008a48:	b9 04 00 00 00       	mov    ecx,0x4
 1008a4d:	48 89 c6             	mov    rsi,rax
 1008a50:	bf 00 40 01 01       	mov    edi,0x1014000
 1008a55:	e8 a3 e9 ff ff       	call   10073fd <salloc_assert>
 1008a5a:	84 c0                	test   al,al
 1008a5c:	74 07                	je     1008a65 <salloc_free_join_consecutive+0x201>
 1008a5e:	b8 01 00 00 00       	mov    eax,0x1
 1008a63:	eb 05                	jmp    1008a6a <salloc_free_join_consecutive+0x206>
 1008a65:	b8 00 00 00 00       	mov    eax,0x0
 1008a6a:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 1008a6d:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 1008a71:	0f b6 45 ff          	movzx  eax,BYTE PTR [rbp-0x1]
 1008a75:	c9                   	leave  
 1008a76:	c3                   	ret    

0000000001008a77 <salloc_free_all>:
 1008a77:	55                   	push   rbp
 1008a78:	48 89 e5             	mov    rbp,rsp
 1008a7b:	48 83 ec 30          	sub    rsp,0x30
 1008a7f:	c6 45 ff 01          	mov    BYTE PTR [rbp-0x1],0x1
 1008a83:	be 00 04 00 00       	mov    esi,0x400
 1008a88:	bf 00 40 01 01       	mov    edi,0x1014000
 1008a8d:	e8 38 ea ff ff       	call   10074ca <salloc_init>
 1008a92:	be 0a 00 00 00       	mov    esi,0xa
 1008a97:	bf 00 40 01 01       	mov    edi,0x1014000
 1008a9c:	e8 8e ea ff ff       	call   100752f <salloc>
 1008aa1:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
 1008aa5:	be 0a 00 00 00       	mov    esi,0xa
 1008aaa:	bf 00 40 01 01       	mov    edi,0x1014000
 1008aaf:	e8 7b ea ff ff       	call   100752f <salloc>
 1008ab4:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
 1008ab8:	be 0a 00 00 00       	mov    esi,0xa
 1008abd:	bf 00 40 01 01       	mov    edi,0x1014000
 1008ac2:	e8 68 ea ff ff       	call   100752f <salloc>
 1008ac7:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
 1008acb:	be 0a 00 00 00       	mov    esi,0xa
 1008ad0:	bf 00 40 01 01       	mov    edi,0x1014000
 1008ad5:	e8 55 ea ff ff       	call   100752f <salloc>
 1008ada:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
 1008ade:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 1008ae2:	74 23                	je     1008b07 <salloc_free_all+0x90>
 1008ae4:	48 83 7d f0 00       	cmp    QWORD PTR [rbp-0x10],0x0
 1008ae9:	74 1c                	je     1008b07 <salloc_free_all+0x90>
 1008aeb:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
 1008af0:	74 15                	je     1008b07 <salloc_free_all+0x90>
 1008af2:	48 83 7d e0 00       	cmp    QWORD PTR [rbp-0x20],0x0
 1008af7:	74 0e                	je     1008b07 <salloc_free_all+0x90>
 1008af9:	48 83 7d d8 00       	cmp    QWORD PTR [rbp-0x28],0x0
 1008afe:	74 07                	je     1008b07 <salloc_free_all+0x90>
 1008b00:	b8 01 00 00 00       	mov    eax,0x1
 1008b05:	eb 05                	jmp    1008b0c <salloc_free_all+0x95>
 1008b07:	b8 00 00 00 00       	mov    eax,0x0
 1008b0c:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 1008b0f:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 1008b13:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 1008b17:	48 89 c6             	mov    rsi,rax
 1008b1a:	bf 00 40 01 01       	mov    edi,0x1014000
 1008b1f:	e8 7b eb ff ff       	call   100769f <sfree>
 1008b24:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 1008b28:	48 89 c6             	mov    rsi,rax
 1008b2b:	bf 00 40 01 01       	mov    edi,0x1014000
 1008b30:	e8 6a eb ff ff       	call   100769f <sfree>
 1008b35:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
 1008b39:	48 89 c6             	mov    rsi,rax
 1008b3c:	bf 00 40 01 01       	mov    edi,0x1014000
 1008b41:	e8 59 eb ff ff       	call   100769f <sfree>
 1008b46:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 1008b4a:	48 89 c6             	mov    rsi,rax
 1008b4d:	bf 00 40 01 01       	mov    edi,0x1014000
 1008b52:	e8 48 eb ff ff       	call   100769f <sfree>
 1008b57:	c7 45 d4 00 04 00 00 	mov    DWORD PTR [rbp-0x2c],0x400
 1008b5e:	c6 45 d3 01          	mov    BYTE PTR [rbp-0x2d],0x1
 1008b62:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 1008b66:	74 25                	je     1008b8d <salloc_free_all+0x116>
 1008b68:	48 8d 55 d3          	lea    rdx,[rbp-0x2d]
 1008b6c:	48 8d 45 d4          	lea    rax,[rbp-0x2c]
 1008b70:	b9 01 00 00 00       	mov    ecx,0x1
 1008b75:	48 89 c6             	mov    rsi,rax
 1008b78:	bf 00 40 01 01       	mov    edi,0x1014000
 1008b7d:	e8 7b e8 ff ff       	call   10073fd <salloc_assert>
 1008b82:	84 c0                	test   al,al
 1008b84:	74 07                	je     1008b8d <salloc_free_all+0x116>
 1008b86:	b8 01 00 00 00       	mov    eax,0x1
 1008b8b:	eb 05                	jmp    1008b92 <salloc_free_all+0x11b>
 1008b8d:	b8 00 00 00 00       	mov    eax,0x0
 1008b92:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 1008b95:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 1008b99:	0f b6 45 ff          	movzx  eax,BYTE PTR [rbp-0x1]
 1008b9d:	c9                   	leave  
 1008b9e:	c3                   	ret    

0000000001008b9f <salloc_test>:
 1008b9f:	55                   	push   rbp
 1008ba0:	48 89 e5             	mov    rbp,rsp
 1008ba3:	bf 0c 30 01 01       	mov    edi,0x101300c
 1008ba8:	e8 28 47 00 00       	call   100d2d5 <test_begin>
 1008bad:	b8 00 00 00 00       	mov    eax,0x0
 1008bb2:	e8 45 f2 ff ff       	call   1007dfc <salloc_init_test>
 1008bb7:	0f b6 c0             	movzx  eax,al
 1008bba:	89 c6                	mov    esi,eax
 1008bbc:	bf 18 30 01 01       	mov    edi,0x1013018
 1008bc1:	e8 2f 49 00 00       	call   100d4f5 <run_case>
 1008bc6:	b8 00 00 00 00       	mov    eax,0x0
 1008bcb:	e8 6a f2 ff ff       	call   1007e3a <salloc_basic_alloc>
 1008bd0:	0f b6 c0             	movzx  eax,al
 1008bd3:	89 c6                	mov    esi,eax
 1008bd5:	bf 29 30 01 01       	mov    edi,0x1013029
 1008bda:	e8 16 49 00 00       	call   100d4f5 <run_case>
 1008bdf:	b8 00 00 00 00       	mov    eax,0x0
 1008be4:	e8 fa f2 ff ff       	call   1007ee3 <salloc_full_alloc>
 1008be9:	0f b6 c0             	movzx  eax,al
 1008bec:	89 c6                	mov    esi,eax
 1008bee:	bf 3c 30 01 01       	mov    edi,0x101303c
 1008bf3:	e8 fd 48 00 00       	call   100d4f5 <run_case>
 1008bf8:	b8 00 00 00 00       	mov    eax,0x0
 1008bfd:	e8 7c f3 ff ff       	call   1007f7e <salloc_overflow_alloc>
 1008c02:	0f b6 c0             	movzx  eax,al
 1008c05:	89 c6                	mov    esi,eax
 1008c07:	bf 4e 30 01 01       	mov    edi,0x101304e
 1008c0c:	e8 e4 48 00 00       	call   100d4f5 <run_case>
 1008c11:	b8 00 00 00 00       	mov    eax,0x0
 1008c16:	e8 fe f3 ff ff       	call   1008019 <salloc_multiple_alloc>
 1008c1b:	0f b6 c0             	movzx  eax,al
 1008c1e:	89 c6                	mov    esi,eax
 1008c20:	bf 64 30 01 01       	mov    edi,0x1013064
 1008c25:	e8 cb 48 00 00       	call   100d4f5 <run_case>
 1008c2a:	b8 00 00 00 00       	mov    eax,0x0
 1008c2f:	e8 0c f5 ff ff       	call   1008140 <salloc_alloc_not_enough>
 1008c34:	0f b6 c0             	movzx  eax,al
 1008c37:	89 c6                	mov    esi,eax
 1008c39:	bf 7a 30 01 01       	mov    edi,0x101307a
 1008c3e:	e8 b2 48 00 00       	call   100d4f5 <run_case>
 1008c43:	b8 00 00 00 00       	mov    eax,0x0
 1008c48:	e8 b0 f5 ff ff       	call   10081fd <salloc_basic_free>
 1008c4d:	0f b6 c0             	movzx  eax,al
 1008c50:	89 c6                	mov    esi,eax
 1008c52:	bf 92 30 01 01       	mov    edi,0x1013092
 1008c57:	e8 99 48 00 00       	call   100d4f5 <run_case>
 1008c5c:	b8 00 00 00 00       	mov    eax,0x0
 1008c61:	e8 3e f6 ff ff       	call   10082a4 <salloc_full_free>
 1008c66:	0f b6 c0             	movzx  eax,al
 1008c69:	89 c6                	mov    esi,eax
 1008c6b:	bf a4 30 01 01       	mov    edi,0x10130a4
 1008c70:	e8 80 48 00 00       	call   100d4f5 <run_case>
 1008c75:	b8 00 00 00 00       	mov    eax,0x0
 1008c7a:	e8 d7 f6 ff ff       	call   1008356 <salloc_multiple_free>
 1008c7f:	0f b6 c0             	movzx  eax,al
 1008c82:	89 c6                	mov    esi,eax
 1008c84:	bf b5 30 01 01       	mov    edi,0x10130b5
 1008c89:	e8 67 48 00 00       	call   100d4f5 <run_case>
 1008c8e:	b8 00 00 00 00       	mov    eax,0x0
 1008c93:	e8 10 f8 ff ff       	call   10084a8 <salloc_free_join_tail>
 1008c98:	0f b6 c0             	movzx  eax,al
 1008c9b:	89 c6                	mov    esi,eax
 1008c9d:	bf ca 30 01 01       	mov    edi,0x10130ca
 1008ca2:	e8 4e 48 00 00       	call   100d4f5 <run_case>
 1008ca7:	b8 00 00 00 00       	mov    eax,0x0
 1008cac:	e8 29 f9 ff ff       	call   10085da <salloc_free_join_head>
 1008cb1:	0f b6 c0             	movzx  eax,al
 1008cb4:	89 c6                	mov    esi,eax
 1008cb6:	bf e0 30 01 01       	mov    edi,0x10130e0
 1008cbb:	e8 35 48 00 00       	call   100d4f5 <run_case>
 1008cc0:	b8 00 00 00 00       	mov    eax,0x0
 1008cc5:	e8 55 fa ff ff       	call   100871f <salloc_free_join_mid>
 1008cca:	0f b6 c0             	movzx  eax,al
 1008ccd:	89 c6                	mov    esi,eax
 1008ccf:	bf f6 30 01 01       	mov    edi,0x10130f6
 1008cd4:	e8 1c 48 00 00       	call   100d4f5 <run_case>
 1008cd9:	b8 00 00 00 00       	mov    eax,0x0
 1008cde:	e8 81 fb ff ff       	call   1008864 <salloc_free_join_consecutive>
 1008ce3:	0f b6 c0             	movzx  eax,al
 1008ce6:	89 c6                	mov    esi,eax
 1008ce8:	bf 0b 31 01 01       	mov    edi,0x101310b
 1008ced:	e8 03 48 00 00       	call   100d4f5 <run_case>
 1008cf2:	b8 00 00 00 00       	mov    eax,0x0
 1008cf7:	e8 7b fd ff ff       	call   1008a77 <salloc_free_all>
 1008cfc:	0f b6 c0             	movzx  eax,al
 1008cff:	89 c6                	mov    esi,eax
 1008d01:	bf 28 31 01 01       	mov    edi,0x1013128
 1008d06:	e8 ea 47 00 00       	call   100d4f5 <run_case>
 1008d0b:	b8 00 00 00 00       	mov    eax,0x0
 1008d10:	e8 34 46 00 00       	call   100d349 <test_end>
 1008d15:	90                   	nop
 1008d16:	5d                   	pop    rbp
 1008d17:	c3                   	ret    

0000000001008d18 <validate_list>:
 1008d18:	55                   	push   rbp
 1008d19:	48 89 e5             	mov    rbp,rsp
 1008d1c:	48 83 ec 18          	sub    rsp,0x18
 1008d20:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
 1008d24:	c6 45 ff 01          	mov    BYTE PTR [rbp-0x1],0x1
 1008d28:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 1008d2c:	48 8b 00             	mov    rax,QWORD PTR [rax]
 1008d2f:	48 85 c0             	test   rax,rax
 1008d32:	74 2a                	je     1008d5e <validate_list+0x46>
 1008d34:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 1008d38:	74 16                	je     1008d50 <validate_list+0x38>
 1008d3a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 1008d3e:	48 8b 00             	mov    rax,QWORD PTR [rax]
 1008d41:	48 8b 00             	mov    rax,QWORD PTR [rax]
 1008d44:	48 85 c0             	test   rax,rax
 1008d47:	75 07                	jne    1008d50 <validate_list+0x38>
 1008d49:	b8 01 00 00 00       	mov    eax,0x1
 1008d4e:	eb 05                	jmp    1008d55 <validate_list+0x3d>
 1008d50:	b8 00 00 00 00       	mov    eax,0x0
 1008d55:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 1008d58:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 1008d5c:	eb 26                	jmp    1008d84 <validate_list+0x6c>
 1008d5e:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 1008d62:	74 14                	je     1008d78 <validate_list+0x60>
 1008d64:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 1008d68:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
 1008d6c:	48 85 c0             	test   rax,rax
 1008d6f:	75 07                	jne    1008d78 <validate_list+0x60>
 1008d71:	b8 01 00 00 00       	mov    eax,0x1
 1008d76:	eb 05                	jmp    1008d7d <validate_list+0x65>
 1008d78:	b8 00 00 00 00       	mov    eax,0x0
 1008d7d:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 1008d80:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 1008d84:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 1008d88:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
 1008d8c:	48 85 c0             	test   rax,rax
 1008d8f:	74 2c                	je     1008dbd <validate_list+0xa5>
 1008d91:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 1008d95:	74 18                	je     1008daf <validate_list+0x97>
 1008d97:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 1008d9b:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
 1008d9f:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
 1008da3:	48 85 c0             	test   rax,rax
 1008da6:	75 07                	jne    1008daf <validate_list+0x97>
 1008da8:	b8 01 00 00 00       	mov    eax,0x1
 1008dad:	eb 05                	jmp    1008db4 <validate_list+0x9c>
 1008daf:	b8 00 00 00 00       	mov    eax,0x0
 1008db4:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 1008db7:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 1008dbb:	eb 25                	jmp    1008de2 <validate_list+0xca>
 1008dbd:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 1008dc1:	74 13                	je     1008dd6 <validate_list+0xbe>
 1008dc3:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 1008dc7:	48 8b 00             	mov    rax,QWORD PTR [rax]
 1008dca:	48 85 c0             	test   rax,rax
 1008dcd:	75 07                	jne    1008dd6 <validate_list+0xbe>
 1008dcf:	b8 01 00 00 00       	mov    eax,0x1
 1008dd4:	eb 05                	jmp    1008ddb <validate_list+0xc3>
 1008dd6:	b8 00 00 00 00       	mov    eax,0x0
 1008ddb:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 1008dde:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 1008de2:	0f b6 45 ff          	movzx  eax,BYTE PTR [rbp-0x1]
 1008de6:	c9                   	leave  
 1008de7:	c3                   	ret    

0000000001008de8 <assert_list>:
 1008de8:	55                   	push   rbp
 1008de9:	48 89 e5             	mov    rbp,rsp
 1008dec:	48 83 ec 40          	sub    rsp,0x40
 1008df0:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
 1008df4:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
 1008df8:	89 55 cc             	mov    DWORD PTR [rbp-0x34],edx
 1008dfb:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 1008dff:	48 89 c7             	mov    rdi,rax
 1008e02:	e8 e4 ee ff ff       	call   1007ceb <linked_list_first>
 1008e07:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
 1008e0b:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
 1008e12:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 1008e16:	48 89 c7             	mov    rdi,rax
 1008e19:	e8 fa fe ff ff       	call   1008d18 <validate_list>
 1008e1e:	83 f0 01             	xor    eax,0x1
 1008e21:	84 c0                	test   al,al
 1008e23:	74 51                	je     1008e76 <assert_list+0x8e>
 1008e25:	b8 00 00 00 00       	mov    eax,0x0
 1008e2a:	e9 cf 00 00 00       	jmp    1008efe <assert_list+0x116>
 1008e2f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1008e33:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
 1008e37:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 1008e3b:	8b 50 10             	mov    edx,DWORD PTR [rax+0x10]
 1008e3e:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
 1008e41:	48 98                	cdqe   
 1008e43:	48 8d 0c 85 00 00 00 	lea    rcx,[rax*4+0x0]
 1008e4a:	00 
 1008e4b:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
 1008e4f:	48 01 c8             	add    rax,rcx
 1008e52:	8b 00                	mov    eax,DWORD PTR [rax]
 1008e54:	39 c2                	cmp    edx,eax
 1008e56:	74 0a                	je     1008e62 <assert_list+0x7a>
 1008e58:	b8 00 00 00 00       	mov    eax,0x0
 1008e5d:	e9 9c 00 00 00       	jmp    1008efe <assert_list+0x116>
 1008e62:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
 1008e66:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1008e6a:	48 89 c7             	mov    rdi,rax
 1008e6d:	e8 30 ee ff ff       	call   1007ca2 <linked_list_next>
 1008e72:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
 1008e76:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
 1008e7b:	74 08                	je     1008e85 <assert_list+0x9d>
 1008e7d:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
 1008e80:	3b 45 cc             	cmp    eax,DWORD PTR [rbp-0x34]
 1008e83:	7c aa                	jl     1008e2f <assert_list+0x47>
 1008e85:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
 1008e88:	3b 45 cc             	cmp    eax,DWORD PTR [rbp-0x34]
 1008e8b:	74 07                	je     1008e94 <assert_list+0xac>
 1008e8d:	b8 00 00 00 00       	mov    eax,0x0
 1008e92:	eb 6a                	jmp    1008efe <assert_list+0x116>
 1008e94:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 1008e98:	48 89 c7             	mov    rdi,rax
 1008e9b:	e8 77 ee ff ff       	call   1007d17 <linked_list_last>
 1008ea0:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
 1008ea4:	eb 44                	jmp    1008eea <assert_list+0x102>
 1008ea6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1008eaa:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
 1008eae:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
 1008eb2:	8b 50 10             	mov    edx,DWORD PTR [rax+0x10]
 1008eb5:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
 1008eb8:	48 98                	cdqe   
 1008eba:	48 c1 e0 02          	shl    rax,0x2
 1008ebe:	48 8d 48 fc          	lea    rcx,[rax-0x4]
 1008ec2:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
 1008ec6:	48 01 c8             	add    rax,rcx
 1008ec9:	8b 00                	mov    eax,DWORD PTR [rax]
 1008ecb:	39 c2                	cmp    edx,eax
 1008ecd:	74 07                	je     1008ed6 <assert_list+0xee>
 1008ecf:	b8 00 00 00 00       	mov    eax,0x0
 1008ed4:	eb 28                	jmp    1008efe <assert_list+0x116>
 1008ed6:	83 6d f4 01          	sub    DWORD PTR [rbp-0xc],0x1
 1008eda:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1008ede:	48 89 c7             	mov    rdi,rax
 1008ee1:	e8 e1 ed ff ff       	call   1007cc7 <linked_list_prev>
 1008ee6:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
 1008eea:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
 1008eef:	74 06                	je     1008ef7 <assert_list+0x10f>
 1008ef1:	83 7d f4 00          	cmp    DWORD PTR [rbp-0xc],0x0
 1008ef5:	79 af                	jns    1008ea6 <assert_list+0xbe>
 1008ef7:	83 7d f4 00          	cmp    DWORD PTR [rbp-0xc],0x0
 1008efb:	0f 94 c0             	sete   al
 1008efe:	c9                   	leave  
 1008eff:	c3                   	ret    

0000000001008f00 <insert_val>:
 1008f00:	55                   	push   rbp
 1008f01:	48 89 e5             	mov    rbp,rsp
 1008f04:	48 83 ec 20          	sub    rsp,0x20
 1008f08:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
 1008f0c:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
 1008f0f:	89 55 e0             	mov    DWORD PTR [rbp-0x20],edx
 1008f12:	bf 18 00 00 00       	mov    edi,0x18
 1008f17:	e8 7d 45 00 00       	call   100d499 <talloc>
 1008f1c:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
 1008f20:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1008f24:	8b 55 e0             	mov    edx,DWORD PTR [rbp-0x20]
 1008f27:	89 50 10             	mov    DWORD PTR [rax+0x10],edx
 1008f2a:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
 1008f2e:	8b 4d e4             	mov    ecx,DWORD PTR [rbp-0x1c]
 1008f31:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 1008f35:	89 ce                	mov    esi,ecx
 1008f37:	48 89 c7             	mov    rdi,rax
 1008f3a:	e8 9e eb ff ff       	call   1007add <linked_list_insert_idx>
 1008f3f:	90                   	nop
 1008f40:	c9                   	leave  
 1008f41:	c3                   	ret    

0000000001008f42 <push_back_val>:
 1008f42:	55                   	push   rbp
 1008f43:	48 89 e5             	mov    rbp,rsp
 1008f46:	48 83 ec 20          	sub    rsp,0x20
 1008f4a:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
 1008f4e:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
 1008f51:	bf 18 00 00 00       	mov    edi,0x18
 1008f56:	e8 3e 45 00 00       	call   100d499 <talloc>
 1008f5b:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
 1008f5f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1008f63:	8b 55 e4             	mov    edx,DWORD PTR [rbp-0x1c]
 1008f66:	89 50 10             	mov    DWORD PTR [rax+0x10],edx
 1008f69:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
 1008f6d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 1008f71:	48 89 d6             	mov    rsi,rdx
 1008f74:	48 89 c7             	mov    rdi,rax
 1008f77:	e8 0b ea ff ff       	call   1007987 <linked_list_push_back>
 1008f7c:	90                   	nop
 1008f7d:	c9                   	leave  
 1008f7e:	c3                   	ret    

0000000001008f7f <push_front_val>:
 1008f7f:	55                   	push   rbp
 1008f80:	48 89 e5             	mov    rbp,rsp
 1008f83:	48 83 ec 20          	sub    rsp,0x20
 1008f87:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
 1008f8b:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
 1008f8e:	bf 18 00 00 00       	mov    edi,0x18
 1008f93:	e8 01 45 00 00       	call   100d499 <talloc>
 1008f98:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
 1008f9c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1008fa0:	8b 55 e4             	mov    edx,DWORD PTR [rbp-0x1c]
 1008fa3:	89 50 10             	mov    DWORD PTR [rax+0x10],edx
 1008fa6:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
 1008faa:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 1008fae:	48 89 d6             	mov    rsi,rdx
 1008fb1:	48 89 c7             	mov    rdi,rax
 1008fb4:	e8 89 e9 ff ff       	call   1007942 <linked_list_push_front>
 1008fb9:	90                   	nop
 1008fba:	c9                   	leave  
 1008fbb:	c3                   	ret    

0000000001008fbc <insert_test_beginning>:
 1008fbc:	55                   	push   rbp
 1008fbd:	48 89 e5             	mov    rbp,rsp
 1008fc0:	48 83 ec 20          	sub    rsp,0x20
 1008fc4:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 1008fc8:	48 89 c7             	mov    rdi,rax
 1008fcb:	e8 d1 e8 ff ff       	call   10078a1 <linked_list_init>
 1008fd0:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 1008fd4:	ba 00 00 00 00       	mov    edx,0x0
 1008fd9:	be 00 00 00 00       	mov    esi,0x0
 1008fde:	48 89 c7             	mov    rdi,rax
 1008fe1:	e8 1a ff ff ff       	call   1008f00 <insert_val>
 1008fe6:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 1008fea:	ba 01 00 00 00       	mov    edx,0x1
 1008fef:	be 00 00 00 00       	mov    esi,0x0
 1008ff4:	48 89 c7             	mov    rdi,rax
 1008ff7:	e8 04 ff ff ff       	call   1008f00 <insert_val>
 1008ffc:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 1009000:	ba 02 00 00 00       	mov    edx,0x2
 1009005:	be 00 00 00 00       	mov    esi,0x0
 100900a:	48 89 c7             	mov    rdi,rax
 100900d:	e8 ee fe ff ff       	call   1008f00 <insert_val>
 1009012:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 1009016:	ba 03 00 00 00       	mov    edx,0x3
 100901b:	be 00 00 00 00       	mov    esi,0x0
 1009020:	48 89 c7             	mov    rdi,rax
 1009023:	e8 d8 fe ff ff       	call   1008f00 <insert_val>
 1009028:	c7 45 e0 03 00 00 00 	mov    DWORD PTR [rbp-0x20],0x3
 100902f:	c7 45 e4 02 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x2
 1009036:	c7 45 e8 01 00 00 00 	mov    DWORD PTR [rbp-0x18],0x1
 100903d:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
 1009044:	48 8d 4d e0          	lea    rcx,[rbp-0x20]
 1009048:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100904c:	ba 04 00 00 00       	mov    edx,0x4
 1009051:	48 89 ce             	mov    rsi,rcx
 1009054:	48 89 c7             	mov    rdi,rax
 1009057:	e8 8c fd ff ff       	call   1008de8 <assert_list>
 100905c:	c9                   	leave  
 100905d:	c3                   	ret    

000000000100905e <insert_test_middle>:
 100905e:	55                   	push   rbp
 100905f:	48 89 e5             	mov    rbp,rsp
 1009062:	48 83 ec 30          	sub    rsp,0x30
 1009066:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100906a:	48 89 c7             	mov    rdi,rax
 100906d:	e8 2f e8 ff ff       	call   10078a1 <linked_list_init>
 1009072:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 1009076:	ba 00 00 00 00       	mov    edx,0x0
 100907b:	be 00 00 00 00       	mov    esi,0x0
 1009080:	48 89 c7             	mov    rdi,rax
 1009083:	e8 78 fe ff ff       	call   1008f00 <insert_val>
 1009088:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100908c:	ba 01 00 00 00       	mov    edx,0x1
 1009091:	be 00 00 00 00       	mov    esi,0x0
 1009096:	48 89 c7             	mov    rdi,rax
 1009099:	e8 62 fe ff ff       	call   1008f00 <insert_val>
 100909e:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 10090a2:	ba 02 00 00 00       	mov    edx,0x2
 10090a7:	be 00 00 00 00       	mov    esi,0x0
 10090ac:	48 89 c7             	mov    rdi,rax
 10090af:	e8 4c fe ff ff       	call   1008f00 <insert_val>
 10090b4:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 10090b8:	ba 04 00 00 00       	mov    edx,0x4
 10090bd:	be 01 00 00 00       	mov    esi,0x1
 10090c2:	48 89 c7             	mov    rdi,rax
 10090c5:	e8 36 fe ff ff       	call   1008f00 <insert_val>
 10090ca:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 10090ce:	ba 05 00 00 00       	mov    edx,0x5
 10090d3:	be 01 00 00 00       	mov    esi,0x1
 10090d8:	48 89 c7             	mov    rdi,rax
 10090db:	e8 20 fe ff ff       	call   1008f00 <insert_val>
 10090e0:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 10090e4:	ba 06 00 00 00       	mov    edx,0x6
 10090e9:	be 02 00 00 00       	mov    esi,0x2
 10090ee:	48 89 c7             	mov    rdi,rax
 10090f1:	e8 0a fe ff ff       	call   1008f00 <insert_val>
 10090f6:	c7 45 d8 02 00 00 00 	mov    DWORD PTR [rbp-0x28],0x2
 10090fd:	c7 45 dc 05 00 00 00 	mov    DWORD PTR [rbp-0x24],0x5
 1009104:	c7 45 e0 06 00 00 00 	mov    DWORD PTR [rbp-0x20],0x6
 100910b:	c7 45 e4 04 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x4
 1009112:	c7 45 e8 01 00 00 00 	mov    DWORD PTR [rbp-0x18],0x1
 1009119:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
 1009120:	48 8d 4d d8          	lea    rcx,[rbp-0x28]
 1009124:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 1009128:	ba 06 00 00 00       	mov    edx,0x6
 100912d:	48 89 ce             	mov    rsi,rcx
 1009130:	48 89 c7             	mov    rdi,rax
 1009133:	e8 b0 fc ff ff       	call   1008de8 <assert_list>
 1009138:	c9                   	leave  
 1009139:	c3                   	ret    

000000000100913a <insert_test_end>:
 100913a:	55                   	push   rbp
 100913b:	48 89 e5             	mov    rbp,rsp
 100913e:	48 83 ec 20          	sub    rsp,0x20
 1009142:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 1009146:	48 89 c7             	mov    rdi,rax
 1009149:	e8 53 e7 ff ff       	call   10078a1 <linked_list_init>
 100914e:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 1009152:	ba 00 00 00 00       	mov    edx,0x0
 1009157:	be 00 00 00 00       	mov    esi,0x0
 100915c:	48 89 c7             	mov    rdi,rax
 100915f:	e8 9c fd ff ff       	call   1008f00 <insert_val>
 1009164:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 1009168:	ba 01 00 00 00       	mov    edx,0x1
 100916d:	be 01 00 00 00       	mov    esi,0x1
 1009172:	48 89 c7             	mov    rdi,rax
 1009175:	e8 86 fd ff ff       	call   1008f00 <insert_val>
 100917a:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100917e:	ba 02 00 00 00       	mov    edx,0x2
 1009183:	be 02 00 00 00       	mov    esi,0x2
 1009188:	48 89 c7             	mov    rdi,rax
 100918b:	e8 70 fd ff ff       	call   1008f00 <insert_val>
 1009190:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 1009194:	ba 03 00 00 00       	mov    edx,0x3
 1009199:	be 03 00 00 00       	mov    esi,0x3
 100919e:	48 89 c7             	mov    rdi,rax
 10091a1:	e8 5a fd ff ff       	call   1008f00 <insert_val>
 10091a6:	c7 45 e0 00 00 00 00 	mov    DWORD PTR [rbp-0x20],0x0
 10091ad:	c7 45 e4 01 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x1
 10091b4:	c7 45 e8 02 00 00 00 	mov    DWORD PTR [rbp-0x18],0x2
 10091bb:	c7 45 ec 03 00 00 00 	mov    DWORD PTR [rbp-0x14],0x3
 10091c2:	48 8d 4d e0          	lea    rcx,[rbp-0x20]
 10091c6:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 10091ca:	ba 04 00 00 00       	mov    edx,0x4
 10091cf:	48 89 ce             	mov    rsi,rcx
 10091d2:	48 89 c7             	mov    rdi,rax
 10091d5:	e8 0e fc ff ff       	call   1008de8 <assert_list>
 10091da:	c9                   	leave  
 10091db:	c3                   	ret    

00000000010091dc <insert_test_invalid>:
 10091dc:	55                   	push   rbp
 10091dd:	48 89 e5             	mov    rbp,rsp
 10091e0:	48 83 ec 20          	sub    rsp,0x20
 10091e4:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 10091e8:	48 89 c7             	mov    rdi,rax
 10091eb:	e8 b1 e6 ff ff       	call   10078a1 <linked_list_init>
 10091f0:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 10091f4:	ba 03 00 00 00       	mov    edx,0x3
 10091f9:	be 00 00 00 00       	mov    esi,0x0
 10091fe:	48 89 c7             	mov    rdi,rax
 1009201:	e8 fa fc ff ff       	call   1008f00 <insert_val>
 1009206:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100920a:	ba 02 00 00 00       	mov    edx,0x2
 100920f:	be 00 00 00 00       	mov    esi,0x0
 1009214:	48 89 c7             	mov    rdi,rax
 1009217:	e8 e4 fc ff ff       	call   1008f00 <insert_val>
 100921c:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 1009220:	ba 01 00 00 00       	mov    edx,0x1
 1009225:	be 00 00 00 00       	mov    esi,0x0
 100922a:	48 89 c7             	mov    rdi,rax
 100922d:	e8 ce fc ff ff       	call   1008f00 <insert_val>
 1009232:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 1009236:	ba 00 00 00 00       	mov    edx,0x0
 100923b:	be 00 00 00 00       	mov    esi,0x0
 1009240:	48 89 c7             	mov    rdi,rax
 1009243:	e8 b8 fc ff ff       	call   1008f00 <insert_val>
 1009248:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100924c:	ba 09 00 00 00       	mov    edx,0x9
 1009251:	be 05 00 00 00       	mov    esi,0x5
 1009256:	48 89 c7             	mov    rdi,rax
 1009259:	e8 a2 fc ff ff       	call   1008f00 <insert_val>
 100925e:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 1009262:	ba 09 00 00 00       	mov    edx,0x9
 1009267:	be 06 00 00 00       	mov    esi,0x6
 100926c:	48 89 c7             	mov    rdi,rax
 100926f:	e8 8c fc ff ff       	call   1008f00 <insert_val>
 1009274:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 1009278:	ba 09 00 00 00       	mov    edx,0x9
 100927d:	be e7 03 00 00       	mov    esi,0x3e7
 1009282:	48 89 c7             	mov    rdi,rax
 1009285:	e8 76 fc ff ff       	call   1008f00 <insert_val>
 100928a:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100928e:	ba 08 00 00 00       	mov    edx,0x8
 1009293:	be ff ff ff ff       	mov    esi,0xffffffff
 1009298:	48 89 c7             	mov    rdi,rax
 100929b:	e8 60 fc ff ff       	call   1008f00 <insert_val>
 10092a0:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 10092a4:	ba 08 00 00 00       	mov    edx,0x8
 10092a9:	be fe ff ff ff       	mov    esi,0xfffffffe
 10092ae:	48 89 c7             	mov    rdi,rax
 10092b1:	e8 4a fc ff ff       	call   1008f00 <insert_val>
 10092b6:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 10092ba:	ba 08 00 00 00       	mov    edx,0x8
 10092bf:	be 19 fc ff ff       	mov    esi,0xfffffc19
 10092c4:	48 89 c7             	mov    rdi,rax
 10092c7:	e8 34 fc ff ff       	call   1008f00 <insert_val>
 10092cc:	ba 04 00 00 00       	mov    edx,0x4
 10092d1:	be 01 00 00 00       	mov    esi,0x1
 10092d6:	bf 00 00 00 00       	mov    edi,0x0
 10092db:	e8 20 fc ff ff       	call   1008f00 <insert_val>
 10092e0:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
 10092e4:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 10092e8:	48 89 c6             	mov    rsi,rax
 10092eb:	bf 00 00 00 00       	mov    edi,0x0
 10092f0:	e8 42 e7 ff ff       	call   1007a37 <linked_list_insert_ref>
 10092f5:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
 10092f9:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 10092fd:	ba 00 00 00 00       	mov    edx,0x0
 1009302:	48 89 ce             	mov    rsi,rcx
 1009305:	48 89 c7             	mov    rdi,rax
 1009308:	e8 2a e7 ff ff       	call   1007a37 <linked_list_insert_ref>
 100930d:	c7 45 e0 00 00 00 00 	mov    DWORD PTR [rbp-0x20],0x0
 1009314:	c7 45 e4 01 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x1
 100931b:	c7 45 e8 02 00 00 00 	mov    DWORD PTR [rbp-0x18],0x2
 1009322:	c7 45 ec 03 00 00 00 	mov    DWORD PTR [rbp-0x14],0x3
 1009329:	48 8d 4d e0          	lea    rcx,[rbp-0x20]
 100932d:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 1009331:	ba 04 00 00 00       	mov    edx,0x4
 1009336:	48 89 ce             	mov    rsi,rcx
 1009339:	48 89 c7             	mov    rdi,rax
 100933c:	e8 a7 fa ff ff       	call   1008de8 <assert_list>
 1009341:	c9                   	leave  
 1009342:	c3                   	ret    

0000000001009343 <remove_test_beginning>:
 1009343:	55                   	push   rbp
 1009344:	48 89 e5             	mov    rbp,rsp
 1009347:	48 83 ec 20          	sub    rsp,0x20
 100934b:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100934f:	48 89 c7             	mov    rdi,rax
 1009352:	e8 4a e5 ff ff       	call   10078a1 <linked_list_init>
 1009357:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100935b:	ba 00 00 00 00       	mov    edx,0x0
 1009360:	be 00 00 00 00       	mov    esi,0x0
 1009365:	48 89 c7             	mov    rdi,rax
 1009368:	e8 93 fb ff ff       	call   1008f00 <insert_val>
 100936d:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 1009371:	ba 01 00 00 00       	mov    edx,0x1
 1009376:	be 00 00 00 00       	mov    esi,0x0
 100937b:	48 89 c7             	mov    rdi,rax
 100937e:	e8 7d fb ff ff       	call   1008f00 <insert_val>
 1009383:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 1009387:	ba 02 00 00 00       	mov    edx,0x2
 100938c:	be 00 00 00 00       	mov    esi,0x0
 1009391:	48 89 c7             	mov    rdi,rax
 1009394:	e8 67 fb ff ff       	call   1008f00 <insert_val>
 1009399:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100939d:	ba 03 00 00 00       	mov    edx,0x3
 10093a2:	be 00 00 00 00       	mov    esi,0x0
 10093a7:	48 89 c7             	mov    rdi,rax
 10093aa:	e8 51 fb ff ff       	call   1008f00 <insert_val>
 10093af:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 10093b3:	be 00 00 00 00       	mov    esi,0x0
 10093b8:	48 89 c7             	mov    rdi,rax
 10093bb:	e8 ac e7 ff ff       	call   1007b6c <linked_list_remove_idx>
 10093c0:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 10093c4:	be 00 00 00 00       	mov    esi,0x0
 10093c9:	48 89 c7             	mov    rdi,rax
 10093cc:	e8 9b e7 ff ff       	call   1007b6c <linked_list_remove_idx>
 10093d1:	c7 45 e8 01 00 00 00 	mov    DWORD PTR [rbp-0x18],0x1
 10093d8:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
 10093df:	48 8d 4d e8          	lea    rcx,[rbp-0x18]
 10093e3:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 10093e7:	ba 02 00 00 00       	mov    edx,0x2
 10093ec:	48 89 ce             	mov    rsi,rcx
 10093ef:	48 89 c7             	mov    rdi,rax
 10093f2:	e8 f1 f9 ff ff       	call   1008de8 <assert_list>
 10093f7:	c9                   	leave  
 10093f8:	c3                   	ret    

00000000010093f9 <remove_test_middle>:
 10093f9:	55                   	push   rbp
 10093fa:	48 89 e5             	mov    rbp,rsp
 10093fd:	48 83 ec 20          	sub    rsp,0x20
 1009401:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 1009405:	48 89 c7             	mov    rdi,rax
 1009408:	e8 94 e4 ff ff       	call   10078a1 <linked_list_init>
 100940d:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 1009411:	ba 00 00 00 00       	mov    edx,0x0
 1009416:	be 00 00 00 00       	mov    esi,0x0
 100941b:	48 89 c7             	mov    rdi,rax
 100941e:	e8 dd fa ff ff       	call   1008f00 <insert_val>
 1009423:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 1009427:	ba 01 00 00 00       	mov    edx,0x1
 100942c:	be 00 00 00 00       	mov    esi,0x0
 1009431:	48 89 c7             	mov    rdi,rax
 1009434:	e8 c7 fa ff ff       	call   1008f00 <insert_val>
 1009439:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100943d:	ba 02 00 00 00       	mov    edx,0x2
 1009442:	be 00 00 00 00       	mov    esi,0x0
 1009447:	48 89 c7             	mov    rdi,rax
 100944a:	e8 b1 fa ff ff       	call   1008f00 <insert_val>
 100944f:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 1009453:	ba 03 00 00 00       	mov    edx,0x3
 1009458:	be 00 00 00 00       	mov    esi,0x0
 100945d:	48 89 c7             	mov    rdi,rax
 1009460:	e8 9b fa ff ff       	call   1008f00 <insert_val>
 1009465:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 1009469:	ba 04 00 00 00       	mov    edx,0x4
 100946e:	be 00 00 00 00       	mov    esi,0x0
 1009473:	48 89 c7             	mov    rdi,rax
 1009476:	e8 85 fa ff ff       	call   1008f00 <insert_val>
 100947b:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100947f:	ba 05 00 00 00       	mov    edx,0x5
 1009484:	be 00 00 00 00       	mov    esi,0x0
 1009489:	48 89 c7             	mov    rdi,rax
 100948c:	e8 6f fa ff ff       	call   1008f00 <insert_val>
 1009491:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 1009495:	be 01 00 00 00       	mov    esi,0x1
 100949a:	48 89 c7             	mov    rdi,rax
 100949d:	e8 ca e6 ff ff       	call   1007b6c <linked_list_remove_idx>
 10094a2:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 10094a6:	be 02 00 00 00       	mov    esi,0x2
 10094ab:	48 89 c7             	mov    rdi,rax
 10094ae:	e8 b9 e6 ff ff       	call   1007b6c <linked_list_remove_idx>
 10094b3:	c7 45 e0 05 00 00 00 	mov    DWORD PTR [rbp-0x20],0x5
 10094ba:	c7 45 e4 03 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x3
 10094c1:	c7 45 e8 01 00 00 00 	mov    DWORD PTR [rbp-0x18],0x1
 10094c8:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
 10094cf:	48 8d 4d e0          	lea    rcx,[rbp-0x20]
 10094d3:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 10094d7:	ba 04 00 00 00       	mov    edx,0x4
 10094dc:	48 89 ce             	mov    rsi,rcx
 10094df:	48 89 c7             	mov    rdi,rax
 10094e2:	e8 01 f9 ff ff       	call   1008de8 <assert_list>
 10094e7:	c9                   	leave  
 10094e8:	c3                   	ret    

00000000010094e9 <remove_test_end>:
 10094e9:	55                   	push   rbp
 10094ea:	48 89 e5             	mov    rbp,rsp
 10094ed:	48 83 ec 20          	sub    rsp,0x20
 10094f1:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 10094f5:	48 89 c7             	mov    rdi,rax
 10094f8:	e8 a4 e3 ff ff       	call   10078a1 <linked_list_init>
 10094fd:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 1009501:	ba 00 00 00 00       	mov    edx,0x0
 1009506:	be 00 00 00 00       	mov    esi,0x0
 100950b:	48 89 c7             	mov    rdi,rax
 100950e:	e8 ed f9 ff ff       	call   1008f00 <insert_val>
 1009513:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 1009517:	ba 01 00 00 00       	mov    edx,0x1
 100951c:	be 01 00 00 00       	mov    esi,0x1
 1009521:	48 89 c7             	mov    rdi,rax
 1009524:	e8 d7 f9 ff ff       	call   1008f00 <insert_val>
 1009529:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100952d:	ba 02 00 00 00       	mov    edx,0x2
 1009532:	be 02 00 00 00       	mov    esi,0x2
 1009537:	48 89 c7             	mov    rdi,rax
 100953a:	e8 c1 f9 ff ff       	call   1008f00 <insert_val>
 100953f:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 1009543:	ba 03 00 00 00       	mov    edx,0x3
 1009548:	be 03 00 00 00       	mov    esi,0x3
 100954d:	48 89 c7             	mov    rdi,rax
 1009550:	e8 ab f9 ff ff       	call   1008f00 <insert_val>
 1009555:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 1009559:	be 03 00 00 00       	mov    esi,0x3
 100955e:	48 89 c7             	mov    rdi,rax
 1009561:	e8 06 e6 ff ff       	call   1007b6c <linked_list_remove_idx>
 1009566:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100956a:	be 02 00 00 00       	mov    esi,0x2
 100956f:	48 89 c7             	mov    rdi,rax
 1009572:	e8 f5 e5 ff ff       	call   1007b6c <linked_list_remove_idx>
 1009577:	c7 45 e8 00 00 00 00 	mov    DWORD PTR [rbp-0x18],0x0
 100957e:	c7 45 ec 01 00 00 00 	mov    DWORD PTR [rbp-0x14],0x1
 1009585:	48 8d 4d e8          	lea    rcx,[rbp-0x18]
 1009589:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100958d:	ba 02 00 00 00       	mov    edx,0x2
 1009592:	48 89 ce             	mov    rsi,rcx
 1009595:	48 89 c7             	mov    rdi,rax
 1009598:	e8 4b f8 ff ff       	call   1008de8 <assert_list>
 100959d:	c9                   	leave  
 100959e:	c3                   	ret    

000000000100959f <remove_test_all>:
 100959f:	55                   	push   rbp
 10095a0:	48 89 e5             	mov    rbp,rsp
 10095a3:	48 83 ec 20          	sub    rsp,0x20
 10095a7:	c6 45 ff 01          	mov    BYTE PTR [rbp-0x1],0x1
 10095ab:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 10095af:	48 89 c7             	mov    rdi,rax
 10095b2:	e8 ea e2 ff ff       	call   10078a1 <linked_list_init>
 10095b7:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 10095bb:	ba 00 00 00 00       	mov    edx,0x0
 10095c0:	be 00 00 00 00       	mov    esi,0x0
 10095c5:	48 89 c7             	mov    rdi,rax
 10095c8:	e8 33 f9 ff ff       	call   1008f00 <insert_val>
 10095cd:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 10095d1:	ba 01 00 00 00       	mov    edx,0x1
 10095d6:	be 01 00 00 00       	mov    esi,0x1
 10095db:	48 89 c7             	mov    rdi,rax
 10095de:	e8 1d f9 ff ff       	call   1008f00 <insert_val>
 10095e3:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 10095e7:	ba 02 00 00 00       	mov    edx,0x2
 10095ec:	be 02 00 00 00       	mov    esi,0x2
 10095f1:	48 89 c7             	mov    rdi,rax
 10095f4:	e8 07 f9 ff ff       	call   1008f00 <insert_val>
 10095f9:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 10095fd:	ba 03 00 00 00       	mov    edx,0x3
 1009602:	be 03 00 00 00       	mov    esi,0x3
 1009607:	48 89 c7             	mov    rdi,rax
 100960a:	e8 f1 f8 ff ff       	call   1008f00 <insert_val>
 100960f:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 1009613:	be 00 00 00 00       	mov    esi,0x0
 1009618:	48 89 c7             	mov    rdi,rax
 100961b:	e8 4c e5 ff ff       	call   1007b6c <linked_list_remove_idx>
 1009620:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 1009624:	be 00 00 00 00       	mov    esi,0x0
 1009629:	48 89 c7             	mov    rdi,rax
 100962c:	e8 3b e5 ff ff       	call   1007b6c <linked_list_remove_idx>
 1009631:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 1009635:	be 00 00 00 00       	mov    esi,0x0
 100963a:	48 89 c7             	mov    rdi,rax
 100963d:	e8 2a e5 ff ff       	call   1007b6c <linked_list_remove_idx>
 1009642:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 1009646:	be 00 00 00 00       	mov    esi,0x0
 100964b:	48 89 c7             	mov    rdi,rax
 100964e:	e8 19 e5 ff ff       	call   1007b6c <linked_list_remove_idx>
 1009653:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 1009657:	74 21                	je     100967a <remove_test_all+0xdb>
 1009659:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100965d:	ba 00 00 00 00       	mov    edx,0x0
 1009662:	be 00 00 00 00       	mov    esi,0x0
 1009667:	48 89 c7             	mov    rdi,rax
 100966a:	e8 79 f7 ff ff       	call   1008de8 <assert_list>
 100966f:	84 c0                	test   al,al
 1009671:	74 07                	je     100967a <remove_test_all+0xdb>
 1009673:	b8 01 00 00 00       	mov    eax,0x1
 1009678:	eb 05                	jmp    100967f <remove_test_all+0xe0>
 100967a:	b8 00 00 00 00       	mov    eax,0x0
 100967f:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 1009682:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 1009686:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100968a:	ba 00 00 00 00       	mov    edx,0x0
 100968f:	be 00 00 00 00       	mov    esi,0x0
 1009694:	48 89 c7             	mov    rdi,rax
 1009697:	e8 64 f8 ff ff       	call   1008f00 <insert_val>
 100969c:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 10096a0:	ba 01 00 00 00       	mov    edx,0x1
 10096a5:	be 01 00 00 00       	mov    esi,0x1
 10096aa:	48 89 c7             	mov    rdi,rax
 10096ad:	e8 4e f8 ff ff       	call   1008f00 <insert_val>
 10096b2:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 10096b6:	ba 02 00 00 00       	mov    edx,0x2
 10096bb:	be 02 00 00 00       	mov    esi,0x2
 10096c0:	48 89 c7             	mov    rdi,rax
 10096c3:	e8 38 f8 ff ff       	call   1008f00 <insert_val>
 10096c8:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 10096cc:	ba 03 00 00 00       	mov    edx,0x3
 10096d1:	be 03 00 00 00       	mov    esi,0x3
 10096d6:	48 89 c7             	mov    rdi,rax
 10096d9:	e8 22 f8 ff ff       	call   1008f00 <insert_val>
 10096de:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 10096e2:	be 03 00 00 00       	mov    esi,0x3
 10096e7:	48 89 c7             	mov    rdi,rax
 10096ea:	e8 7d e4 ff ff       	call   1007b6c <linked_list_remove_idx>
 10096ef:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 10096f3:	be 02 00 00 00       	mov    esi,0x2
 10096f8:	48 89 c7             	mov    rdi,rax
 10096fb:	e8 6c e4 ff ff       	call   1007b6c <linked_list_remove_idx>
 1009700:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 1009704:	be 01 00 00 00       	mov    esi,0x1
 1009709:	48 89 c7             	mov    rdi,rax
 100970c:	e8 5b e4 ff ff       	call   1007b6c <linked_list_remove_idx>
 1009711:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 1009715:	be 00 00 00 00       	mov    esi,0x0
 100971a:	48 89 c7             	mov    rdi,rax
 100971d:	e8 4a e4 ff ff       	call   1007b6c <linked_list_remove_idx>
 1009722:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 1009726:	74 21                	je     1009749 <remove_test_all+0x1aa>
 1009728:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100972c:	ba 00 00 00 00       	mov    edx,0x0
 1009731:	be 00 00 00 00       	mov    esi,0x0
 1009736:	48 89 c7             	mov    rdi,rax
 1009739:	e8 aa f6 ff ff       	call   1008de8 <assert_list>
 100973e:	84 c0                	test   al,al
 1009740:	74 07                	je     1009749 <remove_test_all+0x1aa>
 1009742:	b8 01 00 00 00       	mov    eax,0x1
 1009747:	eb 05                	jmp    100974e <remove_test_all+0x1af>
 1009749:	b8 00 00 00 00       	mov    eax,0x0
 100974e:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 1009751:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 1009755:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 1009759:	ba 00 00 00 00       	mov    edx,0x0
 100975e:	be 00 00 00 00       	mov    esi,0x0
 1009763:	48 89 c7             	mov    rdi,rax
 1009766:	e8 95 f7 ff ff       	call   1008f00 <insert_val>
 100976b:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100976f:	ba 01 00 00 00       	mov    edx,0x1
 1009774:	be 01 00 00 00       	mov    esi,0x1
 1009779:	48 89 c7             	mov    rdi,rax
 100977c:	e8 7f f7 ff ff       	call   1008f00 <insert_val>
 1009781:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 1009785:	ba 02 00 00 00       	mov    edx,0x2
 100978a:	be 02 00 00 00       	mov    esi,0x2
 100978f:	48 89 c7             	mov    rdi,rax
 1009792:	e8 69 f7 ff ff       	call   1008f00 <insert_val>
 1009797:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100979b:	ba 03 00 00 00       	mov    edx,0x3
 10097a0:	be 03 00 00 00       	mov    esi,0x3
 10097a5:	48 89 c7             	mov    rdi,rax
 10097a8:	e8 53 f7 ff ff       	call   1008f00 <insert_val>
 10097ad:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 10097b1:	be 01 00 00 00       	mov    esi,0x1
 10097b6:	48 89 c7             	mov    rdi,rax
 10097b9:	e8 ae e3 ff ff       	call   1007b6c <linked_list_remove_idx>
 10097be:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 10097c2:	be 01 00 00 00       	mov    esi,0x1
 10097c7:	48 89 c7             	mov    rdi,rax
 10097ca:	e8 9d e3 ff ff       	call   1007b6c <linked_list_remove_idx>
 10097cf:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 10097d3:	be 01 00 00 00       	mov    esi,0x1
 10097d8:	48 89 c7             	mov    rdi,rax
 10097db:	e8 8c e3 ff ff       	call   1007b6c <linked_list_remove_idx>
 10097e0:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 10097e4:	be 00 00 00 00       	mov    esi,0x0
 10097e9:	48 89 c7             	mov    rdi,rax
 10097ec:	e8 7b e3 ff ff       	call   1007b6c <linked_list_remove_idx>
 10097f1:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 10097f5:	74 21                	je     1009818 <remove_test_all+0x279>
 10097f7:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 10097fb:	ba 00 00 00 00       	mov    edx,0x0
 1009800:	be 00 00 00 00       	mov    esi,0x0
 1009805:	48 89 c7             	mov    rdi,rax
 1009808:	e8 db f5 ff ff       	call   1008de8 <assert_list>
 100980d:	84 c0                	test   al,al
 100980f:	74 07                	je     1009818 <remove_test_all+0x279>
 1009811:	b8 01 00 00 00       	mov    eax,0x1
 1009816:	eb 05                	jmp    100981d <remove_test_all+0x27e>
 1009818:	b8 00 00 00 00       	mov    eax,0x0
 100981d:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 1009820:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 1009824:	0f b6 45 ff          	movzx  eax,BYTE PTR [rbp-0x1]
 1009828:	c9                   	leave  
 1009829:	c3                   	ret    

000000000100982a <remove_test_invalid>:
 100982a:	55                   	push   rbp
 100982b:	48 89 e5             	mov    rbp,rsp
 100982e:	48 83 ec 20          	sub    rsp,0x20
 1009832:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 1009836:	48 89 c7             	mov    rdi,rax
 1009839:	e8 63 e0 ff ff       	call   10078a1 <linked_list_init>
 100983e:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 1009842:	ba 03 00 00 00       	mov    edx,0x3
 1009847:	be 00 00 00 00       	mov    esi,0x0
 100984c:	48 89 c7             	mov    rdi,rax
 100984f:	e8 ac f6 ff ff       	call   1008f00 <insert_val>
 1009854:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 1009858:	ba 02 00 00 00       	mov    edx,0x2
 100985d:	be 00 00 00 00       	mov    esi,0x0
 1009862:	48 89 c7             	mov    rdi,rax
 1009865:	e8 96 f6 ff ff       	call   1008f00 <insert_val>
 100986a:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100986e:	ba 01 00 00 00       	mov    edx,0x1
 1009873:	be 00 00 00 00       	mov    esi,0x0
 1009878:	48 89 c7             	mov    rdi,rax
 100987b:	e8 80 f6 ff ff       	call   1008f00 <insert_val>
 1009880:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 1009884:	ba 00 00 00 00       	mov    edx,0x0
 1009889:	be 00 00 00 00       	mov    esi,0x0
 100988e:	48 89 c7             	mov    rdi,rax
 1009891:	e8 6a f6 ff ff       	call   1008f00 <insert_val>
 1009896:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100989a:	be 05 00 00 00       	mov    esi,0x5
 100989f:	48 89 c7             	mov    rdi,rax
 10098a2:	e8 c5 e2 ff ff       	call   1007b6c <linked_list_remove_idx>
 10098a7:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 10098ab:	be 06 00 00 00       	mov    esi,0x6
 10098b0:	48 89 c7             	mov    rdi,rax
 10098b3:	e8 b4 e2 ff ff       	call   1007b6c <linked_list_remove_idx>
 10098b8:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 10098bc:	be e7 03 00 00       	mov    esi,0x3e7
 10098c1:	48 89 c7             	mov    rdi,rax
 10098c4:	e8 a3 e2 ff ff       	call   1007b6c <linked_list_remove_idx>
 10098c9:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 10098cd:	be ff ff ff ff       	mov    esi,0xffffffff
 10098d2:	48 89 c7             	mov    rdi,rax
 10098d5:	e8 92 e2 ff ff       	call   1007b6c <linked_list_remove_idx>
 10098da:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 10098de:	be fe ff ff ff       	mov    esi,0xfffffffe
 10098e3:	48 89 c7             	mov    rdi,rax
 10098e6:	e8 81 e2 ff ff       	call   1007b6c <linked_list_remove_idx>
 10098eb:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 10098ef:	be 19 fc ff ff       	mov    esi,0xfffffc19
 10098f4:	48 89 c7             	mov    rdi,rax
 10098f7:	e8 70 e2 ff ff       	call   1007b6c <linked_list_remove_idx>
 10098fc:	be 01 00 00 00       	mov    esi,0x1
 1009901:	bf 00 00 00 00       	mov    edi,0x0
 1009906:	e8 61 e2 ff ff       	call   1007b6c <linked_list_remove_idx>
 100990b:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 100990f:	48 89 c6             	mov    rsi,rax
 1009912:	bf 00 00 00 00       	mov    edi,0x0
 1009917:	e8 ab e2 ff ff       	call   1007bc7 <linked_list_remove_ref>
 100991c:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 1009920:	be 00 00 00 00       	mov    esi,0x0
 1009925:	48 89 c7             	mov    rdi,rax
 1009928:	e8 9a e2 ff ff       	call   1007bc7 <linked_list_remove_ref>
 100992d:	c7 45 e0 00 00 00 00 	mov    DWORD PTR [rbp-0x20],0x0
 1009934:	c7 45 e4 01 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x1
 100993b:	c7 45 e8 02 00 00 00 	mov    DWORD PTR [rbp-0x18],0x2
 1009942:	c7 45 ec 03 00 00 00 	mov    DWORD PTR [rbp-0x14],0x3
 1009949:	48 8d 4d e0          	lea    rcx,[rbp-0x20]
 100994d:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 1009951:	ba 04 00 00 00       	mov    edx,0x4
 1009956:	48 89 ce             	mov    rsi,rcx
 1009959:	48 89 c7             	mov    rdi,rax
 100995c:	e8 87 f4 ff ff       	call   1008de8 <assert_list>
 1009961:	c9                   	leave  
 1009962:	c3                   	ret    

0000000001009963 <size_test>:
 1009963:	55                   	push   rbp
 1009964:	48 89 e5             	mov    rbp,rsp
 1009967:	48 83 ec 40          	sub    rsp,0x40
 100996b:	c6 45 ff 01          	mov    BYTE PTR [rbp-0x1],0x1
 100996f:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 1009973:	48 89 c7             	mov    rdi,rax
 1009976:	e8 26 df ff ff       	call   10078a1 <linked_list_init>
 100997b:	48 8d 45 d8          	lea    rax,[rbp-0x28]
 100997f:	48 89 c7             	mov    rdi,rax
 1009982:	e8 1a df ff ff       	call   10078a1 <linked_list_init>
 1009987:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100998b:	ba 00 00 00 00       	mov    edx,0x0
 1009990:	be 00 00 00 00       	mov    esi,0x0
 1009995:	48 89 c7             	mov    rdi,rax
 1009998:	e8 63 f5 ff ff       	call   1008f00 <insert_val>
 100999d:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 10099a1:	ba 01 00 00 00       	mov    edx,0x1
 10099a6:	be 01 00 00 00       	mov    esi,0x1
 10099ab:	48 89 c7             	mov    rdi,rax
 10099ae:	e8 4d f5 ff ff       	call   1008f00 <insert_val>
 10099b3:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 10099b7:	ba 02 00 00 00       	mov    edx,0x2
 10099bc:	be 02 00 00 00       	mov    esi,0x2
 10099c1:	48 89 c7             	mov    rdi,rax
 10099c4:	e8 37 f5 ff ff       	call   1008f00 <insert_val>
 10099c9:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 10099cd:	ba 03 00 00 00       	mov    edx,0x3
 10099d2:	be 03 00 00 00       	mov    esi,0x3
 10099d7:	48 89 c7             	mov    rdi,rax
 10099da:	e8 21 f5 ff ff       	call   1008f00 <insert_val>
 10099df:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 10099e3:	74 37                	je     1009a1c <size_test+0xb9>
 10099e5:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 10099e9:	48 89 c7             	mov    rdi,rax
 10099ec:	e8 de de ff ff       	call   10078cf <linked_list_size>
 10099f1:	83 f8 04             	cmp    eax,0x4
 10099f4:	75 26                	jne    1009a1c <size_test+0xb9>
 10099f6:	48 8d 45 d8          	lea    rax,[rbp-0x28]
 10099fa:	48 89 c7             	mov    rdi,rax
 10099fd:	e8 cd de ff ff       	call   10078cf <linked_list_size>
 1009a02:	85 c0                	test   eax,eax
 1009a04:	75 16                	jne    1009a1c <size_test+0xb9>
 1009a06:	bf 00 00 00 00       	mov    edi,0x0
 1009a0b:	e8 bf de ff ff       	call   10078cf <linked_list_size>
 1009a10:	83 f8 ff             	cmp    eax,0xffffffff
 1009a13:	75 07                	jne    1009a1c <size_test+0xb9>
 1009a15:	b8 01 00 00 00       	mov    eax,0x1
 1009a1a:	eb 05                	jmp    1009a21 <size_test+0xbe>
 1009a1c:	b8 00 00 00 00       	mov    eax,0x0
 1009a21:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 1009a24:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 1009a28:	c7 45 c8 00 00 00 00 	mov    DWORD PTR [rbp-0x38],0x0
 1009a2f:	c7 45 cc 01 00 00 00 	mov    DWORD PTR [rbp-0x34],0x1
 1009a36:	c7 45 d0 02 00 00 00 	mov    DWORD PTR [rbp-0x30],0x2
 1009a3d:	c7 45 d4 03 00 00 00 	mov    DWORD PTR [rbp-0x2c],0x3
 1009a44:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 1009a48:	74 23                	je     1009a6d <size_test+0x10a>
 1009a4a:	48 8d 4d c8          	lea    rcx,[rbp-0x38]
 1009a4e:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 1009a52:	ba 04 00 00 00       	mov    edx,0x4
 1009a57:	48 89 ce             	mov    rsi,rcx
 1009a5a:	48 89 c7             	mov    rdi,rax
 1009a5d:	e8 86 f3 ff ff       	call   1008de8 <assert_list>
 1009a62:	84 c0                	test   al,al
 1009a64:	74 07                	je     1009a6d <size_test+0x10a>
 1009a66:	b8 01 00 00 00       	mov    eax,0x1
 1009a6b:	eb 05                	jmp    1009a72 <size_test+0x10f>
 1009a6d:	b8 00 00 00 00       	mov    eax,0x0
 1009a72:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 1009a75:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 1009a79:	0f b6 45 ff          	movzx  eax,BYTE PTR [rbp-0x1]
 1009a7d:	c9                   	leave  
 1009a7e:	c3                   	ret    

0000000001009a7f <push_pop_front_test>:
 1009a7f:	55                   	push   rbp
 1009a80:	48 89 e5             	mov    rbp,rsp
 1009a83:	48 83 ec 40          	sub    rsp,0x40
 1009a87:	c6 45 ff 01          	mov    BYTE PTR [rbp-0x1],0x1
 1009a8b:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 1009a8f:	48 89 c7             	mov    rdi,rax
 1009a92:	e8 0a de ff ff       	call   10078a1 <linked_list_init>
 1009a97:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 1009a9b:	be 01 00 00 00       	mov    esi,0x1
 1009aa0:	48 89 c7             	mov    rdi,rax
 1009aa3:	e8 d7 f4 ff ff       	call   1008f7f <push_front_val>
 1009aa8:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 1009aac:	be 02 00 00 00       	mov    esi,0x2
 1009ab1:	48 89 c7             	mov    rdi,rax
 1009ab4:	e8 c6 f4 ff ff       	call   1008f7f <push_front_val>
 1009ab9:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 1009abd:	be 03 00 00 00       	mov    esi,0x3
 1009ac2:	48 89 c7             	mov    rdi,rax
 1009ac5:	e8 b5 f4 ff ff       	call   1008f7f <push_front_val>
 1009aca:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 1009ace:	be 04 00 00 00       	mov    esi,0x4
 1009ad3:	48 89 c7             	mov    rdi,rax
 1009ad6:	e8 a4 f4 ff ff       	call   1008f7f <push_front_val>
 1009adb:	c7 45 d8 04 00 00 00 	mov    DWORD PTR [rbp-0x28],0x4
 1009ae2:	c7 45 dc 03 00 00 00 	mov    DWORD PTR [rbp-0x24],0x3
 1009ae9:	c7 45 e0 02 00 00 00 	mov    DWORD PTR [rbp-0x20],0x2
 1009af0:	c7 45 e4 01 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x1
 1009af7:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 1009afb:	74 23                	je     1009b20 <push_pop_front_test+0xa1>
 1009afd:	48 8d 4d d8          	lea    rcx,[rbp-0x28]
 1009b01:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 1009b05:	ba 04 00 00 00       	mov    edx,0x4
 1009b0a:	48 89 ce             	mov    rsi,rcx
 1009b0d:	48 89 c7             	mov    rdi,rax
 1009b10:	e8 d3 f2 ff ff       	call   1008de8 <assert_list>
 1009b15:	84 c0                	test   al,al
 1009b17:	74 07                	je     1009b20 <push_pop_front_test+0xa1>
 1009b19:	b8 01 00 00 00       	mov    eax,0x1
 1009b1e:	eb 05                	jmp    1009b25 <push_pop_front_test+0xa6>
 1009b20:	b8 00 00 00 00       	mov    eax,0x0
 1009b25:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 1009b28:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 1009b2c:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 1009b30:	48 89 c7             	mov    rdi,rax
 1009b33:	e8 9a de ff ff       	call   10079d2 <linked_list_pop_front>
 1009b38:	c7 45 cc 03 00 00 00 	mov    DWORD PTR [rbp-0x34],0x3
 1009b3f:	c7 45 d0 02 00 00 00 	mov    DWORD PTR [rbp-0x30],0x2
 1009b46:	c7 45 d4 01 00 00 00 	mov    DWORD PTR [rbp-0x2c],0x1
 1009b4d:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 1009b51:	74 23                	je     1009b76 <push_pop_front_test+0xf7>
 1009b53:	48 8d 4d cc          	lea    rcx,[rbp-0x34]
 1009b57:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 1009b5b:	ba 03 00 00 00       	mov    edx,0x3
 1009b60:	48 89 ce             	mov    rsi,rcx
 1009b63:	48 89 c7             	mov    rdi,rax
 1009b66:	e8 7d f2 ff ff       	call   1008de8 <assert_list>
 1009b6b:	84 c0                	test   al,al
 1009b6d:	74 07                	je     1009b76 <push_pop_front_test+0xf7>
 1009b6f:	b8 01 00 00 00       	mov    eax,0x1
 1009b74:	eb 05                	jmp    1009b7b <push_pop_front_test+0xfc>
 1009b76:	b8 00 00 00 00       	mov    eax,0x0
 1009b7b:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 1009b7e:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 1009b82:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 1009b86:	48 89 c7             	mov    rdi,rax
 1009b89:	e8 44 de ff ff       	call   10079d2 <linked_list_pop_front>
 1009b8e:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 1009b92:	48 89 c7             	mov    rdi,rax
 1009b95:	e8 38 de ff ff       	call   10079d2 <linked_list_pop_front>
 1009b9a:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 1009b9e:	48 89 c7             	mov    rdi,rax
 1009ba1:	e8 2c de ff ff       	call   10079d2 <linked_list_pop_front>
 1009ba6:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 1009baa:	74 21                	je     1009bcd <push_pop_front_test+0x14e>
 1009bac:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 1009bb0:	ba 00 00 00 00       	mov    edx,0x0
 1009bb5:	be 00 00 00 00       	mov    esi,0x0
 1009bba:	48 89 c7             	mov    rdi,rax
 1009bbd:	e8 26 f2 ff ff       	call   1008de8 <assert_list>
 1009bc2:	84 c0                	test   al,al
 1009bc4:	74 07                	je     1009bcd <push_pop_front_test+0x14e>
 1009bc6:	b8 01 00 00 00       	mov    eax,0x1
 1009bcb:	eb 05                	jmp    1009bd2 <push_pop_front_test+0x153>
 1009bcd:	b8 00 00 00 00       	mov    eax,0x0
 1009bd2:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 1009bd5:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 1009bd9:	0f b6 45 ff          	movzx  eax,BYTE PTR [rbp-0x1]
 1009bdd:	c9                   	leave  
 1009bde:	c3                   	ret    

0000000001009bdf <push_pop_back_test>:
 1009bdf:	55                   	push   rbp
 1009be0:	48 89 e5             	mov    rbp,rsp
 1009be3:	48 83 ec 40          	sub    rsp,0x40
 1009be7:	c6 45 ff 01          	mov    BYTE PTR [rbp-0x1],0x1
 1009beb:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 1009bef:	48 89 c7             	mov    rdi,rax
 1009bf2:	e8 aa dc ff ff       	call   10078a1 <linked_list_init>
 1009bf7:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 1009bfb:	be 01 00 00 00       	mov    esi,0x1
 1009c00:	48 89 c7             	mov    rdi,rax
 1009c03:	e8 3a f3 ff ff       	call   1008f42 <push_back_val>
 1009c08:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 1009c0c:	be 02 00 00 00       	mov    esi,0x2
 1009c11:	48 89 c7             	mov    rdi,rax
 1009c14:	e8 29 f3 ff ff       	call   1008f42 <push_back_val>
 1009c19:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 1009c1d:	be 03 00 00 00       	mov    esi,0x3
 1009c22:	48 89 c7             	mov    rdi,rax
 1009c25:	e8 18 f3 ff ff       	call   1008f42 <push_back_val>
 1009c2a:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 1009c2e:	be 04 00 00 00       	mov    esi,0x4
 1009c33:	48 89 c7             	mov    rdi,rax
 1009c36:	e8 07 f3 ff ff       	call   1008f42 <push_back_val>
 1009c3b:	c7 45 d8 01 00 00 00 	mov    DWORD PTR [rbp-0x28],0x1
 1009c42:	c7 45 dc 02 00 00 00 	mov    DWORD PTR [rbp-0x24],0x2
 1009c49:	c7 45 e0 03 00 00 00 	mov    DWORD PTR [rbp-0x20],0x3
 1009c50:	c7 45 e4 04 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x4
 1009c57:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 1009c5b:	74 23                	je     1009c80 <push_pop_back_test+0xa1>
 1009c5d:	48 8d 4d d8          	lea    rcx,[rbp-0x28]
 1009c61:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 1009c65:	ba 04 00 00 00       	mov    edx,0x4
 1009c6a:	48 89 ce             	mov    rsi,rcx
 1009c6d:	48 89 c7             	mov    rdi,rax
 1009c70:	e8 73 f1 ff ff       	call   1008de8 <assert_list>
 1009c75:	84 c0                	test   al,al
 1009c77:	74 07                	je     1009c80 <push_pop_back_test+0xa1>
 1009c79:	b8 01 00 00 00       	mov    eax,0x1
 1009c7e:	eb 05                	jmp    1009c85 <push_pop_back_test+0xa6>
 1009c80:	b8 00 00 00 00       	mov    eax,0x0
 1009c85:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 1009c88:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 1009c8c:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 1009c90:	48 89 c7             	mov    rdi,rax
 1009c93:	e8 6c dd ff ff       	call   1007a04 <linked_list_pop_back>
 1009c98:	c7 45 cc 01 00 00 00 	mov    DWORD PTR [rbp-0x34],0x1
 1009c9f:	c7 45 d0 02 00 00 00 	mov    DWORD PTR [rbp-0x30],0x2
 1009ca6:	c7 45 d4 03 00 00 00 	mov    DWORD PTR [rbp-0x2c],0x3
 1009cad:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 1009cb1:	74 23                	je     1009cd6 <push_pop_back_test+0xf7>
 1009cb3:	48 8d 4d cc          	lea    rcx,[rbp-0x34]
 1009cb7:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 1009cbb:	ba 03 00 00 00       	mov    edx,0x3
 1009cc0:	48 89 ce             	mov    rsi,rcx
 1009cc3:	48 89 c7             	mov    rdi,rax
 1009cc6:	e8 1d f1 ff ff       	call   1008de8 <assert_list>
 1009ccb:	84 c0                	test   al,al
 1009ccd:	74 07                	je     1009cd6 <push_pop_back_test+0xf7>
 1009ccf:	b8 01 00 00 00       	mov    eax,0x1
 1009cd4:	eb 05                	jmp    1009cdb <push_pop_back_test+0xfc>
 1009cd6:	b8 00 00 00 00       	mov    eax,0x0
 1009cdb:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 1009cde:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 1009ce2:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 1009ce6:	48 89 c7             	mov    rdi,rax
 1009ce9:	e8 16 dd ff ff       	call   1007a04 <linked_list_pop_back>
 1009cee:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 1009cf2:	48 89 c7             	mov    rdi,rax
 1009cf5:	e8 0a dd ff ff       	call   1007a04 <linked_list_pop_back>
 1009cfa:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 1009cfe:	48 89 c7             	mov    rdi,rax
 1009d01:	e8 fe dc ff ff       	call   1007a04 <linked_list_pop_back>
 1009d06:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 1009d0a:	74 21                	je     1009d2d <push_pop_back_test+0x14e>
 1009d0c:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 1009d10:	ba 00 00 00 00       	mov    edx,0x0
 1009d15:	be 00 00 00 00       	mov    esi,0x0
 1009d1a:	48 89 c7             	mov    rdi,rax
 1009d1d:	e8 c6 f0 ff ff       	call   1008de8 <assert_list>
 1009d22:	84 c0                	test   al,al
 1009d24:	74 07                	je     1009d2d <push_pop_back_test+0x14e>
 1009d26:	b8 01 00 00 00       	mov    eax,0x1
 1009d2b:	eb 05                	jmp    1009d32 <push_pop_back_test+0x153>
 1009d2d:	b8 00 00 00 00       	mov    eax,0x0
 1009d32:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 1009d35:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 1009d39:	0f b6 45 ff          	movzx  eax,BYTE PTR [rbp-0x1]
 1009d3d:	c9                   	leave  
 1009d3e:	c3                   	ret    

0000000001009d3f <equals>:
 1009d3f:	55                   	push   rbp
 1009d40:	48 89 e5             	mov    rbp,rsp
 1009d43:	48 83 ec 10          	sub    rsp,0x10
 1009d47:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
 1009d4b:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
 1009d4f:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 1009d53:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
 1009d56:	48 63 d0             	movsxd rdx,eax
 1009d59:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1009d5d:	48 39 c2             	cmp    rdx,rax
 1009d60:	0f 94 c0             	sete   al
 1009d63:	c9                   	leave  
 1009d64:	c3                   	ret    

0000000001009d65 <search_test>:
 1009d65:	55                   	push   rbp
 1009d66:	48 89 e5             	mov    rbp,rsp
 1009d69:	48 83 ec 30          	sub    rsp,0x30
 1009d6d:	c6 45 ff 01          	mov    BYTE PTR [rbp-0x1],0x1
 1009d71:	48 8d 45 e0          	lea    rax,[rbp-0x20]
 1009d75:	48 89 c7             	mov    rdi,rax
 1009d78:	e8 24 db ff ff       	call   10078a1 <linked_list_init>
 1009d7d:	48 8d 45 e0          	lea    rax,[rbp-0x20]
 1009d81:	be 01 00 00 00       	mov    esi,0x1
 1009d86:	48 89 c7             	mov    rdi,rax
 1009d89:	e8 b4 f1 ff ff       	call   1008f42 <push_back_val>
 1009d8e:	48 8d 45 e0          	lea    rax,[rbp-0x20]
 1009d92:	be 02 00 00 00       	mov    esi,0x2
 1009d97:	48 89 c7             	mov    rdi,rax
 1009d9a:	e8 a3 f1 ff ff       	call   1008f42 <push_back_val>
 1009d9f:	48 8d 45 e0          	lea    rax,[rbp-0x20]
 1009da3:	be 03 00 00 00       	mov    esi,0x3
 1009da8:	48 89 c7             	mov    rdi,rax
 1009dab:	e8 92 f1 ff ff       	call   1008f42 <push_back_val>
 1009db0:	48 8d 45 e0          	lea    rax,[rbp-0x20]
 1009db4:	be 04 00 00 00       	mov    esi,0x4
 1009db9:	48 89 c7             	mov    rdi,rax
 1009dbc:	e8 81 f1 ff ff       	call   1008f42 <push_back_val>
 1009dc1:	c7 45 d0 01 00 00 00 	mov    DWORD PTR [rbp-0x30],0x1
 1009dc8:	c7 45 d4 02 00 00 00 	mov    DWORD PTR [rbp-0x2c],0x2
 1009dcf:	c7 45 d8 03 00 00 00 	mov    DWORD PTR [rbp-0x28],0x3
 1009dd6:	c7 45 dc 04 00 00 00 	mov    DWORD PTR [rbp-0x24],0x4
 1009ddd:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 1009de1:	74 23                	je     1009e06 <search_test+0xa1>
 1009de3:	48 8d 4d d0          	lea    rcx,[rbp-0x30]
 1009de7:	48 8d 45 e0          	lea    rax,[rbp-0x20]
 1009deb:	ba 04 00 00 00       	mov    edx,0x4
 1009df0:	48 89 ce             	mov    rsi,rcx
 1009df3:	48 89 c7             	mov    rdi,rax
 1009df6:	e8 ed ef ff ff       	call   1008de8 <assert_list>
 1009dfb:	84 c0                	test   al,al
 1009dfd:	74 07                	je     1009e06 <search_test+0xa1>
 1009dff:	b8 01 00 00 00       	mov    eax,0x1
 1009e04:	eb 05                	jmp    1009e0b <search_test+0xa6>
 1009e06:	b8 00 00 00 00       	mov    eax,0x0
 1009e0b:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 1009e0e:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 1009e12:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 1009e16:	74 22                	je     1009e3a <search_test+0xd5>
 1009e18:	48 8d 45 e0          	lea    rax,[rbp-0x20]
 1009e1c:	ba 3f 9d 00 01       	mov    edx,0x1009d3f
 1009e21:	be 04 00 00 00       	mov    esi,0x4
 1009e26:	48 89 c7             	mov    rdi,rax
 1009e29:	e8 16 df ff ff       	call   1007d44 <linked_list_search>
 1009e2e:	83 f8 03             	cmp    eax,0x3
 1009e31:	75 07                	jne    1009e3a <search_test+0xd5>
 1009e33:	b8 01 00 00 00       	mov    eax,0x1
 1009e38:	eb 05                	jmp    1009e3f <search_test+0xda>
 1009e3a:	b8 00 00 00 00       	mov    eax,0x0
 1009e3f:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 1009e42:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 1009e46:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 1009e4a:	74 22                	je     1009e6e <search_test+0x109>
 1009e4c:	48 8d 45 e0          	lea    rax,[rbp-0x20]
 1009e50:	ba 3f 9d 00 01       	mov    edx,0x1009d3f
 1009e55:	be 03 00 00 00       	mov    esi,0x3
 1009e5a:	48 89 c7             	mov    rdi,rax
 1009e5d:	e8 e2 de ff ff       	call   1007d44 <linked_list_search>
 1009e62:	83 f8 02             	cmp    eax,0x2
 1009e65:	75 07                	jne    1009e6e <search_test+0x109>
 1009e67:	b8 01 00 00 00       	mov    eax,0x1
 1009e6c:	eb 05                	jmp    1009e73 <search_test+0x10e>
 1009e6e:	b8 00 00 00 00       	mov    eax,0x0
 1009e73:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 1009e76:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 1009e7a:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 1009e7e:	74 22                	je     1009ea2 <search_test+0x13d>
 1009e80:	48 8d 45 e0          	lea    rax,[rbp-0x20]
 1009e84:	ba 3f 9d 00 01       	mov    edx,0x1009d3f
 1009e89:	be 02 00 00 00       	mov    esi,0x2
 1009e8e:	48 89 c7             	mov    rdi,rax
 1009e91:	e8 ae de ff ff       	call   1007d44 <linked_list_search>
 1009e96:	83 f8 01             	cmp    eax,0x1
 1009e99:	75 07                	jne    1009ea2 <search_test+0x13d>
 1009e9b:	b8 01 00 00 00       	mov    eax,0x1
 1009ea0:	eb 05                	jmp    1009ea7 <search_test+0x142>
 1009ea2:	b8 00 00 00 00       	mov    eax,0x0
 1009ea7:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 1009eaa:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 1009eae:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 1009eb2:	74 21                	je     1009ed5 <search_test+0x170>
 1009eb4:	48 8d 45 e0          	lea    rax,[rbp-0x20]
 1009eb8:	ba 3f 9d 00 01       	mov    edx,0x1009d3f
 1009ebd:	be 01 00 00 00       	mov    esi,0x1
 1009ec2:	48 89 c7             	mov    rdi,rax
 1009ec5:	e8 7a de ff ff       	call   1007d44 <linked_list_search>
 1009eca:	85 c0                	test   eax,eax
 1009ecc:	75 07                	jne    1009ed5 <search_test+0x170>
 1009ece:	b8 01 00 00 00       	mov    eax,0x1
 1009ed3:	eb 05                	jmp    1009eda <search_test+0x175>
 1009ed5:	b8 00 00 00 00       	mov    eax,0x0
 1009eda:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 1009edd:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 1009ee1:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 1009ee5:	74 22                	je     1009f09 <search_test+0x1a4>
 1009ee7:	48 8d 45 e0          	lea    rax,[rbp-0x20]
 1009eeb:	ba 3f 9d 00 01       	mov    edx,0x1009d3f
 1009ef0:	be 00 00 00 00       	mov    esi,0x0
 1009ef5:	48 89 c7             	mov    rdi,rax
 1009ef8:	e8 47 de ff ff       	call   1007d44 <linked_list_search>
 1009efd:	83 f8 ff             	cmp    eax,0xffffffff
 1009f00:	75 07                	jne    1009f09 <search_test+0x1a4>
 1009f02:	b8 01 00 00 00       	mov    eax,0x1
 1009f07:	eb 05                	jmp    1009f0e <search_test+0x1a9>
 1009f09:	b8 00 00 00 00       	mov    eax,0x0
 1009f0e:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 1009f11:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 1009f15:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 1009f19:	74 20                	je     1009f3b <search_test+0x1d6>
 1009f1b:	ba 3f 9d 00 01       	mov    edx,0x1009d3f
 1009f20:	be 01 00 00 00       	mov    esi,0x1
 1009f25:	bf 00 00 00 00       	mov    edi,0x0
 1009f2a:	e8 15 de ff ff       	call   1007d44 <linked_list_search>
 1009f2f:	83 f8 ff             	cmp    eax,0xffffffff
 1009f32:	75 07                	jne    1009f3b <search_test+0x1d6>
 1009f34:	b8 01 00 00 00       	mov    eax,0x1
 1009f39:	eb 05                	jmp    1009f40 <search_test+0x1db>
 1009f3b:	b8 00 00 00 00       	mov    eax,0x0
 1009f40:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 1009f43:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 1009f47:	48 8d 45 e0          	lea    rax,[rbp-0x20]
 1009f4b:	be 01 00 00 00       	mov    esi,0x1
 1009f50:	48 89 c7             	mov    rdi,rax
 1009f53:	e8 e9 dc ff ff       	call   1007c41 <linked_list_get>
 1009f58:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
 1009f5c:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 1009f60:	74 24                	je     1009f86 <search_test+0x221>
 1009f62:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
 1009f66:	48 8d 45 e0          	lea    rax,[rbp-0x20]
 1009f6a:	ba 00 00 00 00       	mov    edx,0x0
 1009f6f:	48 89 ce             	mov    rsi,rcx
 1009f72:	48 89 c7             	mov    rdi,rax
 1009f75:	e8 ca dd ff ff       	call   1007d44 <linked_list_search>
 1009f7a:	83 f8 01             	cmp    eax,0x1
 1009f7d:	75 07                	jne    1009f86 <search_test+0x221>
 1009f7f:	b8 01 00 00 00       	mov    eax,0x1
 1009f84:	eb 05                	jmp    1009f8b <search_test+0x226>
 1009f86:	b8 00 00 00 00       	mov    eax,0x0
 1009f8b:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 1009f8e:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 1009f92:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 1009f96:	74 23                	je     1009fbb <search_test+0x256>
 1009f98:	48 8d 4d d0          	lea    rcx,[rbp-0x30]
 1009f9c:	48 8d 45 e0          	lea    rax,[rbp-0x20]
 1009fa0:	ba 04 00 00 00       	mov    edx,0x4
 1009fa5:	48 89 ce             	mov    rsi,rcx
 1009fa8:	48 89 c7             	mov    rdi,rax
 1009fab:	e8 38 ee ff ff       	call   1008de8 <assert_list>
 1009fb0:	84 c0                	test   al,al
 1009fb2:	74 07                	je     1009fbb <search_test+0x256>
 1009fb4:	b8 01 00 00 00       	mov    eax,0x1
 1009fb9:	eb 05                	jmp    1009fc0 <search_test+0x25b>
 1009fbb:	b8 00 00 00 00       	mov    eax,0x0
 1009fc0:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 1009fc3:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 1009fc7:	0f b6 45 ff          	movzx  eax,BYTE PTR [rbp-0x1]
 1009fcb:	c9                   	leave  
 1009fcc:	c3                   	ret    

0000000001009fcd <linked_list_test>:
 1009fcd:	55                   	push   rbp
 1009fce:	48 89 e5             	mov    rbp,rsp
 1009fd1:	bf 38 31 01 01       	mov    edi,0x1013138
 1009fd6:	e8 fa 32 00 00       	call   100d2d5 <test_begin>
 1009fdb:	b8 00 00 00 00       	mov    eax,0x0
 1009fe0:	e8 d7 ef ff ff       	call   1008fbc <insert_test_beginning>
 1009fe5:	0f b6 c0             	movzx  eax,al
 1009fe8:	89 c6                	mov    esi,eax
 1009fea:	bf 49 31 01 01       	mov    edi,0x1013149
 1009fef:	e8 01 35 00 00       	call   100d4f5 <run_case>
 1009ff4:	b8 00 00 00 00       	mov    eax,0x0
 1009ff9:	e8 60 f0 ff ff       	call   100905e <insert_test_middle>
 1009ffe:	0f b6 c0             	movzx  eax,al
 100a001:	89 c6                	mov    esi,eax
 100a003:	bf 5f 31 01 01       	mov    edi,0x101315f
 100a008:	e8 e8 34 00 00       	call   100d4f5 <run_case>
 100a00d:	b8 00 00 00 00       	mov    eax,0x0
 100a012:	e8 23 f1 ff ff       	call   100913a <insert_test_end>
 100a017:	0f b6 c0             	movzx  eax,al
 100a01a:	89 c6                	mov    esi,eax
 100a01c:	bf 72 31 01 01       	mov    edi,0x1013172
 100a021:	e8 cf 34 00 00       	call   100d4f5 <run_case>
 100a026:	b8 00 00 00 00       	mov    eax,0x0
 100a02b:	e8 ac f1 ff ff       	call   10091dc <insert_test_invalid>
 100a030:	0f b6 c0             	movzx  eax,al
 100a033:	89 c6                	mov    esi,eax
 100a035:	bf 82 31 01 01       	mov    edi,0x1013182
 100a03a:	e8 b6 34 00 00       	call   100d4f5 <run_case>
 100a03f:	b8 00 00 00 00       	mov    eax,0x0
 100a044:	e8 fa f2 ff ff       	call   1009343 <remove_test_beginning>
 100a049:	0f b6 c0             	movzx  eax,al
 100a04c:	89 c6                	mov    esi,eax
 100a04e:	bf 96 31 01 01       	mov    edi,0x1013196
 100a053:	e8 9d 34 00 00       	call   100d4f5 <run_case>
 100a058:	b8 00 00 00 00       	mov    eax,0x0
 100a05d:	e8 97 f3 ff ff       	call   10093f9 <remove_test_middle>
 100a062:	0f b6 c0             	movzx  eax,al
 100a065:	89 c6                	mov    esi,eax
 100a067:	bf ac 31 01 01       	mov    edi,0x10131ac
 100a06c:	e8 84 34 00 00       	call   100d4f5 <run_case>
 100a071:	b8 00 00 00 00       	mov    eax,0x0
 100a076:	e8 6e f4 ff ff       	call   10094e9 <remove_test_end>
 100a07b:	0f b6 c0             	movzx  eax,al
 100a07e:	89 c6                	mov    esi,eax
 100a080:	bf bf 31 01 01       	mov    edi,0x10131bf
 100a085:	e8 6b 34 00 00       	call   100d4f5 <run_case>
 100a08a:	b8 00 00 00 00       	mov    eax,0x0
 100a08f:	e8 96 f7 ff ff       	call   100982a <remove_test_invalid>
 100a094:	0f b6 c0             	movzx  eax,al
 100a097:	89 c6                	mov    esi,eax
 100a099:	bf cf 31 01 01       	mov    edi,0x10131cf
 100a09e:	e8 52 34 00 00       	call   100d4f5 <run_case>
 100a0a3:	b8 00 00 00 00       	mov    eax,0x0
 100a0a8:	e8 b6 f8 ff ff       	call   1009963 <size_test>
 100a0ad:	0f b6 c0             	movzx  eax,al
 100a0b0:	89 c6                	mov    esi,eax
 100a0b2:	bf e3 31 01 01       	mov    edi,0x10131e3
 100a0b7:	e8 39 34 00 00       	call   100d4f5 <run_case>
 100a0bc:	b8 00 00 00 00       	mov    eax,0x0
 100a0c1:	e8 d9 f4 ff ff       	call   100959f <remove_test_all>
 100a0c6:	0f b6 c0             	movzx  eax,al
 100a0c9:	89 c6                	mov    esi,eax
 100a0cb:	bf ed 31 01 01       	mov    edi,0x10131ed
 100a0d0:	e8 20 34 00 00       	call   100d4f5 <run_case>
 100a0d5:	b8 00 00 00 00       	mov    eax,0x0
 100a0da:	e8 a0 f9 ff ff       	call   1009a7f <push_pop_front_test>
 100a0df:	0f b6 c0             	movzx  eax,al
 100a0e2:	89 c6                	mov    esi,eax
 100a0e4:	bf fd 31 01 01       	mov    edi,0x10131fd
 100a0e9:	e8 07 34 00 00       	call   100d4f5 <run_case>
 100a0ee:	b8 00 00 00 00       	mov    eax,0x0
 100a0f3:	e8 e7 fa ff ff       	call   1009bdf <push_pop_back_test>
 100a0f8:	0f b6 c0             	movzx  eax,al
 100a0fb:	89 c6                	mov    esi,eax
 100a0fd:	bf 11 32 01 01       	mov    edi,0x1013211
 100a102:	e8 ee 33 00 00       	call   100d4f5 <run_case>
 100a107:	b8 00 00 00 00       	mov    eax,0x0
 100a10c:	e8 54 fc ff ff       	call   1009d65 <search_test>
 100a111:	0f b6 c0             	movzx  eax,al
 100a114:	89 c6                	mov    esi,eax
 100a116:	bf 24 32 01 01       	mov    edi,0x1013224
 100a11b:	e8 d5 33 00 00       	call   100d4f5 <run_case>
 100a120:	b8 00 00 00 00       	mov    eax,0x0
 100a125:	e8 1f 32 00 00       	call   100d349 <test_end>
 100a12a:	90                   	nop
 100a12b:	5d                   	pop    rbp
 100a12c:	c3                   	ret    

000000000100a12d <create_tree_node>:
 100a12d:	55                   	push   rbp
 100a12e:	48 89 e5             	mov    rbp,rsp
 100a131:	48 83 ec 20          	sub    rsp,0x20
 100a135:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
 100a138:	bf 28 00 00 00       	mov    edi,0x28
 100a13d:	e8 57 33 00 00       	call   100d499 <talloc>
 100a142:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
 100a146:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 100a14a:	8b 55 ec             	mov    edx,DWORD PTR [rbp-0x14]
 100a14d:	89 50 20             	mov    DWORD PTR [rax+0x20],edx
 100a150:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 100a154:	c9                   	leave  
 100a155:	c3                   	ret    

000000000100a156 <compare>:
 100a156:	55                   	push   rbp
 100a157:	48 89 e5             	mov    rbp,rsp
 100a15a:	48 83 ec 20          	sub    rsp,0x20
 100a15e:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
 100a162:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
 100a166:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 100a16a:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
 100a16e:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
 100a172:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
 100a176:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 100a17a:	8b 50 20             	mov    edx,DWORD PTR [rax+0x20]
 100a17d:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 100a181:	8b 40 20             	mov    eax,DWORD PTR [rax+0x20]
 100a184:	29 c2                	sub    edx,eax
 100a186:	89 d0                	mov    eax,edx
 100a188:	c9                   	leave  
 100a189:	c3                   	ret    

000000000100a18a <_pre_order_assert>:
 100a18a:	55                   	push   rbp
 100a18b:	48 89 e5             	mov    rbp,rsp
 100a18e:	48 83 ec 30          	sub    rsp,0x30
 100a192:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
 100a196:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
 100a19a:	89 55 dc             	mov    DWORD PTR [rbp-0x24],edx
 100a19d:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
 100a1a2:	75 0a                	jne    100a1ae <_pre_order_assert+0x24>
 100a1a4:	b8 01 00 00 00       	mov    eax,0x1
 100a1a9:	e9 c9 00 00 00       	jmp    100a277 <_pre_order_assert+0xed>
 100a1ae:	8b 05 4c a2 00 00    	mov    eax,DWORD PTR [rip+0xa24c]        # 1014400 <counter>
 100a1b4:	3b 45 dc             	cmp    eax,DWORD PTR [rbp-0x24]
 100a1b7:	7c 0a                	jl     100a1c3 <_pre_order_assert+0x39>
 100a1b9:	b8 00 00 00 00       	mov    eax,0x0
 100a1be:	e9 b4 00 00 00       	jmp    100a277 <_pre_order_assert+0xed>
 100a1c3:	c6 45 ff 01          	mov    BYTE PTR [rbp-0x1],0x1
 100a1c7:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 100a1cb:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
 100a1cf:	8b 05 2b a2 00 00    	mov    eax,DWORD PTR [rip+0xa22b]        # 1014400 <counter>
 100a1d5:	48 98                	cdqe   
 100a1d7:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
 100a1de:	00 
 100a1df:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
 100a1e3:	48 01 d0             	add    rax,rdx
 100a1e6:	8b 10                	mov    edx,DWORD PTR [rax]
 100a1e8:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 100a1ec:	8b 40 20             	mov    eax,DWORD PTR [rax+0x20]
 100a1ef:	39 c2                	cmp    edx,eax
 100a1f1:	74 04                	je     100a1f7 <_pre_order_assert+0x6d>
 100a1f3:	c6 45 ff 00          	mov    BYTE PTR [rbp-0x1],0x0
 100a1f7:	8b 05 03 a2 00 00    	mov    eax,DWORD PTR [rip+0xa203]        # 1014400 <counter>
 100a1fd:	83 c0 01             	add    eax,0x1
 100a200:	89 05 fa a1 00 00    	mov    DWORD PTR [rip+0xa1fa],eax        # 1014400 <counter>
 100a206:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100a20a:	74 24                	je     100a230 <_pre_order_assert+0xa6>
 100a20c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 100a210:	48 8b 00             	mov    rax,QWORD PTR [rax]
 100a213:	8b 55 dc             	mov    edx,DWORD PTR [rbp-0x24]
 100a216:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
 100a21a:	48 89 ce             	mov    rsi,rcx
 100a21d:	48 89 c7             	mov    rdi,rax
 100a220:	e8 65 ff ff ff       	call   100a18a <_pre_order_assert>
 100a225:	84 c0                	test   al,al
 100a227:	74 07                	je     100a230 <_pre_order_assert+0xa6>
 100a229:	b8 01 00 00 00       	mov    eax,0x1
 100a22e:	eb 05                	jmp    100a235 <_pre_order_assert+0xab>
 100a230:	b8 00 00 00 00       	mov    eax,0x0
 100a235:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 100a238:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 100a23c:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100a240:	74 25                	je     100a267 <_pre_order_assert+0xdd>
 100a242:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 100a246:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
 100a24a:	8b 55 dc             	mov    edx,DWORD PTR [rbp-0x24]
 100a24d:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
 100a251:	48 89 ce             	mov    rsi,rcx
 100a254:	48 89 c7             	mov    rdi,rax
 100a257:	e8 2e ff ff ff       	call   100a18a <_pre_order_assert>
 100a25c:	84 c0                	test   al,al
 100a25e:	74 07                	je     100a267 <_pre_order_assert+0xdd>
 100a260:	b8 01 00 00 00       	mov    eax,0x1
 100a265:	eb 05                	jmp    100a26c <_pre_order_assert+0xe2>
 100a267:	b8 00 00 00 00       	mov    eax,0x0
 100a26c:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 100a26f:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 100a273:	0f b6 45 ff          	movzx  eax,BYTE PTR [rbp-0x1]
 100a277:	c9                   	leave  
 100a278:	c3                   	ret    

000000000100a279 <pre_order_assert>:
 100a279:	55                   	push   rbp
 100a27a:	48 89 e5             	mov    rbp,rsp
 100a27d:	48 83 ec 20          	sub    rsp,0x20
 100a281:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
 100a285:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
 100a289:	89 55 ec             	mov    DWORD PTR [rbp-0x14],edx
 100a28c:	c7 05 6a a1 00 00 00 	mov    DWORD PTR [rip+0xa16a],0x0        # 1014400 <counter>
 100a293:	00 00 00 
 100a296:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 100a29a:	48 8b 00             	mov    rax,QWORD PTR [rax]
 100a29d:	8b 55 ec             	mov    edx,DWORD PTR [rbp-0x14]
 100a2a0:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
 100a2a4:	48 89 ce             	mov    rsi,rcx
 100a2a7:	48 89 c7             	mov    rdi,rax
 100a2aa:	e8 db fe ff ff       	call   100a18a <_pre_order_assert>
 100a2af:	c9                   	leave  
 100a2b0:	c3                   	ret    

000000000100a2b1 <insert_simple_l>:
 100a2b1:	55                   	push   rbp
 100a2b2:	48 89 e5             	mov    rbp,rsp
 100a2b5:	48 83 ec 30          	sub    rsp,0x30
 100a2b9:	c6 45 ff 01          	mov    BYTE PTR [rbp-0x1],0x1
 100a2bd:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100a2c1:	48 89 c7             	mov    rdi,rax
 100a2c4:	e8 fe cc ff ff       	call   1006fc7 <avl_tree_init>
 100a2c9:	bf 01 00 00 00       	mov    edi,0x1
 100a2ce:	e8 5a fe ff ff       	call   100a12d <create_tree_node>
 100a2d3:	48 89 c1             	mov    rcx,rax
 100a2d6:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100a2da:	ba 56 a1 00 01       	mov    edx,0x100a156
 100a2df:	48 89 ce             	mov    rsi,rcx
 100a2e2:	48 89 c7             	mov    rdi,rax
 100a2e5:	e8 d5 cb ff ff       	call   1006ebf <avl_tree_insert>
 100a2ea:	bf 02 00 00 00       	mov    edi,0x2
 100a2ef:	e8 39 fe ff ff       	call   100a12d <create_tree_node>
 100a2f4:	48 89 c1             	mov    rcx,rax
 100a2f7:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100a2fb:	ba 56 a1 00 01       	mov    edx,0x100a156
 100a300:	48 89 ce             	mov    rsi,rcx
 100a303:	48 89 c7             	mov    rdi,rax
 100a306:	e8 b4 cb ff ff       	call   1006ebf <avl_tree_insert>
 100a30b:	c7 45 e8 01 00 00 00 	mov    DWORD PTR [rbp-0x18],0x1
 100a312:	c7 45 ec 02 00 00 00 	mov    DWORD PTR [rbp-0x14],0x2
 100a319:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100a31d:	74 23                	je     100a342 <insert_simple_l+0x91>
 100a31f:	48 8d 4d e8          	lea    rcx,[rbp-0x18]
 100a323:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100a327:	ba 02 00 00 00       	mov    edx,0x2
 100a32c:	48 89 ce             	mov    rsi,rcx
 100a32f:	48 89 c7             	mov    rdi,rax
 100a332:	e8 42 ff ff ff       	call   100a279 <pre_order_assert>
 100a337:	84 c0                	test   al,al
 100a339:	74 07                	je     100a342 <insert_simple_l+0x91>
 100a33b:	b8 01 00 00 00       	mov    eax,0x1
 100a340:	eb 05                	jmp    100a347 <insert_simple_l+0x96>
 100a342:	b8 00 00 00 00       	mov    eax,0x0
 100a347:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 100a34a:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 100a34e:	bf 03 00 00 00       	mov    edi,0x3
 100a353:	e8 d5 fd ff ff       	call   100a12d <create_tree_node>
 100a358:	48 89 c1             	mov    rcx,rax
 100a35b:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100a35f:	ba 56 a1 00 01       	mov    edx,0x100a156
 100a364:	48 89 ce             	mov    rsi,rcx
 100a367:	48 89 c7             	mov    rdi,rax
 100a36a:	e8 50 cb ff ff       	call   1006ebf <avl_tree_insert>
 100a36f:	c7 45 dc 02 00 00 00 	mov    DWORD PTR [rbp-0x24],0x2
 100a376:	c7 45 e0 01 00 00 00 	mov    DWORD PTR [rbp-0x20],0x1
 100a37d:	c7 45 e4 03 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x3
 100a384:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100a388:	74 23                	je     100a3ad <insert_simple_l+0xfc>
 100a38a:	48 8d 4d dc          	lea    rcx,[rbp-0x24]
 100a38e:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100a392:	ba 03 00 00 00       	mov    edx,0x3
 100a397:	48 89 ce             	mov    rsi,rcx
 100a39a:	48 89 c7             	mov    rdi,rax
 100a39d:	e8 d7 fe ff ff       	call   100a279 <pre_order_assert>
 100a3a2:	84 c0                	test   al,al
 100a3a4:	74 07                	je     100a3ad <insert_simple_l+0xfc>
 100a3a6:	b8 01 00 00 00       	mov    eax,0x1
 100a3ab:	eb 05                	jmp    100a3b2 <insert_simple_l+0x101>
 100a3ad:	b8 00 00 00 00       	mov    eax,0x0
 100a3b2:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 100a3b5:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 100a3b9:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100a3bd:	74 1c                	je     100a3db <insert_simple_l+0x12a>
 100a3bf:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100a3c3:	be 56 a1 00 01       	mov    esi,0x100a156
 100a3c8:	48 89 c7             	mov    rdi,rax
 100a3cb:	e8 c2 cd ff ff       	call   1007192 <avl_tree_validate>
 100a3d0:	84 c0                	test   al,al
 100a3d2:	74 07                	je     100a3db <insert_simple_l+0x12a>
 100a3d4:	b8 01 00 00 00       	mov    eax,0x1
 100a3d9:	eb 05                	jmp    100a3e0 <insert_simple_l+0x12f>
 100a3db:	b8 00 00 00 00       	mov    eax,0x0
 100a3e0:	83 e0 01             	and    eax,0x1
 100a3e3:	c9                   	leave  
 100a3e4:	c3                   	ret    

000000000100a3e5 <insert_simple_r>:
 100a3e5:	55                   	push   rbp
 100a3e6:	48 89 e5             	mov    rbp,rsp
 100a3e9:	48 83 ec 30          	sub    rsp,0x30
 100a3ed:	c6 45 ff 01          	mov    BYTE PTR [rbp-0x1],0x1
 100a3f1:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100a3f5:	48 89 c7             	mov    rdi,rax
 100a3f8:	e8 ca cb ff ff       	call   1006fc7 <avl_tree_init>
 100a3fd:	bf 03 00 00 00       	mov    edi,0x3
 100a402:	e8 26 fd ff ff       	call   100a12d <create_tree_node>
 100a407:	48 89 c1             	mov    rcx,rax
 100a40a:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100a40e:	ba 56 a1 00 01       	mov    edx,0x100a156
 100a413:	48 89 ce             	mov    rsi,rcx
 100a416:	48 89 c7             	mov    rdi,rax
 100a419:	e8 a1 ca ff ff       	call   1006ebf <avl_tree_insert>
 100a41e:	bf 02 00 00 00       	mov    edi,0x2
 100a423:	e8 05 fd ff ff       	call   100a12d <create_tree_node>
 100a428:	48 89 c1             	mov    rcx,rax
 100a42b:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100a42f:	ba 56 a1 00 01       	mov    edx,0x100a156
 100a434:	48 89 ce             	mov    rsi,rcx
 100a437:	48 89 c7             	mov    rdi,rax
 100a43a:	e8 80 ca ff ff       	call   1006ebf <avl_tree_insert>
 100a43f:	c7 45 e8 03 00 00 00 	mov    DWORD PTR [rbp-0x18],0x3
 100a446:	c7 45 ec 02 00 00 00 	mov    DWORD PTR [rbp-0x14],0x2
 100a44d:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100a451:	74 23                	je     100a476 <insert_simple_r+0x91>
 100a453:	48 8d 4d e8          	lea    rcx,[rbp-0x18]
 100a457:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100a45b:	ba 02 00 00 00       	mov    edx,0x2
 100a460:	48 89 ce             	mov    rsi,rcx
 100a463:	48 89 c7             	mov    rdi,rax
 100a466:	e8 0e fe ff ff       	call   100a279 <pre_order_assert>
 100a46b:	84 c0                	test   al,al
 100a46d:	74 07                	je     100a476 <insert_simple_r+0x91>
 100a46f:	b8 01 00 00 00       	mov    eax,0x1
 100a474:	eb 05                	jmp    100a47b <insert_simple_r+0x96>
 100a476:	b8 00 00 00 00       	mov    eax,0x0
 100a47b:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 100a47e:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 100a482:	bf 01 00 00 00       	mov    edi,0x1
 100a487:	e8 a1 fc ff ff       	call   100a12d <create_tree_node>
 100a48c:	48 89 c1             	mov    rcx,rax
 100a48f:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100a493:	ba 56 a1 00 01       	mov    edx,0x100a156
 100a498:	48 89 ce             	mov    rsi,rcx
 100a49b:	48 89 c7             	mov    rdi,rax
 100a49e:	e8 1c ca ff ff       	call   1006ebf <avl_tree_insert>
 100a4a3:	c7 45 dc 02 00 00 00 	mov    DWORD PTR [rbp-0x24],0x2
 100a4aa:	c7 45 e0 01 00 00 00 	mov    DWORD PTR [rbp-0x20],0x1
 100a4b1:	c7 45 e4 03 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x3
 100a4b8:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100a4bc:	74 23                	je     100a4e1 <insert_simple_r+0xfc>
 100a4be:	48 8d 4d dc          	lea    rcx,[rbp-0x24]
 100a4c2:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100a4c6:	ba 03 00 00 00       	mov    edx,0x3
 100a4cb:	48 89 ce             	mov    rsi,rcx
 100a4ce:	48 89 c7             	mov    rdi,rax
 100a4d1:	e8 a3 fd ff ff       	call   100a279 <pre_order_assert>
 100a4d6:	84 c0                	test   al,al
 100a4d8:	74 07                	je     100a4e1 <insert_simple_r+0xfc>
 100a4da:	b8 01 00 00 00       	mov    eax,0x1
 100a4df:	eb 05                	jmp    100a4e6 <insert_simple_r+0x101>
 100a4e1:	b8 00 00 00 00       	mov    eax,0x0
 100a4e6:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 100a4e9:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 100a4ed:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100a4f1:	74 1c                	je     100a50f <insert_simple_r+0x12a>
 100a4f3:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100a4f7:	be 56 a1 00 01       	mov    esi,0x100a156
 100a4fc:	48 89 c7             	mov    rdi,rax
 100a4ff:	e8 8e cc ff ff       	call   1007192 <avl_tree_validate>
 100a504:	84 c0                	test   al,al
 100a506:	74 07                	je     100a50f <insert_simple_r+0x12a>
 100a508:	b8 01 00 00 00       	mov    eax,0x1
 100a50d:	eb 05                	jmp    100a514 <insert_simple_r+0x12f>
 100a50f:	b8 00 00 00 00       	mov    eax,0x0
 100a514:	83 e0 01             	and    eax,0x1
 100a517:	c9                   	leave  
 100a518:	c3                   	ret    

000000000100a519 <insert_simple_ll>:
 100a519:	55                   	push   rbp
 100a51a:	48 89 e5             	mov    rbp,rsp
 100a51d:	48 83 ec 30          	sub    rsp,0x30
 100a521:	c6 45 ff 01          	mov    BYTE PTR [rbp-0x1],0x1
 100a525:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100a529:	48 89 c7             	mov    rdi,rax
 100a52c:	e8 96 ca ff ff       	call   1006fc7 <avl_tree_init>
 100a531:	bf 02 00 00 00       	mov    edi,0x2
 100a536:	e8 f2 fb ff ff       	call   100a12d <create_tree_node>
 100a53b:	48 89 c1             	mov    rcx,rax
 100a53e:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100a542:	ba 56 a1 00 01       	mov    edx,0x100a156
 100a547:	48 89 ce             	mov    rsi,rcx
 100a54a:	48 89 c7             	mov    rdi,rax
 100a54d:	e8 6d c9 ff ff       	call   1006ebf <avl_tree_insert>
 100a552:	bf 04 00 00 00       	mov    edi,0x4
 100a557:	e8 d1 fb ff ff       	call   100a12d <create_tree_node>
 100a55c:	48 89 c1             	mov    rcx,rax
 100a55f:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100a563:	ba 56 a1 00 01       	mov    edx,0x100a156
 100a568:	48 89 ce             	mov    rsi,rcx
 100a56b:	48 89 c7             	mov    rdi,rax
 100a56e:	e8 4c c9 ff ff       	call   1006ebf <avl_tree_insert>
 100a573:	c7 45 e8 02 00 00 00 	mov    DWORD PTR [rbp-0x18],0x2
 100a57a:	c7 45 ec 04 00 00 00 	mov    DWORD PTR [rbp-0x14],0x4
 100a581:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100a585:	74 23                	je     100a5aa <insert_simple_ll+0x91>
 100a587:	48 8d 4d e8          	lea    rcx,[rbp-0x18]
 100a58b:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100a58f:	ba 02 00 00 00       	mov    edx,0x2
 100a594:	48 89 ce             	mov    rsi,rcx
 100a597:	48 89 c7             	mov    rdi,rax
 100a59a:	e8 da fc ff ff       	call   100a279 <pre_order_assert>
 100a59f:	84 c0                	test   al,al
 100a5a1:	74 07                	je     100a5aa <insert_simple_ll+0x91>
 100a5a3:	b8 01 00 00 00       	mov    eax,0x1
 100a5a8:	eb 05                	jmp    100a5af <insert_simple_ll+0x96>
 100a5aa:	b8 00 00 00 00       	mov    eax,0x0
 100a5af:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 100a5b2:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 100a5b6:	bf 03 00 00 00       	mov    edi,0x3
 100a5bb:	e8 6d fb ff ff       	call   100a12d <create_tree_node>
 100a5c0:	48 89 c1             	mov    rcx,rax
 100a5c3:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100a5c7:	ba 56 a1 00 01       	mov    edx,0x100a156
 100a5cc:	48 89 ce             	mov    rsi,rcx
 100a5cf:	48 89 c7             	mov    rdi,rax
 100a5d2:	e8 e8 c8 ff ff       	call   1006ebf <avl_tree_insert>
 100a5d7:	c7 45 dc 03 00 00 00 	mov    DWORD PTR [rbp-0x24],0x3
 100a5de:	c7 45 e0 02 00 00 00 	mov    DWORD PTR [rbp-0x20],0x2
 100a5e5:	c7 45 e4 04 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x4
 100a5ec:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100a5f0:	74 23                	je     100a615 <insert_simple_ll+0xfc>
 100a5f2:	48 8d 4d dc          	lea    rcx,[rbp-0x24]
 100a5f6:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100a5fa:	ba 03 00 00 00       	mov    edx,0x3
 100a5ff:	48 89 ce             	mov    rsi,rcx
 100a602:	48 89 c7             	mov    rdi,rax
 100a605:	e8 6f fc ff ff       	call   100a279 <pre_order_assert>
 100a60a:	84 c0                	test   al,al
 100a60c:	74 07                	je     100a615 <insert_simple_ll+0xfc>
 100a60e:	b8 01 00 00 00       	mov    eax,0x1
 100a613:	eb 05                	jmp    100a61a <insert_simple_ll+0x101>
 100a615:	b8 00 00 00 00       	mov    eax,0x0
 100a61a:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 100a61d:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 100a621:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100a625:	74 1c                	je     100a643 <insert_simple_ll+0x12a>
 100a627:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100a62b:	be 56 a1 00 01       	mov    esi,0x100a156
 100a630:	48 89 c7             	mov    rdi,rax
 100a633:	e8 5a cb ff ff       	call   1007192 <avl_tree_validate>
 100a638:	84 c0                	test   al,al
 100a63a:	74 07                	je     100a643 <insert_simple_ll+0x12a>
 100a63c:	b8 01 00 00 00       	mov    eax,0x1
 100a641:	eb 05                	jmp    100a648 <insert_simple_ll+0x12f>
 100a643:	b8 00 00 00 00       	mov    eax,0x0
 100a648:	83 e0 01             	and    eax,0x1
 100a64b:	c9                   	leave  
 100a64c:	c3                   	ret    

000000000100a64d <insert_simple_rr>:
 100a64d:	55                   	push   rbp
 100a64e:	48 89 e5             	mov    rbp,rsp
 100a651:	48 83 ec 30          	sub    rsp,0x30
 100a655:	c6 45 ff 01          	mov    BYTE PTR [rbp-0x1],0x1
 100a659:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100a65d:	48 89 c7             	mov    rdi,rax
 100a660:	e8 62 c9 ff ff       	call   1006fc7 <avl_tree_init>
 100a665:	bf 04 00 00 00       	mov    edi,0x4
 100a66a:	e8 be fa ff ff       	call   100a12d <create_tree_node>
 100a66f:	48 89 c1             	mov    rcx,rax
 100a672:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100a676:	ba 56 a1 00 01       	mov    edx,0x100a156
 100a67b:	48 89 ce             	mov    rsi,rcx
 100a67e:	48 89 c7             	mov    rdi,rax
 100a681:	e8 39 c8 ff ff       	call   1006ebf <avl_tree_insert>
 100a686:	bf 02 00 00 00       	mov    edi,0x2
 100a68b:	e8 9d fa ff ff       	call   100a12d <create_tree_node>
 100a690:	48 89 c1             	mov    rcx,rax
 100a693:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100a697:	ba 56 a1 00 01       	mov    edx,0x100a156
 100a69c:	48 89 ce             	mov    rsi,rcx
 100a69f:	48 89 c7             	mov    rdi,rax
 100a6a2:	e8 18 c8 ff ff       	call   1006ebf <avl_tree_insert>
 100a6a7:	c7 45 e8 04 00 00 00 	mov    DWORD PTR [rbp-0x18],0x4
 100a6ae:	c7 45 ec 02 00 00 00 	mov    DWORD PTR [rbp-0x14],0x2
 100a6b5:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100a6b9:	74 23                	je     100a6de <insert_simple_rr+0x91>
 100a6bb:	48 8d 4d e8          	lea    rcx,[rbp-0x18]
 100a6bf:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100a6c3:	ba 02 00 00 00       	mov    edx,0x2
 100a6c8:	48 89 ce             	mov    rsi,rcx
 100a6cb:	48 89 c7             	mov    rdi,rax
 100a6ce:	e8 a6 fb ff ff       	call   100a279 <pre_order_assert>
 100a6d3:	84 c0                	test   al,al
 100a6d5:	74 07                	je     100a6de <insert_simple_rr+0x91>
 100a6d7:	b8 01 00 00 00       	mov    eax,0x1
 100a6dc:	eb 05                	jmp    100a6e3 <insert_simple_rr+0x96>
 100a6de:	b8 00 00 00 00       	mov    eax,0x0
 100a6e3:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 100a6e6:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 100a6ea:	bf 03 00 00 00       	mov    edi,0x3
 100a6ef:	e8 39 fa ff ff       	call   100a12d <create_tree_node>
 100a6f4:	48 89 c1             	mov    rcx,rax
 100a6f7:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100a6fb:	ba 56 a1 00 01       	mov    edx,0x100a156
 100a700:	48 89 ce             	mov    rsi,rcx
 100a703:	48 89 c7             	mov    rdi,rax
 100a706:	e8 b4 c7 ff ff       	call   1006ebf <avl_tree_insert>
 100a70b:	c7 45 dc 03 00 00 00 	mov    DWORD PTR [rbp-0x24],0x3
 100a712:	c7 45 e0 02 00 00 00 	mov    DWORD PTR [rbp-0x20],0x2
 100a719:	c7 45 e4 04 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x4
 100a720:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100a724:	74 23                	je     100a749 <insert_simple_rr+0xfc>
 100a726:	48 8d 4d dc          	lea    rcx,[rbp-0x24]
 100a72a:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100a72e:	ba 03 00 00 00       	mov    edx,0x3
 100a733:	48 89 ce             	mov    rsi,rcx
 100a736:	48 89 c7             	mov    rdi,rax
 100a739:	e8 3b fb ff ff       	call   100a279 <pre_order_assert>
 100a73e:	84 c0                	test   al,al
 100a740:	74 07                	je     100a749 <insert_simple_rr+0xfc>
 100a742:	b8 01 00 00 00       	mov    eax,0x1
 100a747:	eb 05                	jmp    100a74e <insert_simple_rr+0x101>
 100a749:	b8 00 00 00 00       	mov    eax,0x0
 100a74e:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 100a751:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 100a755:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100a759:	74 1c                	je     100a777 <insert_simple_rr+0x12a>
 100a75b:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100a75f:	be 56 a1 00 01       	mov    esi,0x100a156
 100a764:	48 89 c7             	mov    rdi,rax
 100a767:	e8 26 ca ff ff       	call   1007192 <avl_tree_validate>
 100a76c:	84 c0                	test   al,al
 100a76e:	74 07                	je     100a777 <insert_simple_rr+0x12a>
 100a770:	b8 01 00 00 00       	mov    eax,0x1
 100a775:	eb 05                	jmp    100a77c <insert_simple_rr+0x12f>
 100a777:	b8 00 00 00 00       	mov    eax,0x0
 100a77c:	83 e0 01             	and    eax,0x1
 100a77f:	c9                   	leave  
 100a780:	c3                   	ret    

000000000100a781 <insert_complex_1>:
 100a781:	55                   	push   rbp
 100a782:	48 89 e5             	mov    rbp,rsp
 100a785:	48 83 ec 40          	sub    rsp,0x40
 100a789:	c6 45 ff 01          	mov    BYTE PTR [rbp-0x1],0x1
 100a78d:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100a791:	48 89 c7             	mov    rdi,rax
 100a794:	e8 2e c8 ff ff       	call   1006fc7 <avl_tree_init>
 100a799:	bf 14 00 00 00       	mov    edi,0x14
 100a79e:	e8 8a f9 ff ff       	call   100a12d <create_tree_node>
 100a7a3:	48 89 c1             	mov    rcx,rax
 100a7a6:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100a7aa:	ba 56 a1 00 01       	mov    edx,0x100a156
 100a7af:	48 89 ce             	mov    rsi,rcx
 100a7b2:	48 89 c7             	mov    rdi,rax
 100a7b5:	e8 05 c7 ff ff       	call   1006ebf <avl_tree_insert>
 100a7ba:	bf 04 00 00 00       	mov    edi,0x4
 100a7bf:	e8 69 f9 ff ff       	call   100a12d <create_tree_node>
 100a7c4:	48 89 c1             	mov    rcx,rax
 100a7c7:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100a7cb:	ba 56 a1 00 01       	mov    edx,0x100a156
 100a7d0:	48 89 ce             	mov    rsi,rcx
 100a7d3:	48 89 c7             	mov    rdi,rax
 100a7d6:	e8 e4 c6 ff ff       	call   1006ebf <avl_tree_insert>
 100a7db:	bf 1a 00 00 00       	mov    edi,0x1a
 100a7e0:	e8 48 f9 ff ff       	call   100a12d <create_tree_node>
 100a7e5:	48 89 c1             	mov    rcx,rax
 100a7e8:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100a7ec:	ba 56 a1 00 01       	mov    edx,0x100a156
 100a7f1:	48 89 ce             	mov    rsi,rcx
 100a7f4:	48 89 c7             	mov    rdi,rax
 100a7f7:	e8 c3 c6 ff ff       	call   1006ebf <avl_tree_insert>
 100a7fc:	bf 03 00 00 00       	mov    edi,0x3
 100a801:	e8 27 f9 ff ff       	call   100a12d <create_tree_node>
 100a806:	48 89 c1             	mov    rcx,rax
 100a809:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100a80d:	ba 56 a1 00 01       	mov    edx,0x100a156
 100a812:	48 89 ce             	mov    rsi,rcx
 100a815:	48 89 c7             	mov    rdi,rax
 100a818:	e8 a2 c6 ff ff       	call   1006ebf <avl_tree_insert>
 100a81d:	bf 09 00 00 00       	mov    edi,0x9
 100a822:	e8 06 f9 ff ff       	call   100a12d <create_tree_node>
 100a827:	48 89 c1             	mov    rcx,rax
 100a82a:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100a82e:	ba 56 a1 00 01       	mov    edx,0x100a156
 100a833:	48 89 ce             	mov    rsi,rcx
 100a836:	48 89 c7             	mov    rdi,rax
 100a839:	e8 81 c6 ff ff       	call   1006ebf <avl_tree_insert>
 100a83e:	c7 45 dc 14 00 00 00 	mov    DWORD PTR [rbp-0x24],0x14
 100a845:	c7 45 e0 04 00 00 00 	mov    DWORD PTR [rbp-0x20],0x4
 100a84c:	c7 45 e4 03 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x3
 100a853:	c7 45 e8 09 00 00 00 	mov    DWORD PTR [rbp-0x18],0x9
 100a85a:	c7 45 ec 1a 00 00 00 	mov    DWORD PTR [rbp-0x14],0x1a
 100a861:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100a865:	74 23                	je     100a88a <insert_complex_1+0x109>
 100a867:	48 8d 4d dc          	lea    rcx,[rbp-0x24]
 100a86b:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100a86f:	ba 05 00 00 00       	mov    edx,0x5
 100a874:	48 89 ce             	mov    rsi,rcx
 100a877:	48 89 c7             	mov    rdi,rax
 100a87a:	e8 fa f9 ff ff       	call   100a279 <pre_order_assert>
 100a87f:	84 c0                	test   al,al
 100a881:	74 07                	je     100a88a <insert_complex_1+0x109>
 100a883:	b8 01 00 00 00       	mov    eax,0x1
 100a888:	eb 05                	jmp    100a88f <insert_complex_1+0x10e>
 100a88a:	b8 00 00 00 00       	mov    eax,0x0
 100a88f:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 100a892:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 100a896:	bf 0f 00 00 00       	mov    edi,0xf
 100a89b:	e8 8d f8 ff ff       	call   100a12d <create_tree_node>
 100a8a0:	48 89 c1             	mov    rcx,rax
 100a8a3:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100a8a7:	ba 56 a1 00 01       	mov    edx,0x100a156
 100a8ac:	48 89 ce             	mov    rsi,rcx
 100a8af:	48 89 c7             	mov    rdi,rax
 100a8b2:	e8 08 c6 ff ff       	call   1006ebf <avl_tree_insert>
 100a8b7:	c7 45 c4 09 00 00 00 	mov    DWORD PTR [rbp-0x3c],0x9
 100a8be:	c7 45 c8 04 00 00 00 	mov    DWORD PTR [rbp-0x38],0x4
 100a8c5:	c7 45 cc 03 00 00 00 	mov    DWORD PTR [rbp-0x34],0x3
 100a8cc:	c7 45 d0 14 00 00 00 	mov    DWORD PTR [rbp-0x30],0x14
 100a8d3:	c7 45 d4 0f 00 00 00 	mov    DWORD PTR [rbp-0x2c],0xf
 100a8da:	c7 45 d8 1a 00 00 00 	mov    DWORD PTR [rbp-0x28],0x1a
 100a8e1:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100a8e5:	74 23                	je     100a90a <insert_complex_1+0x189>
 100a8e7:	48 8d 4d c4          	lea    rcx,[rbp-0x3c]
 100a8eb:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100a8ef:	ba 06 00 00 00       	mov    edx,0x6
 100a8f4:	48 89 ce             	mov    rsi,rcx
 100a8f7:	48 89 c7             	mov    rdi,rax
 100a8fa:	e8 7a f9 ff ff       	call   100a279 <pre_order_assert>
 100a8ff:	84 c0                	test   al,al
 100a901:	74 07                	je     100a90a <insert_complex_1+0x189>
 100a903:	b8 01 00 00 00       	mov    eax,0x1
 100a908:	eb 05                	jmp    100a90f <insert_complex_1+0x18e>
 100a90a:	b8 00 00 00 00       	mov    eax,0x0
 100a90f:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 100a912:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 100a916:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100a91a:	74 1c                	je     100a938 <insert_complex_1+0x1b7>
 100a91c:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100a920:	be 56 a1 00 01       	mov    esi,0x100a156
 100a925:	48 89 c7             	mov    rdi,rax
 100a928:	e8 65 c8 ff ff       	call   1007192 <avl_tree_validate>
 100a92d:	84 c0                	test   al,al
 100a92f:	74 07                	je     100a938 <insert_complex_1+0x1b7>
 100a931:	b8 01 00 00 00       	mov    eax,0x1
 100a936:	eb 05                	jmp    100a93d <insert_complex_1+0x1bc>
 100a938:	b8 00 00 00 00       	mov    eax,0x0
 100a93d:	83 e0 01             	and    eax,0x1
 100a940:	c9                   	leave  
 100a941:	c3                   	ret    

000000000100a942 <insert_complex_2>:
 100a942:	55                   	push   rbp
 100a943:	48 89 e5             	mov    rbp,rsp
 100a946:	48 83 ec 40          	sub    rsp,0x40
 100a94a:	c6 45 ff 01          	mov    BYTE PTR [rbp-0x1],0x1
 100a94e:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100a952:	48 89 c7             	mov    rdi,rax
 100a955:	e8 6d c6 ff ff       	call   1006fc7 <avl_tree_init>
 100a95a:	bf 14 00 00 00       	mov    edi,0x14
 100a95f:	e8 c9 f7 ff ff       	call   100a12d <create_tree_node>
 100a964:	48 89 c1             	mov    rcx,rax
 100a967:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100a96b:	ba 56 a1 00 01       	mov    edx,0x100a156
 100a970:	48 89 ce             	mov    rsi,rcx
 100a973:	48 89 c7             	mov    rdi,rax
 100a976:	e8 44 c5 ff ff       	call   1006ebf <avl_tree_insert>
 100a97b:	bf 04 00 00 00       	mov    edi,0x4
 100a980:	e8 a8 f7 ff ff       	call   100a12d <create_tree_node>
 100a985:	48 89 c1             	mov    rcx,rax
 100a988:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100a98c:	ba 56 a1 00 01       	mov    edx,0x100a156
 100a991:	48 89 ce             	mov    rsi,rcx
 100a994:	48 89 c7             	mov    rdi,rax
 100a997:	e8 23 c5 ff ff       	call   1006ebf <avl_tree_insert>
 100a99c:	bf 1a 00 00 00       	mov    edi,0x1a
 100a9a1:	e8 87 f7 ff ff       	call   100a12d <create_tree_node>
 100a9a6:	48 89 c1             	mov    rcx,rax
 100a9a9:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100a9ad:	ba 56 a1 00 01       	mov    edx,0x100a156
 100a9b2:	48 89 ce             	mov    rsi,rcx
 100a9b5:	48 89 c7             	mov    rdi,rax
 100a9b8:	e8 02 c5 ff ff       	call   1006ebf <avl_tree_insert>
 100a9bd:	bf 03 00 00 00       	mov    edi,0x3
 100a9c2:	e8 66 f7 ff ff       	call   100a12d <create_tree_node>
 100a9c7:	48 89 c1             	mov    rcx,rax
 100a9ca:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100a9ce:	ba 56 a1 00 01       	mov    edx,0x100a156
 100a9d3:	48 89 ce             	mov    rsi,rcx
 100a9d6:	48 89 c7             	mov    rdi,rax
 100a9d9:	e8 e1 c4 ff ff       	call   1006ebf <avl_tree_insert>
 100a9de:	bf 09 00 00 00       	mov    edi,0x9
 100a9e3:	e8 45 f7 ff ff       	call   100a12d <create_tree_node>
 100a9e8:	48 89 c1             	mov    rcx,rax
 100a9eb:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100a9ef:	ba 56 a1 00 01       	mov    edx,0x100a156
 100a9f4:	48 89 ce             	mov    rsi,rcx
 100a9f7:	48 89 c7             	mov    rdi,rax
 100a9fa:	e8 c0 c4 ff ff       	call   1006ebf <avl_tree_insert>
 100a9ff:	c7 45 dc 14 00 00 00 	mov    DWORD PTR [rbp-0x24],0x14
 100aa06:	c7 45 e0 04 00 00 00 	mov    DWORD PTR [rbp-0x20],0x4
 100aa0d:	c7 45 e4 03 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x3
 100aa14:	c7 45 e8 09 00 00 00 	mov    DWORD PTR [rbp-0x18],0x9
 100aa1b:	c7 45 ec 1a 00 00 00 	mov    DWORD PTR [rbp-0x14],0x1a
 100aa22:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100aa26:	74 23                	je     100aa4b <insert_complex_2+0x109>
 100aa28:	48 8d 4d dc          	lea    rcx,[rbp-0x24]
 100aa2c:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100aa30:	ba 05 00 00 00       	mov    edx,0x5
 100aa35:	48 89 ce             	mov    rsi,rcx
 100aa38:	48 89 c7             	mov    rdi,rax
 100aa3b:	e8 39 f8 ff ff       	call   100a279 <pre_order_assert>
 100aa40:	84 c0                	test   al,al
 100aa42:	74 07                	je     100aa4b <insert_complex_2+0x109>
 100aa44:	b8 01 00 00 00       	mov    eax,0x1
 100aa49:	eb 05                	jmp    100aa50 <insert_complex_2+0x10e>
 100aa4b:	b8 00 00 00 00       	mov    eax,0x0
 100aa50:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 100aa53:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 100aa57:	bf 08 00 00 00       	mov    edi,0x8
 100aa5c:	e8 cc f6 ff ff       	call   100a12d <create_tree_node>
 100aa61:	48 89 c1             	mov    rcx,rax
 100aa64:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100aa68:	ba 56 a1 00 01       	mov    edx,0x100a156
 100aa6d:	48 89 ce             	mov    rsi,rcx
 100aa70:	48 89 c7             	mov    rdi,rax
 100aa73:	e8 47 c4 ff ff       	call   1006ebf <avl_tree_insert>
 100aa78:	c7 45 c4 09 00 00 00 	mov    DWORD PTR [rbp-0x3c],0x9
 100aa7f:	c7 45 c8 04 00 00 00 	mov    DWORD PTR [rbp-0x38],0x4
 100aa86:	c7 45 cc 03 00 00 00 	mov    DWORD PTR [rbp-0x34],0x3
 100aa8d:	c7 45 d0 08 00 00 00 	mov    DWORD PTR [rbp-0x30],0x8
 100aa94:	c7 45 d4 14 00 00 00 	mov    DWORD PTR [rbp-0x2c],0x14
 100aa9b:	c7 45 d8 1a 00 00 00 	mov    DWORD PTR [rbp-0x28],0x1a
 100aaa2:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100aaa6:	74 23                	je     100aacb <insert_complex_2+0x189>
 100aaa8:	48 8d 4d c4          	lea    rcx,[rbp-0x3c]
 100aaac:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100aab0:	ba 06 00 00 00       	mov    edx,0x6
 100aab5:	48 89 ce             	mov    rsi,rcx
 100aab8:	48 89 c7             	mov    rdi,rax
 100aabb:	e8 b9 f7 ff ff       	call   100a279 <pre_order_assert>
 100aac0:	84 c0                	test   al,al
 100aac2:	74 07                	je     100aacb <insert_complex_2+0x189>
 100aac4:	b8 01 00 00 00       	mov    eax,0x1
 100aac9:	eb 05                	jmp    100aad0 <insert_complex_2+0x18e>
 100aacb:	b8 00 00 00 00       	mov    eax,0x0
 100aad0:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 100aad3:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 100aad7:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100aadb:	74 1c                	je     100aaf9 <insert_complex_2+0x1b7>
 100aadd:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100aae1:	be 56 a1 00 01       	mov    esi,0x100a156
 100aae6:	48 89 c7             	mov    rdi,rax
 100aae9:	e8 a4 c6 ff ff       	call   1007192 <avl_tree_validate>
 100aaee:	84 c0                	test   al,al
 100aaf0:	74 07                	je     100aaf9 <insert_complex_2+0x1b7>
 100aaf2:	b8 01 00 00 00       	mov    eax,0x1
 100aaf7:	eb 05                	jmp    100aafe <insert_complex_2+0x1bc>
 100aaf9:	b8 00 00 00 00       	mov    eax,0x0
 100aafe:	83 e0 01             	and    eax,0x1
 100ab01:	c9                   	leave  
 100ab02:	c3                   	ret    

000000000100ab03 <insert_complex_3>:
 100ab03:	55                   	push   rbp
 100ab04:	48 89 e5             	mov    rbp,rsp
 100ab07:	48 83 ec 70          	sub    rsp,0x70
 100ab0b:	c6 45 ff 01          	mov    BYTE PTR [rbp-0x1],0x1
 100ab0f:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100ab13:	48 89 c7             	mov    rdi,rax
 100ab16:	e8 ac c4 ff ff       	call   1006fc7 <avl_tree_init>
 100ab1b:	bf 14 00 00 00       	mov    edi,0x14
 100ab20:	e8 08 f6 ff ff       	call   100a12d <create_tree_node>
 100ab25:	48 89 c1             	mov    rcx,rax
 100ab28:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100ab2c:	ba 56 a1 00 01       	mov    edx,0x100a156
 100ab31:	48 89 ce             	mov    rsi,rcx
 100ab34:	48 89 c7             	mov    rdi,rax
 100ab37:	e8 83 c3 ff ff       	call   1006ebf <avl_tree_insert>
 100ab3c:	bf 04 00 00 00       	mov    edi,0x4
 100ab41:	e8 e7 f5 ff ff       	call   100a12d <create_tree_node>
 100ab46:	48 89 c1             	mov    rcx,rax
 100ab49:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100ab4d:	ba 56 a1 00 01       	mov    edx,0x100a156
 100ab52:	48 89 ce             	mov    rsi,rcx
 100ab55:	48 89 c7             	mov    rdi,rax
 100ab58:	e8 62 c3 ff ff       	call   1006ebf <avl_tree_insert>
 100ab5d:	bf 1a 00 00 00       	mov    edi,0x1a
 100ab62:	e8 c6 f5 ff ff       	call   100a12d <create_tree_node>
 100ab67:	48 89 c1             	mov    rcx,rax
 100ab6a:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100ab6e:	ba 56 a1 00 01       	mov    edx,0x100a156
 100ab73:	48 89 ce             	mov    rsi,rcx
 100ab76:	48 89 c7             	mov    rdi,rax
 100ab79:	e8 41 c3 ff ff       	call   1006ebf <avl_tree_insert>
 100ab7e:	bf 03 00 00 00       	mov    edi,0x3
 100ab83:	e8 a5 f5 ff ff       	call   100a12d <create_tree_node>
 100ab88:	48 89 c1             	mov    rcx,rax
 100ab8b:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100ab8f:	ba 56 a1 00 01       	mov    edx,0x100a156
 100ab94:	48 89 ce             	mov    rsi,rcx
 100ab97:	48 89 c7             	mov    rdi,rax
 100ab9a:	e8 20 c3 ff ff       	call   1006ebf <avl_tree_insert>
 100ab9f:	bf 09 00 00 00       	mov    edi,0x9
 100aba4:	e8 84 f5 ff ff       	call   100a12d <create_tree_node>
 100aba9:	48 89 c1             	mov    rcx,rax
 100abac:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100abb0:	ba 56 a1 00 01       	mov    edx,0x100a156
 100abb5:	48 89 ce             	mov    rsi,rcx
 100abb8:	48 89 c7             	mov    rdi,rax
 100abbb:	e8 ff c2 ff ff       	call   1006ebf <avl_tree_insert>
 100abc0:	bf 15 00 00 00       	mov    edi,0x15
 100abc5:	e8 63 f5 ff ff       	call   100a12d <create_tree_node>
 100abca:	48 89 c1             	mov    rcx,rax
 100abcd:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100abd1:	ba 56 a1 00 01       	mov    edx,0x100a156
 100abd6:	48 89 ce             	mov    rsi,rcx
 100abd9:	48 89 c7             	mov    rdi,rax
 100abdc:	e8 de c2 ff ff       	call   1006ebf <avl_tree_insert>
 100abe1:	bf 1e 00 00 00       	mov    edi,0x1e
 100abe6:	e8 42 f5 ff ff       	call   100a12d <create_tree_node>
 100abeb:	48 89 c1             	mov    rcx,rax
 100abee:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100abf2:	ba 56 a1 00 01       	mov    edx,0x100a156
 100abf7:	48 89 ce             	mov    rsi,rcx
 100abfa:	48 89 c7             	mov    rdi,rax
 100abfd:	e8 bd c2 ff ff       	call   1006ebf <avl_tree_insert>
 100ac02:	bf 02 00 00 00       	mov    edi,0x2
 100ac07:	e8 21 f5 ff ff       	call   100a12d <create_tree_node>
 100ac0c:	48 89 c1             	mov    rcx,rax
 100ac0f:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100ac13:	ba 56 a1 00 01       	mov    edx,0x100a156
 100ac18:	48 89 ce             	mov    rsi,rcx
 100ac1b:	48 89 c7             	mov    rdi,rax
 100ac1e:	e8 9c c2 ff ff       	call   1006ebf <avl_tree_insert>
 100ac23:	bf 07 00 00 00       	mov    edi,0x7
 100ac28:	e8 00 f5 ff ff       	call   100a12d <create_tree_node>
 100ac2d:	48 89 c1             	mov    rcx,rax
 100ac30:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100ac34:	ba 56 a1 00 01       	mov    edx,0x100a156
 100ac39:	48 89 ce             	mov    rsi,rcx
 100ac3c:	48 89 c7             	mov    rdi,rax
 100ac3f:	e8 7b c2 ff ff       	call   1006ebf <avl_tree_insert>
 100ac44:	bf 0b 00 00 00       	mov    edi,0xb
 100ac49:	e8 df f4 ff ff       	call   100a12d <create_tree_node>
 100ac4e:	48 89 c1             	mov    rcx,rax
 100ac51:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100ac55:	ba 56 a1 00 01       	mov    edx,0x100a156
 100ac5a:	48 89 ce             	mov    rsi,rcx
 100ac5d:	48 89 c7             	mov    rdi,rax
 100ac60:	e8 5a c2 ff ff       	call   1006ebf <avl_tree_insert>
 100ac65:	c7 45 c8 14 00 00 00 	mov    DWORD PTR [rbp-0x38],0x14
 100ac6c:	c7 45 cc 04 00 00 00 	mov    DWORD PTR [rbp-0x34],0x4
 100ac73:	c7 45 d0 03 00 00 00 	mov    DWORD PTR [rbp-0x30],0x3
 100ac7a:	c7 45 d4 02 00 00 00 	mov    DWORD PTR [rbp-0x2c],0x2
 100ac81:	c7 45 d8 09 00 00 00 	mov    DWORD PTR [rbp-0x28],0x9
 100ac88:	c7 45 dc 07 00 00 00 	mov    DWORD PTR [rbp-0x24],0x7
 100ac8f:	c7 45 e0 0b 00 00 00 	mov    DWORD PTR [rbp-0x20],0xb
 100ac96:	c7 45 e4 1a 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x1a
 100ac9d:	c7 45 e8 15 00 00 00 	mov    DWORD PTR [rbp-0x18],0x15
 100aca4:	c7 45 ec 1e 00 00 00 	mov    DWORD PTR [rbp-0x14],0x1e
 100acab:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100acaf:	74 23                	je     100acd4 <insert_complex_3+0x1d1>
 100acb1:	48 8d 4d c8          	lea    rcx,[rbp-0x38]
 100acb5:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100acb9:	ba 0a 00 00 00       	mov    edx,0xa
 100acbe:	48 89 ce             	mov    rsi,rcx
 100acc1:	48 89 c7             	mov    rdi,rax
 100acc4:	e8 b0 f5 ff ff       	call   100a279 <pre_order_assert>
 100acc9:	84 c0                	test   al,al
 100accb:	74 07                	je     100acd4 <insert_complex_3+0x1d1>
 100accd:	b8 01 00 00 00       	mov    eax,0x1
 100acd2:	eb 05                	jmp    100acd9 <insert_complex_3+0x1d6>
 100acd4:	b8 00 00 00 00       	mov    eax,0x0
 100acd9:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 100acdc:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 100ace0:	bf 0f 00 00 00       	mov    edi,0xf
 100ace5:	e8 43 f4 ff ff       	call   100a12d <create_tree_node>
 100acea:	48 89 c1             	mov    rcx,rax
 100aced:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100acf1:	ba 56 a1 00 01       	mov    edx,0x100a156
 100acf6:	48 89 ce             	mov    rsi,rcx
 100acf9:	48 89 c7             	mov    rdi,rax
 100acfc:	e8 be c1 ff ff       	call   1006ebf <avl_tree_insert>
 100ad01:	c7 45 9c 09 00 00 00 	mov    DWORD PTR [rbp-0x64],0x9
 100ad08:	c7 45 a0 04 00 00 00 	mov    DWORD PTR [rbp-0x60],0x4
 100ad0f:	c7 45 a4 03 00 00 00 	mov    DWORD PTR [rbp-0x5c],0x3
 100ad16:	c7 45 a8 02 00 00 00 	mov    DWORD PTR [rbp-0x58],0x2
 100ad1d:	c7 45 ac 07 00 00 00 	mov    DWORD PTR [rbp-0x54],0x7
 100ad24:	c7 45 b0 14 00 00 00 	mov    DWORD PTR [rbp-0x50],0x14
 100ad2b:	c7 45 b4 0b 00 00 00 	mov    DWORD PTR [rbp-0x4c],0xb
 100ad32:	c7 45 b8 0f 00 00 00 	mov    DWORD PTR [rbp-0x48],0xf
 100ad39:	c7 45 bc 1a 00 00 00 	mov    DWORD PTR [rbp-0x44],0x1a
 100ad40:	c7 45 c0 15 00 00 00 	mov    DWORD PTR [rbp-0x40],0x15
 100ad47:	c7 45 c4 1e 00 00 00 	mov    DWORD PTR [rbp-0x3c],0x1e
 100ad4e:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100ad52:	74 23                	je     100ad77 <insert_complex_3+0x274>
 100ad54:	48 8d 4d 9c          	lea    rcx,[rbp-0x64]
 100ad58:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100ad5c:	ba 0b 00 00 00       	mov    edx,0xb
 100ad61:	48 89 ce             	mov    rsi,rcx
 100ad64:	48 89 c7             	mov    rdi,rax
 100ad67:	e8 0d f5 ff ff       	call   100a279 <pre_order_assert>
 100ad6c:	84 c0                	test   al,al
 100ad6e:	74 07                	je     100ad77 <insert_complex_3+0x274>
 100ad70:	b8 01 00 00 00       	mov    eax,0x1
 100ad75:	eb 05                	jmp    100ad7c <insert_complex_3+0x279>
 100ad77:	b8 00 00 00 00       	mov    eax,0x0
 100ad7c:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 100ad7f:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 100ad83:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100ad87:	74 1c                	je     100ada5 <insert_complex_3+0x2a2>
 100ad89:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100ad8d:	be 56 a1 00 01       	mov    esi,0x100a156
 100ad92:	48 89 c7             	mov    rdi,rax
 100ad95:	e8 f8 c3 ff ff       	call   1007192 <avl_tree_validate>
 100ad9a:	84 c0                	test   al,al
 100ad9c:	74 07                	je     100ada5 <insert_complex_3+0x2a2>
 100ad9e:	b8 01 00 00 00       	mov    eax,0x1
 100ada3:	eb 05                	jmp    100adaa <insert_complex_3+0x2a7>
 100ada5:	b8 00 00 00 00       	mov    eax,0x0
 100adaa:	83 e0 01             	and    eax,0x1
 100adad:	c9                   	leave  
 100adae:	c3                   	ret    

000000000100adaf <insert_complex_4>:
 100adaf:	55                   	push   rbp
 100adb0:	48 89 e5             	mov    rbp,rsp
 100adb3:	48 83 ec 70          	sub    rsp,0x70
 100adb7:	c6 45 ff 01          	mov    BYTE PTR [rbp-0x1],0x1
 100adbb:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100adbf:	48 89 c7             	mov    rdi,rax
 100adc2:	e8 00 c2 ff ff       	call   1006fc7 <avl_tree_init>
 100adc7:	bf 14 00 00 00       	mov    edi,0x14
 100adcc:	e8 5c f3 ff ff       	call   100a12d <create_tree_node>
 100add1:	48 89 c1             	mov    rcx,rax
 100add4:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100add8:	ba 56 a1 00 01       	mov    edx,0x100a156
 100addd:	48 89 ce             	mov    rsi,rcx
 100ade0:	48 89 c7             	mov    rdi,rax
 100ade3:	e8 d7 c0 ff ff       	call   1006ebf <avl_tree_insert>
 100ade8:	bf 04 00 00 00       	mov    edi,0x4
 100aded:	e8 3b f3 ff ff       	call   100a12d <create_tree_node>
 100adf2:	48 89 c1             	mov    rcx,rax
 100adf5:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100adf9:	ba 56 a1 00 01       	mov    edx,0x100a156
 100adfe:	48 89 ce             	mov    rsi,rcx
 100ae01:	48 89 c7             	mov    rdi,rax
 100ae04:	e8 b6 c0 ff ff       	call   1006ebf <avl_tree_insert>
 100ae09:	bf 1a 00 00 00       	mov    edi,0x1a
 100ae0e:	e8 1a f3 ff ff       	call   100a12d <create_tree_node>
 100ae13:	48 89 c1             	mov    rcx,rax
 100ae16:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100ae1a:	ba 56 a1 00 01       	mov    edx,0x100a156
 100ae1f:	48 89 ce             	mov    rsi,rcx
 100ae22:	48 89 c7             	mov    rdi,rax
 100ae25:	e8 95 c0 ff ff       	call   1006ebf <avl_tree_insert>
 100ae2a:	bf 03 00 00 00       	mov    edi,0x3
 100ae2f:	e8 f9 f2 ff ff       	call   100a12d <create_tree_node>
 100ae34:	48 89 c1             	mov    rcx,rax
 100ae37:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100ae3b:	ba 56 a1 00 01       	mov    edx,0x100a156
 100ae40:	48 89 ce             	mov    rsi,rcx
 100ae43:	48 89 c7             	mov    rdi,rax
 100ae46:	e8 74 c0 ff ff       	call   1006ebf <avl_tree_insert>
 100ae4b:	bf 09 00 00 00       	mov    edi,0x9
 100ae50:	e8 d8 f2 ff ff       	call   100a12d <create_tree_node>
 100ae55:	48 89 c1             	mov    rcx,rax
 100ae58:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100ae5c:	ba 56 a1 00 01       	mov    edx,0x100a156
 100ae61:	48 89 ce             	mov    rsi,rcx
 100ae64:	48 89 c7             	mov    rdi,rax
 100ae67:	e8 53 c0 ff ff       	call   1006ebf <avl_tree_insert>
 100ae6c:	bf 15 00 00 00       	mov    edi,0x15
 100ae71:	e8 b7 f2 ff ff       	call   100a12d <create_tree_node>
 100ae76:	48 89 c1             	mov    rcx,rax
 100ae79:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100ae7d:	ba 56 a1 00 01       	mov    edx,0x100a156
 100ae82:	48 89 ce             	mov    rsi,rcx
 100ae85:	48 89 c7             	mov    rdi,rax
 100ae88:	e8 32 c0 ff ff       	call   1006ebf <avl_tree_insert>
 100ae8d:	bf 1e 00 00 00       	mov    edi,0x1e
 100ae92:	e8 96 f2 ff ff       	call   100a12d <create_tree_node>
 100ae97:	48 89 c1             	mov    rcx,rax
 100ae9a:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100ae9e:	ba 56 a1 00 01       	mov    edx,0x100a156
 100aea3:	48 89 ce             	mov    rsi,rcx
 100aea6:	48 89 c7             	mov    rdi,rax
 100aea9:	e8 11 c0 ff ff       	call   1006ebf <avl_tree_insert>
 100aeae:	bf 02 00 00 00       	mov    edi,0x2
 100aeb3:	e8 75 f2 ff ff       	call   100a12d <create_tree_node>
 100aeb8:	48 89 c1             	mov    rcx,rax
 100aebb:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100aebf:	ba 56 a1 00 01       	mov    edx,0x100a156
 100aec4:	48 89 ce             	mov    rsi,rcx
 100aec7:	48 89 c7             	mov    rdi,rax
 100aeca:	e8 f0 bf ff ff       	call   1006ebf <avl_tree_insert>
 100aecf:	bf 07 00 00 00       	mov    edi,0x7
 100aed4:	e8 54 f2 ff ff       	call   100a12d <create_tree_node>
 100aed9:	48 89 c1             	mov    rcx,rax
 100aedc:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100aee0:	ba 56 a1 00 01       	mov    edx,0x100a156
 100aee5:	48 89 ce             	mov    rsi,rcx
 100aee8:	48 89 c7             	mov    rdi,rax
 100aeeb:	e8 cf bf ff ff       	call   1006ebf <avl_tree_insert>
 100aef0:	bf 0b 00 00 00       	mov    edi,0xb
 100aef5:	e8 33 f2 ff ff       	call   100a12d <create_tree_node>
 100aefa:	48 89 c1             	mov    rcx,rax
 100aefd:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100af01:	ba 56 a1 00 01       	mov    edx,0x100a156
 100af06:	48 89 ce             	mov    rsi,rcx
 100af09:	48 89 c7             	mov    rdi,rax
 100af0c:	e8 ae bf ff ff       	call   1006ebf <avl_tree_insert>
 100af11:	c7 45 c8 14 00 00 00 	mov    DWORD PTR [rbp-0x38],0x14
 100af18:	c7 45 cc 04 00 00 00 	mov    DWORD PTR [rbp-0x34],0x4
 100af1f:	c7 45 d0 03 00 00 00 	mov    DWORD PTR [rbp-0x30],0x3
 100af26:	c7 45 d4 02 00 00 00 	mov    DWORD PTR [rbp-0x2c],0x2
 100af2d:	c7 45 d8 09 00 00 00 	mov    DWORD PTR [rbp-0x28],0x9
 100af34:	c7 45 dc 07 00 00 00 	mov    DWORD PTR [rbp-0x24],0x7
 100af3b:	c7 45 e0 0b 00 00 00 	mov    DWORD PTR [rbp-0x20],0xb
 100af42:	c7 45 e4 1a 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x1a
 100af49:	c7 45 e8 15 00 00 00 	mov    DWORD PTR [rbp-0x18],0x15
 100af50:	c7 45 ec 1e 00 00 00 	mov    DWORD PTR [rbp-0x14],0x1e
 100af57:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100af5b:	74 23                	je     100af80 <insert_complex_4+0x1d1>
 100af5d:	48 8d 4d c8          	lea    rcx,[rbp-0x38]
 100af61:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100af65:	ba 0a 00 00 00       	mov    edx,0xa
 100af6a:	48 89 ce             	mov    rsi,rcx
 100af6d:	48 89 c7             	mov    rdi,rax
 100af70:	e8 04 f3 ff ff       	call   100a279 <pre_order_assert>
 100af75:	84 c0                	test   al,al
 100af77:	74 07                	je     100af80 <insert_complex_4+0x1d1>
 100af79:	b8 01 00 00 00       	mov    eax,0x1
 100af7e:	eb 05                	jmp    100af85 <insert_complex_4+0x1d6>
 100af80:	b8 00 00 00 00       	mov    eax,0x0
 100af85:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 100af88:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 100af8c:	bf 08 00 00 00       	mov    edi,0x8
 100af91:	e8 97 f1 ff ff       	call   100a12d <create_tree_node>
 100af96:	48 89 c1             	mov    rcx,rax
 100af99:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100af9d:	ba 56 a1 00 01       	mov    edx,0x100a156
 100afa2:	48 89 ce             	mov    rsi,rcx
 100afa5:	48 89 c7             	mov    rdi,rax
 100afa8:	e8 12 bf ff ff       	call   1006ebf <avl_tree_insert>
 100afad:	c7 45 9c 09 00 00 00 	mov    DWORD PTR [rbp-0x64],0x9
 100afb4:	c7 45 a0 04 00 00 00 	mov    DWORD PTR [rbp-0x60],0x4
 100afbb:	c7 45 a4 03 00 00 00 	mov    DWORD PTR [rbp-0x5c],0x3
 100afc2:	c7 45 a8 02 00 00 00 	mov    DWORD PTR [rbp-0x58],0x2
 100afc9:	c7 45 ac 07 00 00 00 	mov    DWORD PTR [rbp-0x54],0x7
 100afd0:	c7 45 b0 08 00 00 00 	mov    DWORD PTR [rbp-0x50],0x8
 100afd7:	c7 45 b4 14 00 00 00 	mov    DWORD PTR [rbp-0x4c],0x14
 100afde:	c7 45 b8 0b 00 00 00 	mov    DWORD PTR [rbp-0x48],0xb
 100afe5:	c7 45 bc 1a 00 00 00 	mov    DWORD PTR [rbp-0x44],0x1a
 100afec:	c7 45 c0 15 00 00 00 	mov    DWORD PTR [rbp-0x40],0x15
 100aff3:	c7 45 c4 1e 00 00 00 	mov    DWORD PTR [rbp-0x3c],0x1e
 100affa:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100affe:	74 23                	je     100b023 <insert_complex_4+0x274>
 100b000:	48 8d 4d 9c          	lea    rcx,[rbp-0x64]
 100b004:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100b008:	ba 0b 00 00 00       	mov    edx,0xb
 100b00d:	48 89 ce             	mov    rsi,rcx
 100b010:	48 89 c7             	mov    rdi,rax
 100b013:	e8 61 f2 ff ff       	call   100a279 <pre_order_assert>
 100b018:	84 c0                	test   al,al
 100b01a:	74 07                	je     100b023 <insert_complex_4+0x274>
 100b01c:	b8 01 00 00 00       	mov    eax,0x1
 100b021:	eb 05                	jmp    100b028 <insert_complex_4+0x279>
 100b023:	b8 00 00 00 00       	mov    eax,0x0
 100b028:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 100b02b:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 100b02f:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100b033:	74 1c                	je     100b051 <insert_complex_4+0x2a2>
 100b035:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100b039:	be 56 a1 00 01       	mov    esi,0x100a156
 100b03e:	48 89 c7             	mov    rdi,rax
 100b041:	e8 4c c1 ff ff       	call   1007192 <avl_tree_validate>
 100b046:	84 c0                	test   al,al
 100b048:	74 07                	je     100b051 <insert_complex_4+0x2a2>
 100b04a:	b8 01 00 00 00       	mov    eax,0x1
 100b04f:	eb 05                	jmp    100b056 <insert_complex_4+0x2a7>
 100b051:	b8 00 00 00 00       	mov    eax,0x0
 100b056:	83 e0 01             	and    eax,0x1
 100b059:	c9                   	leave  
 100b05a:	c3                   	ret    

000000000100b05b <insert_duplicate>:
 100b05b:	55                   	push   rbp
 100b05c:	48 89 e5             	mov    rbp,rsp
 100b05f:	48 83 ec 40          	sub    rsp,0x40
 100b063:	c6 45 ff 01          	mov    BYTE PTR [rbp-0x1],0x1
 100b067:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100b06b:	48 89 c7             	mov    rdi,rax
 100b06e:	e8 54 bf ff ff       	call   1006fc7 <avl_tree_init>
 100b073:	bf 14 00 00 00       	mov    edi,0x14
 100b078:	e8 b0 f0 ff ff       	call   100a12d <create_tree_node>
 100b07d:	48 89 c1             	mov    rcx,rax
 100b080:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100b084:	ba 56 a1 00 01       	mov    edx,0x100a156
 100b089:	48 89 ce             	mov    rsi,rcx
 100b08c:	48 89 c7             	mov    rdi,rax
 100b08f:	e8 2b be ff ff       	call   1006ebf <avl_tree_insert>
 100b094:	bf 04 00 00 00       	mov    edi,0x4
 100b099:	e8 8f f0 ff ff       	call   100a12d <create_tree_node>
 100b09e:	48 89 c1             	mov    rcx,rax
 100b0a1:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100b0a5:	ba 56 a1 00 01       	mov    edx,0x100a156
 100b0aa:	48 89 ce             	mov    rsi,rcx
 100b0ad:	48 89 c7             	mov    rdi,rax
 100b0b0:	e8 0a be ff ff       	call   1006ebf <avl_tree_insert>
 100b0b5:	bf 1a 00 00 00       	mov    edi,0x1a
 100b0ba:	e8 6e f0 ff ff       	call   100a12d <create_tree_node>
 100b0bf:	48 89 c1             	mov    rcx,rax
 100b0c2:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100b0c6:	ba 56 a1 00 01       	mov    edx,0x100a156
 100b0cb:	48 89 ce             	mov    rsi,rcx
 100b0ce:	48 89 c7             	mov    rdi,rax
 100b0d1:	e8 e9 bd ff ff       	call   1006ebf <avl_tree_insert>
 100b0d6:	bf 03 00 00 00       	mov    edi,0x3
 100b0db:	e8 4d f0 ff ff       	call   100a12d <create_tree_node>
 100b0e0:	48 89 c1             	mov    rcx,rax
 100b0e3:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100b0e7:	ba 56 a1 00 01       	mov    edx,0x100a156
 100b0ec:	48 89 ce             	mov    rsi,rcx
 100b0ef:	48 89 c7             	mov    rdi,rax
 100b0f2:	e8 c8 bd ff ff       	call   1006ebf <avl_tree_insert>
 100b0f7:	bf 09 00 00 00       	mov    edi,0x9
 100b0fc:	e8 2c f0 ff ff       	call   100a12d <create_tree_node>
 100b101:	48 89 c1             	mov    rcx,rax
 100b104:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100b108:	ba 56 a1 00 01       	mov    edx,0x100a156
 100b10d:	48 89 ce             	mov    rsi,rcx
 100b110:	48 89 c7             	mov    rdi,rax
 100b113:	e8 a7 bd ff ff       	call   1006ebf <avl_tree_insert>
 100b118:	bf 15 00 00 00       	mov    edi,0x15
 100b11d:	e8 0b f0 ff ff       	call   100a12d <create_tree_node>
 100b122:	48 89 c1             	mov    rcx,rax
 100b125:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100b129:	ba 56 a1 00 01       	mov    edx,0x100a156
 100b12e:	48 89 ce             	mov    rsi,rcx
 100b131:	48 89 c7             	mov    rdi,rax
 100b134:	e8 86 bd ff ff       	call   1006ebf <avl_tree_insert>
 100b139:	bf 1e 00 00 00       	mov    edi,0x1e
 100b13e:	e8 ea ef ff ff       	call   100a12d <create_tree_node>
 100b143:	48 89 c1             	mov    rcx,rax
 100b146:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100b14a:	ba 56 a1 00 01       	mov    edx,0x100a156
 100b14f:	48 89 ce             	mov    rsi,rcx
 100b152:	48 89 c7             	mov    rdi,rax
 100b155:	e8 65 bd ff ff       	call   1006ebf <avl_tree_insert>
 100b15a:	bf 02 00 00 00       	mov    edi,0x2
 100b15f:	e8 c9 ef ff ff       	call   100a12d <create_tree_node>
 100b164:	48 89 c1             	mov    rcx,rax
 100b167:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100b16b:	ba 56 a1 00 01       	mov    edx,0x100a156
 100b170:	48 89 ce             	mov    rsi,rcx
 100b173:	48 89 c7             	mov    rdi,rax
 100b176:	e8 44 bd ff ff       	call   1006ebf <avl_tree_insert>
 100b17b:	bf 07 00 00 00       	mov    edi,0x7
 100b180:	e8 a8 ef ff ff       	call   100a12d <create_tree_node>
 100b185:	48 89 c1             	mov    rcx,rax
 100b188:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100b18c:	ba 56 a1 00 01       	mov    edx,0x100a156
 100b191:	48 89 ce             	mov    rsi,rcx
 100b194:	48 89 c7             	mov    rdi,rax
 100b197:	e8 23 bd ff ff       	call   1006ebf <avl_tree_insert>
 100b19c:	bf 0b 00 00 00       	mov    edi,0xb
 100b1a1:	e8 87 ef ff ff       	call   100a12d <create_tree_node>
 100b1a6:	48 89 c1             	mov    rcx,rax
 100b1a9:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100b1ad:	ba 56 a1 00 01       	mov    edx,0x100a156
 100b1b2:	48 89 ce             	mov    rsi,rcx
 100b1b5:	48 89 c7             	mov    rdi,rax
 100b1b8:	e8 02 bd ff ff       	call   1006ebf <avl_tree_insert>
 100b1bd:	c7 45 c8 14 00 00 00 	mov    DWORD PTR [rbp-0x38],0x14
 100b1c4:	c7 45 cc 04 00 00 00 	mov    DWORD PTR [rbp-0x34],0x4
 100b1cb:	c7 45 d0 03 00 00 00 	mov    DWORD PTR [rbp-0x30],0x3
 100b1d2:	c7 45 d4 02 00 00 00 	mov    DWORD PTR [rbp-0x2c],0x2
 100b1d9:	c7 45 d8 09 00 00 00 	mov    DWORD PTR [rbp-0x28],0x9
 100b1e0:	c7 45 dc 07 00 00 00 	mov    DWORD PTR [rbp-0x24],0x7
 100b1e7:	c7 45 e0 0b 00 00 00 	mov    DWORD PTR [rbp-0x20],0xb
 100b1ee:	c7 45 e4 1a 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x1a
 100b1f5:	c7 45 e8 15 00 00 00 	mov    DWORD PTR [rbp-0x18],0x15
 100b1fc:	c7 45 ec 1e 00 00 00 	mov    DWORD PTR [rbp-0x14],0x1e
 100b203:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100b207:	74 23                	je     100b22c <insert_duplicate+0x1d1>
 100b209:	48 8d 4d c8          	lea    rcx,[rbp-0x38]
 100b20d:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100b211:	ba 0a 00 00 00       	mov    edx,0xa
 100b216:	48 89 ce             	mov    rsi,rcx
 100b219:	48 89 c7             	mov    rdi,rax
 100b21c:	e8 58 f0 ff ff       	call   100a279 <pre_order_assert>
 100b221:	84 c0                	test   al,al
 100b223:	74 07                	je     100b22c <insert_duplicate+0x1d1>
 100b225:	b8 01 00 00 00       	mov    eax,0x1
 100b22a:	eb 05                	jmp    100b231 <insert_duplicate+0x1d6>
 100b22c:	b8 00 00 00 00       	mov    eax,0x0
 100b231:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 100b234:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 100b238:	bf 14 00 00 00       	mov    edi,0x14
 100b23d:	e8 eb ee ff ff       	call   100a12d <create_tree_node>
 100b242:	48 89 c1             	mov    rcx,rax
 100b245:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100b249:	ba 56 a1 00 01       	mov    edx,0x100a156
 100b24e:	48 89 ce             	mov    rsi,rcx
 100b251:	48 89 c7             	mov    rdi,rax
 100b254:	e8 66 bc ff ff       	call   1006ebf <avl_tree_insert>
 100b259:	bf 1e 00 00 00       	mov    edi,0x1e
 100b25e:	e8 ca ee ff ff       	call   100a12d <create_tree_node>
 100b263:	48 89 c1             	mov    rcx,rax
 100b266:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100b26a:	ba 56 a1 00 01       	mov    edx,0x100a156
 100b26f:	48 89 ce             	mov    rsi,rcx
 100b272:	48 89 c7             	mov    rdi,rax
 100b275:	e8 45 bc ff ff       	call   1006ebf <avl_tree_insert>
 100b27a:	bf 07 00 00 00       	mov    edi,0x7
 100b27f:	e8 a9 ee ff ff       	call   100a12d <create_tree_node>
 100b284:	48 89 c1             	mov    rcx,rax
 100b287:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100b28b:	ba 56 a1 00 01       	mov    edx,0x100a156
 100b290:	48 89 ce             	mov    rsi,rcx
 100b293:	48 89 c7             	mov    rdi,rax
 100b296:	e8 24 bc ff ff       	call   1006ebf <avl_tree_insert>
 100b29b:	bf 02 00 00 00       	mov    edi,0x2
 100b2a0:	e8 88 ee ff ff       	call   100a12d <create_tree_node>
 100b2a5:	48 89 c1             	mov    rcx,rax
 100b2a8:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100b2ac:	ba 56 a1 00 01       	mov    edx,0x100a156
 100b2b1:	48 89 ce             	mov    rsi,rcx
 100b2b4:	48 89 c7             	mov    rdi,rax
 100b2b7:	e8 03 bc ff ff       	call   1006ebf <avl_tree_insert>
 100b2bc:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100b2c0:	74 23                	je     100b2e5 <insert_duplicate+0x28a>
 100b2c2:	48 8d 4d c8          	lea    rcx,[rbp-0x38]
 100b2c6:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100b2ca:	ba 0a 00 00 00       	mov    edx,0xa
 100b2cf:	48 89 ce             	mov    rsi,rcx
 100b2d2:	48 89 c7             	mov    rdi,rax
 100b2d5:	e8 9f ef ff ff       	call   100a279 <pre_order_assert>
 100b2da:	84 c0                	test   al,al
 100b2dc:	74 07                	je     100b2e5 <insert_duplicate+0x28a>
 100b2de:	b8 01 00 00 00       	mov    eax,0x1
 100b2e3:	eb 05                	jmp    100b2ea <insert_duplicate+0x28f>
 100b2e5:	b8 00 00 00 00       	mov    eax,0x0
 100b2ea:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 100b2ed:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 100b2f1:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100b2f5:	74 1c                	je     100b313 <insert_duplicate+0x2b8>
 100b2f7:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100b2fb:	be 56 a1 00 01       	mov    esi,0x100a156
 100b300:	48 89 c7             	mov    rdi,rax
 100b303:	e8 8a be ff ff       	call   1007192 <avl_tree_validate>
 100b308:	84 c0                	test   al,al
 100b30a:	74 07                	je     100b313 <insert_duplicate+0x2b8>
 100b30c:	b8 01 00 00 00       	mov    eax,0x1
 100b311:	eb 05                	jmp    100b318 <insert_duplicate+0x2bd>
 100b313:	b8 00 00 00 00       	mov    eax,0x0
 100b318:	83 e0 01             	and    eax,0x1
 100b31b:	c9                   	leave  
 100b31c:	c3                   	ret    

000000000100b31d <delete_simple_l>:
 100b31d:	55                   	push   rbp
 100b31e:	48 89 e5             	mov    rbp,rsp
 100b321:	48 83 ec 40          	sub    rsp,0x40
 100b325:	c6 45 ff 01          	mov    BYTE PTR [rbp-0x1],0x1
 100b329:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100b32d:	48 89 c7             	mov    rdi,rax
 100b330:	e8 92 bc ff ff       	call   1006fc7 <avl_tree_init>
 100b335:	bf 01 00 00 00       	mov    edi,0x1
 100b33a:	e8 ee ed ff ff       	call   100a12d <create_tree_node>
 100b33f:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
 100b343:	bf 02 00 00 00       	mov    edi,0x2
 100b348:	e8 e0 ed ff ff       	call   100a12d <create_tree_node>
 100b34d:	48 89 c1             	mov    rcx,rax
 100b350:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100b354:	ba 56 a1 00 01       	mov    edx,0x100a156
 100b359:	48 89 ce             	mov    rsi,rcx
 100b35c:	48 89 c7             	mov    rdi,rax
 100b35f:	e8 5b bb ff ff       	call   1006ebf <avl_tree_insert>
 100b364:	bf 03 00 00 00       	mov    edi,0x3
 100b369:	e8 bf ed ff ff       	call   100a12d <create_tree_node>
 100b36e:	48 89 c1             	mov    rcx,rax
 100b371:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100b375:	ba 56 a1 00 01       	mov    edx,0x100a156
 100b37a:	48 89 ce             	mov    rsi,rcx
 100b37d:	48 89 c7             	mov    rdi,rax
 100b380:	e8 3a bb ff ff       	call   1006ebf <avl_tree_insert>
 100b385:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
 100b389:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100b38d:	ba 56 a1 00 01       	mov    edx,0x100a156
 100b392:	48 89 ce             	mov    rsi,rcx
 100b395:	48 89 c7             	mov    rdi,rax
 100b398:	e8 22 bb ff ff       	call   1006ebf <avl_tree_insert>
 100b39d:	bf 04 00 00 00       	mov    edi,0x4
 100b3a2:	e8 86 ed ff ff       	call   100a12d <create_tree_node>
 100b3a7:	48 89 c1             	mov    rcx,rax
 100b3aa:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100b3ae:	ba 56 a1 00 01       	mov    edx,0x100a156
 100b3b3:	48 89 ce             	mov    rsi,rcx
 100b3b6:	48 89 c7             	mov    rdi,rax
 100b3b9:	e8 01 bb ff ff       	call   1006ebf <avl_tree_insert>
 100b3be:	c7 45 d8 02 00 00 00 	mov    DWORD PTR [rbp-0x28],0x2
 100b3c5:	c7 45 dc 01 00 00 00 	mov    DWORD PTR [rbp-0x24],0x1
 100b3cc:	c7 45 e0 03 00 00 00 	mov    DWORD PTR [rbp-0x20],0x3
 100b3d3:	c7 45 e4 04 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x4
 100b3da:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100b3de:	74 23                	je     100b403 <delete_simple_l+0xe6>
 100b3e0:	48 8d 4d d8          	lea    rcx,[rbp-0x28]
 100b3e4:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100b3e8:	ba 04 00 00 00       	mov    edx,0x4
 100b3ed:	48 89 ce             	mov    rsi,rcx
 100b3f0:	48 89 c7             	mov    rdi,rax
 100b3f3:	e8 81 ee ff ff       	call   100a279 <pre_order_assert>
 100b3f8:	84 c0                	test   al,al
 100b3fa:	74 07                	je     100b403 <delete_simple_l+0xe6>
 100b3fc:	b8 01 00 00 00       	mov    eax,0x1
 100b401:	eb 05                	jmp    100b408 <delete_simple_l+0xeb>
 100b403:	b8 00 00 00 00       	mov    eax,0x0
 100b408:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 100b40b:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 100b40f:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
 100b413:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100b417:	ba 56 a1 00 01       	mov    edx,0x100a156
 100b41c:	48 89 ce             	mov    rsi,rcx
 100b41f:	48 89 c7             	mov    rdi,rax
 100b422:	e8 f0 ba ff ff       	call   1006f17 <avl_tree_delete>
 100b427:	c7 45 cc 03 00 00 00 	mov    DWORD PTR [rbp-0x34],0x3
 100b42e:	c7 45 d0 02 00 00 00 	mov    DWORD PTR [rbp-0x30],0x2
 100b435:	c7 45 d4 04 00 00 00 	mov    DWORD PTR [rbp-0x2c],0x4
 100b43c:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100b440:	74 23                	je     100b465 <delete_simple_l+0x148>
 100b442:	48 8d 4d cc          	lea    rcx,[rbp-0x34]
 100b446:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100b44a:	ba 03 00 00 00       	mov    edx,0x3
 100b44f:	48 89 ce             	mov    rsi,rcx
 100b452:	48 89 c7             	mov    rdi,rax
 100b455:	e8 1f ee ff ff       	call   100a279 <pre_order_assert>
 100b45a:	84 c0                	test   al,al
 100b45c:	74 07                	je     100b465 <delete_simple_l+0x148>
 100b45e:	b8 01 00 00 00       	mov    eax,0x1
 100b463:	eb 05                	jmp    100b46a <delete_simple_l+0x14d>
 100b465:	b8 00 00 00 00       	mov    eax,0x0
 100b46a:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 100b46d:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 100b471:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100b475:	74 1c                	je     100b493 <delete_simple_l+0x176>
 100b477:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100b47b:	be 56 a1 00 01       	mov    esi,0x100a156
 100b480:	48 89 c7             	mov    rdi,rax
 100b483:	e8 0a bd ff ff       	call   1007192 <avl_tree_validate>
 100b488:	84 c0                	test   al,al
 100b48a:	74 07                	je     100b493 <delete_simple_l+0x176>
 100b48c:	b8 01 00 00 00       	mov    eax,0x1
 100b491:	eb 05                	jmp    100b498 <delete_simple_l+0x17b>
 100b493:	b8 00 00 00 00       	mov    eax,0x0
 100b498:	83 e0 01             	and    eax,0x1
 100b49b:	c9                   	leave  
 100b49c:	c3                   	ret    

000000000100b49d <delete_simple_r>:
 100b49d:	55                   	push   rbp
 100b49e:	48 89 e5             	mov    rbp,rsp
 100b4a1:	48 83 ec 40          	sub    rsp,0x40
 100b4a5:	c6 45 ff 01          	mov    BYTE PTR [rbp-0x1],0x1
 100b4a9:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100b4ad:	48 89 c7             	mov    rdi,rax
 100b4b0:	e8 12 bb ff ff       	call   1006fc7 <avl_tree_init>
 100b4b5:	bf 04 00 00 00       	mov    edi,0x4
 100b4ba:	e8 6e ec ff ff       	call   100a12d <create_tree_node>
 100b4bf:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
 100b4c3:	bf 03 00 00 00       	mov    edi,0x3
 100b4c8:	e8 60 ec ff ff       	call   100a12d <create_tree_node>
 100b4cd:	48 89 c1             	mov    rcx,rax
 100b4d0:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100b4d4:	ba 56 a1 00 01       	mov    edx,0x100a156
 100b4d9:	48 89 ce             	mov    rsi,rcx
 100b4dc:	48 89 c7             	mov    rdi,rax
 100b4df:	e8 db b9 ff ff       	call   1006ebf <avl_tree_insert>
 100b4e4:	bf 02 00 00 00       	mov    edi,0x2
 100b4e9:	e8 3f ec ff ff       	call   100a12d <create_tree_node>
 100b4ee:	48 89 c1             	mov    rcx,rax
 100b4f1:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100b4f5:	ba 56 a1 00 01       	mov    edx,0x100a156
 100b4fa:	48 89 ce             	mov    rsi,rcx
 100b4fd:	48 89 c7             	mov    rdi,rax
 100b500:	e8 ba b9 ff ff       	call   1006ebf <avl_tree_insert>
 100b505:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
 100b509:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100b50d:	ba 56 a1 00 01       	mov    edx,0x100a156
 100b512:	48 89 ce             	mov    rsi,rcx
 100b515:	48 89 c7             	mov    rdi,rax
 100b518:	e8 a2 b9 ff ff       	call   1006ebf <avl_tree_insert>
 100b51d:	bf 01 00 00 00       	mov    edi,0x1
 100b522:	e8 06 ec ff ff       	call   100a12d <create_tree_node>
 100b527:	48 89 c1             	mov    rcx,rax
 100b52a:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100b52e:	ba 56 a1 00 01       	mov    edx,0x100a156
 100b533:	48 89 ce             	mov    rsi,rcx
 100b536:	48 89 c7             	mov    rdi,rax
 100b539:	e8 81 b9 ff ff       	call   1006ebf <avl_tree_insert>
 100b53e:	c7 45 d8 03 00 00 00 	mov    DWORD PTR [rbp-0x28],0x3
 100b545:	c7 45 dc 02 00 00 00 	mov    DWORD PTR [rbp-0x24],0x2
 100b54c:	c7 45 e0 01 00 00 00 	mov    DWORD PTR [rbp-0x20],0x1
 100b553:	c7 45 e4 04 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x4
 100b55a:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100b55e:	74 23                	je     100b583 <delete_simple_r+0xe6>
 100b560:	48 8d 4d d8          	lea    rcx,[rbp-0x28]
 100b564:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100b568:	ba 04 00 00 00       	mov    edx,0x4
 100b56d:	48 89 ce             	mov    rsi,rcx
 100b570:	48 89 c7             	mov    rdi,rax
 100b573:	e8 01 ed ff ff       	call   100a279 <pre_order_assert>
 100b578:	84 c0                	test   al,al
 100b57a:	74 07                	je     100b583 <delete_simple_r+0xe6>
 100b57c:	b8 01 00 00 00       	mov    eax,0x1
 100b581:	eb 05                	jmp    100b588 <delete_simple_r+0xeb>
 100b583:	b8 00 00 00 00       	mov    eax,0x0
 100b588:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 100b58b:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 100b58f:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
 100b593:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100b597:	ba 56 a1 00 01       	mov    edx,0x100a156
 100b59c:	48 89 ce             	mov    rsi,rcx
 100b59f:	48 89 c7             	mov    rdi,rax
 100b5a2:	e8 70 b9 ff ff       	call   1006f17 <avl_tree_delete>
 100b5a7:	c7 45 cc 02 00 00 00 	mov    DWORD PTR [rbp-0x34],0x2
 100b5ae:	c7 45 d0 01 00 00 00 	mov    DWORD PTR [rbp-0x30],0x1
 100b5b5:	c7 45 d4 03 00 00 00 	mov    DWORD PTR [rbp-0x2c],0x3
 100b5bc:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100b5c0:	74 23                	je     100b5e5 <delete_simple_r+0x148>
 100b5c2:	48 8d 4d cc          	lea    rcx,[rbp-0x34]
 100b5c6:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100b5ca:	ba 03 00 00 00       	mov    edx,0x3
 100b5cf:	48 89 ce             	mov    rsi,rcx
 100b5d2:	48 89 c7             	mov    rdi,rax
 100b5d5:	e8 9f ec ff ff       	call   100a279 <pre_order_assert>
 100b5da:	84 c0                	test   al,al
 100b5dc:	74 07                	je     100b5e5 <delete_simple_r+0x148>
 100b5de:	b8 01 00 00 00       	mov    eax,0x1
 100b5e3:	eb 05                	jmp    100b5ea <delete_simple_r+0x14d>
 100b5e5:	b8 00 00 00 00       	mov    eax,0x0
 100b5ea:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 100b5ed:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 100b5f1:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100b5f5:	74 1c                	je     100b613 <delete_simple_r+0x176>
 100b5f7:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100b5fb:	be 56 a1 00 01       	mov    esi,0x100a156
 100b600:	48 89 c7             	mov    rdi,rax
 100b603:	e8 8a bb ff ff       	call   1007192 <avl_tree_validate>
 100b608:	84 c0                	test   al,al
 100b60a:	74 07                	je     100b613 <delete_simple_r+0x176>
 100b60c:	b8 01 00 00 00       	mov    eax,0x1
 100b611:	eb 05                	jmp    100b618 <delete_simple_r+0x17b>
 100b613:	b8 00 00 00 00       	mov    eax,0x0
 100b618:	83 e0 01             	and    eax,0x1
 100b61b:	c9                   	leave  
 100b61c:	c3                   	ret    

000000000100b61d <delete_simple_ll>:
 100b61d:	55                   	push   rbp
 100b61e:	48 89 e5             	mov    rbp,rsp
 100b621:	48 83 ec 40          	sub    rsp,0x40
 100b625:	c6 45 ff 01          	mov    BYTE PTR [rbp-0x1],0x1
 100b629:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100b62d:	48 89 c7             	mov    rdi,rax
 100b630:	e8 92 b9 ff ff       	call   1006fc7 <avl_tree_init>
 100b635:	bf 01 00 00 00       	mov    edi,0x1
 100b63a:	e8 ee ea ff ff       	call   100a12d <create_tree_node>
 100b63f:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
 100b643:	bf 02 00 00 00       	mov    edi,0x2
 100b648:	e8 e0 ea ff ff       	call   100a12d <create_tree_node>
 100b64d:	48 89 c1             	mov    rcx,rax
 100b650:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100b654:	ba 56 a1 00 01       	mov    edx,0x100a156
 100b659:	48 89 ce             	mov    rsi,rcx
 100b65c:	48 89 c7             	mov    rdi,rax
 100b65f:	e8 5b b8 ff ff       	call   1006ebf <avl_tree_insert>
 100b664:	bf 04 00 00 00       	mov    edi,0x4
 100b669:	e8 bf ea ff ff       	call   100a12d <create_tree_node>
 100b66e:	48 89 c1             	mov    rcx,rax
 100b671:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100b675:	ba 56 a1 00 01       	mov    edx,0x100a156
 100b67a:	48 89 ce             	mov    rsi,rcx
 100b67d:	48 89 c7             	mov    rdi,rax
 100b680:	e8 3a b8 ff ff       	call   1006ebf <avl_tree_insert>
 100b685:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
 100b689:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100b68d:	ba 56 a1 00 01       	mov    edx,0x100a156
 100b692:	48 89 ce             	mov    rsi,rcx
 100b695:	48 89 c7             	mov    rdi,rax
 100b698:	e8 22 b8 ff ff       	call   1006ebf <avl_tree_insert>
 100b69d:	bf 03 00 00 00       	mov    edi,0x3
 100b6a2:	e8 86 ea ff ff       	call   100a12d <create_tree_node>
 100b6a7:	48 89 c1             	mov    rcx,rax
 100b6aa:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100b6ae:	ba 56 a1 00 01       	mov    edx,0x100a156
 100b6b3:	48 89 ce             	mov    rsi,rcx
 100b6b6:	48 89 c7             	mov    rdi,rax
 100b6b9:	e8 01 b8 ff ff       	call   1006ebf <avl_tree_insert>
 100b6be:	c7 45 d8 02 00 00 00 	mov    DWORD PTR [rbp-0x28],0x2
 100b6c5:	c7 45 dc 01 00 00 00 	mov    DWORD PTR [rbp-0x24],0x1
 100b6cc:	c7 45 e0 04 00 00 00 	mov    DWORD PTR [rbp-0x20],0x4
 100b6d3:	c7 45 e4 03 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x3
 100b6da:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100b6de:	74 23                	je     100b703 <delete_simple_ll+0xe6>
 100b6e0:	48 8d 4d d8          	lea    rcx,[rbp-0x28]
 100b6e4:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100b6e8:	ba 04 00 00 00       	mov    edx,0x4
 100b6ed:	48 89 ce             	mov    rsi,rcx
 100b6f0:	48 89 c7             	mov    rdi,rax
 100b6f3:	e8 81 eb ff ff       	call   100a279 <pre_order_assert>
 100b6f8:	84 c0                	test   al,al
 100b6fa:	74 07                	je     100b703 <delete_simple_ll+0xe6>
 100b6fc:	b8 01 00 00 00       	mov    eax,0x1
 100b701:	eb 05                	jmp    100b708 <delete_simple_ll+0xeb>
 100b703:	b8 00 00 00 00       	mov    eax,0x0
 100b708:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 100b70b:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 100b70f:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
 100b713:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100b717:	ba 56 a1 00 01       	mov    edx,0x100a156
 100b71c:	48 89 ce             	mov    rsi,rcx
 100b71f:	48 89 c7             	mov    rdi,rax
 100b722:	e8 f0 b7 ff ff       	call   1006f17 <avl_tree_delete>
 100b727:	c7 45 cc 03 00 00 00 	mov    DWORD PTR [rbp-0x34],0x3
 100b72e:	c7 45 d0 02 00 00 00 	mov    DWORD PTR [rbp-0x30],0x2
 100b735:	c7 45 d4 04 00 00 00 	mov    DWORD PTR [rbp-0x2c],0x4
 100b73c:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100b740:	74 23                	je     100b765 <delete_simple_ll+0x148>
 100b742:	48 8d 4d cc          	lea    rcx,[rbp-0x34]
 100b746:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100b74a:	ba 03 00 00 00       	mov    edx,0x3
 100b74f:	48 89 ce             	mov    rsi,rcx
 100b752:	48 89 c7             	mov    rdi,rax
 100b755:	e8 1f eb ff ff       	call   100a279 <pre_order_assert>
 100b75a:	84 c0                	test   al,al
 100b75c:	74 07                	je     100b765 <delete_simple_ll+0x148>
 100b75e:	b8 01 00 00 00       	mov    eax,0x1
 100b763:	eb 05                	jmp    100b76a <delete_simple_ll+0x14d>
 100b765:	b8 00 00 00 00       	mov    eax,0x0
 100b76a:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 100b76d:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 100b771:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100b775:	74 1c                	je     100b793 <delete_simple_ll+0x176>
 100b777:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100b77b:	be 56 a1 00 01       	mov    esi,0x100a156
 100b780:	48 89 c7             	mov    rdi,rax
 100b783:	e8 0a ba ff ff       	call   1007192 <avl_tree_validate>
 100b788:	84 c0                	test   al,al
 100b78a:	74 07                	je     100b793 <delete_simple_ll+0x176>
 100b78c:	b8 01 00 00 00       	mov    eax,0x1
 100b791:	eb 05                	jmp    100b798 <delete_simple_ll+0x17b>
 100b793:	b8 00 00 00 00       	mov    eax,0x0
 100b798:	83 e0 01             	and    eax,0x1
 100b79b:	c9                   	leave  
 100b79c:	c3                   	ret    

000000000100b79d <delete_simple_rr>:
 100b79d:	55                   	push   rbp
 100b79e:	48 89 e5             	mov    rbp,rsp
 100b7a1:	48 83 ec 40          	sub    rsp,0x40
 100b7a5:	c6 45 ff 01          	mov    BYTE PTR [rbp-0x1],0x1
 100b7a9:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100b7ad:	48 89 c7             	mov    rdi,rax
 100b7b0:	e8 12 b8 ff ff       	call   1006fc7 <avl_tree_init>
 100b7b5:	bf 04 00 00 00       	mov    edi,0x4
 100b7ba:	e8 6e e9 ff ff       	call   100a12d <create_tree_node>
 100b7bf:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
 100b7c3:	bf 03 00 00 00       	mov    edi,0x3
 100b7c8:	e8 60 e9 ff ff       	call   100a12d <create_tree_node>
 100b7cd:	48 89 c1             	mov    rcx,rax
 100b7d0:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100b7d4:	ba 56 a1 00 01       	mov    edx,0x100a156
 100b7d9:	48 89 ce             	mov    rsi,rcx
 100b7dc:	48 89 c7             	mov    rdi,rax
 100b7df:	e8 db b6 ff ff       	call   1006ebf <avl_tree_insert>
 100b7e4:	bf 02 00 00 00       	mov    edi,0x2
 100b7e9:	e8 3f e9 ff ff       	call   100a12d <create_tree_node>
 100b7ee:	48 89 c1             	mov    rcx,rax
 100b7f1:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100b7f5:	ba 56 a1 00 01       	mov    edx,0x100a156
 100b7fa:	48 89 ce             	mov    rsi,rcx
 100b7fd:	48 89 c7             	mov    rdi,rax
 100b800:	e8 ba b6 ff ff       	call   1006ebf <avl_tree_insert>
 100b805:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
 100b809:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100b80d:	ba 56 a1 00 01       	mov    edx,0x100a156
 100b812:	48 89 ce             	mov    rsi,rcx
 100b815:	48 89 c7             	mov    rdi,rax
 100b818:	e8 a2 b6 ff ff       	call   1006ebf <avl_tree_insert>
 100b81d:	bf 01 00 00 00       	mov    edi,0x1
 100b822:	e8 06 e9 ff ff       	call   100a12d <create_tree_node>
 100b827:	48 89 c1             	mov    rcx,rax
 100b82a:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100b82e:	ba 56 a1 00 01       	mov    edx,0x100a156
 100b833:	48 89 ce             	mov    rsi,rcx
 100b836:	48 89 c7             	mov    rdi,rax
 100b839:	e8 81 b6 ff ff       	call   1006ebf <avl_tree_insert>
 100b83e:	c7 45 d8 03 00 00 00 	mov    DWORD PTR [rbp-0x28],0x3
 100b845:	c7 45 dc 02 00 00 00 	mov    DWORD PTR [rbp-0x24],0x2
 100b84c:	c7 45 e0 01 00 00 00 	mov    DWORD PTR [rbp-0x20],0x1
 100b853:	c7 45 e4 04 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x4
 100b85a:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100b85e:	74 23                	je     100b883 <delete_simple_rr+0xe6>
 100b860:	48 8d 4d d8          	lea    rcx,[rbp-0x28]
 100b864:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100b868:	ba 04 00 00 00       	mov    edx,0x4
 100b86d:	48 89 ce             	mov    rsi,rcx
 100b870:	48 89 c7             	mov    rdi,rax
 100b873:	e8 01 ea ff ff       	call   100a279 <pre_order_assert>
 100b878:	84 c0                	test   al,al
 100b87a:	74 07                	je     100b883 <delete_simple_rr+0xe6>
 100b87c:	b8 01 00 00 00       	mov    eax,0x1
 100b881:	eb 05                	jmp    100b888 <delete_simple_rr+0xeb>
 100b883:	b8 00 00 00 00       	mov    eax,0x0
 100b888:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 100b88b:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 100b88f:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
 100b893:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100b897:	ba 56 a1 00 01       	mov    edx,0x100a156
 100b89c:	48 89 ce             	mov    rsi,rcx
 100b89f:	48 89 c7             	mov    rdi,rax
 100b8a2:	e8 70 b6 ff ff       	call   1006f17 <avl_tree_delete>
 100b8a7:	c7 45 cc 02 00 00 00 	mov    DWORD PTR [rbp-0x34],0x2
 100b8ae:	c7 45 d0 01 00 00 00 	mov    DWORD PTR [rbp-0x30],0x1
 100b8b5:	c7 45 d4 03 00 00 00 	mov    DWORD PTR [rbp-0x2c],0x3
 100b8bc:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100b8c0:	74 23                	je     100b8e5 <delete_simple_rr+0x148>
 100b8c2:	48 8d 4d cc          	lea    rcx,[rbp-0x34]
 100b8c6:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100b8ca:	ba 03 00 00 00       	mov    edx,0x3
 100b8cf:	48 89 ce             	mov    rsi,rcx
 100b8d2:	48 89 c7             	mov    rdi,rax
 100b8d5:	e8 9f e9 ff ff       	call   100a279 <pre_order_assert>
 100b8da:	84 c0                	test   al,al
 100b8dc:	74 07                	je     100b8e5 <delete_simple_rr+0x148>
 100b8de:	b8 01 00 00 00       	mov    eax,0x1
 100b8e3:	eb 05                	jmp    100b8ea <delete_simple_rr+0x14d>
 100b8e5:	b8 00 00 00 00       	mov    eax,0x0
 100b8ea:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 100b8ed:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 100b8f1:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100b8f5:	74 1c                	je     100b913 <delete_simple_rr+0x176>
 100b8f7:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100b8fb:	be 56 a1 00 01       	mov    esi,0x100a156
 100b900:	48 89 c7             	mov    rdi,rax
 100b903:	e8 8a b8 ff ff       	call   1007192 <avl_tree_validate>
 100b908:	84 c0                	test   al,al
 100b90a:	74 07                	je     100b913 <delete_simple_rr+0x176>
 100b90c:	b8 01 00 00 00       	mov    eax,0x1
 100b911:	eb 05                	jmp    100b918 <delete_simple_rr+0x17b>
 100b913:	b8 00 00 00 00       	mov    eax,0x0
 100b918:	83 e0 01             	and    eax,0x1
 100b91b:	c9                   	leave  
 100b91c:	c3                   	ret    

000000000100b91d <delete_complex_1>:
 100b91d:	55                   	push   rbp
 100b91e:	48 89 e5             	mov    rbp,rsp
 100b921:	48 83 ec 20          	sub    rsp,0x20
 100b925:	c6 45 ff 01          	mov    BYTE PTR [rbp-0x1],0x1
 100b929:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100b92d:	48 89 c7             	mov    rdi,rax
 100b930:	e8 92 b6 ff ff       	call   1006fc7 <avl_tree_init>
 100b935:	bf 0a 00 00 00       	mov    edi,0xa
 100b93a:	e8 ee e7 ff ff       	call   100a12d <create_tree_node>
 100b93f:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
 100b943:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
 100b947:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100b94b:	ba 56 a1 00 01       	mov    edx,0x100a156
 100b950:	48 89 ce             	mov    rsi,rcx
 100b953:	48 89 c7             	mov    rdi,rax
 100b956:	e8 64 b5 ff ff       	call   1006ebf <avl_tree_insert>
 100b95b:	c7 45 e4 0a 00 00 00 	mov    DWORD PTR [rbp-0x1c],0xa
 100b962:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100b966:	74 23                	je     100b98b <delete_complex_1+0x6e>
 100b968:	48 8d 4d e4          	lea    rcx,[rbp-0x1c]
 100b96c:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100b970:	ba 01 00 00 00       	mov    edx,0x1
 100b975:	48 89 ce             	mov    rsi,rcx
 100b978:	48 89 c7             	mov    rdi,rax
 100b97b:	e8 f9 e8 ff ff       	call   100a279 <pre_order_assert>
 100b980:	84 c0                	test   al,al
 100b982:	74 07                	je     100b98b <delete_complex_1+0x6e>
 100b984:	b8 01 00 00 00       	mov    eax,0x1
 100b989:	eb 05                	jmp    100b990 <delete_complex_1+0x73>
 100b98b:	b8 00 00 00 00       	mov    eax,0x0
 100b990:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 100b993:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 100b997:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
 100b99b:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100b99f:	ba 56 a1 00 01       	mov    edx,0x100a156
 100b9a4:	48 89 ce             	mov    rsi,rcx
 100b9a7:	48 89 c7             	mov    rdi,rax
 100b9aa:	e8 68 b5 ff ff       	call   1006f17 <avl_tree_delete>
 100b9af:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100b9b3:	74 23                	je     100b9d8 <delete_complex_1+0xbb>
 100b9b5:	48 8d 4d e4          	lea    rcx,[rbp-0x1c]
 100b9b9:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100b9bd:	ba 00 00 00 00       	mov    edx,0x0
 100b9c2:	48 89 ce             	mov    rsi,rcx
 100b9c5:	48 89 c7             	mov    rdi,rax
 100b9c8:	e8 ac e8 ff ff       	call   100a279 <pre_order_assert>
 100b9cd:	84 c0                	test   al,al
 100b9cf:	74 07                	je     100b9d8 <delete_complex_1+0xbb>
 100b9d1:	b8 01 00 00 00       	mov    eax,0x1
 100b9d6:	eb 05                	jmp    100b9dd <delete_complex_1+0xc0>
 100b9d8:	b8 00 00 00 00       	mov    eax,0x0
 100b9dd:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 100b9e0:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 100b9e4:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100b9e8:	74 1c                	je     100ba06 <delete_complex_1+0xe9>
 100b9ea:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100b9ee:	be 56 a1 00 01       	mov    esi,0x100a156
 100b9f3:	48 89 c7             	mov    rdi,rax
 100b9f6:	e8 97 b7 ff ff       	call   1007192 <avl_tree_validate>
 100b9fb:	84 c0                	test   al,al
 100b9fd:	74 07                	je     100ba06 <delete_complex_1+0xe9>
 100b9ff:	b8 01 00 00 00       	mov    eax,0x1
 100ba04:	eb 05                	jmp    100ba0b <delete_complex_1+0xee>
 100ba06:	b8 00 00 00 00       	mov    eax,0x0
 100ba0b:	83 e0 01             	and    eax,0x1
 100ba0e:	c9                   	leave  
 100ba0f:	c3                   	ret    

000000000100ba10 <delete_complex_2>:
 100ba10:	55                   	push   rbp
 100ba11:	48 89 e5             	mov    rbp,rsp
 100ba14:	48 83 ec 40          	sub    rsp,0x40
 100ba18:	c6 45 ff 01          	mov    BYTE PTR [rbp-0x1],0x1
 100ba1c:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100ba20:	48 89 c7             	mov    rdi,rax
 100ba23:	e8 9f b5 ff ff       	call   1006fc7 <avl_tree_init>
 100ba28:	bf 14 00 00 00       	mov    edi,0x14
 100ba2d:	e8 fb e6 ff ff       	call   100a12d <create_tree_node>
 100ba32:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
 100ba36:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
 100ba3a:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100ba3e:	ba 56 a1 00 01       	mov    edx,0x100a156
 100ba43:	48 89 ce             	mov    rsi,rcx
 100ba46:	48 89 c7             	mov    rdi,rax
 100ba49:	e8 71 b4 ff ff       	call   1006ebf <avl_tree_insert>
 100ba4e:	bf 0a 00 00 00       	mov    edi,0xa
 100ba53:	e8 d5 e6 ff ff       	call   100a12d <create_tree_node>
 100ba58:	48 89 c1             	mov    rcx,rax
 100ba5b:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100ba5f:	ba 56 a1 00 01       	mov    edx,0x100a156
 100ba64:	48 89 ce             	mov    rsi,rcx
 100ba67:	48 89 c7             	mov    rdi,rax
 100ba6a:	e8 50 b4 ff ff       	call   1006ebf <avl_tree_insert>
 100ba6f:	bf 1e 00 00 00       	mov    edi,0x1e
 100ba74:	e8 b4 e6 ff ff       	call   100a12d <create_tree_node>
 100ba79:	48 89 c1             	mov    rcx,rax
 100ba7c:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100ba80:	ba 56 a1 00 01       	mov    edx,0x100a156
 100ba85:	48 89 ce             	mov    rsi,rcx
 100ba88:	48 89 c7             	mov    rdi,rax
 100ba8b:	e8 2f b4 ff ff       	call   1006ebf <avl_tree_insert>
 100ba90:	bf 19 00 00 00       	mov    edi,0x19
 100ba95:	e8 93 e6 ff ff       	call   100a12d <create_tree_node>
 100ba9a:	48 89 c1             	mov    rcx,rax
 100ba9d:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100baa1:	ba 56 a1 00 01       	mov    edx,0x100a156
 100baa6:	48 89 ce             	mov    rsi,rcx
 100baa9:	48 89 c7             	mov    rdi,rax
 100baac:	e8 0e b4 ff ff       	call   1006ebf <avl_tree_insert>
 100bab1:	bf 23 00 00 00       	mov    edi,0x23
 100bab6:	e8 72 e6 ff ff       	call   100a12d <create_tree_node>
 100babb:	48 89 c1             	mov    rcx,rax
 100babe:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100bac2:	ba 56 a1 00 01       	mov    edx,0x100a156
 100bac7:	48 89 ce             	mov    rsi,rcx
 100baca:	48 89 c7             	mov    rdi,rax
 100bacd:	e8 ed b3 ff ff       	call   1006ebf <avl_tree_insert>
 100bad2:	c7 45 d4 14 00 00 00 	mov    DWORD PTR [rbp-0x2c],0x14
 100bad9:	c7 45 d8 0a 00 00 00 	mov    DWORD PTR [rbp-0x28],0xa
 100bae0:	c7 45 dc 1e 00 00 00 	mov    DWORD PTR [rbp-0x24],0x1e
 100bae7:	c7 45 e0 19 00 00 00 	mov    DWORD PTR [rbp-0x20],0x19
 100baee:	c7 45 e4 23 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x23
 100baf5:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100baf9:	74 23                	je     100bb1e <delete_complex_2+0x10e>
 100bafb:	48 8d 4d d4          	lea    rcx,[rbp-0x2c]
 100baff:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100bb03:	ba 05 00 00 00       	mov    edx,0x5
 100bb08:	48 89 ce             	mov    rsi,rcx
 100bb0b:	48 89 c7             	mov    rdi,rax
 100bb0e:	e8 66 e7 ff ff       	call   100a279 <pre_order_assert>
 100bb13:	84 c0                	test   al,al
 100bb15:	74 07                	je     100bb1e <delete_complex_2+0x10e>
 100bb17:	b8 01 00 00 00       	mov    eax,0x1
 100bb1c:	eb 05                	jmp    100bb23 <delete_complex_2+0x113>
 100bb1e:	b8 00 00 00 00       	mov    eax,0x0
 100bb23:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 100bb26:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 100bb2a:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
 100bb2e:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100bb32:	ba 56 a1 00 01       	mov    edx,0x100a156
 100bb37:	48 89 ce             	mov    rsi,rcx
 100bb3a:	48 89 c7             	mov    rdi,rax
 100bb3d:	e8 d5 b3 ff ff       	call   1006f17 <avl_tree_delete>
 100bb42:	c7 45 c4 19 00 00 00 	mov    DWORD PTR [rbp-0x3c],0x19
 100bb49:	c7 45 c8 0a 00 00 00 	mov    DWORD PTR [rbp-0x38],0xa
 100bb50:	c7 45 cc 1e 00 00 00 	mov    DWORD PTR [rbp-0x34],0x1e
 100bb57:	c7 45 d0 23 00 00 00 	mov    DWORD PTR [rbp-0x30],0x23
 100bb5e:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100bb62:	74 23                	je     100bb87 <delete_complex_2+0x177>
 100bb64:	48 8d 4d c4          	lea    rcx,[rbp-0x3c]
 100bb68:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100bb6c:	ba 04 00 00 00       	mov    edx,0x4
 100bb71:	48 89 ce             	mov    rsi,rcx
 100bb74:	48 89 c7             	mov    rdi,rax
 100bb77:	e8 fd e6 ff ff       	call   100a279 <pre_order_assert>
 100bb7c:	84 c0                	test   al,al
 100bb7e:	74 07                	je     100bb87 <delete_complex_2+0x177>
 100bb80:	b8 01 00 00 00       	mov    eax,0x1
 100bb85:	eb 05                	jmp    100bb8c <delete_complex_2+0x17c>
 100bb87:	b8 00 00 00 00       	mov    eax,0x0
 100bb8c:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 100bb8f:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 100bb93:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100bb97:	74 1c                	je     100bbb5 <delete_complex_2+0x1a5>
 100bb99:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100bb9d:	be 56 a1 00 01       	mov    esi,0x100a156
 100bba2:	48 89 c7             	mov    rdi,rax
 100bba5:	e8 e8 b5 ff ff       	call   1007192 <avl_tree_validate>
 100bbaa:	84 c0                	test   al,al
 100bbac:	74 07                	je     100bbb5 <delete_complex_2+0x1a5>
 100bbae:	b8 01 00 00 00       	mov    eax,0x1
 100bbb3:	eb 05                	jmp    100bbba <delete_complex_2+0x1aa>
 100bbb5:	b8 00 00 00 00       	mov    eax,0x0
 100bbba:	83 e0 01             	and    eax,0x1
 100bbbd:	c9                   	leave  
 100bbbe:	c3                   	ret    

000000000100bbbf <delete_complex_3>:
 100bbbf:	55                   	push   rbp
 100bbc0:	48 89 e5             	mov    rbp,rsp
 100bbc3:	48 83 ec 50          	sub    rsp,0x50
 100bbc7:	c6 45 ff 01          	mov    BYTE PTR [rbp-0x1],0x1
 100bbcb:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100bbcf:	48 89 c7             	mov    rdi,rax
 100bbd2:	e8 f0 b3 ff ff       	call   1006fc7 <avl_tree_init>
 100bbd7:	bf 0a 00 00 00       	mov    edi,0xa
 100bbdc:	e8 4c e5 ff ff       	call   100a12d <create_tree_node>
 100bbe1:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
 100bbe5:	bf 14 00 00 00       	mov    edi,0x14
 100bbea:	e8 3e e5 ff ff       	call   100a12d <create_tree_node>
 100bbef:	48 89 c1             	mov    rcx,rax
 100bbf2:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100bbf6:	ba 56 a1 00 01       	mov    edx,0x100a156
 100bbfb:	48 89 ce             	mov    rsi,rcx
 100bbfe:	48 89 c7             	mov    rdi,rax
 100bc01:	e8 b9 b2 ff ff       	call   1006ebf <avl_tree_insert>
 100bc06:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
 100bc0a:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100bc0e:	ba 56 a1 00 01       	mov    edx,0x100a156
 100bc13:	48 89 ce             	mov    rsi,rcx
 100bc16:	48 89 c7             	mov    rdi,rax
 100bc19:	e8 a1 b2 ff ff       	call   1006ebf <avl_tree_insert>
 100bc1e:	bf 1e 00 00 00       	mov    edi,0x1e
 100bc23:	e8 05 e5 ff ff       	call   100a12d <create_tree_node>
 100bc28:	48 89 c1             	mov    rcx,rax
 100bc2b:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100bc2f:	ba 56 a1 00 01       	mov    edx,0x100a156
 100bc34:	48 89 ce             	mov    rsi,rcx
 100bc37:	48 89 c7             	mov    rdi,rax
 100bc3a:	e8 80 b2 ff ff       	call   1006ebf <avl_tree_insert>
 100bc3f:	bf 05 00 00 00       	mov    edi,0x5
 100bc44:	e8 e4 e4 ff ff       	call   100a12d <create_tree_node>
 100bc49:	48 89 c1             	mov    rcx,rax
 100bc4c:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100bc50:	ba 56 a1 00 01       	mov    edx,0x100a156
 100bc55:	48 89 ce             	mov    rsi,rcx
 100bc58:	48 89 c7             	mov    rdi,rax
 100bc5b:	e8 5f b2 ff ff       	call   1006ebf <avl_tree_insert>
 100bc60:	bf 0f 00 00 00       	mov    edi,0xf
 100bc65:	e8 c3 e4 ff ff       	call   100a12d <create_tree_node>
 100bc6a:	48 89 c1             	mov    rcx,rax
 100bc6d:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100bc71:	ba 56 a1 00 01       	mov    edx,0x100a156
 100bc76:	48 89 ce             	mov    rsi,rcx
 100bc79:	48 89 c7             	mov    rdi,rax
 100bc7c:	e8 3e b2 ff ff       	call   1006ebf <avl_tree_insert>
 100bc81:	bf 19 00 00 00       	mov    edi,0x19
 100bc86:	e8 a2 e4 ff ff       	call   100a12d <create_tree_node>
 100bc8b:	48 89 c1             	mov    rcx,rax
 100bc8e:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100bc92:	ba 56 a1 00 01       	mov    edx,0x100a156
 100bc97:	48 89 ce             	mov    rsi,rcx
 100bc9a:	48 89 c7             	mov    rdi,rax
 100bc9d:	e8 1d b2 ff ff       	call   1006ebf <avl_tree_insert>
 100bca2:	c7 45 d0 14 00 00 00 	mov    DWORD PTR [rbp-0x30],0x14
 100bca9:	c7 45 d4 0a 00 00 00 	mov    DWORD PTR [rbp-0x2c],0xa
 100bcb0:	c7 45 d8 05 00 00 00 	mov    DWORD PTR [rbp-0x28],0x5
 100bcb7:	c7 45 dc 0f 00 00 00 	mov    DWORD PTR [rbp-0x24],0xf
 100bcbe:	c7 45 e0 1e 00 00 00 	mov    DWORD PTR [rbp-0x20],0x1e
 100bcc5:	c7 45 e4 19 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x19
 100bccc:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100bcd0:	74 23                	je     100bcf5 <delete_complex_3+0x136>
 100bcd2:	48 8d 4d d0          	lea    rcx,[rbp-0x30]
 100bcd6:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100bcda:	ba 06 00 00 00       	mov    edx,0x6
 100bcdf:	48 89 ce             	mov    rsi,rcx
 100bce2:	48 89 c7             	mov    rdi,rax
 100bce5:	e8 8f e5 ff ff       	call   100a279 <pre_order_assert>
 100bcea:	84 c0                	test   al,al
 100bcec:	74 07                	je     100bcf5 <delete_complex_3+0x136>
 100bcee:	b8 01 00 00 00       	mov    eax,0x1
 100bcf3:	eb 05                	jmp    100bcfa <delete_complex_3+0x13b>
 100bcf5:	b8 00 00 00 00       	mov    eax,0x0
 100bcfa:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 100bcfd:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 100bd01:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
 100bd05:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100bd09:	ba 56 a1 00 01       	mov    edx,0x100a156
 100bd0e:	48 89 ce             	mov    rsi,rcx
 100bd11:	48 89 c7             	mov    rdi,rax
 100bd14:	e8 fe b1 ff ff       	call   1006f17 <avl_tree_delete>
 100bd19:	c7 45 bc 14 00 00 00 	mov    DWORD PTR [rbp-0x44],0x14
 100bd20:	c7 45 c0 0f 00 00 00 	mov    DWORD PTR [rbp-0x40],0xf
 100bd27:	c7 45 c4 05 00 00 00 	mov    DWORD PTR [rbp-0x3c],0x5
 100bd2e:	c7 45 c8 1e 00 00 00 	mov    DWORD PTR [rbp-0x38],0x1e
 100bd35:	c7 45 cc 19 00 00 00 	mov    DWORD PTR [rbp-0x34],0x19
 100bd3c:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100bd40:	74 23                	je     100bd65 <delete_complex_3+0x1a6>
 100bd42:	48 8d 4d bc          	lea    rcx,[rbp-0x44]
 100bd46:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100bd4a:	ba 05 00 00 00       	mov    edx,0x5
 100bd4f:	48 89 ce             	mov    rsi,rcx
 100bd52:	48 89 c7             	mov    rdi,rax
 100bd55:	e8 1f e5 ff ff       	call   100a279 <pre_order_assert>
 100bd5a:	84 c0                	test   al,al
 100bd5c:	74 07                	je     100bd65 <delete_complex_3+0x1a6>
 100bd5e:	b8 01 00 00 00       	mov    eax,0x1
 100bd63:	eb 05                	jmp    100bd6a <delete_complex_3+0x1ab>
 100bd65:	b8 00 00 00 00       	mov    eax,0x0
 100bd6a:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 100bd6d:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 100bd71:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100bd75:	74 1c                	je     100bd93 <delete_complex_3+0x1d4>
 100bd77:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100bd7b:	be 56 a1 00 01       	mov    esi,0x100a156
 100bd80:	48 89 c7             	mov    rdi,rax
 100bd83:	e8 0a b4 ff ff       	call   1007192 <avl_tree_validate>
 100bd88:	84 c0                	test   al,al
 100bd8a:	74 07                	je     100bd93 <delete_complex_3+0x1d4>
 100bd8c:	b8 01 00 00 00       	mov    eax,0x1
 100bd91:	eb 05                	jmp    100bd98 <delete_complex_3+0x1d9>
 100bd93:	b8 00 00 00 00       	mov    eax,0x0
 100bd98:	83 e0 01             	and    eax,0x1
 100bd9b:	c9                   	leave  
 100bd9c:	c3                   	ret    

000000000100bd9d <delete_complex_4>:
 100bd9d:	55                   	push   rbp
 100bd9e:	48 89 e5             	mov    rbp,rsp
 100bda1:	48 83 ec 60          	sub    rsp,0x60
 100bda5:	c6 45 ff 01          	mov    BYTE PTR [rbp-0x1],0x1
 100bda9:	48 8d 45 c8          	lea    rax,[rbp-0x38]
 100bdad:	48 89 c7             	mov    rdi,rax
 100bdb0:	e8 12 b2 ff ff       	call   1006fc7 <avl_tree_init>
 100bdb5:	bf 05 00 00 00       	mov    edi,0x5
 100bdba:	e8 6e e3 ff ff       	call   100a12d <create_tree_node>
 100bdbf:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
 100bdc3:	bf 0a 00 00 00       	mov    edi,0xa
 100bdc8:	e8 60 e3 ff ff       	call   100a12d <create_tree_node>
 100bdcd:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
 100bdd1:	bf 0f 00 00 00       	mov    edi,0xf
 100bdd6:	e8 52 e3 ff ff       	call   100a12d <create_tree_node>
 100bddb:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
 100bddf:	bf 19 00 00 00       	mov    edi,0x19
 100bde4:	e8 44 e3 ff ff       	call   100a12d <create_tree_node>
 100bde9:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
 100bded:	bf 1e 00 00 00       	mov    edi,0x1e
 100bdf2:	e8 36 e3 ff ff       	call   100a12d <create_tree_node>
 100bdf7:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
 100bdfb:	bf 14 00 00 00       	mov    edi,0x14
 100be00:	e8 28 e3 ff ff       	call   100a12d <create_tree_node>
 100be05:	48 89 c1             	mov    rcx,rax
 100be08:	48 8d 45 c8          	lea    rax,[rbp-0x38]
 100be0c:	ba 56 a1 00 01       	mov    edx,0x100a156
 100be11:	48 89 ce             	mov    rsi,rcx
 100be14:	48 89 c7             	mov    rdi,rax
 100be17:	e8 a3 b0 ff ff       	call   1006ebf <avl_tree_insert>
 100be1c:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
 100be20:	48 8d 45 c8          	lea    rax,[rbp-0x38]
 100be24:	ba 56 a1 00 01       	mov    edx,0x100a156
 100be29:	48 89 ce             	mov    rsi,rcx
 100be2c:	48 89 c7             	mov    rdi,rax
 100be2f:	e8 8b b0 ff ff       	call   1006ebf <avl_tree_insert>
 100be34:	48 8b 4d d0          	mov    rcx,QWORD PTR [rbp-0x30]
 100be38:	48 8d 45 c8          	lea    rax,[rbp-0x38]
 100be3c:	ba 56 a1 00 01       	mov    edx,0x100a156
 100be41:	48 89 ce             	mov    rsi,rcx
 100be44:	48 89 c7             	mov    rdi,rax
 100be47:	e8 73 b0 ff ff       	call   1006ebf <avl_tree_insert>
 100be4c:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
 100be50:	48 8d 45 c8          	lea    rax,[rbp-0x38]
 100be54:	ba 56 a1 00 01       	mov    edx,0x100a156
 100be59:	48 89 ce             	mov    rsi,rcx
 100be5c:	48 89 c7             	mov    rdi,rax
 100be5f:	e8 5b b0 ff ff       	call   1006ebf <avl_tree_insert>
 100be64:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
 100be68:	48 8d 45 c8          	lea    rax,[rbp-0x38]
 100be6c:	ba 56 a1 00 01       	mov    edx,0x100a156
 100be71:	48 89 ce             	mov    rsi,rcx
 100be74:	48 89 c7             	mov    rdi,rax
 100be77:	e8 43 b0 ff ff       	call   1006ebf <avl_tree_insert>
 100be7c:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
 100be80:	48 8d 45 c8          	lea    rax,[rbp-0x38]
 100be84:	ba 56 a1 00 01       	mov    edx,0x100a156
 100be89:	48 89 ce             	mov    rsi,rcx
 100be8c:	48 89 c7             	mov    rdi,rax
 100be8f:	e8 2b b0 ff ff       	call   1006ebf <avl_tree_insert>
 100be94:	c7 45 b0 14 00 00 00 	mov    DWORD PTR [rbp-0x50],0x14
 100be9b:	c7 45 b4 0a 00 00 00 	mov    DWORD PTR [rbp-0x4c],0xa
 100bea2:	c7 45 b8 05 00 00 00 	mov    DWORD PTR [rbp-0x48],0x5
 100bea9:	c7 45 bc 0f 00 00 00 	mov    DWORD PTR [rbp-0x44],0xf
 100beb0:	c7 45 c0 1e 00 00 00 	mov    DWORD PTR [rbp-0x40],0x1e
 100beb7:	c7 45 c4 19 00 00 00 	mov    DWORD PTR [rbp-0x3c],0x19
 100bebe:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100bec2:	74 23                	je     100bee7 <delete_complex_4+0x14a>
 100bec4:	48 8d 4d b0          	lea    rcx,[rbp-0x50]
 100bec8:	48 8d 45 c8          	lea    rax,[rbp-0x38]
 100becc:	ba 06 00 00 00       	mov    edx,0x6
 100bed1:	48 89 ce             	mov    rsi,rcx
 100bed4:	48 89 c7             	mov    rdi,rax
 100bed7:	e8 9d e3 ff ff       	call   100a279 <pre_order_assert>
 100bedc:	84 c0                	test   al,al
 100bede:	74 07                	je     100bee7 <delete_complex_4+0x14a>
 100bee0:	b8 01 00 00 00       	mov    eax,0x1
 100bee5:	eb 05                	jmp    100beec <delete_complex_4+0x14f>
 100bee7:	b8 00 00 00 00       	mov    eax,0x0
 100beec:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 100beef:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 100bef3:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
 100bef7:	48 8d 45 c8          	lea    rax,[rbp-0x38]
 100befb:	ba 56 a1 00 01       	mov    edx,0x100a156
 100bf00:	48 89 ce             	mov    rsi,rcx
 100bf03:	48 89 c7             	mov    rdi,rax
 100bf06:	e8 0c b0 ff ff       	call   1006f17 <avl_tree_delete>
 100bf0b:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
 100bf0f:	48 8d 45 c8          	lea    rax,[rbp-0x38]
 100bf13:	ba 56 a1 00 01       	mov    edx,0x100a156
 100bf18:	48 89 ce             	mov    rsi,rcx
 100bf1b:	48 89 c7             	mov    rdi,rax
 100bf1e:	e8 f4 af ff ff       	call   1006f17 <avl_tree_delete>
 100bf23:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
 100bf27:	48 8d 45 c8          	lea    rax,[rbp-0x38]
 100bf2b:	ba 56 a1 00 01       	mov    edx,0x100a156
 100bf30:	48 89 ce             	mov    rsi,rcx
 100bf33:	48 89 c7             	mov    rdi,rax
 100bf36:	e8 dc af ff ff       	call   1006f17 <avl_tree_delete>
 100bf3b:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
 100bf3f:	48 8d 45 c8          	lea    rax,[rbp-0x38]
 100bf43:	ba 56 a1 00 01       	mov    edx,0x100a156
 100bf48:	48 89 ce             	mov    rsi,rcx
 100bf4b:	48 89 c7             	mov    rdi,rax
 100bf4e:	e8 c4 af ff ff       	call   1006f17 <avl_tree_delete>
 100bf53:	48 8b 4d d0          	mov    rcx,QWORD PTR [rbp-0x30]
 100bf57:	48 8d 45 c8          	lea    rax,[rbp-0x38]
 100bf5b:	ba 56 a1 00 01       	mov    edx,0x100a156
 100bf60:	48 89 ce             	mov    rsi,rcx
 100bf63:	48 89 c7             	mov    rdi,rax
 100bf66:	e8 ac af ff ff       	call   1006f17 <avl_tree_delete>
 100bf6b:	c7 45 ac 14 00 00 00 	mov    DWORD PTR [rbp-0x54],0x14
 100bf72:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100bf76:	74 23                	je     100bf9b <delete_complex_4+0x1fe>
 100bf78:	48 8d 4d ac          	lea    rcx,[rbp-0x54]
 100bf7c:	48 8d 45 c8          	lea    rax,[rbp-0x38]
 100bf80:	ba 01 00 00 00       	mov    edx,0x1
 100bf85:	48 89 ce             	mov    rsi,rcx
 100bf88:	48 89 c7             	mov    rdi,rax
 100bf8b:	e8 e9 e2 ff ff       	call   100a279 <pre_order_assert>
 100bf90:	84 c0                	test   al,al
 100bf92:	74 07                	je     100bf9b <delete_complex_4+0x1fe>
 100bf94:	b8 01 00 00 00       	mov    eax,0x1
 100bf99:	eb 05                	jmp    100bfa0 <delete_complex_4+0x203>
 100bf9b:	b8 00 00 00 00       	mov    eax,0x0
 100bfa0:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 100bfa3:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 100bfa7:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100bfab:	74 1c                	je     100bfc9 <delete_complex_4+0x22c>
 100bfad:	48 8d 45 c8          	lea    rax,[rbp-0x38]
 100bfb1:	be 56 a1 00 01       	mov    esi,0x100a156
 100bfb6:	48 89 c7             	mov    rdi,rax
 100bfb9:	e8 d4 b1 ff ff       	call   1007192 <avl_tree_validate>
 100bfbe:	84 c0                	test   al,al
 100bfc0:	74 07                	je     100bfc9 <delete_complex_4+0x22c>
 100bfc2:	b8 01 00 00 00       	mov    eax,0x1
 100bfc7:	eb 05                	jmp    100bfce <delete_complex_4+0x231>
 100bfc9:	b8 00 00 00 00       	mov    eax,0x0
 100bfce:	83 e0 01             	and    eax,0x1
 100bfd1:	c9                   	leave  
 100bfd2:	c3                   	ret    

000000000100bfd3 <delete_complex_single_rotation>:
 100bfd3:	55                   	push   rbp
 100bfd4:	48 89 e5             	mov    rbp,rsp
 100bfd7:	48 83 c4 80          	add    rsp,0xffffffffffffff80
 100bfdb:	c6 45 ff 01          	mov    BYTE PTR [rbp-0x1],0x1
 100bfdf:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100bfe3:	48 89 c7             	mov    rdi,rax
 100bfe6:	e8 dc af ff ff       	call   1006fc7 <avl_tree_init>
 100bfeb:	bf 32 00 00 00       	mov    edi,0x32
 100bff0:	e8 38 e1 ff ff       	call   100a12d <create_tree_node>
 100bff5:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
 100bff9:	bf 14 00 00 00       	mov    edi,0x14
 100bffe:	e8 2a e1 ff ff       	call   100a12d <create_tree_node>
 100c003:	48 89 c1             	mov    rcx,rax
 100c006:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100c00a:	ba 56 a1 00 01       	mov    edx,0x100a156
 100c00f:	48 89 ce             	mov    rsi,rcx
 100c012:	48 89 c7             	mov    rdi,rax
 100c015:	e8 a5 ae ff ff       	call   1006ebf <avl_tree_insert>
 100c01a:	bf 0a 00 00 00       	mov    edi,0xa
 100c01f:	e8 09 e1 ff ff       	call   100a12d <create_tree_node>
 100c024:	48 89 c1             	mov    rcx,rax
 100c027:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100c02b:	ba 56 a1 00 01       	mov    edx,0x100a156
 100c030:	48 89 ce             	mov    rsi,rcx
 100c033:	48 89 c7             	mov    rdi,rax
 100c036:	e8 84 ae ff ff       	call   1006ebf <avl_tree_insert>
 100c03b:	bf 1e 00 00 00       	mov    edi,0x1e
 100c040:	e8 e8 e0 ff ff       	call   100a12d <create_tree_node>
 100c045:	48 89 c1             	mov    rcx,rax
 100c048:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100c04c:	ba 56 a1 00 01       	mov    edx,0x100a156
 100c051:	48 89 ce             	mov    rsi,rcx
 100c054:	48 89 c7             	mov    rdi,rax
 100c057:	e8 63 ae ff ff       	call   1006ebf <avl_tree_insert>
 100c05c:	bf 05 00 00 00       	mov    edi,0x5
 100c061:	e8 c7 e0 ff ff       	call   100a12d <create_tree_node>
 100c066:	48 89 c1             	mov    rcx,rax
 100c069:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100c06d:	ba 56 a1 00 01       	mov    edx,0x100a156
 100c072:	48 89 ce             	mov    rsi,rcx
 100c075:	48 89 c7             	mov    rdi,rax
 100c078:	e8 42 ae ff ff       	call   1006ebf <avl_tree_insert>
 100c07d:	bf 0f 00 00 00       	mov    edi,0xf
 100c082:	e8 a6 e0 ff ff       	call   100a12d <create_tree_node>
 100c087:	48 89 c1             	mov    rcx,rax
 100c08a:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100c08e:	ba 56 a1 00 01       	mov    edx,0x100a156
 100c093:	48 89 ce             	mov    rsi,rcx
 100c096:	48 89 c7             	mov    rdi,rax
 100c099:	e8 21 ae ff ff       	call   1006ebf <avl_tree_insert>
 100c09e:	bf 19 00 00 00       	mov    edi,0x19
 100c0a3:	e8 85 e0 ff ff       	call   100a12d <create_tree_node>
 100c0a8:	48 89 c1             	mov    rcx,rax
 100c0ab:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100c0af:	ba 56 a1 00 01       	mov    edx,0x100a156
 100c0b4:	48 89 ce             	mov    rsi,rcx
 100c0b7:	48 89 c7             	mov    rdi,rax
 100c0ba:	e8 00 ae ff ff       	call   1006ebf <avl_tree_insert>
 100c0bf:	bf 28 00 00 00       	mov    edi,0x28
 100c0c4:	e8 64 e0 ff ff       	call   100a12d <create_tree_node>
 100c0c9:	48 89 c1             	mov    rcx,rax
 100c0cc:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100c0d0:	ba 56 a1 00 01       	mov    edx,0x100a156
 100c0d5:	48 89 ce             	mov    rsi,rcx
 100c0d8:	48 89 c7             	mov    rdi,rax
 100c0db:	e8 df ad ff ff       	call   1006ebf <avl_tree_insert>
 100c0e0:	bf 0c 00 00 00       	mov    edi,0xc
 100c0e5:	e8 43 e0 ff ff       	call   100a12d <create_tree_node>
 100c0ea:	48 89 c1             	mov    rcx,rax
 100c0ed:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100c0f1:	ba 56 a1 00 01       	mov    edx,0x100a156
 100c0f6:	48 89 ce             	mov    rsi,rcx
 100c0f9:	48 89 c7             	mov    rdi,rax
 100c0fc:	e8 be ad ff ff       	call   1006ebf <avl_tree_insert>
 100c101:	bf 16 00 00 00       	mov    edi,0x16
 100c106:	e8 22 e0 ff ff       	call   100a12d <create_tree_node>
 100c10b:	48 89 c1             	mov    rcx,rax
 100c10e:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100c112:	ba 56 a1 00 01       	mov    edx,0x100a156
 100c117:	48 89 ce             	mov    rsi,rcx
 100c11a:	48 89 c7             	mov    rdi,rax
 100c11d:	e8 9d ad ff ff       	call   1006ebf <avl_tree_insert>
 100c122:	bf 23 00 00 00       	mov    edi,0x23
 100c127:	e8 01 e0 ff ff       	call   100a12d <create_tree_node>
 100c12c:	48 89 c1             	mov    rcx,rax
 100c12f:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100c133:	ba 56 a1 00 01       	mov    edx,0x100a156
 100c138:	48 89 ce             	mov    rsi,rcx
 100c13b:	48 89 c7             	mov    rdi,rax
 100c13e:	e8 7c ad ff ff       	call   1006ebf <avl_tree_insert>
 100c143:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
 100c147:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100c14b:	ba 56 a1 00 01       	mov    edx,0x100a156
 100c150:	48 89 ce             	mov    rsi,rcx
 100c153:	48 89 c7             	mov    rdi,rax
 100c156:	e8 64 ad ff ff       	call   1006ebf <avl_tree_insert>
 100c15b:	bf 1f 00 00 00       	mov    edi,0x1f
 100c160:	e8 c8 df ff ff       	call   100a12d <create_tree_node>
 100c165:	48 89 c1             	mov    rcx,rax
 100c168:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100c16c:	ba 56 a1 00 01       	mov    edx,0x100a156
 100c171:	48 89 ce             	mov    rsi,rcx
 100c174:	48 89 c7             	mov    rdi,rax
 100c177:	e8 43 ad ff ff       	call   1006ebf <avl_tree_insert>
 100c17c:	c7 45 b8 14 00 00 00 	mov    DWORD PTR [rbp-0x48],0x14
 100c183:	c7 45 bc 0a 00 00 00 	mov    DWORD PTR [rbp-0x44],0xa
 100c18a:	c7 45 c0 05 00 00 00 	mov    DWORD PTR [rbp-0x40],0x5
 100c191:	c7 45 c4 0f 00 00 00 	mov    DWORD PTR [rbp-0x3c],0xf
 100c198:	c7 45 c8 0c 00 00 00 	mov    DWORD PTR [rbp-0x38],0xc
 100c19f:	c7 45 cc 1e 00 00 00 	mov    DWORD PTR [rbp-0x34],0x1e
 100c1a6:	c7 45 d0 19 00 00 00 	mov    DWORD PTR [rbp-0x30],0x19
 100c1ad:	c7 45 d4 16 00 00 00 	mov    DWORD PTR [rbp-0x2c],0x16
 100c1b4:	c7 45 d8 28 00 00 00 	mov    DWORD PTR [rbp-0x28],0x28
 100c1bb:	c7 45 dc 23 00 00 00 	mov    DWORD PTR [rbp-0x24],0x23
 100c1c2:	c7 45 e0 1f 00 00 00 	mov    DWORD PTR [rbp-0x20],0x1f
 100c1c9:	c7 45 e4 32 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x32
 100c1d0:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100c1d4:	74 23                	je     100c1f9 <delete_complex_single_rotation+0x226>
 100c1d6:	48 8d 4d b8          	lea    rcx,[rbp-0x48]
 100c1da:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100c1de:	ba 0c 00 00 00       	mov    edx,0xc
 100c1e3:	48 89 ce             	mov    rsi,rcx
 100c1e6:	48 89 c7             	mov    rdi,rax
 100c1e9:	e8 8b e0 ff ff       	call   100a279 <pre_order_assert>
 100c1ee:	84 c0                	test   al,al
 100c1f0:	74 07                	je     100c1f9 <delete_complex_single_rotation+0x226>
 100c1f2:	b8 01 00 00 00       	mov    eax,0x1
 100c1f7:	eb 05                	jmp    100c1fe <delete_complex_single_rotation+0x22b>
 100c1f9:	b8 00 00 00 00       	mov    eax,0x0
 100c1fe:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 100c201:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 100c205:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
 100c209:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100c20d:	ba 56 a1 00 01       	mov    edx,0x100a156
 100c212:	48 89 ce             	mov    rsi,rcx
 100c215:	48 89 c7             	mov    rdi,rax
 100c218:	e8 fa ac ff ff       	call   1006f17 <avl_tree_delete>
 100c21d:	c7 45 8c 14 00 00 00 	mov    DWORD PTR [rbp-0x74],0x14
 100c224:	c7 45 90 0a 00 00 00 	mov    DWORD PTR [rbp-0x70],0xa
 100c22b:	c7 45 94 05 00 00 00 	mov    DWORD PTR [rbp-0x6c],0x5
 100c232:	c7 45 98 0f 00 00 00 	mov    DWORD PTR [rbp-0x68],0xf
 100c239:	c7 45 9c 0c 00 00 00 	mov    DWORD PTR [rbp-0x64],0xc
 100c240:	c7 45 a0 1e 00 00 00 	mov    DWORD PTR [rbp-0x60],0x1e
 100c247:	c7 45 a4 19 00 00 00 	mov    DWORD PTR [rbp-0x5c],0x19
 100c24e:	c7 45 a8 16 00 00 00 	mov    DWORD PTR [rbp-0x58],0x16
 100c255:	c7 45 ac 23 00 00 00 	mov    DWORD PTR [rbp-0x54],0x23
 100c25c:	c7 45 b0 1f 00 00 00 	mov    DWORD PTR [rbp-0x50],0x1f
 100c263:	c7 45 b4 28 00 00 00 	mov    DWORD PTR [rbp-0x4c],0x28
 100c26a:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100c26e:	74 23                	je     100c293 <delete_complex_single_rotation+0x2c0>
 100c270:	48 8d 4d 8c          	lea    rcx,[rbp-0x74]
 100c274:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100c278:	ba 0b 00 00 00       	mov    edx,0xb
 100c27d:	48 89 ce             	mov    rsi,rcx
 100c280:	48 89 c7             	mov    rdi,rax
 100c283:	e8 f1 df ff ff       	call   100a279 <pre_order_assert>
 100c288:	84 c0                	test   al,al
 100c28a:	74 07                	je     100c293 <delete_complex_single_rotation+0x2c0>
 100c28c:	b8 01 00 00 00       	mov    eax,0x1
 100c291:	eb 05                	jmp    100c298 <delete_complex_single_rotation+0x2c5>
 100c293:	b8 00 00 00 00       	mov    eax,0x0
 100c298:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 100c29b:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 100c29f:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100c2a3:	74 1c                	je     100c2c1 <delete_complex_single_rotation+0x2ee>
 100c2a5:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100c2a9:	be 56 a1 00 01       	mov    esi,0x100a156
 100c2ae:	48 89 c7             	mov    rdi,rax
 100c2b1:	e8 dc ae ff ff       	call   1007192 <avl_tree_validate>
 100c2b6:	84 c0                	test   al,al
 100c2b8:	74 07                	je     100c2c1 <delete_complex_single_rotation+0x2ee>
 100c2ba:	b8 01 00 00 00       	mov    eax,0x1
 100c2bf:	eb 05                	jmp    100c2c6 <delete_complex_single_rotation+0x2f3>
 100c2c1:	b8 00 00 00 00       	mov    eax,0x0
 100c2c6:	83 e0 01             	and    eax,0x1
 100c2c9:	c9                   	leave  
 100c2ca:	c3                   	ret    

000000000100c2cb <delete_complex_double_rotation>:
 100c2cb:	55                   	push   rbp
 100c2cc:	48 89 e5             	mov    rbp,rsp
 100c2cf:	48 83 c4 80          	add    rsp,0xffffffffffffff80
 100c2d3:	c6 45 ff 01          	mov    BYTE PTR [rbp-0x1],0x1
 100c2d7:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100c2db:	48 89 c7             	mov    rdi,rax
 100c2de:	e8 e4 ac ff ff       	call   1006fc7 <avl_tree_init>
 100c2e3:	bf 16 00 00 00       	mov    edi,0x16
 100c2e8:	e8 40 de ff ff       	call   100a12d <create_tree_node>
 100c2ed:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
 100c2f1:	bf 14 00 00 00       	mov    edi,0x14
 100c2f6:	e8 32 de ff ff       	call   100a12d <create_tree_node>
 100c2fb:	48 89 c1             	mov    rcx,rax
 100c2fe:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100c302:	ba 56 a1 00 01       	mov    edx,0x100a156
 100c307:	48 89 ce             	mov    rsi,rcx
 100c30a:	48 89 c7             	mov    rdi,rax
 100c30d:	e8 ad ab ff ff       	call   1006ebf <avl_tree_insert>
 100c312:	bf 0a 00 00 00       	mov    edi,0xa
 100c317:	e8 11 de ff ff       	call   100a12d <create_tree_node>
 100c31c:	48 89 c1             	mov    rcx,rax
 100c31f:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100c323:	ba 56 a1 00 01       	mov    edx,0x100a156
 100c328:	48 89 ce             	mov    rsi,rcx
 100c32b:	48 89 c7             	mov    rdi,rax
 100c32e:	e8 8c ab ff ff       	call   1006ebf <avl_tree_insert>
 100c333:	bf 1e 00 00 00       	mov    edi,0x1e
 100c338:	e8 f0 dd ff ff       	call   100a12d <create_tree_node>
 100c33d:	48 89 c1             	mov    rcx,rax
 100c340:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100c344:	ba 56 a1 00 01       	mov    edx,0x100a156
 100c349:	48 89 ce             	mov    rsi,rcx
 100c34c:	48 89 c7             	mov    rdi,rax
 100c34f:	e8 6b ab ff ff       	call   1006ebf <avl_tree_insert>
 100c354:	bf 05 00 00 00       	mov    edi,0x5
 100c359:	e8 cf dd ff ff       	call   100a12d <create_tree_node>
 100c35e:	48 89 c1             	mov    rcx,rax
 100c361:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100c365:	ba 56 a1 00 01       	mov    edx,0x100a156
 100c36a:	48 89 ce             	mov    rsi,rcx
 100c36d:	48 89 c7             	mov    rdi,rax
 100c370:	e8 4a ab ff ff       	call   1006ebf <avl_tree_insert>
 100c375:	bf 0f 00 00 00       	mov    edi,0xf
 100c37a:	e8 ae dd ff ff       	call   100a12d <create_tree_node>
 100c37f:	48 89 c1             	mov    rcx,rax
 100c382:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100c386:	ba 56 a1 00 01       	mov    edx,0x100a156
 100c38b:	48 89 ce             	mov    rsi,rcx
 100c38e:	48 89 c7             	mov    rdi,rax
 100c391:	e8 29 ab ff ff       	call   1006ebf <avl_tree_insert>
 100c396:	bf 19 00 00 00       	mov    edi,0x19
 100c39b:	e8 8d dd ff ff       	call   100a12d <create_tree_node>
 100c3a0:	48 89 c1             	mov    rcx,rax
 100c3a3:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100c3a7:	ba 56 a1 00 01       	mov    edx,0x100a156
 100c3ac:	48 89 ce             	mov    rsi,rcx
 100c3af:	48 89 c7             	mov    rdi,rax
 100c3b2:	e8 08 ab ff ff       	call   1006ebf <avl_tree_insert>
 100c3b7:	bf 28 00 00 00       	mov    edi,0x28
 100c3bc:	e8 6c dd ff ff       	call   100a12d <create_tree_node>
 100c3c1:	48 89 c1             	mov    rcx,rax
 100c3c4:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100c3c8:	ba 56 a1 00 01       	mov    edx,0x100a156
 100c3cd:	48 89 ce             	mov    rsi,rcx
 100c3d0:	48 89 c7             	mov    rdi,rax
 100c3d3:	e8 e7 aa ff ff       	call   1006ebf <avl_tree_insert>
 100c3d8:	bf 0c 00 00 00       	mov    edi,0xc
 100c3dd:	e8 4b dd ff ff       	call   100a12d <create_tree_node>
 100c3e2:	48 89 c1             	mov    rcx,rax
 100c3e5:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100c3e9:	ba 56 a1 00 01       	mov    edx,0x100a156
 100c3ee:	48 89 ce             	mov    rsi,rcx
 100c3f1:	48 89 c7             	mov    rdi,rax
 100c3f4:	e8 c6 aa ff ff       	call   1006ebf <avl_tree_insert>
 100c3f9:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
 100c3fd:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100c401:	ba 56 a1 00 01       	mov    edx,0x100a156
 100c406:	48 89 ce             	mov    rsi,rcx
 100c409:	48 89 c7             	mov    rdi,rax
 100c40c:	e8 ae aa ff ff       	call   1006ebf <avl_tree_insert>
 100c411:	bf 23 00 00 00       	mov    edi,0x23
 100c416:	e8 12 dd ff ff       	call   100a12d <create_tree_node>
 100c41b:	48 89 c1             	mov    rcx,rax
 100c41e:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100c422:	ba 56 a1 00 01       	mov    edx,0x100a156
 100c427:	48 89 ce             	mov    rsi,rcx
 100c42a:	48 89 c7             	mov    rdi,rax
 100c42d:	e8 8d aa ff ff       	call   1006ebf <avl_tree_insert>
 100c432:	bf 32 00 00 00       	mov    edi,0x32
 100c437:	e8 f1 dc ff ff       	call   100a12d <create_tree_node>
 100c43c:	48 89 c1             	mov    rcx,rax
 100c43f:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100c443:	ba 56 a1 00 01       	mov    edx,0x100a156
 100c448:	48 89 ce             	mov    rsi,rcx
 100c44b:	48 89 c7             	mov    rdi,rax
 100c44e:	e8 6c aa ff ff       	call   1006ebf <avl_tree_insert>
 100c453:	bf 1f 00 00 00       	mov    edi,0x1f
 100c458:	e8 d0 dc ff ff       	call   100a12d <create_tree_node>
 100c45d:	48 89 c1             	mov    rcx,rax
 100c460:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100c464:	ba 56 a1 00 01       	mov    edx,0x100a156
 100c469:	48 89 ce             	mov    rsi,rcx
 100c46c:	48 89 c7             	mov    rdi,rax
 100c46f:	e8 4b aa ff ff       	call   1006ebf <avl_tree_insert>
 100c474:	c7 45 b8 14 00 00 00 	mov    DWORD PTR [rbp-0x48],0x14
 100c47b:	c7 45 bc 0a 00 00 00 	mov    DWORD PTR [rbp-0x44],0xa
 100c482:	c7 45 c0 05 00 00 00 	mov    DWORD PTR [rbp-0x40],0x5
 100c489:	c7 45 c4 0f 00 00 00 	mov    DWORD PTR [rbp-0x3c],0xf
 100c490:	c7 45 c8 0c 00 00 00 	mov    DWORD PTR [rbp-0x38],0xc
 100c497:	c7 45 cc 1e 00 00 00 	mov    DWORD PTR [rbp-0x34],0x1e
 100c49e:	c7 45 d0 19 00 00 00 	mov    DWORD PTR [rbp-0x30],0x19
 100c4a5:	c7 45 d4 16 00 00 00 	mov    DWORD PTR [rbp-0x2c],0x16
 100c4ac:	c7 45 d8 28 00 00 00 	mov    DWORD PTR [rbp-0x28],0x28
 100c4b3:	c7 45 dc 23 00 00 00 	mov    DWORD PTR [rbp-0x24],0x23
 100c4ba:	c7 45 e0 1f 00 00 00 	mov    DWORD PTR [rbp-0x20],0x1f
 100c4c1:	c7 45 e4 32 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x32
 100c4c8:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100c4cc:	74 23                	je     100c4f1 <delete_complex_double_rotation+0x226>
 100c4ce:	48 8d 4d b8          	lea    rcx,[rbp-0x48]
 100c4d2:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100c4d6:	ba 0c 00 00 00       	mov    edx,0xc
 100c4db:	48 89 ce             	mov    rsi,rcx
 100c4de:	48 89 c7             	mov    rdi,rax
 100c4e1:	e8 93 dd ff ff       	call   100a279 <pre_order_assert>
 100c4e6:	84 c0                	test   al,al
 100c4e8:	74 07                	je     100c4f1 <delete_complex_double_rotation+0x226>
 100c4ea:	b8 01 00 00 00       	mov    eax,0x1
 100c4ef:	eb 05                	jmp    100c4f6 <delete_complex_double_rotation+0x22b>
 100c4f1:	b8 00 00 00 00       	mov    eax,0x0
 100c4f6:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 100c4f9:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 100c4fd:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
 100c501:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100c505:	ba 56 a1 00 01       	mov    edx,0x100a156
 100c50a:	48 89 ce             	mov    rsi,rcx
 100c50d:	48 89 c7             	mov    rdi,rax
 100c510:	e8 02 aa ff ff       	call   1006f17 <avl_tree_delete>
 100c515:	c7 45 8c 14 00 00 00 	mov    DWORD PTR [rbp-0x74],0x14
 100c51c:	c7 45 90 0a 00 00 00 	mov    DWORD PTR [rbp-0x70],0xa
 100c523:	c7 45 94 05 00 00 00 	mov    DWORD PTR [rbp-0x6c],0x5
 100c52a:	c7 45 98 0f 00 00 00 	mov    DWORD PTR [rbp-0x68],0xf
 100c531:	c7 45 9c 0c 00 00 00 	mov    DWORD PTR [rbp-0x64],0xc
 100c538:	c7 45 a0 23 00 00 00 	mov    DWORD PTR [rbp-0x60],0x23
 100c53f:	c7 45 a4 1e 00 00 00 	mov    DWORD PTR [rbp-0x5c],0x1e
 100c546:	c7 45 a8 19 00 00 00 	mov    DWORD PTR [rbp-0x58],0x19
 100c54d:	c7 45 ac 1f 00 00 00 	mov    DWORD PTR [rbp-0x54],0x1f
 100c554:	c7 45 b0 28 00 00 00 	mov    DWORD PTR [rbp-0x50],0x28
 100c55b:	c7 45 b4 32 00 00 00 	mov    DWORD PTR [rbp-0x4c],0x32
 100c562:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100c566:	74 23                	je     100c58b <delete_complex_double_rotation+0x2c0>
 100c568:	48 8d 4d 8c          	lea    rcx,[rbp-0x74]
 100c56c:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100c570:	ba 0b 00 00 00       	mov    edx,0xb
 100c575:	48 89 ce             	mov    rsi,rcx
 100c578:	48 89 c7             	mov    rdi,rax
 100c57b:	e8 f9 dc ff ff       	call   100a279 <pre_order_assert>
 100c580:	84 c0                	test   al,al
 100c582:	74 07                	je     100c58b <delete_complex_double_rotation+0x2c0>
 100c584:	b8 01 00 00 00       	mov    eax,0x1
 100c589:	eb 05                	jmp    100c590 <delete_complex_double_rotation+0x2c5>
 100c58b:	b8 00 00 00 00       	mov    eax,0x0
 100c590:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 100c593:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 100c597:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100c59b:	74 1c                	je     100c5b9 <delete_complex_double_rotation+0x2ee>
 100c59d:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100c5a1:	be 56 a1 00 01       	mov    esi,0x100a156
 100c5a6:	48 89 c7             	mov    rdi,rax
 100c5a9:	e8 e4 ab ff ff       	call   1007192 <avl_tree_validate>
 100c5ae:	84 c0                	test   al,al
 100c5b0:	74 07                	je     100c5b9 <delete_complex_double_rotation+0x2ee>
 100c5b2:	b8 01 00 00 00       	mov    eax,0x1
 100c5b7:	eb 05                	jmp    100c5be <delete_complex_double_rotation+0x2f3>
 100c5b9:	b8 00 00 00 00       	mov    eax,0x0
 100c5be:	83 e0 01             	and    eax,0x1
 100c5c1:	c9                   	leave  
 100c5c2:	c3                   	ret    

000000000100c5c3 <delete_complex_multiple_rotation>:
 100c5c3:	55                   	push   rbp
 100c5c4:	48 89 e5             	mov    rbp,rsp
 100c5c7:	48 83 c4 80          	add    rsp,0xffffffffffffff80
 100c5cb:	c6 45 ff 01          	mov    BYTE PTR [rbp-0x1],0x1
 100c5cf:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100c5d3:	48 89 c7             	mov    rdi,rax
 100c5d6:	e8 ec a9 ff ff       	call   1006fc7 <avl_tree_init>
 100c5db:	bf 05 00 00 00       	mov    edi,0x5
 100c5e0:	e8 48 db ff ff       	call   100a12d <create_tree_node>
 100c5e5:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
 100c5e9:	bf 14 00 00 00       	mov    edi,0x14
 100c5ee:	e8 3a db ff ff       	call   100a12d <create_tree_node>
 100c5f3:	48 89 c1             	mov    rcx,rax
 100c5f6:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100c5fa:	ba 56 a1 00 01       	mov    edx,0x100a156
 100c5ff:	48 89 ce             	mov    rsi,rcx
 100c602:	48 89 c7             	mov    rdi,rax
 100c605:	e8 b5 a8 ff ff       	call   1006ebf <avl_tree_insert>
 100c60a:	bf 0a 00 00 00       	mov    edi,0xa
 100c60f:	e8 19 db ff ff       	call   100a12d <create_tree_node>
 100c614:	48 89 c1             	mov    rcx,rax
 100c617:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100c61b:	ba 56 a1 00 01       	mov    edx,0x100a156
 100c620:	48 89 ce             	mov    rsi,rcx
 100c623:	48 89 c7             	mov    rdi,rax
 100c626:	e8 94 a8 ff ff       	call   1006ebf <avl_tree_insert>
 100c62b:	bf 1e 00 00 00       	mov    edi,0x1e
 100c630:	e8 f8 da ff ff       	call   100a12d <create_tree_node>
 100c635:	48 89 c1             	mov    rcx,rax
 100c638:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100c63c:	ba 56 a1 00 01       	mov    edx,0x100a156
 100c641:	48 89 ce             	mov    rsi,rcx
 100c644:	48 89 c7             	mov    rdi,rax
 100c647:	e8 73 a8 ff ff       	call   1006ebf <avl_tree_insert>
 100c64c:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
 100c650:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100c654:	ba 56 a1 00 01       	mov    edx,0x100a156
 100c659:	48 89 ce             	mov    rsi,rcx
 100c65c:	48 89 c7             	mov    rdi,rax
 100c65f:	e8 5b a8 ff ff       	call   1006ebf <avl_tree_insert>
 100c664:	bf 0f 00 00 00       	mov    edi,0xf
 100c669:	e8 bf da ff ff       	call   100a12d <create_tree_node>
 100c66e:	48 89 c1             	mov    rcx,rax
 100c671:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100c675:	ba 56 a1 00 01       	mov    edx,0x100a156
 100c67a:	48 89 ce             	mov    rsi,rcx
 100c67d:	48 89 c7             	mov    rdi,rax
 100c680:	e8 3a a8 ff ff       	call   1006ebf <avl_tree_insert>
 100c685:	bf 19 00 00 00       	mov    edi,0x19
 100c68a:	e8 9e da ff ff       	call   100a12d <create_tree_node>
 100c68f:	48 89 c1             	mov    rcx,rax
 100c692:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100c696:	ba 56 a1 00 01       	mov    edx,0x100a156
 100c69b:	48 89 ce             	mov    rsi,rcx
 100c69e:	48 89 c7             	mov    rdi,rax
 100c6a1:	e8 19 a8 ff ff       	call   1006ebf <avl_tree_insert>
 100c6a6:	bf 28 00 00 00       	mov    edi,0x28
 100c6ab:	e8 7d da ff ff       	call   100a12d <create_tree_node>
 100c6b0:	48 89 c1             	mov    rcx,rax
 100c6b3:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100c6b7:	ba 56 a1 00 01       	mov    edx,0x100a156
 100c6bc:	48 89 ce             	mov    rsi,rcx
 100c6bf:	48 89 c7             	mov    rdi,rax
 100c6c2:	e8 f8 a7 ff ff       	call   1006ebf <avl_tree_insert>
 100c6c7:	bf 0c 00 00 00       	mov    edi,0xc
 100c6cc:	e8 5c da ff ff       	call   100a12d <create_tree_node>
 100c6d1:	48 89 c1             	mov    rcx,rax
 100c6d4:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100c6d8:	ba 56 a1 00 01       	mov    edx,0x100a156
 100c6dd:	48 89 ce             	mov    rsi,rcx
 100c6e0:	48 89 c7             	mov    rdi,rax
 100c6e3:	e8 d7 a7 ff ff       	call   1006ebf <avl_tree_insert>
 100c6e8:	bf 16 00 00 00       	mov    edi,0x16
 100c6ed:	e8 3b da ff ff       	call   100a12d <create_tree_node>
 100c6f2:	48 89 c1             	mov    rcx,rax
 100c6f5:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100c6f9:	ba 56 a1 00 01       	mov    edx,0x100a156
 100c6fe:	48 89 ce             	mov    rsi,rcx
 100c701:	48 89 c7             	mov    rdi,rax
 100c704:	e8 b6 a7 ff ff       	call   1006ebf <avl_tree_insert>
 100c709:	bf 23 00 00 00       	mov    edi,0x23
 100c70e:	e8 1a da ff ff       	call   100a12d <create_tree_node>
 100c713:	48 89 c1             	mov    rcx,rax
 100c716:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100c71a:	ba 56 a1 00 01       	mov    edx,0x100a156
 100c71f:	48 89 ce             	mov    rsi,rcx
 100c722:	48 89 c7             	mov    rdi,rax
 100c725:	e8 95 a7 ff ff       	call   1006ebf <avl_tree_insert>
 100c72a:	bf 32 00 00 00       	mov    edi,0x32
 100c72f:	e8 f9 d9 ff ff       	call   100a12d <create_tree_node>
 100c734:	48 89 c1             	mov    rcx,rax
 100c737:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100c73b:	ba 56 a1 00 01       	mov    edx,0x100a156
 100c740:	48 89 ce             	mov    rsi,rcx
 100c743:	48 89 c7             	mov    rdi,rax
 100c746:	e8 74 a7 ff ff       	call   1006ebf <avl_tree_insert>
 100c74b:	bf 1f 00 00 00       	mov    edi,0x1f
 100c750:	e8 d8 d9 ff ff       	call   100a12d <create_tree_node>
 100c755:	48 89 c1             	mov    rcx,rax
 100c758:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100c75c:	ba 56 a1 00 01       	mov    edx,0x100a156
 100c761:	48 89 ce             	mov    rsi,rcx
 100c764:	48 89 c7             	mov    rdi,rax
 100c767:	e8 53 a7 ff ff       	call   1006ebf <avl_tree_insert>
 100c76c:	c7 45 b8 14 00 00 00 	mov    DWORD PTR [rbp-0x48],0x14
 100c773:	c7 45 bc 0a 00 00 00 	mov    DWORD PTR [rbp-0x44],0xa
 100c77a:	c7 45 c0 05 00 00 00 	mov    DWORD PTR [rbp-0x40],0x5
 100c781:	c7 45 c4 0f 00 00 00 	mov    DWORD PTR [rbp-0x3c],0xf
 100c788:	c7 45 c8 0c 00 00 00 	mov    DWORD PTR [rbp-0x38],0xc
 100c78f:	c7 45 cc 1e 00 00 00 	mov    DWORD PTR [rbp-0x34],0x1e
 100c796:	c7 45 d0 19 00 00 00 	mov    DWORD PTR [rbp-0x30],0x19
 100c79d:	c7 45 d4 16 00 00 00 	mov    DWORD PTR [rbp-0x2c],0x16
 100c7a4:	c7 45 d8 28 00 00 00 	mov    DWORD PTR [rbp-0x28],0x28
 100c7ab:	c7 45 dc 23 00 00 00 	mov    DWORD PTR [rbp-0x24],0x23
 100c7b2:	c7 45 e0 1f 00 00 00 	mov    DWORD PTR [rbp-0x20],0x1f
 100c7b9:	c7 45 e4 32 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x32
 100c7c0:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100c7c4:	74 23                	je     100c7e9 <delete_complex_multiple_rotation+0x226>
 100c7c6:	48 8d 4d b8          	lea    rcx,[rbp-0x48]
 100c7ca:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100c7ce:	ba 0c 00 00 00       	mov    edx,0xc
 100c7d3:	48 89 ce             	mov    rsi,rcx
 100c7d6:	48 89 c7             	mov    rdi,rax
 100c7d9:	e8 9b da ff ff       	call   100a279 <pre_order_assert>
 100c7de:	84 c0                	test   al,al
 100c7e0:	74 07                	je     100c7e9 <delete_complex_multiple_rotation+0x226>
 100c7e2:	b8 01 00 00 00       	mov    eax,0x1
 100c7e7:	eb 05                	jmp    100c7ee <delete_complex_multiple_rotation+0x22b>
 100c7e9:	b8 00 00 00 00       	mov    eax,0x0
 100c7ee:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 100c7f1:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 100c7f5:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
 100c7f9:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100c7fd:	ba 56 a1 00 01       	mov    edx,0x100a156
 100c802:	48 89 ce             	mov    rsi,rcx
 100c805:	48 89 c7             	mov    rdi,rax
 100c808:	e8 0a a7 ff ff       	call   1006f17 <avl_tree_delete>
 100c80d:	c7 45 8c 1e 00 00 00 	mov    DWORD PTR [rbp-0x74],0x1e
 100c814:	c7 45 90 14 00 00 00 	mov    DWORD PTR [rbp-0x70],0x14
 100c81b:	c7 45 94 0c 00 00 00 	mov    DWORD PTR [rbp-0x6c],0xc
 100c822:	c7 45 98 0a 00 00 00 	mov    DWORD PTR [rbp-0x68],0xa
 100c829:	c7 45 9c 0f 00 00 00 	mov    DWORD PTR [rbp-0x64],0xf
 100c830:	c7 45 a0 19 00 00 00 	mov    DWORD PTR [rbp-0x60],0x19
 100c837:	c7 45 a4 16 00 00 00 	mov    DWORD PTR [rbp-0x5c],0x16
 100c83e:	c7 45 a8 28 00 00 00 	mov    DWORD PTR [rbp-0x58],0x28
 100c845:	c7 45 ac 23 00 00 00 	mov    DWORD PTR [rbp-0x54],0x23
 100c84c:	c7 45 b0 1f 00 00 00 	mov    DWORD PTR [rbp-0x50],0x1f
 100c853:	c7 45 b4 32 00 00 00 	mov    DWORD PTR [rbp-0x4c],0x32
 100c85a:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100c85e:	74 23                	je     100c883 <delete_complex_multiple_rotation+0x2c0>
 100c860:	48 8d 4d 8c          	lea    rcx,[rbp-0x74]
 100c864:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100c868:	ba 0b 00 00 00       	mov    edx,0xb
 100c86d:	48 89 ce             	mov    rsi,rcx
 100c870:	48 89 c7             	mov    rdi,rax
 100c873:	e8 01 da ff ff       	call   100a279 <pre_order_assert>
 100c878:	84 c0                	test   al,al
 100c87a:	74 07                	je     100c883 <delete_complex_multiple_rotation+0x2c0>
 100c87c:	b8 01 00 00 00       	mov    eax,0x1
 100c881:	eb 05                	jmp    100c888 <delete_complex_multiple_rotation+0x2c5>
 100c883:	b8 00 00 00 00       	mov    eax,0x0
 100c888:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 100c88b:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 100c88f:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100c893:	74 1c                	je     100c8b1 <delete_complex_multiple_rotation+0x2ee>
 100c895:	48 8d 45 e8          	lea    rax,[rbp-0x18]
 100c899:	be 56 a1 00 01       	mov    esi,0x100a156
 100c89e:	48 89 c7             	mov    rdi,rax
 100c8a1:	e8 ec a8 ff ff       	call   1007192 <avl_tree_validate>
 100c8a6:	84 c0                	test   al,al
 100c8a8:	74 07                	je     100c8b1 <delete_complex_multiple_rotation+0x2ee>
 100c8aa:	b8 01 00 00 00       	mov    eax,0x1
 100c8af:	eb 05                	jmp    100c8b6 <delete_complex_multiple_rotation+0x2f3>
 100c8b1:	b8 00 00 00 00       	mov    eax,0x0
 100c8b6:	83 e0 01             	and    eax,0x1
 100c8b9:	c9                   	leave  
 100c8ba:	c3                   	ret    

000000000100c8bb <delete_DNE>:
 100c8bb:	55                   	push   rbp
 100c8bc:	48 89 e5             	mov    rbp,rsp
 100c8bf:	48 83 ec 40          	sub    rsp,0x40
 100c8c3:	c6 45 ff 01          	mov    BYTE PTR [rbp-0x1],0x1
 100c8c7:	48 8d 45 e0          	lea    rax,[rbp-0x20]
 100c8cb:	48 89 c7             	mov    rdi,rax
 100c8ce:	e8 f4 a6 ff ff       	call   1006fc7 <avl_tree_init>
 100c8d3:	bf 64 00 00 00       	mov    edi,0x64
 100c8d8:	e8 50 d8 ff ff       	call   100a12d <create_tree_node>
 100c8dd:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
 100c8e1:	bf 18 00 00 00       	mov    edi,0x18
 100c8e6:	e8 42 d8 ff ff       	call   100a12d <create_tree_node>
 100c8eb:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
 100c8ef:	bf 14 00 00 00       	mov    edi,0x14
 100c8f4:	e8 34 d8 ff ff       	call   100a12d <create_tree_node>
 100c8f9:	48 89 c1             	mov    rcx,rax
 100c8fc:	48 8d 45 e0          	lea    rax,[rbp-0x20]
 100c900:	ba 56 a1 00 01       	mov    edx,0x100a156
 100c905:	48 89 ce             	mov    rsi,rcx
 100c908:	48 89 c7             	mov    rdi,rax
 100c90b:	e8 af a5 ff ff       	call   1006ebf <avl_tree_insert>
 100c910:	bf 0a 00 00 00       	mov    edi,0xa
 100c915:	e8 13 d8 ff ff       	call   100a12d <create_tree_node>
 100c91a:	48 89 c1             	mov    rcx,rax
 100c91d:	48 8d 45 e0          	lea    rax,[rbp-0x20]
 100c921:	ba 56 a1 00 01       	mov    edx,0x100a156
 100c926:	48 89 ce             	mov    rsi,rcx
 100c929:	48 89 c7             	mov    rdi,rax
 100c92c:	e8 8e a5 ff ff       	call   1006ebf <avl_tree_insert>
 100c931:	bf 1e 00 00 00       	mov    edi,0x1e
 100c936:	e8 f2 d7 ff ff       	call   100a12d <create_tree_node>
 100c93b:	48 89 c1             	mov    rcx,rax
 100c93e:	48 8d 45 e0          	lea    rax,[rbp-0x20]
 100c942:	ba 56 a1 00 01       	mov    edx,0x100a156
 100c947:	48 89 ce             	mov    rsi,rcx
 100c94a:	48 89 c7             	mov    rdi,rax
 100c94d:	e8 6d a5 ff ff       	call   1006ebf <avl_tree_insert>
 100c952:	bf 05 00 00 00       	mov    edi,0x5
 100c957:	e8 d1 d7 ff ff       	call   100a12d <create_tree_node>
 100c95c:	48 89 c1             	mov    rcx,rax
 100c95f:	48 8d 45 e0          	lea    rax,[rbp-0x20]
 100c963:	ba 56 a1 00 01       	mov    edx,0x100a156
 100c968:	48 89 ce             	mov    rsi,rcx
 100c96b:	48 89 c7             	mov    rdi,rax
 100c96e:	e8 4c a5 ff ff       	call   1006ebf <avl_tree_insert>
 100c973:	bf 0f 00 00 00       	mov    edi,0xf
 100c978:	e8 b0 d7 ff ff       	call   100a12d <create_tree_node>
 100c97d:	48 89 c1             	mov    rcx,rax
 100c980:	48 8d 45 e0          	lea    rax,[rbp-0x20]
 100c984:	ba 56 a1 00 01       	mov    edx,0x100a156
 100c989:	48 89 ce             	mov    rsi,rcx
 100c98c:	48 89 c7             	mov    rdi,rax
 100c98f:	e8 2b a5 ff ff       	call   1006ebf <avl_tree_insert>
 100c994:	bf 19 00 00 00       	mov    edi,0x19
 100c999:	e8 8f d7 ff ff       	call   100a12d <create_tree_node>
 100c99e:	48 89 c1             	mov    rcx,rax
 100c9a1:	48 8d 45 e0          	lea    rax,[rbp-0x20]
 100c9a5:	ba 56 a1 00 01       	mov    edx,0x100a156
 100c9aa:	48 89 ce             	mov    rsi,rcx
 100c9ad:	48 89 c7             	mov    rdi,rax
 100c9b0:	e8 0a a5 ff ff       	call   1006ebf <avl_tree_insert>
 100c9b5:	c7 45 c8 14 00 00 00 	mov    DWORD PTR [rbp-0x38],0x14
 100c9bc:	c7 45 cc 0a 00 00 00 	mov    DWORD PTR [rbp-0x34],0xa
 100c9c3:	c7 45 d0 05 00 00 00 	mov    DWORD PTR [rbp-0x30],0x5
 100c9ca:	c7 45 d4 0f 00 00 00 	mov    DWORD PTR [rbp-0x2c],0xf
 100c9d1:	c7 45 d8 1e 00 00 00 	mov    DWORD PTR [rbp-0x28],0x1e
 100c9d8:	c7 45 dc 19 00 00 00 	mov    DWORD PTR [rbp-0x24],0x19
 100c9df:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100c9e3:	74 23                	je     100ca08 <delete_DNE+0x14d>
 100c9e5:	48 8d 4d c8          	lea    rcx,[rbp-0x38]
 100c9e9:	48 8d 45 e0          	lea    rax,[rbp-0x20]
 100c9ed:	ba 06 00 00 00       	mov    edx,0x6
 100c9f2:	48 89 ce             	mov    rsi,rcx
 100c9f5:	48 89 c7             	mov    rdi,rax
 100c9f8:	e8 7c d8 ff ff       	call   100a279 <pre_order_assert>
 100c9fd:	84 c0                	test   al,al
 100c9ff:	74 07                	je     100ca08 <delete_DNE+0x14d>
 100ca01:	b8 01 00 00 00       	mov    eax,0x1
 100ca06:	eb 05                	jmp    100ca0d <delete_DNE+0x152>
 100ca08:	b8 00 00 00 00       	mov    eax,0x0
 100ca0d:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 100ca10:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 100ca14:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
 100ca18:	48 8d 45 e0          	lea    rax,[rbp-0x20]
 100ca1c:	ba 56 a1 00 01       	mov    edx,0x100a156
 100ca21:	48 89 ce             	mov    rsi,rcx
 100ca24:	48 89 c7             	mov    rdi,rax
 100ca27:	e8 eb a4 ff ff       	call   1006f17 <avl_tree_delete>
 100ca2c:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
 100ca30:	48 8d 45 e0          	lea    rax,[rbp-0x20]
 100ca34:	ba 56 a1 00 01       	mov    edx,0x100a156
 100ca39:	48 89 ce             	mov    rsi,rcx
 100ca3c:	48 89 c7             	mov    rdi,rax
 100ca3f:	e8 d3 a4 ff ff       	call   1006f17 <avl_tree_delete>
 100ca44:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100ca48:	74 23                	je     100ca6d <delete_DNE+0x1b2>
 100ca4a:	48 8d 4d c8          	lea    rcx,[rbp-0x38]
 100ca4e:	48 8d 45 e0          	lea    rax,[rbp-0x20]
 100ca52:	ba 06 00 00 00       	mov    edx,0x6
 100ca57:	48 89 ce             	mov    rsi,rcx
 100ca5a:	48 89 c7             	mov    rdi,rax
 100ca5d:	e8 17 d8 ff ff       	call   100a279 <pre_order_assert>
 100ca62:	84 c0                	test   al,al
 100ca64:	74 07                	je     100ca6d <delete_DNE+0x1b2>
 100ca66:	b8 01 00 00 00       	mov    eax,0x1
 100ca6b:	eb 05                	jmp    100ca72 <delete_DNE+0x1b7>
 100ca6d:	b8 00 00 00 00       	mov    eax,0x0
 100ca72:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 100ca75:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 100ca79:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100ca7d:	74 1c                	je     100ca9b <delete_DNE+0x1e0>
 100ca7f:	48 8d 45 e0          	lea    rax,[rbp-0x20]
 100ca83:	be 56 a1 00 01       	mov    esi,0x100a156
 100ca88:	48 89 c7             	mov    rdi,rax
 100ca8b:	e8 02 a7 ff ff       	call   1007192 <avl_tree_validate>
 100ca90:	84 c0                	test   al,al
 100ca92:	74 07                	je     100ca9b <delete_DNE+0x1e0>
 100ca94:	b8 01 00 00 00       	mov    eax,0x1
 100ca99:	eb 05                	jmp    100caa0 <delete_DNE+0x1e5>
 100ca9b:	b8 00 00 00 00       	mov    eax,0x0
 100caa0:	83 e0 01             	and    eax,0x1
 100caa3:	c9                   	leave  
 100caa4:	c3                   	ret    

000000000100caa5 <test_apocalypse>:
 100caa5:	55                   	push   rbp
 100caa6:	48 89 e5             	mov    rbp,rsp
 100caa9:	48 83 ec 30          	sub    rsp,0x30
 100caad:	c6 45 ff 01          	mov    BYTE PTR [rbp-0x1],0x1
 100cab1:	48 8d 45 d8          	lea    rax,[rbp-0x28]
 100cab5:	48 89 c7             	mov    rdi,rax
 100cab8:	e8 0a a5 ff ff       	call   1006fc7 <avl_tree_init>
 100cabd:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [rbp-0x8],0x0
 100cac4:	e9 f3 00 00 00       	jmp    100cbbc <test_apocalypse+0x117>
 100cac9:	e8 30 97 ff ff       	call   10061fe <rand>
 100cace:	89 c1                	mov    ecx,eax
 100cad0:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
 100cad3:	48 63 d0             	movsxd rdx,eax
 100cad6:	48 89 d0             	mov    rax,rdx
 100cad9:	48 c1 e0 02          	shl    rax,0x2
 100cadd:	48 01 d0             	add    rax,rdx
 100cae0:	48 c1 e0 03          	shl    rax,0x3
 100cae4:	48 05 40 44 01 01    	add    rax,0x1014440
 100caea:	89 08                	mov    DWORD PTR [rax],ecx
 100caec:	eb 63                	jmp    100cb51 <test_apocalypse+0xac>
 100caee:	e8 0b 97 ff ff       	call   10061fe <rand>
 100caf3:	89 c2                	mov    edx,eax
 100caf5:	48 69 d2 25 00 06 00 	imul   rdx,rdx,0x60025
 100cafc:	48 c1 ea 20          	shr    rdx,0x20
 100cb00:	89 c1                	mov    ecx,eax
 100cb02:	29 d1                	sub    ecx,edx
 100cb04:	d1 e9                	shr    ecx,1
 100cb06:	01 ca                	add    edx,ecx
 100cb08:	c1 ea 0e             	shr    edx,0xe
 100cb0b:	69 d2 fd 7f 00 00    	imul   edx,edx,0x7ffd
 100cb11:	29 d0                	sub    eax,edx
 100cb13:	89 c2                	mov    edx,eax
 100cb15:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
 100cb18:	48 63 c8             	movsxd rcx,eax
 100cb1b:	48 89 c8             	mov    rax,rcx
 100cb1e:	48 c1 e0 02          	shl    rax,0x2
 100cb22:	48 01 c8             	add    rax,rcx
 100cb25:	48 c1 e0 03          	shl    rax,0x3
 100cb29:	48 05 40 44 01 01    	add    rax,0x1014440
 100cb2f:	8b 00                	mov    eax,DWORD PTR [rax]
 100cb31:	01 d0                	add    eax,edx
 100cb33:	89 c1                	mov    ecx,eax
 100cb35:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
 100cb38:	48 63 d0             	movsxd rdx,eax
 100cb3b:	48 89 d0             	mov    rax,rdx
 100cb3e:	48 c1 e0 02          	shl    rax,0x2
 100cb42:	48 01 d0             	add    rax,rdx
 100cb45:	48 c1 e0 03          	shl    rax,0x3
 100cb49:	48 05 40 44 01 01    	add    rax,0x1014440
 100cb4f:	89 08                	mov    DWORD PTR [rax],ecx
 100cb51:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
 100cb54:	48 63 d0             	movsxd rdx,eax
 100cb57:	48 89 d0             	mov    rax,rdx
 100cb5a:	48 c1 e0 02          	shl    rax,0x2
 100cb5e:	48 01 d0             	add    rax,rdx
 100cb61:	48 c1 e0 03          	shl    rax,0x3
 100cb65:	48 8d 88 20 44 01 01 	lea    rcx,[rax+0x1014420]
 100cb6c:	48 8d 45 d8          	lea    rax,[rbp-0x28]
 100cb70:	ba 56 a1 00 01       	mov    edx,0x100a156
 100cb75:	48 89 ce             	mov    rsi,rcx
 100cb78:	48 89 c7             	mov    rdi,rax
 100cb7b:	e8 0f a3 ff ff       	call   1006e8f <avl_tree_search>
 100cb80:	48 85 c0             	test   rax,rax
 100cb83:	0f 85 65 ff ff ff    	jne    100caee <test_apocalypse+0x49>
 100cb89:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
 100cb8c:	48 63 d0             	movsxd rdx,eax
 100cb8f:	48 89 d0             	mov    rax,rdx
 100cb92:	48 c1 e0 02          	shl    rax,0x2
 100cb96:	48 01 d0             	add    rax,rdx
 100cb99:	48 c1 e0 03          	shl    rax,0x3
 100cb9d:	48 8d 88 20 44 01 01 	lea    rcx,[rax+0x1014420]
 100cba4:	48 8d 45 d8          	lea    rax,[rbp-0x28]
 100cba8:	ba 56 a1 00 01       	mov    edx,0x100a156
 100cbad:	48 89 ce             	mov    rsi,rcx
 100cbb0:	48 89 c7             	mov    rdi,rax
 100cbb3:	e8 07 a3 ff ff       	call   1006ebf <avl_tree_insert>
 100cbb8:	83 45 f8 01          	add    DWORD PTR [rbp-0x8],0x1
 100cbbc:	81 7d f8 f3 01 00 00 	cmp    DWORD PTR [rbp-0x8],0x1f3
 100cbc3:	0f 8e 00 ff ff ff    	jle    100cac9 <test_apocalypse+0x24>
 100cbc9:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100cbcd:	74 1c                	je     100cbeb <test_apocalypse+0x146>
 100cbcf:	48 8d 45 d8          	lea    rax,[rbp-0x28]
 100cbd3:	be 56 a1 00 01       	mov    esi,0x100a156
 100cbd8:	48 89 c7             	mov    rdi,rax
 100cbdb:	e8 b2 a5 ff ff       	call   1007192 <avl_tree_validate>
 100cbe0:	84 c0                	test   al,al
 100cbe2:	74 07                	je     100cbeb <test_apocalypse+0x146>
 100cbe4:	b8 01 00 00 00       	mov    eax,0x1
 100cbe9:	eb 05                	jmp    100cbf0 <test_apocalypse+0x14b>
 100cbeb:	b8 00 00 00 00       	mov    eax,0x0
 100cbf0:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 100cbf3:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 100cbf7:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100cbfb:	74 1a                	je     100cc17 <test_apocalypse+0x172>
 100cbfd:	48 8d 45 d8          	lea    rax,[rbp-0x28]
 100cc01:	48 89 c7             	mov    rdi,rax
 100cc04:	e8 58 a3 ff ff       	call   1006f61 <avl_tree_size>
 100cc09:	3d f4 01 00 00       	cmp    eax,0x1f4
 100cc0e:	75 07                	jne    100cc17 <test_apocalypse+0x172>
 100cc10:	b8 01 00 00 00       	mov    eax,0x1
 100cc15:	eb 05                	jmp    100cc1c <test_apocalypse+0x177>
 100cc17:	b8 00 00 00 00       	mov    eax,0x0
 100cc1c:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 100cc1f:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 100cc23:	48 8d 45 d8          	lea    rax,[rbp-0x28]
 100cc27:	48 89 c7             	mov    rdi,rax
 100cc2a:	e8 93 a0 ff ff       	call   1006cc2 <avl_tree_smallest>
 100cc2f:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
 100cc33:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
 100cc3a:	c7 45 e8 ff ff ff ff 	mov    DWORD PTR [rbp-0x18],0xffffffff
 100cc41:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 100cc45:	8b 40 20             	mov    eax,DWORD PTR [rax+0x20]
 100cc48:	89 45 e4             	mov    DWORD PTR [rbp-0x1c],eax
 100cc4b:	eb 39                	jmp    100cc86 <test_apocalypse+0x1e1>
 100cc4d:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
 100cc50:	3b 45 e8             	cmp    eax,DWORD PTR [rbp-0x18]
 100cc53:	7d 06                	jge    100cc5b <test_apocalypse+0x1b6>
 100cc55:	c6 45 ff 00          	mov    BYTE PTR [rbp-0x1],0x0
 100cc59:	eb 32                	jmp    100cc8d <test_apocalypse+0x1e8>
 100cc5b:	83 45 ec 01          	add    DWORD PTR [rbp-0x14],0x1
 100cc5f:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 100cc63:	48 89 c7             	mov    rdi,rax
 100cc66:	e8 f9 a0 ff ff       	call   1006d64 <avl_tree_larger>
 100cc6b:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
 100cc6f:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
 100cc72:	89 45 e8             	mov    DWORD PTR [rbp-0x18],eax
 100cc75:	48 83 7d f0 00       	cmp    QWORD PTR [rbp-0x10],0x0
 100cc7a:	74 0a                	je     100cc86 <test_apocalypse+0x1e1>
 100cc7c:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 100cc80:	8b 40 20             	mov    eax,DWORD PTR [rax+0x20]
 100cc83:	89 45 e4             	mov    DWORD PTR [rbp-0x1c],eax
 100cc86:	48 83 7d f0 00       	cmp    QWORD PTR [rbp-0x10],0x0
 100cc8b:	75 c0                	jne    100cc4d <test_apocalypse+0x1a8>
 100cc8d:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100cc91:	74 10                	je     100cca3 <test_apocalypse+0x1fe>
 100cc93:	81 7d ec f4 01 00 00 	cmp    DWORD PTR [rbp-0x14],0x1f4
 100cc9a:	75 07                	jne    100cca3 <test_apocalypse+0x1fe>
 100cc9c:	b8 01 00 00 00       	mov    eax,0x1
 100cca1:	eb 05                	jmp    100cca8 <test_apocalypse+0x203>
 100cca3:	b8 00 00 00 00       	mov    eax,0x0
 100cca8:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 100ccab:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 100ccaf:	48 8d 45 d8          	lea    rax,[rbp-0x28]
 100ccb3:	48 89 c7             	mov    rdi,rax
 100ccb6:	e8 57 a0 ff ff       	call   1006d12 <avl_tree_largest>
 100ccbb:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
 100ccbf:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
 100ccc6:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 100ccca:	8b 40 20             	mov    eax,DWORD PTR [rax+0x20]
 100cccd:	89 45 e4             	mov    DWORD PTR [rbp-0x1c],eax
 100ccd0:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
 100ccd3:	89 45 e8             	mov    DWORD PTR [rbp-0x18],eax
 100ccd6:	eb 39                	jmp    100cd11 <test_apocalypse+0x26c>
 100ccd8:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
 100ccdb:	3b 45 e8             	cmp    eax,DWORD PTR [rbp-0x18]
 100ccde:	7e 06                	jle    100cce6 <test_apocalypse+0x241>
 100cce0:	c6 45 ff 00          	mov    BYTE PTR [rbp-0x1],0x0
 100cce4:	eb 32                	jmp    100cd18 <test_apocalypse+0x273>
 100cce6:	83 45 ec 01          	add    DWORD PTR [rbp-0x14],0x1
 100ccea:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 100ccee:	48 89 c7             	mov    rdi,rax
 100ccf1:	e8 03 a1 ff ff       	call   1006df9 <avl_tree_smaller>
 100ccf6:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
 100ccfa:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
 100ccfd:	89 45 e8             	mov    DWORD PTR [rbp-0x18],eax
 100cd00:	48 83 7d f0 00       	cmp    QWORD PTR [rbp-0x10],0x0
 100cd05:	74 0a                	je     100cd11 <test_apocalypse+0x26c>
 100cd07:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 100cd0b:	8b 40 20             	mov    eax,DWORD PTR [rax+0x20]
 100cd0e:	89 45 e4             	mov    DWORD PTR [rbp-0x1c],eax
 100cd11:	48 83 7d f0 00       	cmp    QWORD PTR [rbp-0x10],0x0
 100cd16:	75 c0                	jne    100ccd8 <test_apocalypse+0x233>
 100cd18:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100cd1c:	74 10                	je     100cd2e <test_apocalypse+0x289>
 100cd1e:	81 7d ec f4 01 00 00 	cmp    DWORD PTR [rbp-0x14],0x1f4
 100cd25:	75 07                	jne    100cd2e <test_apocalypse+0x289>
 100cd27:	b8 01 00 00 00       	mov    eax,0x1
 100cd2c:	eb 05                	jmp    100cd33 <test_apocalypse+0x28e>
 100cd2e:	b8 00 00 00 00       	mov    eax,0x0
 100cd33:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 100cd36:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 100cd3a:	c7 45 e0 00 00 00 00 	mov    DWORD PTR [rbp-0x20],0x0
 100cd41:	e9 fb 00 00 00       	jmp    100ce41 <test_apocalypse+0x39c>
 100cd46:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100cd4a:	74 3b                	je     100cd87 <test_apocalypse+0x2e2>
 100cd4c:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
 100cd4f:	48 63 d0             	movsxd rdx,eax
 100cd52:	48 89 d0             	mov    rax,rdx
 100cd55:	48 c1 e0 02          	shl    rax,0x2
 100cd59:	48 01 d0             	add    rax,rdx
 100cd5c:	48 c1 e0 03          	shl    rax,0x3
 100cd60:	48 8d 88 20 44 01 01 	lea    rcx,[rax+0x1014420]
 100cd67:	48 8d 45 d8          	lea    rax,[rbp-0x28]
 100cd6b:	ba 56 a1 00 01       	mov    edx,0x100a156
 100cd70:	48 89 ce             	mov    rsi,rcx
 100cd73:	48 89 c7             	mov    rdi,rax
 100cd76:	e8 14 a1 ff ff       	call   1006e8f <avl_tree_search>
 100cd7b:	48 85 c0             	test   rax,rax
 100cd7e:	74 07                	je     100cd87 <test_apocalypse+0x2e2>
 100cd80:	b8 01 00 00 00       	mov    eax,0x1
 100cd85:	eb 05                	jmp    100cd8c <test_apocalypse+0x2e7>
 100cd87:	b8 00 00 00 00       	mov    eax,0x0
 100cd8c:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 100cd8f:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 100cd93:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
 100cd96:	48 63 d0             	movsxd rdx,eax
 100cd99:	48 89 d0             	mov    rax,rdx
 100cd9c:	48 c1 e0 02          	shl    rax,0x2
 100cda0:	48 01 d0             	add    rax,rdx
 100cda3:	48 c1 e0 03          	shl    rax,0x3
 100cda7:	48 8d 88 20 44 01 01 	lea    rcx,[rax+0x1014420]
 100cdae:	48 8d 45 d8          	lea    rax,[rbp-0x28]
 100cdb2:	ba 56 a1 00 01       	mov    edx,0x100a156
 100cdb7:	48 89 ce             	mov    rsi,rcx
 100cdba:	48 89 c7             	mov    rdi,rax
 100cdbd:	e8 55 a1 ff ff       	call   1006f17 <avl_tree_delete>
 100cdc2:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100cdc6:	74 3b                	je     100ce03 <test_apocalypse+0x35e>
 100cdc8:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
 100cdcb:	48 63 d0             	movsxd rdx,eax
 100cdce:	48 89 d0             	mov    rax,rdx
 100cdd1:	48 c1 e0 02          	shl    rax,0x2
 100cdd5:	48 01 d0             	add    rax,rdx
 100cdd8:	48 c1 e0 03          	shl    rax,0x3
 100cddc:	48 8d 88 20 44 01 01 	lea    rcx,[rax+0x1014420]
 100cde3:	48 8d 45 d8          	lea    rax,[rbp-0x28]
 100cde7:	ba 56 a1 00 01       	mov    edx,0x100a156
 100cdec:	48 89 ce             	mov    rsi,rcx
 100cdef:	48 89 c7             	mov    rdi,rax
 100cdf2:	e8 98 a0 ff ff       	call   1006e8f <avl_tree_search>
 100cdf7:	48 85 c0             	test   rax,rax
 100cdfa:	75 07                	jne    100ce03 <test_apocalypse+0x35e>
 100cdfc:	b8 01 00 00 00       	mov    eax,0x1
 100ce01:	eb 05                	jmp    100ce08 <test_apocalypse+0x363>
 100ce03:	b8 00 00 00 00       	mov    eax,0x0
 100ce08:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 100ce0b:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 100ce0f:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100ce13:	74 1c                	je     100ce31 <test_apocalypse+0x38c>
 100ce15:	48 8d 45 d8          	lea    rax,[rbp-0x28]
 100ce19:	be 56 a1 00 01       	mov    esi,0x100a156
 100ce1e:	48 89 c7             	mov    rdi,rax
 100ce21:	e8 6c a3 ff ff       	call   1007192 <avl_tree_validate>
 100ce26:	84 c0                	test   al,al
 100ce28:	74 07                	je     100ce31 <test_apocalypse+0x38c>
 100ce2a:	b8 01 00 00 00       	mov    eax,0x1
 100ce2f:	eb 05                	jmp    100ce36 <test_apocalypse+0x391>
 100ce31:	b8 00 00 00 00       	mov    eax,0x0
 100ce36:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 100ce39:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 100ce3d:	83 45 e0 01          	add    DWORD PTR [rbp-0x20],0x1
 100ce41:	81 7d e0 f3 01 00 00 	cmp    DWORD PTR [rbp-0x20],0x1f3
 100ce48:	0f 8e f8 fe ff ff    	jle    100cd46 <test_apocalypse+0x2a1>
 100ce4e:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
 100ce52:	74 17                	je     100ce6b <test_apocalypse+0x3c6>
 100ce54:	48 8d 45 d8          	lea    rax,[rbp-0x28]
 100ce58:	48 89 c7             	mov    rdi,rax
 100ce5b:	e8 01 a1 ff ff       	call   1006f61 <avl_tree_size>
 100ce60:	85 c0                	test   eax,eax
 100ce62:	75 07                	jne    100ce6b <test_apocalypse+0x3c6>
 100ce64:	b8 01 00 00 00       	mov    eax,0x1
 100ce69:	eb 05                	jmp    100ce70 <test_apocalypse+0x3cb>
 100ce6b:	b8 00 00 00 00       	mov    eax,0x0
 100ce70:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
 100ce73:	80 65 ff 01          	and    BYTE PTR [rbp-0x1],0x1
 100ce77:	0f b6 45 ff          	movzx  eax,BYTE PTR [rbp-0x1]
 100ce7b:	c9                   	leave  
 100ce7c:	c3                   	ret    

000000000100ce7d <avl_tree_test>:
 100ce7d:	55                   	push   rbp
 100ce7e:	48 89 e5             	mov    rbp,rsp
 100ce81:	48 83 ec 10          	sub    rsp,0x10
 100ce85:	bf 30 32 01 01       	mov    edi,0x1013230
 100ce8a:	e8 46 04 00 00       	call   100d2d5 <test_begin>
 100ce8f:	b8 00 00 00 00       	mov    eax,0x0
 100ce94:	e8 18 d4 ff ff       	call   100a2b1 <insert_simple_l>
 100ce99:	0f b6 c0             	movzx  eax,al
 100ce9c:	89 c6                	mov    esi,eax
 100ce9e:	bf 3e 32 01 01       	mov    edi,0x101323e
 100cea3:	e8 4d 06 00 00       	call   100d4f5 <run_case>
 100cea8:	b8 00 00 00 00       	mov    eax,0x0
 100cead:	e8 33 d5 ff ff       	call   100a3e5 <insert_simple_r>
 100ceb2:	0f b6 c0             	movzx  eax,al
 100ceb5:	89 c6                	mov    esi,eax
 100ceb7:	bf 4e 32 01 01       	mov    edi,0x101324e
 100cebc:	e8 34 06 00 00       	call   100d4f5 <run_case>
 100cec1:	b8 00 00 00 00       	mov    eax,0x0
 100cec6:	e8 4e d6 ff ff       	call   100a519 <insert_simple_ll>
 100cecb:	0f b6 c0             	movzx  eax,al
 100cece:	89 c6                	mov    esi,eax
 100ced0:	bf 5e 32 01 01       	mov    edi,0x101325e
 100ced5:	e8 1b 06 00 00       	call   100d4f5 <run_case>
 100ceda:	b8 00 00 00 00       	mov    eax,0x0
 100cedf:	e8 69 d7 ff ff       	call   100a64d <insert_simple_rr>
 100cee4:	0f b6 c0             	movzx  eax,al
 100cee7:	89 c6                	mov    esi,eax
 100cee9:	bf 6f 32 01 01       	mov    edi,0x101326f
 100ceee:	e8 02 06 00 00       	call   100d4f5 <run_case>
 100cef3:	b8 00 00 00 00       	mov    eax,0x0
 100cef8:	e8 84 d8 ff ff       	call   100a781 <insert_complex_1>
 100cefd:	0f b6 c0             	movzx  eax,al
 100cf00:	89 c6                	mov    esi,eax
 100cf02:	bf 80 32 01 01       	mov    edi,0x1013280
 100cf07:	e8 e9 05 00 00       	call   100d4f5 <run_case>
 100cf0c:	b8 00 00 00 00       	mov    eax,0x0
 100cf11:	e8 2c da ff ff       	call   100a942 <insert_complex_2>
 100cf16:	0f b6 c0             	movzx  eax,al
 100cf19:	89 c6                	mov    esi,eax
 100cf1b:	bf 91 32 01 01       	mov    edi,0x1013291
 100cf20:	e8 d0 05 00 00       	call   100d4f5 <run_case>
 100cf25:	b8 00 00 00 00       	mov    eax,0x0
 100cf2a:	e8 d4 db ff ff       	call   100ab03 <insert_complex_3>
 100cf2f:	0f b6 c0             	movzx  eax,al
 100cf32:	89 c6                	mov    esi,eax
 100cf34:	bf a2 32 01 01       	mov    edi,0x10132a2
 100cf39:	e8 b7 05 00 00       	call   100d4f5 <run_case>
 100cf3e:	b8 00 00 00 00       	mov    eax,0x0
 100cf43:	e8 67 de ff ff       	call   100adaf <insert_complex_4>
 100cf48:	0f b6 c0             	movzx  eax,al
 100cf4b:	89 c6                	mov    esi,eax
 100cf4d:	bf b3 32 01 01       	mov    edi,0x10132b3
 100cf52:	e8 9e 05 00 00       	call   100d4f5 <run_case>
 100cf57:	b8 00 00 00 00       	mov    eax,0x0
 100cf5c:	e8 fa e0 ff ff       	call   100b05b <insert_duplicate>
 100cf61:	0f b6 c0             	movzx  eax,al
 100cf64:	89 c6                	mov    esi,eax
 100cf66:	bf c4 32 01 01       	mov    edi,0x10132c4
 100cf6b:	e8 85 05 00 00       	call   100d4f5 <run_case>
 100cf70:	b8 00 00 00 00       	mov    eax,0x0
 100cf75:	e8 a3 e3 ff ff       	call   100b31d <delete_simple_l>
 100cf7a:	0f b6 c0             	movzx  eax,al
 100cf7d:	89 c6                	mov    esi,eax
 100cf7f:	bf d5 32 01 01       	mov    edi,0x10132d5
 100cf84:	e8 6c 05 00 00       	call   100d4f5 <run_case>
 100cf89:	b8 00 00 00 00       	mov    eax,0x0
 100cf8e:	e8 0a e5 ff ff       	call   100b49d <delete_simple_r>
 100cf93:	0f b6 c0             	movzx  eax,al
 100cf96:	89 c6                	mov    esi,eax
 100cf98:	bf e5 32 01 01       	mov    edi,0x10132e5
 100cf9d:	e8 53 05 00 00       	call   100d4f5 <run_case>
 100cfa2:	b8 00 00 00 00       	mov    eax,0x0
 100cfa7:	e8 71 e6 ff ff       	call   100b61d <delete_simple_ll>
 100cfac:	0f b6 c0             	movzx  eax,al
 100cfaf:	89 c6                	mov    esi,eax
 100cfb1:	bf f5 32 01 01       	mov    edi,0x10132f5
 100cfb6:	e8 3a 05 00 00       	call   100d4f5 <run_case>
 100cfbb:	b8 00 00 00 00       	mov    eax,0x0
 100cfc0:	e8 d8 e7 ff ff       	call   100b79d <delete_simple_rr>
 100cfc5:	0f b6 c0             	movzx  eax,al
 100cfc8:	89 c6                	mov    esi,eax
 100cfca:	bf 06 33 01 01       	mov    edi,0x1013306
 100cfcf:	e8 21 05 00 00       	call   100d4f5 <run_case>
 100cfd4:	b8 00 00 00 00       	mov    eax,0x0
 100cfd9:	e8 3f e9 ff ff       	call   100b91d <delete_complex_1>
 100cfde:	0f b6 c0             	movzx  eax,al
 100cfe1:	89 c6                	mov    esi,eax
 100cfe3:	bf 17 33 01 01       	mov    edi,0x1013317
 100cfe8:	e8 08 05 00 00       	call   100d4f5 <run_case>
 100cfed:	b8 00 00 00 00       	mov    eax,0x0
 100cff2:	e8 19 ea ff ff       	call   100ba10 <delete_complex_2>
 100cff7:	0f b6 c0             	movzx  eax,al
 100cffa:	89 c6                	mov    esi,eax
 100cffc:	bf 28 33 01 01       	mov    edi,0x1013328
 100d001:	e8 ef 04 00 00       	call   100d4f5 <run_case>
 100d006:	b8 00 00 00 00       	mov    eax,0x0
 100d00b:	e8 af eb ff ff       	call   100bbbf <delete_complex_3>
 100d010:	0f b6 c0             	movzx  eax,al
 100d013:	89 c6                	mov    esi,eax
 100d015:	bf 39 33 01 01       	mov    edi,0x1013339
 100d01a:	e8 d6 04 00 00       	call   100d4f5 <run_case>
 100d01f:	b8 00 00 00 00       	mov    eax,0x0
 100d024:	e8 74 ed ff ff       	call   100bd9d <delete_complex_4>
 100d029:	0f b6 c0             	movzx  eax,al
 100d02c:	89 c6                	mov    esi,eax
 100d02e:	bf 4a 33 01 01       	mov    edi,0x101334a
 100d033:	e8 bd 04 00 00       	call   100d4f5 <run_case>
 100d038:	b8 00 00 00 00       	mov    eax,0x0
 100d03d:	e8 91 ef ff ff       	call   100bfd3 <delete_complex_single_rotation>
 100d042:	0f b6 c0             	movzx  eax,al
 100d045:	89 c6                	mov    esi,eax
 100d047:	bf 60 33 01 01       	mov    edi,0x1013360
 100d04c:	e8 a4 04 00 00       	call   100d4f5 <run_case>
 100d051:	b8 00 00 00 00       	mov    eax,0x0
 100d056:	e8 70 f2 ff ff       	call   100c2cb <delete_complex_double_rotation>
 100d05b:	0f b6 c0             	movzx  eax,al
 100d05e:	89 c6                	mov    esi,eax
 100d060:	bf 80 33 01 01       	mov    edi,0x1013380
 100d065:	e8 8b 04 00 00       	call   100d4f5 <run_case>
 100d06a:	b8 00 00 00 00       	mov    eax,0x0
 100d06f:	e8 4f f5 ff ff       	call   100c5c3 <delete_complex_multiple_rotation>
 100d074:	0f b6 c0             	movzx  eax,al
 100d077:	89 c6                	mov    esi,eax
 100d079:	bf a0 33 01 01       	mov    edi,0x10133a0
 100d07e:	e8 72 04 00 00       	call   100d4f5 <run_case>
 100d083:	b8 00 00 00 00       	mov    eax,0x0
 100d088:	e8 2e f8 ff ff       	call   100c8bb <delete_DNE>
 100d08d:	0f b6 c0             	movzx  eax,al
 100d090:	89 c6                	mov    esi,eax
 100d092:	bf c1 33 01 01       	mov    edi,0x10133c1
 100d097:	e8 59 04 00 00       	call   100d4f5 <run_case>
 100d09c:	bf aa 0b 00 00       	mov    edi,0xbaa
 100d0a1:	e8 90 91 ff ff       	call   1006236 <srand>
 100d0a6:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
 100d0ad:	eb 1d                	jmp    100d0cc <avl_tree_test+0x24f>
 100d0af:	b8 00 00 00 00       	mov    eax,0x0
 100d0b4:	e8 ec f9 ff ff       	call   100caa5 <test_apocalypse>
 100d0b9:	0f b6 c0             	movzx  eax,al
 100d0bc:	89 c6                	mov    esi,eax
 100d0be:	bf cc 33 01 01       	mov    edi,0x10133cc
 100d0c3:	e8 2d 04 00 00       	call   100d4f5 <run_case>
 100d0c8:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
 100d0cc:	83 7d fc 01          	cmp    DWORD PTR [rbp-0x4],0x1
 100d0d0:	7e dd                	jle    100d0af <avl_tree_test+0x232>
 100d0d2:	b8 00 00 00 00       	mov    eax,0x0
 100d0d7:	e8 6d 02 00 00       	call   100d349 <test_end>
 100d0dc:	90                   	nop
 100d0dd:	c9                   	leave  
 100d0de:	c3                   	ret    

000000000100d0df <test_info>:
 100d0df:	55                   	push   rbp
 100d0e0:	48 89 e5             	mov    rbp,rsp
 100d0e3:	48 8b 05 56 cb 00 00 	mov    rax,QWORD PTR [rip+0xcb56]        # 1019c40 <test_name>
 100d0ea:	48 89 c6             	mov    rsi,rax
 100d0ed:	bf e0 33 01 01       	mov    edi,0x10133e0
 100d0f2:	b8 00 00 00 00       	mov    eax,0x0
 100d0f7:	e8 3d 16 00 00       	call   100e739 <hal_printf>
 100d0fc:	90                   	nop
 100d0fd:	5d                   	pop    rbp
 100d0fe:	c3                   	ret    

000000000100d0ff <test_warning>:
 100d0ff:	55                   	push   rbp
 100d100:	48 89 e5             	mov    rbp,rsp
 100d103:	48 8b 05 36 cb 00 00 	mov    rax,QWORD PTR [rip+0xcb36]        # 1019c40 <test_name>
 100d10a:	48 89 c6             	mov    rsi,rax
 100d10d:	bf f1 33 01 01       	mov    edi,0x10133f1
 100d112:	b8 00 00 00 00       	mov    eax,0x0
 100d117:	e8 1d 16 00 00       	call   100e739 <hal_printf>
 100d11c:	90                   	nop
 100d11d:	5d                   	pop    rbp
 100d11e:	c3                   	ret    

000000000100d11f <test_error>:
 100d11f:	55                   	push   rbp
 100d120:	48 89 e5             	mov    rbp,rsp
 100d123:	48 8b 05 16 cb 00 00 	mov    rax,QWORD PTR [rip+0xcb16]        # 1019c40 <test_name>
 100d12a:	48 89 c6             	mov    rsi,rax
 100d12d:	bf 02 34 01 01       	mov    edi,0x1013402
 100d132:	b8 00 00 00 00       	mov    eax,0x0
 100d137:	e8 fd 15 00 00       	call   100e739 <hal_printf>
 100d13c:	90                   	nop
 100d13d:	5d                   	pop    rbp
 100d13e:	c3                   	ret    

000000000100d13f <gat_push>:
 100d13f:	55                   	push   rbp
 100d140:	48 89 e5             	mov    rbp,rsp
 100d143:	48 83 ec 18          	sub    rsp,0x18
 100d147:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
 100d14b:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
 100d152:	eb 29                	jmp    100d17d <gat_push+0x3e>
 100d154:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
 100d157:	48 98                	cdqe   
 100d159:	48 8b 04 c5 40 94 01 	mov    rax,QWORD PTR [rax*8+0x1019440]
 100d160:	01 
 100d161:	48 85 c0             	test   rax,rax
 100d164:	75 13                	jne    100d179 <gat_push+0x3a>
 100d166:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
 100d169:	48 98                	cdqe   
 100d16b:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
 100d16f:	48 89 14 c5 40 94 01 	mov    QWORD PTR [rax*8+0x1019440],rdx
 100d176:	01 
 100d177:	eb 0d                	jmp    100d186 <gat_push+0x47>
 100d179:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
 100d17d:	81 7d fc ff 00 00 00 	cmp    DWORD PTR [rbp-0x4],0xff
 100d184:	7e ce                	jle    100d154 <gat_push+0x15>
 100d186:	c9                   	leave  
 100d187:	c3                   	ret    

000000000100d188 <gat_full>:
 100d188:	55                   	push   rbp
 100d189:	48 89 e5             	mov    rbp,rsp
 100d18c:	48 83 ec 10          	sub    rsp,0x10
 100d190:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
 100d197:	eb 1d                	jmp    100d1b6 <gat_full+0x2e>
 100d199:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
 100d19c:	48 98                	cdqe   
 100d19e:	48 8b 04 c5 40 94 01 	mov    rax,QWORD PTR [rax*8+0x1019440]
 100d1a5:	01 
 100d1a6:	48 85 c0             	test   rax,rax
 100d1a9:	75 07                	jne    100d1b2 <gat_full+0x2a>
 100d1ab:	b8 00 00 00 00       	mov    eax,0x0
 100d1b0:	eb 12                	jmp    100d1c4 <gat_full+0x3c>
 100d1b2:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
 100d1b6:	81 7d fc ff 00 00 00 	cmp    DWORD PTR [rbp-0x4],0xff
 100d1bd:	7e da                	jle    100d199 <gat_full+0x11>
 100d1bf:	b8 01 00 00 00       	mov    eax,0x1
 100d1c4:	c9                   	leave  
 100d1c5:	c3                   	ret    

000000000100d1c6 <gat_free>:
 100d1c6:	55                   	push   rbp
 100d1c7:	48 89 e5             	mov    rbp,rsp
 100d1ca:	48 83 ec 10          	sub    rsp,0x10
 100d1ce:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
 100d1d5:	eb 3c                	jmp    100d213 <gat_free+0x4d>
 100d1d7:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
 100d1da:	48 98                	cdqe   
 100d1dc:	48 8b 04 c5 40 94 01 	mov    rax,QWORD PTR [rax*8+0x1019440]
 100d1e3:	01 
 100d1e4:	48 85 c0             	test   rax,rax
 100d1e7:	74 26                	je     100d20f <gat_free+0x49>
 100d1e9:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
 100d1ec:	48 98                	cdqe   
 100d1ee:	48 8b 04 c5 40 94 01 	mov    rax,QWORD PTR [rax*8+0x1019440]
 100d1f5:	01 
 100d1f6:	48 89 c7             	mov    rdi,rax
 100d1f9:	e8 50 0e 00 00       	call   100e04e <hfree>
 100d1fe:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
 100d201:	48 98                	cdqe   
 100d203:	48 c7 04 c5 40 94 01 	mov    QWORD PTR [rax*8+0x1019440],0x0
 100d20a:	01 00 00 00 00 
 100d20f:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
 100d213:	81 7d fc ff 00 00 00 	cmp    DWORD PTR [rbp-0x4],0xff
 100d21a:	7e bb                	jle    100d1d7 <gat_free+0x11>
 100d21c:	90                   	nop
 100d21d:	c9                   	leave  
 100d21e:	c3                   	ret    

000000000100d21f <ginfo_push>:
 100d21f:	55                   	push   rbp
 100d220:	48 89 e5             	mov    rbp,rsp
 100d223:	48 83 ec 20          	sub    rsp,0x20
 100d227:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
 100d22b:	89 f0                	mov    eax,esi
 100d22d:	88 45 e4             	mov    BYTE PTR [rbp-0x1c],al
 100d230:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
 100d235:	74 06                	je     100d23d <ginfo_push+0x1e>
 100d237:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 100d23b:	eb 05                	jmp    100d242 <ginfo_push+0x23>
 100d23d:	b8 12 34 01 01       	mov    eax,0x1013412
 100d242:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
 100d246:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
 100d24d:	eb 5e                	jmp    100d2ad <ginfo_push+0x8e>
 100d24f:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
 100d252:	48 98                	cdqe   
 100d254:	48 c1 e0 04          	shl    rax,0x4
 100d258:	48 05 49 92 01 01    	add    rax,0x1019249
 100d25e:	0f b6 00             	movzx  eax,BYTE PTR [rax]
 100d261:	83 f0 01             	xor    eax,0x1
 100d264:	84 c0                	test   al,al
 100d266:	74 41                	je     100d2a9 <ginfo_push+0x8a>
 100d268:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
 100d26b:	48 98                	cdqe   
 100d26d:	48 c1 e0 04          	shl    rax,0x4
 100d271:	48 8d 90 40 92 01 01 	lea    rdx,[rax+0x1019240]
 100d278:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 100d27c:	48 89 02             	mov    QWORD PTR [rdx],rax
 100d27f:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
 100d282:	48 98                	cdqe   
 100d284:	48 c1 e0 04          	shl    rax,0x4
 100d288:	48 8d 90 48 92 01 01 	lea    rdx,[rax+0x1019248]
 100d28f:	0f b6 45 e4          	movzx  eax,BYTE PTR [rbp-0x1c]
 100d293:	88 02                	mov    BYTE PTR [rdx],al
 100d295:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
 100d298:	48 98                	cdqe   
 100d29a:	48 c1 e0 04          	shl    rax,0x4
 100d29e:	48 05 49 92 01 01    	add    rax,0x1019249
 100d2a4:	c6 00 01             	mov    BYTE PTR [rax],0x1
 100d2a7:	eb 2a                	jmp    100d2d3 <ginfo_push+0xb4>
 100d2a9:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
 100d2ad:	83 7d fc 1f          	cmp    DWORD PTR [rbp-0x4],0x1f
 100d2b1:	7e 9c                	jle    100d24f <ginfo_push+0x30>
 100d2b3:	b8 00 00 00 00       	mov    eax,0x0
 100d2b8:	e8 42 fe ff ff       	call   100d0ff <test_warning>
 100d2bd:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 100d2c1:	48 89 c6             	mov    rsi,rax
 100d2c4:	bf 28 34 01 01       	mov    edi,0x1013428
 100d2c9:	b8 00 00 00 00       	mov    eax,0x0
 100d2ce:	e8 66 14 00 00       	call   100e739 <hal_printf>
 100d2d3:	c9                   	leave  
 100d2d4:	c3                   	ret    

000000000100d2d5 <test_begin>:
 100d2d5:	55                   	push   rbp
 100d2d6:	48 89 e5             	mov    rbp,rsp
 100d2d9:	48 83 ec 18          	sub    rsp,0x18
 100d2dd:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
 100d2e1:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
 100d2e6:	74 06                	je     100d2ee <test_begin+0x19>
 100d2e8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 100d2ec:	eb 05                	jmp    100d2f3 <test_begin+0x1e>
 100d2ee:	b8 4f 34 01 01       	mov    eax,0x101344f
 100d2f3:	48 89 05 46 c9 00 00 	mov    QWORD PTR [rip+0xc946],rax        # 1019c40 <test_name>
 100d2fa:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
 100d301:	eb 15                	jmp    100d318 <test_begin+0x43>
 100d303:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
 100d306:	48 98                	cdqe   
 100d308:	48 c7 04 c5 40 94 01 	mov    QWORD PTR [rax*8+0x1019440],0x0
 100d30f:	01 00 00 00 00 
 100d314:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
 100d318:	81 7d fc ff 00 00 00 	cmp    DWORD PTR [rbp-0x4],0xff
 100d31f:	7e e2                	jle    100d303 <test_begin+0x2e>
 100d321:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [rbp-0x8],0x0
 100d328:	eb 16                	jmp    100d340 <test_begin+0x6b>
 100d32a:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
 100d32d:	48 98                	cdqe   
 100d32f:	48 c1 e0 04          	shl    rax,0x4
 100d333:	48 05 49 92 01 01    	add    rax,0x1019249
 100d339:	c6 00 00             	mov    BYTE PTR [rax],0x0
 100d33c:	83 45 f8 01          	add    DWORD PTR [rbp-0x8],0x1
 100d340:	83 7d f8 1f          	cmp    DWORD PTR [rbp-0x8],0x1f
 100d344:	7e e4                	jle    100d32a <test_begin+0x55>
 100d346:	90                   	nop
 100d347:	c9                   	leave  
 100d348:	c3                   	ret    

000000000100d349 <test_end>:
 100d349:	55                   	push   rbp
 100d34a:	48 89 e5             	mov    rbp,rsp
 100d34d:	48 83 ec 20          	sub    rsp,0x20
 100d351:	b8 00 00 00 00       	mov    eax,0x0
 100d356:	e8 6b fe ff ff       	call   100d1c6 <gat_free>
 100d35b:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
 100d362:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [rbp-0x8],0x0
 100d369:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
 100d370:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [rbp-0x10],0x0
 100d377:	eb 3e                	jmp    100d3b7 <test_end+0x6e>
 100d379:	8b 45 f0             	mov    eax,DWORD PTR [rbp-0x10]
 100d37c:	48 98                	cdqe   
 100d37e:	48 c1 e0 04          	shl    rax,0x4
 100d382:	48 05 49 92 01 01    	add    rax,0x1019249
 100d388:	0f b6 00             	movzx  eax,BYTE PTR [rax]
 100d38b:	84 c0                	test   al,al
 100d38d:	74 24                	je     100d3b3 <test_end+0x6a>
 100d38f:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
 100d393:	8b 45 f0             	mov    eax,DWORD PTR [rbp-0x10]
 100d396:	48 98                	cdqe   
 100d398:	48 c1 e0 04          	shl    rax,0x4
 100d39c:	48 05 48 92 01 01    	add    rax,0x1019248
 100d3a2:	0f b6 00             	movzx  eax,BYTE PTR [rax]
 100d3a5:	84 c0                	test   al,al
 100d3a7:	74 06                	je     100d3af <test_end+0x66>
 100d3a9:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
 100d3ad:	eb 04                	jmp    100d3b3 <test_end+0x6a>
 100d3af:	83 45 f8 01          	add    DWORD PTR [rbp-0x8],0x1
 100d3b3:	83 45 f0 01          	add    DWORD PTR [rbp-0x10],0x1
 100d3b7:	83 7d f0 1f          	cmp    DWORD PTR [rbp-0x10],0x1f
 100d3bb:	7e bc                	jle    100d379 <test_end+0x30>
 100d3bd:	b8 00 00 00 00       	mov    eax,0x0
 100d3c2:	e8 18 fd ff ff       	call   100d0df <test_info>
 100d3c7:	83 7d f8 00          	cmp    DWORD PTR [rbp-0x8],0x0
 100d3cb:	7e 07                	jle    100d3d4 <test_end+0x8b>
 100d3cd:	b8 5e 34 01 01       	mov    eax,0x101345e
 100d3d2:	eb 05                	jmp    100d3d9 <test_end+0x90>
 100d3d4:	b8 63 34 01 01       	mov    eax,0x1013463
 100d3d9:	48 89 c6             	mov    rsi,rax
 100d3dc:	bf 68 34 01 01       	mov    edi,0x1013468
 100d3e1:	b8 00 00 00 00       	mov    eax,0x0
 100d3e6:	e8 4e 13 00 00       	call   100e739 <hal_printf>
 100d3eb:	8b 4d f8             	mov    ecx,DWORD PTR [rbp-0x8]
 100d3ee:	8b 55 f4             	mov    edx,DWORD PTR [rbp-0xc]
 100d3f1:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
 100d3f4:	89 c6                	mov    esi,eax
 100d3f6:	bf 70 34 01 01       	mov    edi,0x1013470
 100d3fb:	b8 00 00 00 00       	mov    eax,0x0
 100d400:	e8 34 13 00 00       	call   100e739 <hal_printf>
 100d405:	83 7d f8 00          	cmp    DWORD PTR [rbp-0x8],0x0
 100d409:	7e 66                	jle    100d471 <test_end+0x128>
 100d40b:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
 100d412:	eb 57                	jmp    100d46b <test_end+0x122>
 100d414:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
 100d417:	48 98                	cdqe   
 100d419:	48 c1 e0 04          	shl    rax,0x4
 100d41d:	48 05 49 92 01 01    	add    rax,0x1019249
 100d423:	0f b6 00             	movzx  eax,BYTE PTR [rax]
 100d426:	84 c0                	test   al,al
 100d428:	74 3d                	je     100d467 <test_end+0x11e>
 100d42a:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
 100d42d:	48 98                	cdqe   
 100d42f:	48 c1 e0 04          	shl    rax,0x4
 100d433:	48 05 48 92 01 01    	add    rax,0x1019248
 100d439:	0f b6 00             	movzx  eax,BYTE PTR [rax]
 100d43c:	83 f0 01             	xor    eax,0x1
 100d43f:	84 c0                	test   al,al
 100d441:	74 24                	je     100d467 <test_end+0x11e>
 100d443:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
 100d446:	48 98                	cdqe   
 100d448:	48 c1 e0 04          	shl    rax,0x4
 100d44c:	48 05 40 92 01 01    	add    rax,0x1019240
 100d452:	48 8b 00             	mov    rax,QWORD PTR [rax]
 100d455:	48 89 c6             	mov    rsi,rax
 100d458:	bf 96 34 01 01       	mov    edi,0x1013496
 100d45d:	b8 00 00 00 00       	mov    eax,0x0
 100d462:	e8 d2 12 00 00       	call   100e739 <hal_printf>
 100d467:	83 45 ec 01          	add    DWORD PTR [rbp-0x14],0x1
 100d46b:	83 7d ec 1f          	cmp    DWORD PTR [rbp-0x14],0x1f
 100d46f:	7e a3                	jle    100d414 <test_end+0xcb>
 100d471:	c7 45 e8 00 00 00 00 	mov    DWORD PTR [rbp-0x18],0x0
 100d478:	eb 16                	jmp    100d490 <test_end+0x147>
 100d47a:	8b 45 e8             	mov    eax,DWORD PTR [rbp-0x18]
 100d47d:	48 98                	cdqe   
 100d47f:	48 c1 e0 04          	shl    rax,0x4
 100d483:	48 05 49 92 01 01    	add    rax,0x1019249
 100d489:	c6 00 00             	mov    BYTE PTR [rax],0x0
 100d48c:	83 45 e8 01          	add    DWORD PTR [rbp-0x18],0x1
 100d490:	83 7d e8 1f          	cmp    DWORD PTR [rbp-0x18],0x1f
 100d494:	7e e4                	jle    100d47a <test_end+0x131>
 100d496:	90                   	nop
 100d497:	c9                   	leave  
 100d498:	c3                   	ret    

000000000100d499 <talloc>:
 100d499:	55                   	push   rbp
 100d49a:	48 89 e5             	mov    rbp,rsp
 100d49d:	48 83 ec 20          	sub    rsp,0x20
 100d4a1:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
 100d4a4:	b8 00 00 00 00       	mov    eax,0x0
 100d4a9:	e8 da fc ff ff       	call   100d188 <gat_full>
 100d4ae:	83 f0 01             	xor    eax,0x1
 100d4b1:	84 c0                	test   al,al
 100d4b3:	74 20                	je     100d4d5 <talloc+0x3c>
 100d4b5:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
 100d4b8:	89 c7                	mov    edi,eax
 100d4ba:	e8 73 0b 00 00       	call   100e032 <halloc>
 100d4bf:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
 100d4c3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 100d4c7:	48 89 c7             	mov    rdi,rax
 100d4ca:	e8 70 fc ff ff       	call   100d13f <gat_push>
 100d4cf:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 100d4d3:	eb 1e                	jmp    100d4f3 <talloc+0x5a>
 100d4d5:	b8 00 00 00 00       	mov    eax,0x0
 100d4da:	e8 40 fc ff ff       	call   100d11f <test_error>
 100d4df:	bf b0 34 01 01       	mov    edi,0x10134b0
 100d4e4:	b8 00 00 00 00       	mov    eax,0x0
 100d4e9:	e8 4b 12 00 00       	call   100e739 <hal_printf>
 100d4ee:	b8 00 00 00 00       	mov    eax,0x0
 100d4f3:	c9                   	leave  
 100d4f4:	c3                   	ret    

000000000100d4f5 <run_case>:
 100d4f5:	55                   	push   rbp
 100d4f6:	48 89 e5             	mov    rbp,rsp
 100d4f9:	48 83 ec 10          	sub    rsp,0x10
 100d4fd:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
 100d501:	89 f0                	mov    eax,esi
 100d503:	88 45 f4             	mov    BYTE PTR [rbp-0xc],al
 100d506:	0f b6 55 f4          	movzx  edx,BYTE PTR [rbp-0xc]
 100d50a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 100d50e:	89 d6                	mov    esi,edx
 100d510:	48 89 c7             	mov    rdi,rax
 100d513:	e8 07 fd ff ff       	call   100d21f <ginfo_push>
 100d518:	90                   	nop
 100d519:	c9                   	leave  
 100d51a:	c3                   	ret    

000000000100d51b <bit_mask_64>:
 100d51b:	55                   	push   rbp
 100d51c:	48 89 e5             	mov    rbp,rsp
 100d51f:	48 83 ec 08          	sub    rsp,0x8
 100d523:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
 100d526:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
 100d529:	ba 01 00 00 00       	mov    edx,0x1
 100d52e:	89 c1                	mov    ecx,eax
 100d530:	48 d3 e2             	shl    rdx,cl
 100d533:	48 89 d0             	mov    rax,rdx
 100d536:	c9                   	leave  
 100d537:	c3                   	ret    

000000000100d538 <bit_mask_32>:
 100d538:	55                   	push   rbp
 100d539:	48 89 e5             	mov    rbp,rsp
 100d53c:	48 83 ec 08          	sub    rsp,0x8
 100d540:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
 100d543:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
 100d546:	ba 01 00 00 00       	mov    edx,0x1
 100d54b:	89 c1                	mov    ecx,eax
 100d54d:	d3 e2                	shl    edx,cl
 100d54f:	89 d0                	mov    eax,edx
 100d551:	c9                   	leave  
 100d552:	c3                   	ret    

000000000100d553 <bit_field_mask_64>:
 100d553:	55                   	push   rbp
 100d554:	48 89 e5             	mov    rbp,rsp
 100d557:	48 83 ec 08          	sub    rsp,0x8
 100d55b:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
 100d55e:	89 75 f8             	mov    DWORD PTR [rbp-0x8],esi
 100d561:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
 100d564:	48 c7 c2 ff ff ff ff 	mov    rdx,0xffffffffffffffff
 100d56b:	89 c1                	mov    ecx,eax
 100d56d:	48 d3 e2             	shl    rdx,cl
 100d570:	48 89 d0             	mov    rax,rdx
 100d573:	48 01 c0             	add    rax,rax
 100d576:	48 f7 d0             	not    rax
 100d579:	48 89 c2             	mov    rdx,rax
 100d57c:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
 100d57f:	89 c1                	mov    ecx,eax
 100d581:	48 d3 e2             	shl    rdx,cl
 100d584:	48 89 d0             	mov    rax,rdx
 100d587:	c9                   	leave  
 100d588:	c3                   	ret    

000000000100d589 <seg_selector>:
 100d589:	55                   	push   rbp
 100d58a:	48 89 e5             	mov    rbp,rsp
 100d58d:	48 83 ec 08          	sub    rsp,0x8
 100d591:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
 100d594:	89 75 f8             	mov    DWORD PTR [rbp-0x8],esi
 100d597:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
 100d59a:	8d 14 c5 00 00 00 00 	lea    edx,[rax*8+0x0]
 100d5a1:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
 100d5a4:	01 d0                	add    eax,edx
 100d5a6:	c9                   	leave  
 100d5a7:	c3                   	ret    

000000000100d5a8 <hal_write_gate>:
 100d5a8:	55                   	push   rbp
 100d5a9:	48 89 e5             	mov    rbp,rsp
 100d5ac:	48 83 ec 18          	sub    rsp,0x18
 100d5b0:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
 100d5b4:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
 100d5b8:	89 55 ec             	mov    DWORD PTR [rbp-0x14],edx
 100d5bb:	89 4d e8             	mov    DWORD PTR [rbp-0x18],ecx
 100d5be:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 100d5c2:	89 c2                	mov    edx,eax
 100d5c4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 100d5c8:	88 10                	mov    BYTE PTR [rax],dl
 100d5ca:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 100d5ce:	48 83 c0 01          	add    rax,0x1
 100d5d2:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
 100d5d6:	48 c1 ea 08          	shr    rdx,0x8
 100d5da:	88 10                	mov    BYTE PTR [rax],dl
 100d5dc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 100d5e0:	48 83 c0 02          	add    rax,0x2
 100d5e4:	8b 55 ec             	mov    edx,DWORD PTR [rbp-0x14]
 100d5e7:	88 10                	mov    BYTE PTR [rax],dl
 100d5e9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 100d5ed:	48 83 c0 03          	add    rax,0x3
 100d5f1:	8b 55 ec             	mov    edx,DWORD PTR [rbp-0x14]
 100d5f4:	c1 ea 08             	shr    edx,0x8
 100d5f7:	88 10                	mov    BYTE PTR [rax],dl
 100d5f9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 100d5fd:	48 83 c0 04          	add    rax,0x4
 100d601:	8b 55 e8             	mov    edx,DWORD PTR [rbp-0x18]
 100d604:	88 10                	mov    BYTE PTR [rax],dl
 100d606:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 100d60a:	48 83 c0 05          	add    rax,0x5
 100d60e:	8b 55 e8             	mov    edx,DWORD PTR [rbp-0x18]
 100d611:	c1 ea 08             	shr    edx,0x8
 100d614:	88 10                	mov    BYTE PTR [rax],dl
 100d616:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 100d61a:	48 83 c0 06          	add    rax,0x6
 100d61e:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
 100d622:	48 c1 ea 10          	shr    rdx,0x10
 100d626:	88 10                	mov    BYTE PTR [rax],dl
 100d628:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 100d62c:	48 83 c0 07          	add    rax,0x7
 100d630:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
 100d634:	48 c1 ea 18          	shr    rdx,0x18
 100d638:	88 10                	mov    BYTE PTR [rax],dl
 100d63a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 100d63e:	48 83 c0 08          	add    rax,0x8
 100d642:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
 100d646:	48 c1 ea 20          	shr    rdx,0x20
 100d64a:	88 10                	mov    BYTE PTR [rax],dl
 100d64c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 100d650:	48 83 c0 09          	add    rax,0x9
 100d654:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
 100d658:	48 c1 ea 28          	shr    rdx,0x28
 100d65c:	88 10                	mov    BYTE PTR [rax],dl
 100d65e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 100d662:	48 83 c0 0a          	add    rax,0xa
 100d666:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
 100d66a:	48 c1 ea 30          	shr    rdx,0x30
 100d66e:	88 10                	mov    BYTE PTR [rax],dl
 100d670:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 100d674:	48 83 c0 0b          	add    rax,0xb
 100d678:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
 100d67c:	48 c1 ea 38          	shr    rdx,0x38
 100d680:	88 10                	mov    BYTE PTR [rax],dl
 100d682:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 100d686:	48 83 c0 0c          	add    rax,0xc
 100d68a:	c6 00 00             	mov    BYTE PTR [rax],0x0
 100d68d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 100d691:	48 83 c0 0d          	add    rax,0xd
 100d695:	c6 00 00             	mov    BYTE PTR [rax],0x0
 100d698:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 100d69c:	48 83 c0 0e          	add    rax,0xe
 100d6a0:	c6 00 00             	mov    BYTE PTR [rax],0x0
 100d6a3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 100d6a7:	48 83 c0 0f          	add    rax,0xf
 100d6ab:	c6 00 00             	mov    BYTE PTR [rax],0x0
 100d6ae:	90                   	nop
 100d6af:	c9                   	leave  
 100d6b0:	c3                   	ret    

000000000100d6b1 <hal_set_interrupt_handler>:
 100d6b1:	55                   	push   rbp
 100d6b2:	48 89 e5             	mov    rbp,rsp
 100d6b5:	48 83 ec 10          	sub    rsp,0x10
 100d6b9:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
 100d6bd:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
 100d6c1:	48 83 7d f8 27       	cmp    QWORD PTR [rbp-0x8],0x27
 100d6c6:	77 34                	ja     100d6fc <hal_set_interrupt_handler+0x4b>
 100d6c8:	be 00 00 00 00       	mov    esi,0x0
 100d6cd:	bf 01 00 00 00       	mov    edi,0x1
 100d6d2:	e8 b2 fe ff ff       	call   100d589 <seg_selector>
 100d6d7:	89 c6                	mov    esi,eax
 100d6d9:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 100d6dd:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
 100d6e1:	48 c1 e2 04          	shl    rdx,0x4
 100d6e5:	48 8d ba 60 bc 01 01 	lea    rdi,[rdx+0x101bc60]
 100d6ec:	b9 00 8e 00 00       	mov    ecx,0x8e00
 100d6f1:	89 f2                	mov    edx,esi
 100d6f3:	48 89 c6             	mov    rsi,rax
 100d6f6:	e8 ad fe ff ff       	call   100d5a8 <hal_write_gate>
 100d6fb:	90                   	nop
 100d6fc:	90                   	nop
 100d6fd:	c9                   	leave  
 100d6fe:	c3                   	ret    

000000000100d6ff <hal_register_interrupt_handler>:
 100d6ff:	55                   	push   rbp
 100d700:	48 89 e5             	mov    rbp,rsp
 100d703:	48 83 ec 10          	sub    rsp,0x10
 100d707:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
 100d70b:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
 100d70f:	48 83 7d f8 27       	cmp    QWORD PTR [rbp-0x8],0x27
 100d714:	77 11                	ja     100d727 <hal_register_interrupt_handler+0x28>
 100d716:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 100d71a:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
 100d71e:	48 89 14 c5 00 bf 01 	mov    QWORD PTR [rax*8+0x101bf00],rdx
 100d725:	01 
 100d726:	90                   	nop
 100d727:	90                   	nop
 100d728:	c9                   	leave  
 100d729:	c3                   	ret    

000000000100d72a <hal_deregister_interrupt_handler>:
 100d72a:	55                   	push   rbp
 100d72b:	48 89 e5             	mov    rbp,rsp
 100d72e:	48 83 ec 08          	sub    rsp,0x8
 100d732:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
 100d736:	48 83 7d f8 27       	cmp    QWORD PTR [rbp-0x8],0x27
 100d73b:	77 11                	ja     100d74e <hal_deregister_interrupt_handler+0x24>
 100d73d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 100d741:	48 c7 04 c5 00 bf 01 	mov    QWORD PTR [rax*8+0x101bf00],0x0
 100d748:	01 00 00 00 00 
 100d74d:	90                   	nop
 100d74e:	90                   	nop
 100d74f:	c9                   	leave  
 100d750:	c3                   	ret    

000000000100d751 <hal_assert>:
 100d751:	55                   	push   rbp
 100d752:	48 89 e5             	mov    rbp,rsp
 100d755:	48 83 ec 10          	sub    rsp,0x10
 100d759:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
 100d75d:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
 100d761:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
 100d766:	75 2f                	jne    100d797 <hal_assert+0x46>
 100d768:	48 83 7d f0 00       	cmp    QWORD PTR [rbp-0x10],0x0
 100d76d:	74 06                	je     100d775 <hal_assert+0x24>
 100d76f:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 100d773:	eb 05                	jmp    100d77a <hal_assert+0x29>
 100d775:	b8 e0 34 01 01       	mov    eax,0x10134e0
 100d77a:	48 89 c6             	mov    rsi,rax
 100d77d:	bf e8 34 01 01       	mov    edi,0x10134e8
 100d782:	b8 00 00 00 00       	mov    eax,0x0
 100d787:	e8 ad 0f 00 00       	call   100e739 <hal_printf>
 100d78c:	b8 00 00 00 00       	mov    eax,0x0
 100d791:	e8 16 17 00 00       	call   100eeac <hal_halt_cpu>
 100d796:	90                   	nop
 100d797:	90                   	nop
 100d798:	c9                   	leave  
 100d799:	c3                   	ret    

000000000100d79a <hal_interrupt_dispatcher>:
 100d79a:	55                   	push   rbp
 100d79b:	48 89 e5             	mov    rbp,rsp
 100d79e:	48 83 ec 20          	sub    rsp,0x20
 100d7a2:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
 100d7a6:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
 100d7aa:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
 100d7ae:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 100d7b2:	48 8b 04 c5 00 bf 01 	mov    rax,QWORD PTR [rax*8+0x101bf00]
 100d7b9:	01 
 100d7ba:	48 85 c0             	test   rax,rax
 100d7bd:	75 23                	jne    100d7e2 <hal_interrupt_dispatcher+0x48>
 100d7bf:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 100d7c3:	48 8b 10             	mov    rdx,QWORD PTR [rax]
 100d7c6:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
 100d7ca:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 100d7ce:	48 89 c6             	mov    rsi,rax
 100d7d1:	bf 10 35 01 01       	mov    edi,0x1013510
 100d7d6:	b8 00 00 00 00       	mov    eax,0x0
 100d7db:	e8 59 0f 00 00       	call   100e739 <hal_printf>
 100d7e0:	eb 25                	jmp    100d807 <hal_interrupt_dispatcher+0x6d>
 100d7e2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 100d7e6:	48 8b 04 c5 00 bf 01 	mov    rax,QWORD PTR [rax*8+0x101bf00]
 100d7ed:	01 
 100d7ee:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
 100d7f2:	48 8b 72 18          	mov    rsi,QWORD PTR [rdx+0x18]
 100d7f6:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
 100d7fa:	48 8b 0a             	mov    rcx,QWORD PTR [rdx]
 100d7fd:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
 100d801:	48 89 cf             	mov    rdi,rcx
 100d804:	ff d0                	call   rax
 100d806:	90                   	nop
 100d807:	c9                   	leave  
 100d808:	c3                   	ret    

000000000100d809 <_hal_populate_idt>:
 100d809:	55                   	push   rbp
 100d80a:	48 89 e5             	mov    rbp,rsp
 100d80d:	be d0 ee 00 01       	mov    esi,0x100eed0
 100d812:	bf 00 00 00 00       	mov    edi,0x0
 100d817:	e8 95 fe ff ff       	call   100d6b1 <hal_set_interrupt_handler>
 100d81c:	be 1c ef 00 01       	mov    esi,0x100ef1c
 100d821:	bf 01 00 00 00       	mov    edi,0x1
 100d826:	e8 86 fe ff ff       	call   100d6b1 <hal_set_interrupt_handler>
 100d82b:	be 68 ef 00 01       	mov    esi,0x100ef68
 100d830:	bf 02 00 00 00       	mov    edi,0x2
 100d835:	e8 77 fe ff ff       	call   100d6b1 <hal_set_interrupt_handler>
 100d83a:	be b4 ef 00 01       	mov    esi,0x100efb4
 100d83f:	bf 03 00 00 00       	mov    edi,0x3
 100d844:	e8 68 fe ff ff       	call   100d6b1 <hal_set_interrupt_handler>
 100d849:	be 00 f0 00 01       	mov    esi,0x100f000
 100d84e:	bf 04 00 00 00       	mov    edi,0x4
 100d853:	e8 59 fe ff ff       	call   100d6b1 <hal_set_interrupt_handler>
 100d858:	be 4c f0 00 01       	mov    esi,0x100f04c
 100d85d:	bf 05 00 00 00       	mov    edi,0x5
 100d862:	e8 4a fe ff ff       	call   100d6b1 <hal_set_interrupt_handler>
 100d867:	be 98 f0 00 01       	mov    esi,0x100f098
 100d86c:	bf 06 00 00 00       	mov    edi,0x6
 100d871:	e8 3b fe ff ff       	call   100d6b1 <hal_set_interrupt_handler>
 100d876:	be e4 f0 00 01       	mov    esi,0x100f0e4
 100d87b:	bf 07 00 00 00       	mov    edi,0x7
 100d880:	e8 2c fe ff ff       	call   100d6b1 <hal_set_interrupt_handler>
 100d885:	be 30 f1 00 01       	mov    esi,0x100f130
 100d88a:	bf 08 00 00 00       	mov    edi,0x8
 100d88f:	e8 1d fe ff ff       	call   100d6b1 <hal_set_interrupt_handler>
 100d894:	be 7f f1 00 01       	mov    esi,0x100f17f
 100d899:	bf 0a 00 00 00       	mov    edi,0xa
 100d89e:	e8 0e fe ff ff       	call   100d6b1 <hal_set_interrupt_handler>
 100d8a3:	be ce f1 00 01       	mov    esi,0x100f1ce
 100d8a8:	bf 0b 00 00 00       	mov    edi,0xb
 100d8ad:	e8 ff fd ff ff       	call   100d6b1 <hal_set_interrupt_handler>
 100d8b2:	be 1d f2 00 01       	mov    esi,0x100f21d
 100d8b7:	bf 0c 00 00 00       	mov    edi,0xc
 100d8bc:	e8 f0 fd ff ff       	call   100d6b1 <hal_set_interrupt_handler>
 100d8c1:	be 6c f2 00 01       	mov    esi,0x100f26c
 100d8c6:	bf 0d 00 00 00       	mov    edi,0xd
 100d8cb:	e8 e1 fd ff ff       	call   100d6b1 <hal_set_interrupt_handler>
 100d8d0:	be bb f2 00 01       	mov    esi,0x100f2bb
 100d8d5:	bf 0e 00 00 00       	mov    edi,0xe
 100d8da:	e8 d2 fd ff ff       	call   100d6b1 <hal_set_interrupt_handler>
 100d8df:	be 0a f3 00 01       	mov    esi,0x100f30a
 100d8e4:	bf 10 00 00 00       	mov    edi,0x10
 100d8e9:	e8 c3 fd ff ff       	call   100d6b1 <hal_set_interrupt_handler>
 100d8ee:	be 56 f3 00 01       	mov    esi,0x100f356
 100d8f3:	bf 11 00 00 00       	mov    edi,0x11
 100d8f8:	e8 b4 fd ff ff       	call   100d6b1 <hal_set_interrupt_handler>
 100d8fd:	be a5 f3 00 01       	mov    esi,0x100f3a5
 100d902:	bf 12 00 00 00       	mov    edi,0x12
 100d907:	e8 a5 fd ff ff       	call   100d6b1 <hal_set_interrupt_handler>
 100d90c:	be f1 f3 00 01       	mov    esi,0x100f3f1
 100d911:	bf 13 00 00 00       	mov    edi,0x13
 100d916:	e8 96 fd ff ff       	call   100d6b1 <hal_set_interrupt_handler>
 100d91b:	be 3d f4 00 01       	mov    esi,0x100f43d
 100d920:	bf 14 00 00 00       	mov    edi,0x14
 100d925:	e8 87 fd ff ff       	call   100d6b1 <hal_set_interrupt_handler>
 100d92a:	be 89 f4 00 01       	mov    esi,0x100f489
 100d92f:	bf 20 00 00 00       	mov    edi,0x20
 100d934:	e8 78 fd ff ff       	call   100d6b1 <hal_set_interrupt_handler>
 100d939:	be d5 f4 00 01       	mov    esi,0x100f4d5
 100d93e:	bf 21 00 00 00       	mov    edi,0x21
 100d943:	e8 69 fd ff ff       	call   100d6b1 <hal_set_interrupt_handler>
 100d948:	be 21 f5 00 01       	mov    esi,0x100f521
 100d94d:	bf 22 00 00 00       	mov    edi,0x22
 100d952:	e8 5a fd ff ff       	call   100d6b1 <hal_set_interrupt_handler>
 100d957:	be 6d f5 00 01       	mov    esi,0x100f56d
 100d95c:	bf 23 00 00 00       	mov    edi,0x23
 100d961:	e8 4b fd ff ff       	call   100d6b1 <hal_set_interrupt_handler>
 100d966:	be b9 f5 00 01       	mov    esi,0x100f5b9
 100d96b:	bf 24 00 00 00       	mov    edi,0x24
 100d970:	e8 3c fd ff ff       	call   100d6b1 <hal_set_interrupt_handler>
 100d975:	be 05 f6 00 01       	mov    esi,0x100f605
 100d97a:	bf 25 00 00 00       	mov    edi,0x25
 100d97f:	e8 2d fd ff ff       	call   100d6b1 <hal_set_interrupt_handler>
 100d984:	be 51 f6 00 01       	mov    esi,0x100f651
 100d989:	bf 26 00 00 00       	mov    edi,0x26
 100d98e:	e8 1e fd ff ff       	call   100d6b1 <hal_set_interrupt_handler>
 100d993:	be 9d f6 00 01       	mov    esi,0x100f69d
 100d998:	bf 27 00 00 00       	mov    edi,0x27
 100d99d:	e8 0f fd ff ff       	call   100d6b1 <hal_set_interrupt_handler>
 100d9a2:	90                   	nop
 100d9a3:	5d                   	pop    rbp
 100d9a4:	c3                   	ret    

000000000100d9a5 <hal_interrupt_init>:
 100d9a5:	55                   	push   rbp
 100d9a6:	48 89 e5             	mov    rbp,rsp
 100d9a9:	53                   	push   rbx
 100d9aa:	48 83 ec 38          	sub    rsp,0x38
 100d9ae:	c7 45 d4 00 00 00 00 	mov    DWORD PTR [rbp-0x2c],0x0
 100d9b5:	c7 45 d0 00 00 00 00 	mov    DWORD PTR [rbp-0x30],0x0
 100d9bc:	c7 45 cc 00 00 00 00 	mov    DWORD PTR [rbp-0x34],0x0
 100d9c3:	c7 45 c8 00 00 00 00 	mov    DWORD PTR [rbp-0x38],0x0
 100d9ca:	c7 45 d4 01 00 00 00 	mov    DWORD PTR [rbp-0x2c],0x1
 100d9d1:	48 8d 4d c8          	lea    rcx,[rbp-0x38]
 100d9d5:	48 8d 55 cc          	lea    rdx,[rbp-0x34]
 100d9d9:	48 8d 75 d0          	lea    rsi,[rbp-0x30]
 100d9dd:	48 8d 45 d4          	lea    rax,[rbp-0x2c]
 100d9e1:	48 89 c7             	mov    rdi,rax
 100d9e4:	e8 83 14 00 00       	call   100ee6c <hal_cpuid>
 100d9e9:	bf 09 00 00 00       	mov    edi,0x9
 100d9ee:	e8 45 fb ff ff       	call   100d538 <bit_mask_32>
 100d9f3:	89 c2                	mov    edx,eax
 100d9f5:	8b 45 c8             	mov    eax,DWORD PTR [rbp-0x38]
 100d9f8:	21 d0                	and    eax,edx
 100d9fa:	85 c0                	test   eax,eax
 100d9fc:	75 19                	jne    100da17 <hal_interrupt_init+0x72>
 100d9fe:	bf 40 35 01 01       	mov    edi,0x1013540
 100da03:	b8 00 00 00 00       	mov    eax,0x0
 100da08:	e8 2c 0d 00 00       	call   100e739 <hal_printf>
 100da0d:	b8 01 00 00 00       	mov    eax,0x1
 100da12:	e9 02 02 00 00       	jmp    100dc19 <hal_interrupt_init+0x274>
 100da17:	b8 60 bc 01 01       	mov    eax,0x101bc60
 100da1c:	48 89 05 bf e4 00 00 	mov    QWORD PTR [rip+0xe4bf],rax        # 101bee2 <g_idt_ptr+0x2>
 100da23:	66 c7 05 b4 e4 00 00 	mov    WORD PTR [rip+0xe4b4],0x27f        # 101bee0 <g_idt_ptr>
 100da2a:	7f 02 
 100da2c:	48 c7 45 e8 00 00 00 	mov    QWORD PTR [rbp-0x18],0x0
 100da33:	00 
 100da34:	eb 15                	jmp    100da4b <hal_interrupt_init+0xa6>
 100da36:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 100da3a:	48 c7 04 c5 00 bf 01 	mov    QWORD PTR [rax*8+0x101bf00],0x0
 100da41:	01 00 00 00 00 
 100da46:	48 83 45 e8 01       	add    QWORD PTR [rbp-0x18],0x1
 100da4b:	48 83 7d e8 27       	cmp    QWORD PTR [rbp-0x18],0x27
 100da50:	76 e4                	jbe    100da36 <hal_interrupt_init+0x91>
 100da52:	b8 00 00 00 00       	mov    eax,0x0
 100da57:	e8 ad fd ff ff       	call   100d809 <_hal_populate_idt>
 100da5c:	bf e0 be 01 01       	mov    edi,0x101bee0
 100da61:	e8 f2 13 00 00       	call   100ee58 <hal_flush_idt>
 100da66:	be ff 00 00 00       	mov    esi,0xff
 100da6b:	bf a1 00 00 00       	mov    edi,0xa1
 100da70:	e8 18 14 00 00       	call   100ee8d <hal_write_port>
 100da75:	be ff 00 00 00       	mov    esi,0xff
 100da7a:	bf 21 00 00 00       	mov    edi,0x21
 100da7f:	e8 09 14 00 00       	call   100ee8d <hal_write_port>
 100da84:	48 c7 45 e0 00 00 00 	mov    QWORD PTR [rbp-0x20],0x0
 100da8b:	00 
 100da8c:	48 c7 45 d8 00 00 00 	mov    QWORD PTR [rbp-0x28],0x0
 100da93:	00 
 100da94:	c7 45 cc 1b 00 00 00 	mov    DWORD PTR [rbp-0x34],0x1b
 100da9b:	48 8d 55 d4          	lea    rdx,[rbp-0x2c]
 100da9f:	48 8d 4d c8          	lea    rcx,[rbp-0x38]
 100daa3:	48 8d 45 cc          	lea    rax,[rbp-0x34]
 100daa7:	48 89 ce             	mov    rsi,rcx
 100daaa:	48 89 c7             	mov    rdi,rax
 100daad:	e8 01 14 00 00       	call   100eeb3 <hal_read_msr>
 100dab2:	8b 45 c8             	mov    eax,DWORD PTR [rbp-0x38]
 100dab5:	89 c0                	mov    eax,eax
 100dab7:	48 c1 e0 20          	shl    rax,0x20
 100dabb:	8b 55 d4             	mov    edx,DWORD PTR [rbp-0x2c]
 100dabe:	89 d2                	mov    edx,edx
 100dac0:	48 01 d0             	add    rax,rdx
 100dac3:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
 100dac7:	be 23 00 00 00       	mov    esi,0x23
 100dacc:	bf 0c 00 00 00       	mov    edi,0xc
 100dad1:	e8 7d fa ff ff       	call   100d553 <bit_field_mask_64>
 100dad6:	48 23 45 e0          	and    rax,QWORD PTR [rbp-0x20]
 100dada:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
 100dade:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 100dae2:	48 89 c6             	mov    rsi,rax
 100dae5:	bf 63 35 01 01       	mov    edi,0x1013563
 100daea:	b8 00 00 00 00       	mov    eax,0x0
 100daef:	e8 45 0c 00 00       	call   100e739 <hal_printf>
 100daf4:	bf 0b 00 00 00       	mov    edi,0xb
 100daf9:	e8 1d fa ff ff       	call   100d51b <bit_mask_64>
 100dafe:	48 23 45 e0          	and    rax,QWORD PTR [rbp-0x20]
 100db02:	48 85 c0             	test   rax,rax
 100db05:	74 07                	je     100db0e <hal_interrupt_init+0x169>
 100db07:	b8 74 35 01 01       	mov    eax,0x1013574
 100db0c:	eb 05                	jmp    100db13 <hal_interrupt_init+0x16e>
 100db0e:	b8 78 35 01 01       	mov    eax,0x1013578
 100db13:	48 89 c6             	mov    rsi,rax
 100db16:	bf 7b 35 01 01       	mov    edi,0x101357b
 100db1b:	b8 00 00 00 00       	mov    eax,0x0
 100db20:	e8 14 0c 00 00       	call   100e739 <hal_printf>
 100db25:	bf 08 00 00 00       	mov    edi,0x8
 100db2a:	e8 ec f9 ff ff       	call   100d51b <bit_mask_64>
 100db2f:	48 23 45 e0          	and    rax,QWORD PTR [rbp-0x20]
 100db33:	48 85 c0             	test   rax,rax
 100db36:	74 07                	je     100db3f <hal_interrupt_init+0x19a>
 100db38:	b8 74 35 01 01       	mov    eax,0x1013574
 100db3d:	eb 05                	jmp    100db44 <hal_interrupt_init+0x19f>
 100db3f:	b8 78 35 01 01       	mov    eax,0x1013578
 100db44:	48 89 c6             	mov    rsi,rax
 100db47:	bf 8d 35 01 01       	mov    edi,0x101358d
 100db4c:	b8 00 00 00 00       	mov    eax,0x0
 100db51:	e8 e3 0b 00 00       	call   100e739 <hal_printf>
 100db56:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 100db5a:	48 05 f0 00 00 00    	add    rax,0xf0
 100db60:	8b 00                	mov    eax,DWORD PTR [rax]
 100db62:	89 c6                	mov    esi,eax
 100db64:	bf 96 35 01 01       	mov    edi,0x1013596
 100db69:	b8 00 00 00 00       	mov    eax,0x0
 100db6e:	e8 c6 0b 00 00       	call   100e739 <hal_printf>
 100db73:	c7 45 cc 1b 00 00 00 	mov    DWORD PTR [rbp-0x34],0x1b
 100db7a:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
 100db7e:	89 c3                	mov    ebx,eax
 100db80:	be 1f 00 00 00       	mov    esi,0x1f
 100db85:	bf 00 00 00 00       	mov    edi,0x0
 100db8a:	e8 c4 f9 ff ff       	call   100d553 <bit_field_mask_64>
 100db8f:	21 c3                	and    ebx,eax
 100db91:	bf 0b 00 00 00       	mov    edi,0xb
 100db96:	e8 9d f9 ff ff       	call   100d538 <bit_mask_32>
 100db9b:	09 d8                	or     eax,ebx
 100db9d:	89 45 d4             	mov    DWORD PTR [rbp-0x2c],eax
 100dba0:	48 8d 55 d4          	lea    rdx,[rbp-0x2c]
 100dba4:	48 8d 4d c8          	lea    rcx,[rbp-0x38]
 100dba8:	48 8d 45 cc          	lea    rax,[rbp-0x34]
 100dbac:	48 89 ce             	mov    rsi,rcx
 100dbaf:	48 89 c7             	mov    rdi,rax
 100dbb2:	e8 0b 13 00 00       	call   100eec2 <hal_write_msr>
 100dbb7:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 100dbbb:	48 05 f0 00 00 00    	add    rax,0xf0
 100dbc1:	8b 18                	mov    ebx,DWORD PTR [rax]
 100dbc3:	bf 08 00 00 00       	mov    edi,0x8
 100dbc8:	e8 6b f9 ff ff       	call   100d538 <bit_mask_32>
 100dbcd:	09 d8                	or     eax,ebx
 100dbcf:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
 100dbd3:	48 81 c2 f0 00 00 00 	add    rdx,0xf0
 100dbda:	89 c6                	mov    esi,eax
 100dbdc:	48 89 d7             	mov    rdi,rdx
 100dbdf:	e8 bd 12 00 00       	call   100eea1 <hal_write_mem_32>
 100dbe4:	b8 70 be 01 01       	mov    eax,0x101be70
 100dbe9:	48 8b 00             	mov    rax,QWORD PTR [rax]
 100dbec:	48 89 c6             	mov    rsi,rax
 100dbef:	bf a8 35 01 01       	mov    edi,0x10135a8
 100dbf4:	b8 00 00 00 00       	mov    eax,0x0
 100dbf9:	e8 3b 0b 00 00       	call   100e739 <hal_printf>
 100dbfe:	cd 21                	int    0x21
 100dc00:	b8 00 00 00 00       	mov    eax,0x0
 100dc05:	e8 a2 12 00 00       	call   100eeac <hal_halt_cpu>
 100dc0a:	b8 00 00 00 00       	mov    eax,0x0
 100dc0f:	e8 96 12 00 00       	call   100eeaa <hal_enable_interrupt>
 100dc14:	b8 00 00 00 00       	mov    eax,0x0
 100dc19:	48 83 c4 38          	add    rsp,0x38
 100dc1d:	5b                   	pop    rbx
 100dc1e:	5d                   	pop    rbp
 100dc1f:	c3                   	ret    

000000000100dc20 <hal_write_pt_entry>:
 100dc20:	55                   	push   rbp
 100dc21:	48 89 e5             	mov    rbp,rsp
 100dc24:	48 83 ec 28          	sub    rsp,0x28
 100dc28:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
 100dc2c:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
 100dc30:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
 100dc34:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
 100dc39:	0f 84 a3 00 00 00    	je     100dce2 <hal_write_pt_entry+0xc2>
 100dc3f:	48 b8 00 f0 ff ff ff 	movabs rax,0xffffffffff000
 100dc46:	ff 0f 00 
 100dc49:	48 23 45 e0          	and    rax,QWORD PTR [rbp-0x20]
 100dc4d:	48 0b 45 d8          	or     rax,QWORD PTR [rbp-0x28]
 100dc51:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
 100dc55:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 100dc59:	89 c2                	mov    edx,eax
 100dc5b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 100dc5f:	88 10                	mov    BYTE PTR [rax],dl
 100dc61:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 100dc65:	48 83 c0 01          	add    rax,0x1
 100dc69:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
 100dc6d:	48 c1 ea 08          	shr    rdx,0x8
 100dc71:	88 10                	mov    BYTE PTR [rax],dl
 100dc73:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 100dc77:	48 83 c0 02          	add    rax,0x2
 100dc7b:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
 100dc7f:	48 c1 ea 10          	shr    rdx,0x10
 100dc83:	88 10                	mov    BYTE PTR [rax],dl
 100dc85:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 100dc89:	48 83 c0 03          	add    rax,0x3
 100dc8d:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
 100dc91:	48 c1 ea 18          	shr    rdx,0x18
 100dc95:	88 10                	mov    BYTE PTR [rax],dl
 100dc97:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 100dc9b:	48 83 c0 04          	add    rax,0x4
 100dc9f:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
 100dca3:	48 c1 ea 20          	shr    rdx,0x20
 100dca7:	88 10                	mov    BYTE PTR [rax],dl
 100dca9:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 100dcad:	48 83 c0 05          	add    rax,0x5
 100dcb1:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
 100dcb5:	48 c1 ea 28          	shr    rdx,0x28
 100dcb9:	88 10                	mov    BYTE PTR [rax],dl
 100dcbb:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 100dcbf:	48 83 c0 06          	add    rax,0x6
 100dcc3:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
 100dcc7:	48 c1 ea 30          	shr    rdx,0x30
 100dccb:	88 10                	mov    BYTE PTR [rax],dl
 100dccd:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 100dcd1:	48 83 c0 07          	add    rax,0x7
 100dcd5:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
 100dcd9:	48 c1 ea 38          	shr    rdx,0x38
 100dcdd:	88 10                	mov    BYTE PTR [rax],dl
 100dcdf:	90                   	nop
 100dce0:	eb 01                	jmp    100dce3 <hal_write_pt_entry+0xc3>
 100dce2:	90                   	nop
 100dce3:	c9                   	leave  
 100dce4:	c3                   	ret    

000000000100dce5 <hal_write_pd_entry>:
 100dce5:	55                   	push   rbp
 100dce6:	48 89 e5             	mov    rbp,rsp
 100dce9:	48 83 ec 28          	sub    rsp,0x28
 100dced:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
 100dcf1:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
 100dcf5:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
 100dcf9:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
 100dcfe:	0f 84 a3 00 00 00    	je     100dda7 <hal_write_pd_entry+0xc2>
 100dd04:	48 b8 00 f0 ff ff ff 	movabs rax,0xffffffffff000
 100dd0b:	ff 0f 00 
 100dd0e:	48 23 45 e0          	and    rax,QWORD PTR [rbp-0x20]
 100dd12:	48 0b 45 d8          	or     rax,QWORD PTR [rbp-0x28]
 100dd16:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
 100dd1a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 100dd1e:	89 c2                	mov    edx,eax
 100dd20:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 100dd24:	88 10                	mov    BYTE PTR [rax],dl
 100dd26:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 100dd2a:	48 83 c0 01          	add    rax,0x1
 100dd2e:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
 100dd32:	48 c1 ea 08          	shr    rdx,0x8
 100dd36:	88 10                	mov    BYTE PTR [rax],dl
 100dd38:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 100dd3c:	48 83 c0 02          	add    rax,0x2
 100dd40:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
 100dd44:	48 c1 ea 10          	shr    rdx,0x10
 100dd48:	88 10                	mov    BYTE PTR [rax],dl
 100dd4a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 100dd4e:	48 83 c0 03          	add    rax,0x3
 100dd52:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
 100dd56:	48 c1 ea 18          	shr    rdx,0x18
 100dd5a:	88 10                	mov    BYTE PTR [rax],dl
 100dd5c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 100dd60:	48 83 c0 04          	add    rax,0x4
 100dd64:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
 100dd68:	48 c1 ea 20          	shr    rdx,0x20
 100dd6c:	88 10                	mov    BYTE PTR [rax],dl
 100dd6e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 100dd72:	48 83 c0 05          	add    rax,0x5
 100dd76:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
 100dd7a:	48 c1 ea 28          	shr    rdx,0x28
 100dd7e:	88 10                	mov    BYTE PTR [rax],dl
 100dd80:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 100dd84:	48 83 c0 06          	add    rax,0x6
 100dd88:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
 100dd8c:	48 c1 ea 30          	shr    rdx,0x30
 100dd90:	88 10                	mov    BYTE PTR [rax],dl
 100dd92:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 100dd96:	48 83 c0 07          	add    rax,0x7
 100dd9a:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
 100dd9e:	48 c1 ea 38          	shr    rdx,0x38
 100dda2:	88 10                	mov    BYTE PTR [rax],dl
 100dda4:	90                   	nop
 100dda5:	eb 01                	jmp    100dda8 <hal_write_pd_entry+0xc3>
 100dda7:	90                   	nop
 100dda8:	c9                   	leave  
 100dda9:	c3                   	ret    

000000000100ddaa <hal_write_pdpt_entry>:
 100ddaa:	55                   	push   rbp
 100ddab:	48 89 e5             	mov    rbp,rsp
 100ddae:	48 83 ec 28          	sub    rsp,0x28
 100ddb2:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
 100ddb6:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
 100ddba:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
 100ddbe:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
 100ddc3:	0f 84 a3 00 00 00    	je     100de6c <hal_write_pdpt_entry+0xc2>
 100ddc9:	48 b8 00 f0 ff ff ff 	movabs rax,0xffffffffff000
 100ddd0:	ff 0f 00 
 100ddd3:	48 23 45 e0          	and    rax,QWORD PTR [rbp-0x20]
 100ddd7:	48 0b 45 d8          	or     rax,QWORD PTR [rbp-0x28]
 100dddb:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
 100dddf:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 100dde3:	89 c2                	mov    edx,eax
 100dde5:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 100dde9:	88 10                	mov    BYTE PTR [rax],dl
 100ddeb:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 100ddef:	48 83 c0 01          	add    rax,0x1
 100ddf3:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
 100ddf7:	48 c1 ea 08          	shr    rdx,0x8
 100ddfb:	88 10                	mov    BYTE PTR [rax],dl
 100ddfd:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 100de01:	48 83 c0 02          	add    rax,0x2
 100de05:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
 100de09:	48 c1 ea 10          	shr    rdx,0x10
 100de0d:	88 10                	mov    BYTE PTR [rax],dl
 100de0f:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 100de13:	48 83 c0 03          	add    rax,0x3
 100de17:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
 100de1b:	48 c1 ea 18          	shr    rdx,0x18
 100de1f:	88 10                	mov    BYTE PTR [rax],dl
 100de21:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 100de25:	48 83 c0 04          	add    rax,0x4
 100de29:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
 100de2d:	48 c1 ea 20          	shr    rdx,0x20
 100de31:	88 10                	mov    BYTE PTR [rax],dl
 100de33:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 100de37:	48 83 c0 05          	add    rax,0x5
 100de3b:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
 100de3f:	48 c1 ea 28          	shr    rdx,0x28
 100de43:	88 10                	mov    BYTE PTR [rax],dl
 100de45:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 100de49:	48 83 c0 06          	add    rax,0x6
 100de4d:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
 100de51:	48 c1 ea 30          	shr    rdx,0x30
 100de55:	88 10                	mov    BYTE PTR [rax],dl
 100de57:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 100de5b:	48 83 c0 07          	add    rax,0x7
 100de5f:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
 100de63:	48 c1 ea 38          	shr    rdx,0x38
 100de67:	88 10                	mov    BYTE PTR [rax],dl
 100de69:	90                   	nop
 100de6a:	eb 01                	jmp    100de6d <hal_write_pdpt_entry+0xc3>
 100de6c:	90                   	nop
 100de6d:	c9                   	leave  
 100de6e:	c3                   	ret    

000000000100de6f <hal_write_pml4_entry>:
 100de6f:	55                   	push   rbp
 100de70:	48 89 e5             	mov    rbp,rsp
 100de73:	48 83 ec 28          	sub    rsp,0x28
 100de77:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
 100de7b:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
 100de7f:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
 100de83:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
 100de88:	0f 84 a3 00 00 00    	je     100df31 <hal_write_pml4_entry+0xc2>
 100de8e:	48 b8 00 f0 ff ff ff 	movabs rax,0xffffffffff000
 100de95:	ff 0f 00 
 100de98:	48 23 45 e0          	and    rax,QWORD PTR [rbp-0x20]
 100de9c:	48 0b 45 d8          	or     rax,QWORD PTR [rbp-0x28]
 100dea0:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
 100dea4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 100dea8:	89 c2                	mov    edx,eax
 100deaa:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 100deae:	88 10                	mov    BYTE PTR [rax],dl
 100deb0:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 100deb4:	48 83 c0 01          	add    rax,0x1
 100deb8:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
 100debc:	48 c1 ea 08          	shr    rdx,0x8
 100dec0:	88 10                	mov    BYTE PTR [rax],dl
 100dec2:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 100dec6:	48 83 c0 02          	add    rax,0x2
 100deca:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
 100dece:	48 c1 ea 10          	shr    rdx,0x10
 100ded2:	88 10                	mov    BYTE PTR [rax],dl
 100ded4:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 100ded8:	48 83 c0 03          	add    rax,0x3
 100dedc:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
 100dee0:	48 c1 ea 18          	shr    rdx,0x18
 100dee4:	88 10                	mov    BYTE PTR [rax],dl
 100dee6:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 100deea:	48 83 c0 04          	add    rax,0x4
 100deee:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
 100def2:	48 c1 ea 20          	shr    rdx,0x20
 100def6:	88 10                	mov    BYTE PTR [rax],dl
 100def8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 100defc:	48 83 c0 05          	add    rax,0x5
 100df00:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
 100df04:	48 c1 ea 28          	shr    rdx,0x28
 100df08:	88 10                	mov    BYTE PTR [rax],dl
 100df0a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 100df0e:	48 83 c0 06          	add    rax,0x6
 100df12:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
 100df16:	48 c1 ea 30          	shr    rdx,0x30
 100df1a:	88 10                	mov    BYTE PTR [rax],dl
 100df1c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 100df20:	48 83 c0 07          	add    rax,0x7
 100df24:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
 100df28:	48 c1 ea 38          	shr    rdx,0x38
 100df2c:	88 10                	mov    BYTE PTR [rax],dl
 100df2e:	90                   	nop
 100df2f:	eb 01                	jmp    100df32 <hal_write_pml4_entry+0xc3>
 100df31:	90                   	nop
 100df32:	c9                   	leave  
 100df33:	c3                   	ret    

000000000100df34 <hal_write_segment_descriptor>:
 100df34:	55                   	push   rbp
 100df35:	48 89 e5             	mov    rbp,rsp
 100df38:	48 83 ec 28          	sub    rsp,0x28
 100df3c:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
 100df40:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
 100df43:	89 55 e0             	mov    DWORD PTR [rbp-0x20],edx
 100df46:	48 89 4d d8          	mov    QWORD PTR [rbp-0x28],rcx
 100df4a:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
 100df4f:	0f 84 da 00 00 00    	je     100e02f <hal_write_segment_descriptor+0xfb>
 100df55:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
 100df58:	48 c1 e0 10          	shl    rax,0x10
 100df5c:	89 c2                	mov    edx,eax
 100df5e:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
 100df61:	c1 e8 10             	shr    eax,0x10
 100df64:	89 c0                	mov    eax,eax
 100df66:	0f b6 c0             	movzx  eax,al
 100df69:	48 c1 e0 20          	shl    rax,0x20
 100df6d:	48 09 c2             	or     rdx,rax
 100df70:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
 100df73:	c1 e8 18             	shr    eax,0x18
 100df76:	89 c0                	mov    eax,eax
 100df78:	48 c1 e0 38          	shl    rax,0x38
 100df7c:	48 09 c2             	or     rdx,rax
 100df7f:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
 100df82:	0f b7 c0             	movzx  eax,ax
 100df85:	48 09 c2             	or     rdx,rax
 100df88:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
 100df8b:	c1 e8 10             	shr    eax,0x10
 100df8e:	89 c0                	mov    eax,eax
 100df90:	83 e0 0f             	and    eax,0xf
 100df93:	48 c1 e0 30          	shl    rax,0x30
 100df97:	48 09 d0             	or     rax,rdx
 100df9a:	48 0b 45 d8          	or     rax,QWORD PTR [rbp-0x28]
 100df9e:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
 100dfa2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 100dfa6:	89 c2                	mov    edx,eax
 100dfa8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 100dfac:	88 10                	mov    BYTE PTR [rax],dl
 100dfae:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 100dfb2:	48 83 c0 01          	add    rax,0x1
 100dfb6:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
 100dfba:	48 c1 ea 08          	shr    rdx,0x8
 100dfbe:	88 10                	mov    BYTE PTR [rax],dl
 100dfc0:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 100dfc4:	48 83 c0 02          	add    rax,0x2
 100dfc8:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
 100dfcc:	48 c1 ea 10          	shr    rdx,0x10
 100dfd0:	88 10                	mov    BYTE PTR [rax],dl
 100dfd2:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 100dfd6:	48 83 c0 03          	add    rax,0x3
 100dfda:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
 100dfde:	48 c1 ea 18          	shr    rdx,0x18
 100dfe2:	88 10                	mov    BYTE PTR [rax],dl
 100dfe4:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 100dfe8:	48 83 c0 04          	add    rax,0x4
 100dfec:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
 100dff0:	48 c1 ea 20          	shr    rdx,0x20
 100dff4:	88 10                	mov    BYTE PTR [rax],dl
 100dff6:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 100dffa:	48 83 c0 05          	add    rax,0x5
 100dffe:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
 100e002:	48 c1 ea 28          	shr    rdx,0x28
 100e006:	88 10                	mov    BYTE PTR [rax],dl
 100e008:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 100e00c:	48 83 c0 06          	add    rax,0x6
 100e010:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
 100e014:	48 c1 ea 30          	shr    rdx,0x30
 100e018:	88 10                	mov    BYTE PTR [rax],dl
 100e01a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 100e01e:	48 83 c0 07          	add    rax,0x7
 100e022:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
 100e026:	48 c1 ea 38          	shr    rdx,0x38
 100e02a:	88 10                	mov    BYTE PTR [rax],dl
 100e02c:	90                   	nop
 100e02d:	eb 01                	jmp    100e030 <hal_write_segment_descriptor+0xfc>
 100e02f:	90                   	nop
 100e030:	c9                   	leave  
 100e031:	c3                   	ret    

000000000100e032 <halloc>:
 100e032:	55                   	push   rbp
 100e033:	48 89 e5             	mov    rbp,rsp
 100e036:	48 83 ec 10          	sub    rsp,0x10
 100e03a:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
 100e03d:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
 100e040:	89 c6                	mov    esi,eax
 100e042:	bf 60 9c 01 01       	mov    edi,0x1019c60
 100e047:	e8 e3 94 ff ff       	call   100752f <salloc>
 100e04c:	c9                   	leave  
 100e04d:	c3                   	ret    

000000000100e04e <hfree>:
 100e04e:	55                   	push   rbp
 100e04f:	48 89 e5             	mov    rbp,rsp
 100e052:	48 83 ec 10          	sub    rsp,0x10
 100e056:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
 100e05a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 100e05e:	48 89 c6             	mov    rsi,rax
 100e061:	bf 60 9c 01 01       	mov    edi,0x1019c60
 100e066:	e8 34 96 ff ff       	call   100769f <sfree>
 100e06b:	90                   	nop
 100e06c:	c9                   	leave  
 100e06d:	c3                   	ret    

000000000100e06e <hal_alloc_init>:
 100e06e:	55                   	push   rbp
 100e06f:	48 89 e5             	mov    rbp,rsp
 100e072:	be 00 20 00 00       	mov    esi,0x2000
 100e077:	bf 60 9c 01 01       	mov    edi,0x1019c60
 100e07c:	e8 49 94 ff ff       	call   10074ca <salloc_init>
 100e081:	90                   	nop
 100e082:	5d                   	pop    rbp
 100e083:	c3                   	ret    

000000000100e084 <bit_field_mask_64>:
 100e084:	55                   	push   rbp
 100e085:	48 89 e5             	mov    rbp,rsp
 100e088:	48 83 ec 08          	sub    rsp,0x8
 100e08c:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
 100e08f:	89 75 f8             	mov    DWORD PTR [rbp-0x8],esi
 100e092:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
 100e095:	48 c7 c2 ff ff ff ff 	mov    rdx,0xffffffffffffffff
 100e09c:	89 c1                	mov    ecx,eax
 100e09e:	48 d3 e2             	shl    rdx,cl
 100e0a1:	48 89 d0             	mov    rax,rdx
 100e0a4:	48 01 c0             	add    rax,rax
 100e0a7:	48 f7 d0             	not    rax
 100e0aa:	48 89 c2             	mov    rdx,rax
 100e0ad:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
 100e0b0:	89 c1                	mov    ecx,eax
 100e0b2:	48 d3 e2             	shl    rdx,cl
 100e0b5:	48 89 d0             	mov    rax,rdx
 100e0b8:	c9                   	leave  
 100e0b9:	c3                   	ret    

000000000100e0ba <seg_selector>:
 100e0ba:	55                   	push   rbp
 100e0bb:	48 89 e5             	mov    rbp,rsp
 100e0be:	48 83 ec 08          	sub    rsp,0x8
 100e0c2:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
 100e0c5:	89 75 f8             	mov    DWORD PTR [rbp-0x8],esi
 100e0c8:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
 100e0cb:	8d 14 c5 00 00 00 00 	lea    edx,[rax*8+0x0]
 100e0d2:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
 100e0d5:	01 d0                	add    eax,edx
 100e0d7:	c9                   	leave  
 100e0d8:	c3                   	ret    

000000000100e0d9 <_hal_obtain_cpu_info>:
 100e0d9:	55                   	push   rbp
 100e0da:	48 89 e5             	mov    rbp,rsp
 100e0dd:	48 83 ec 20          	sub    rsp,0x20
 100e0e1:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
 100e0e5:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
 100e0ea:	0f 84 8e 00 00 00    	je     100e17e <_hal_obtain_cpu_info+0xa5>
 100e0f0:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
 100e0f7:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [rbp-0x8],0x0
 100e0fe:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
 100e105:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [rbp-0x10],0x0
 100e10c:	48 8d 4d f0          	lea    rcx,[rbp-0x10]
 100e110:	48 8d 55 f4          	lea    rdx,[rbp-0xc]
 100e114:	48 8d 75 f8          	lea    rsi,[rbp-0x8]
 100e118:	48 8d 45 fc          	lea    rax,[rbp-0x4]
 100e11c:	48 89 c7             	mov    rdi,rax
 100e11f:	e8 48 0d 00 00       	call   100ee6c <hal_cpuid>
 100e124:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
 100e128:	48 8d 45 f8          	lea    rax,[rbp-0x8]
 100e12c:	ba 04 00 00 00       	mov    edx,0x4
 100e131:	48 89 ce             	mov    rsi,rcx
 100e134:	48 89 c7             	mov    rdi,rax
 100e137:	e8 c4 7e ff ff       	call   1006000 <mem_cpy>
 100e13c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 100e140:	48 8d 48 04          	lea    rcx,[rax+0x4]
 100e144:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 100e148:	ba 04 00 00 00       	mov    edx,0x4
 100e14d:	48 89 ce             	mov    rsi,rcx
 100e150:	48 89 c7             	mov    rdi,rax
 100e153:	e8 a8 7e ff ff       	call   1006000 <mem_cpy>
 100e158:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 100e15c:	48 8d 48 08          	lea    rcx,[rax+0x8]
 100e160:	48 8d 45 f4          	lea    rax,[rbp-0xc]
 100e164:	ba 04 00 00 00       	mov    edx,0x4
 100e169:	48 89 ce             	mov    rsi,rcx
 100e16c:	48 89 c7             	mov    rdi,rax
 100e16f:	e8 8c 7e ff ff       	call   1006000 <mem_cpy>
 100e174:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 100e178:	c6 40 0c 00          	mov    BYTE PTR [rax+0xc],0x0
 100e17c:	eb 01                	jmp    100e17f <_hal_obtain_cpu_info+0xa6>
 100e17e:	90                   	nop
 100e17f:	c9                   	leave  
 100e180:	c3                   	ret    

000000000100e181 <_hal_init_gdt>:
 100e181:	55                   	push   rbp
 100e182:	48 89 e5             	mov    rbp,rsp
 100e185:	53                   	push   rbx
 100e186:	48 83 ec 08          	sub    rsp,0x8
 100e18a:	48 c7 05 33 de 00 00 	mov    QWORD PTR [rip+0xde33],0x0        # 101bfc8 <text_pos>
 100e191:	00 00 00 00 
 100e195:	b9 00 00 00 00       	mov    ecx,0x0
 100e19a:	ba 00 00 00 00       	mov    edx,0x0
 100e19f:	be 00 00 00 00       	mov    esi,0x0
 100e1a4:	bf 80 bf 01 01       	mov    edi,0x101bf80
 100e1a9:	e8 86 fd ff ff       	call   100df34 <hal_write_segment_descriptor>
 100e1ae:	48 b9 00 00 00 00 00 	movabs rcx,0x20980000000000
 100e1b5:	98 20 00 
 100e1b8:	ba 00 00 00 00       	mov    edx,0x0
 100e1bd:	be 00 00 00 00       	mov    esi,0x0
 100e1c2:	bf 88 bf 01 01       	mov    edi,0x101bf88
 100e1c7:	e8 68 fd ff ff       	call   100df34 <hal_write_segment_descriptor>
 100e1cc:	48 b9 00 00 00 00 00 	movabs rcx,0x20920000000000
 100e1d3:	92 20 00 
 100e1d6:	ba 00 00 00 00       	mov    edx,0x0
 100e1db:	be 00 00 00 00       	mov    esi,0x0
 100e1e0:	bf 90 bf 01 01       	mov    edi,0x101bf90
 100e1e5:	e8 4a fd ff ff       	call   100df34 <hal_write_segment_descriptor>
 100e1ea:	48 b9 00 00 00 00 00 	movabs rcx,0x20f80000000000
 100e1f1:	f8 20 00 
 100e1f4:	ba 00 00 00 00       	mov    edx,0x0
 100e1f9:	be 00 00 00 00       	mov    esi,0x0
 100e1fe:	bf 98 bf 01 01       	mov    edi,0x101bf98
 100e203:	e8 2c fd ff ff       	call   100df34 <hal_write_segment_descriptor>
 100e208:	48 b9 00 00 00 00 00 	movabs rcx,0x20f20000000000
 100e20f:	f2 20 00 
 100e212:	ba 00 00 00 00       	mov    edx,0x0
 100e217:	be 00 00 00 00       	mov    esi,0x0
 100e21c:	bf a0 bf 01 01       	mov    edi,0x101bfa0
 100e221:	e8 0e fd ff ff       	call   100df34 <hal_write_segment_descriptor>
 100e226:	48 b9 00 00 00 00 00 	movabs rcx,0xc0980000000000
 100e22d:	98 c0 00 
 100e230:	ba ff ff 0f 00       	mov    edx,0xfffff
 100e235:	be 00 00 00 00       	mov    esi,0x0
 100e23a:	bf a8 bf 01 01       	mov    edi,0x101bfa8
 100e23f:	e8 f0 fc ff ff       	call   100df34 <hal_write_segment_descriptor>
 100e244:	48 b9 00 00 00 00 00 	movabs rcx,0xc0920000000000
 100e24b:	92 c0 00 
 100e24e:	ba ff ff 0f 00       	mov    edx,0xfffff
 100e253:	be 00 00 00 00       	mov    esi,0x0
 100e258:	bf b0 bf 01 01       	mov    edi,0x101bfb0
 100e25d:	e8 d2 fc ff ff       	call   100df34 <hal_write_segment_descriptor>
 100e262:	48 b9 00 00 00 00 00 	movabs rcx,0xc0f80000000000
 100e269:	f8 c0 00 
 100e26c:	ba ff ff 0f 00       	mov    edx,0xfffff
 100e271:	be 00 00 00 00       	mov    esi,0x0
 100e276:	bf b8 bf 01 01       	mov    edi,0x101bfb8
 100e27b:	e8 b4 fc ff ff       	call   100df34 <hal_write_segment_descriptor>
 100e280:	48 b9 00 00 00 00 00 	movabs rcx,0xc0f20000000000
 100e287:	f2 c0 00 
 100e28a:	ba ff ff 0f 00       	mov    edx,0xfffff
 100e28f:	be 00 00 00 00       	mov    esi,0x0
 100e294:	bf c0 bf 01 01       	mov    edi,0x101bfc0
 100e299:	e8 96 fc ff ff       	call   100df34 <hal_write_segment_descriptor>
 100e29e:	b8 80 bf 01 01       	mov    eax,0x101bf80
 100e2a3:	48 89 05 48 dc 00 00 	mov    QWORD PTR [rip+0xdc48],rax        # 101bef2 <g_gdt_ptr+0x2>
 100e2aa:	66 c7 05 3d dc 00 00 	mov    WORD PTR [rip+0xdc3d],0x47        # 101bef0 <g_gdt_ptr>
 100e2b1:	47 00 
 100e2b3:	be 00 00 00 00       	mov    esi,0x0
 100e2b8:	bf 02 00 00 00       	mov    edi,0x2
 100e2bd:	e8 f8 fd ff ff       	call   100e0ba <seg_selector>
 100e2c2:	89 c3                	mov    ebx,eax
 100e2c4:	be 00 00 00 00       	mov    esi,0x0
 100e2c9:	bf 01 00 00 00       	mov    edi,0x1
 100e2ce:	e8 e7 fd ff ff       	call   100e0ba <seg_selector>
 100e2d3:	89 c0                	mov    eax,eax
 100e2d5:	48 89 da             	mov    rdx,rbx
 100e2d8:	48 89 c6             	mov    rsi,rax
 100e2db:	bf f0 be 01 01       	mov    edi,0x101bef0
 100e2e0:	e8 4b 0b 00 00       	call   100ee30 <hal_flush_gdt>
 100e2e5:	90                   	nop
 100e2e6:	48 83 c4 08          	add    rsp,0x8
 100e2ea:	5b                   	pop    rbx
 100e2eb:	5d                   	pop    rbp
 100e2ec:	c3                   	ret    

000000000100e2ed <hal_init>:
 100e2ed:	55                   	push   rbp
 100e2ee:	48 89 e5             	mov    rbp,rsp
 100e2f1:	48 83 ec 20          	sub    rsp,0x20
 100e2f5:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
 100e2f9:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
 100e2fe:	74 1e                	je     100e31e <hal_init+0x31>
 100e300:	be 02 00 00 00       	mov    esi,0x2
 100e305:	bf 00 00 00 00       	mov    edi,0x0
 100e30a:	e8 75 fd ff ff       	call   100e084 <bit_field_mask_64>
 100e30f:	48 89 c2             	mov    rdx,rax
 100e312:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 100e316:	48 21 d0             	and    rax,rdx
 100e319:	48 85 c0             	test   rax,rax
 100e31c:	74 07                	je     100e325 <hal_init+0x38>
 100e31e:	b8 00 00 00 00       	mov    eax,0x0
 100e323:	eb 5b                	jmp    100e380 <hal_init+0x93>
 100e325:	b8 00 00 00 00       	mov    eax,0x0
 100e32a:	e8 3f fd ff ff       	call   100e06e <hal_alloc_init>
 100e32f:	b8 00 00 00 00       	mov    eax,0x0
 100e334:	e8 48 fe ff ff       	call   100e181 <_hal_init_gdt>
 100e339:	e8 67 f6 ff ff       	call   100d9a5 <hal_interrupt_init>
 100e33e:	85 c0                	test   eax,eax
 100e340:	74 0a                	je     100e34c <hal_init+0x5f>
 100e342:	b8 00 00 00 00       	mov    eax,0x0
 100e347:	e8 60 0b 00 00       	call   100eeac <hal_halt_cpu>
 100e34c:	bf 20 00 00 00       	mov    edi,0x20
 100e351:	e8 dc fc ff ff       	call   100e032 <halloc>
 100e356:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
 100e35a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 100e35e:	ba 20 00 00 00       	mov    edx,0x20
 100e363:	be 00 00 00 00       	mov    esi,0x0
 100e368:	48 89 c7             	mov    rdi,rax
 100e36b:	e8 f8 7c ff ff       	call   1006068 <mem_set>
 100e370:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 100e374:	48 89 c7             	mov    rdi,rax
 100e377:	e8 5d fd ff ff       	call   100e0d9 <_hal_obtain_cpu_info>
 100e37c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 100e380:	c9                   	leave  
 100e381:	c3                   	ret    

000000000100e382 <_hal_print_scroll>:
 100e382:	55                   	push   rbp
 100e383:	48 89 e5             	mov    rbp,rsp
 100e386:	ba 00 0f 00 00       	mov    edx,0xf00
 100e38b:	be 00 80 0b 00       	mov    esi,0xb8000
 100e390:	bf a0 80 0b 00       	mov    edi,0xb80a0
 100e395:	e8 15 7d ff ff       	call   10060af <mem_move>
 100e39a:	90                   	nop
 100e39b:	5d                   	pop    rbp
 100e39c:	c3                   	ret    

000000000100e39d <_hal_print_str>:
 100e39d:	55                   	push   rbp
 100e39e:	48 89 e5             	mov    rbp,rsp
 100e3a1:	48 83 ec 10          	sub    rsp,0x10
 100e3a5:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
 100e3a9:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
 100e3ae:	0f 84 01 01 00 00    	je     100e4b5 <_hal_print_str+0x118>
 100e3b4:	e9 ea 00 00 00       	jmp    100e4a3 <_hal_print_str+0x106>
 100e3b9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 100e3bd:	0f b6 00             	movzx  eax,BYTE PTR [rax]
 100e3c0:	3c 0a                	cmp    al,0xa
 100e3c2:	75 73                	jne    100e437 <_hal_print_str+0x9a>
 100e3c4:	48 8b 05 fd db 00 00 	mov    rax,QWORD PTR [rip+0xdbfd]        # 101bfc8 <text_pos>
 100e3cb:	48 ba cd cc cc cc cc 	movabs rdx,0xcccccccccccccccd
 100e3d2:	cc cc cc 
 100e3d5:	48 f7 e2             	mul    rdx
 100e3d8:	48 89 d0             	mov    rax,rdx
 100e3db:	48 c1 e8 06          	shr    rax,0x6
 100e3df:	48 8d 50 01          	lea    rdx,[rax+0x1]
 100e3e3:	48 89 d0             	mov    rax,rdx
 100e3e6:	48 c1 e0 02          	shl    rax,0x2
 100e3ea:	48 01 d0             	add    rax,rdx
 100e3ed:	48 c1 e0 04          	shl    rax,0x4
 100e3f1:	48 89 05 d0 db 00 00 	mov    QWORD PTR [rip+0xdbd0],rax        # 101bfc8 <text_pos>
 100e3f8:	48 8b 05 c9 db 00 00 	mov    rax,QWORD PTR [rip+0xdbc9]        # 101bfc8 <text_pos>
 100e3ff:	48 3d cf 07 00 00    	cmp    rax,0x7cf
 100e405:	76 29                	jbe    100e430 <_hal_print_str+0x93>
 100e407:	b8 00 00 00 00       	mov    eax,0x0
 100e40c:	e8 71 ff ff ff       	call   100e382 <_hal_print_scroll>
 100e411:	ba a0 00 00 00       	mov    edx,0xa0
 100e416:	be 00 00 00 00       	mov    esi,0x0
 100e41b:	bf 00 8f 0b 00       	mov    edi,0xb8f00
 100e420:	e8 43 7c ff ff       	call   1006068 <mem_set>
 100e425:	48 c7 05 98 db 00 00 	mov    QWORD PTR [rip+0xdb98],0x780        # 101bfc8 <text_pos>
 100e42c:	80 07 00 00 
 100e430:	48 83 45 f8 01       	add    QWORD PTR [rbp-0x8],0x1
 100e435:	eb 6c                	jmp    100e4a3 <_hal_print_str+0x106>
 100e437:	48 8b 05 8a db 00 00 	mov    rax,QWORD PTR [rip+0xdb8a]        # 101bfc8 <text_pos>
 100e43e:	48 3d cf 07 00 00    	cmp    rax,0x7cf
 100e444:	76 15                	jbe    100e45b <_hal_print_str+0xbe>
 100e446:	b8 00 00 00 00       	mov    eax,0x0
 100e44b:	e8 32 ff ff ff       	call   100e382 <_hal_print_scroll>
 100e450:	48 c7 05 6d db 00 00 	mov    QWORD PTR [rip+0xdb6d],0x780        # 101bfc8 <text_pos>
 100e457:	80 07 00 00 
 100e45b:	48 8b 05 66 db 00 00 	mov    rax,QWORD PTR [rip+0xdb66]        # 101bfc8 <text_pos>
 100e462:	48 01 c0             	add    rax,rax
 100e465:	48 8d 90 00 80 0b 00 	lea    rdx,[rax+0xb8000]
 100e46c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 100e470:	0f b6 00             	movzx  eax,BYTE PTR [rax]
 100e473:	88 02                	mov    BYTE PTR [rdx],al
 100e475:	48 8b 05 4c db 00 00 	mov    rax,QWORD PTR [rip+0xdb4c]        # 101bfc8 <text_pos>
 100e47c:	48 01 c0             	add    rax,rax
 100e47f:	48 83 c0 01          	add    rax,0x1
 100e483:	48 05 00 80 0b 00    	add    rax,0xb8000
 100e489:	c6 00 07             	mov    BYTE PTR [rax],0x7
 100e48c:	48 83 45 f8 01       	add    QWORD PTR [rbp-0x8],0x1
 100e491:	48 8b 05 30 db 00 00 	mov    rax,QWORD PTR [rip+0xdb30]        # 101bfc8 <text_pos>
 100e498:	48 83 c0 01          	add    rax,0x1
 100e49c:	48 89 05 25 db 00 00 	mov    QWORD PTR [rip+0xdb25],rax        # 101bfc8 <text_pos>
 100e4a3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 100e4a7:	0f b6 00             	movzx  eax,BYTE PTR [rax]
 100e4aa:	84 c0                	test   al,al
 100e4ac:	0f 85 07 ff ff ff    	jne    100e3b9 <_hal_print_str+0x1c>
 100e4b2:	90                   	nop
 100e4b3:	eb 01                	jmp    100e4b6 <_hal_print_str+0x119>
 100e4b5:	90                   	nop
 100e4b6:	c9                   	leave  
 100e4b7:	c3                   	ret    

000000000100e4b8 <_hal_print_uint>:
 100e4b8:	55                   	push   rbp
 100e4b9:	48 89 e5             	mov    rbp,rsp
 100e4bc:	48 83 ec 40          	sub    rsp,0x40
 100e4c0:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
 100e4c4:	c6 45 e7 00          	mov    BYTE PTR [rbp-0x19],0x0
 100e4c8:	c7 45 fc 13 00 00 00 	mov    DWORD PTR [rbp-0x4],0x13
 100e4cf:	c7 45 f8 0a 00 00 00 	mov    DWORD PTR [rbp-0x8],0xa
 100e4d6:	8b 75 f8             	mov    esi,DWORD PTR [rbp-0x8]
 100e4d9:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
 100e4dd:	ba 00 00 00 00       	mov    edx,0x0
 100e4e2:	48 f7 f6             	div    rsi
 100e4e5:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
 100e4e9:	8b 4d f8             	mov    ecx,DWORD PTR [rbp-0x8]
 100e4ec:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
 100e4f0:	ba 00 00 00 00       	mov    edx,0x0
 100e4f5:	48 f7 f1             	div    rcx
 100e4f8:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
 100e4fc:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 100e500:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
 100e504:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
 100e507:	8d 50 ff             	lea    edx,[rax-0x1]
 100e50a:	89 55 fc             	mov    DWORD PTR [rbp-0x4],edx
 100e50d:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
 100e511:	83 c2 30             	add    edx,0x30
 100e514:	89 c0                	mov    eax,eax
 100e516:	88 54 05 d3          	mov    BYTE PTR [rbp+rax*1-0x2d],dl
 100e51a:	48 83 7d c8 00       	cmp    QWORD PTR [rbp-0x38],0x0
 100e51f:	74 02                	je     100e523 <_hal_print_uint+0x6b>
 100e521:	eb b3                	jmp    100e4d6 <_hal_print_uint+0x1e>
 100e523:	90                   	nop
 100e524:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
 100e527:	8d 50 01             	lea    edx,[rax+0x1]
 100e52a:	48 8d 45 d3          	lea    rax,[rbp-0x2d]
 100e52e:	89 d2                	mov    edx,edx
 100e530:	48 01 d0             	add    rax,rdx
 100e533:	48 89 c7             	mov    rdi,rax
 100e536:	e8 62 fe ff ff       	call   100e39d <_hal_print_str>
 100e53b:	90                   	nop
 100e53c:	c9                   	leave  
 100e53d:	c3                   	ret    

000000000100e53e <_hal_print_int>:
 100e53e:	55                   	push   rbp
 100e53f:	48 89 e5             	mov    rbp,rsp
 100e542:	48 83 ec 50          	sub    rsp,0x50
 100e546:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
 100e54a:	c6 45 df 00          	mov    BYTE PTR [rbp-0x21],0x0
 100e54e:	c7 45 fc 13 00 00 00 	mov    DWORD PTR [rbp-0x4],0x13
 100e555:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [rbp-0x8],0x0
 100e55c:	c7 45 f4 0a 00 00 00 	mov    DWORD PTR [rbp-0xc],0xa
 100e563:	48 83 7d b8 00       	cmp    QWORD PTR [rbp-0x48],0x0
 100e568:	79 0b                	jns    100e575 <_hal_print_int+0x37>
 100e56a:	c7 45 f8 01 00 00 00 	mov    DWORD PTR [rbp-0x8],0x1
 100e571:	48 f7 5d b8          	neg    QWORD PTR [rbp-0x48]
 100e575:	8b 75 f4             	mov    esi,DWORD PTR [rbp-0xc]
 100e578:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
 100e57c:	48 99                	cqo    
 100e57e:	48 f7 fe             	idiv   rsi
 100e581:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
 100e585:	8b 4d f4             	mov    ecx,DWORD PTR [rbp-0xc]
 100e588:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
 100e58c:	48 99                	cqo    
 100e58e:	48 f7 f9             	idiv   rcx
 100e591:	48 89 55 e0          	mov    QWORD PTR [rbp-0x20],rdx
 100e595:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 100e599:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
 100e59d:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
 100e5a0:	8d 50 ff             	lea    edx,[rax-0x1]
 100e5a3:	89 55 fc             	mov    DWORD PTR [rbp-0x4],edx
 100e5a6:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
 100e5aa:	83 c2 30             	add    edx,0x30
 100e5ad:	89 c0                	mov    eax,eax
 100e5af:	88 54 05 cb          	mov    BYTE PTR [rbp+rax*1-0x35],dl
 100e5b3:	48 83 7d b8 00       	cmp    QWORD PTR [rbp-0x48],0x0
 100e5b8:	74 02                	je     100e5bc <_hal_print_int+0x7e>
 100e5ba:	eb b9                	jmp    100e575 <_hal_print_int+0x37>
 100e5bc:	90                   	nop
 100e5bd:	83 7d f8 00          	cmp    DWORD PTR [rbp-0x8],0x0
 100e5c1:	74 10                	je     100e5d3 <_hal_print_int+0x95>
 100e5c3:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
 100e5c6:	8d 50 ff             	lea    edx,[rax-0x1]
 100e5c9:	89 55 fc             	mov    DWORD PTR [rbp-0x4],edx
 100e5cc:	89 c0                	mov    eax,eax
 100e5ce:	c6 44 05 cb 2d       	mov    BYTE PTR [rbp+rax*1-0x35],0x2d
 100e5d3:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
 100e5d6:	8d 50 01             	lea    edx,[rax+0x1]
 100e5d9:	48 8d 45 cb          	lea    rax,[rbp-0x35]
 100e5dd:	89 d2                	mov    edx,edx
 100e5df:	48 01 d0             	add    rax,rdx
 100e5e2:	48 89 c7             	mov    rdi,rax
 100e5e5:	e8 b3 fd ff ff       	call   100e39d <_hal_print_str>
 100e5ea:	90                   	nop
 100e5eb:	c9                   	leave  
 100e5ec:	c3                   	ret    

000000000100e5ed <_hal_print_hex>:
 100e5ed:	55                   	push   rbp
 100e5ee:	48 89 e5             	mov    rbp,rsp
 100e5f1:	48 83 ec 70          	sub    rsp,0x70
 100e5f5:	48 89 7d 98          	mov    QWORD PTR [rbp-0x68],rdi
 100e5f9:	48 89 75 90          	mov    QWORD PTR [rbp-0x70],rsi
 100e5fd:	c6 45 c8 30          	mov    BYTE PTR [rbp-0x38],0x30
 100e601:	c6 45 c9 31          	mov    BYTE PTR [rbp-0x37],0x31
 100e605:	c6 45 ca 32          	mov    BYTE PTR [rbp-0x36],0x32
 100e609:	c6 45 cb 33          	mov    BYTE PTR [rbp-0x35],0x33
 100e60d:	c6 45 cc 34          	mov    BYTE PTR [rbp-0x34],0x34
 100e611:	c6 45 cd 35          	mov    BYTE PTR [rbp-0x33],0x35
 100e615:	c6 45 ce 36          	mov    BYTE PTR [rbp-0x32],0x36
 100e619:	c6 45 cf 37          	mov    BYTE PTR [rbp-0x31],0x37
 100e61d:	c6 45 d0 38          	mov    BYTE PTR [rbp-0x30],0x38
 100e621:	c6 45 d1 39          	mov    BYTE PTR [rbp-0x2f],0x39
 100e625:	c6 45 d2 41          	mov    BYTE PTR [rbp-0x2e],0x41
 100e629:	c6 45 d3 42          	mov    BYTE PTR [rbp-0x2d],0x42
 100e62d:	c6 45 d4 43          	mov    BYTE PTR [rbp-0x2c],0x43
 100e631:	c6 45 d5 44          	mov    BYTE PTR [rbp-0x2b],0x44
 100e635:	c6 45 d6 45          	mov    BYTE PTR [rbp-0x2a],0x45
 100e639:	c6 45 d7 46          	mov    BYTE PTR [rbp-0x29],0x46
 100e63d:	c6 45 b8 30          	mov    BYTE PTR [rbp-0x48],0x30
 100e641:	c6 45 b9 31          	mov    BYTE PTR [rbp-0x47],0x31
 100e645:	c6 45 ba 32          	mov    BYTE PTR [rbp-0x46],0x32
 100e649:	c6 45 bb 33          	mov    BYTE PTR [rbp-0x45],0x33
 100e64d:	c6 45 bc 34          	mov    BYTE PTR [rbp-0x44],0x34
 100e651:	c6 45 bd 35          	mov    BYTE PTR [rbp-0x43],0x35
 100e655:	c6 45 be 36          	mov    BYTE PTR [rbp-0x42],0x36
 100e659:	c6 45 bf 37          	mov    BYTE PTR [rbp-0x41],0x37
 100e65d:	c6 45 c0 38          	mov    BYTE PTR [rbp-0x40],0x38
 100e661:	c6 45 c1 39          	mov    BYTE PTR [rbp-0x3f],0x39
 100e665:	c6 45 c2 61          	mov    BYTE PTR [rbp-0x3e],0x61
 100e669:	c6 45 c3 62          	mov    BYTE PTR [rbp-0x3d],0x62
 100e66d:	c6 45 c4 63          	mov    BYTE PTR [rbp-0x3c],0x63
 100e671:	c6 45 c5 64          	mov    BYTE PTR [rbp-0x3b],0x64
 100e675:	c6 45 c6 65          	mov    BYTE PTR [rbp-0x3a],0x65
 100e679:	c6 45 c7 66          	mov    BYTE PTR [rbp-0x39],0x66
 100e67d:	48 83 7d 90 01       	cmp    QWORD PTR [rbp-0x70],0x1
 100e682:	75 06                	jne    100e68a <_hal_print_hex+0x9d>
 100e684:	48 8d 45 c8          	lea    rax,[rbp-0x38]
 100e688:	eb 04                	jmp    100e68e <_hal_print_hex+0xa1>
 100e68a:	48 8d 45 b8          	lea    rax,[rbp-0x48]
 100e68e:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
 100e692:	c6 45 b7 00          	mov    BYTE PTR [rbp-0x49],0x0
 100e696:	c7 45 fc 0f 00 00 00 	mov    DWORD PTR [rbp-0x4],0xf
 100e69d:	c7 45 ec 10 00 00 00 	mov    DWORD PTR [rbp-0x14],0x10
 100e6a4:	8b 75 ec             	mov    esi,DWORD PTR [rbp-0x14]
 100e6a7:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
 100e6ab:	ba 00 00 00 00       	mov    edx,0x0
 100e6b0:	48 f7 f6             	div    rsi
 100e6b3:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
 100e6b7:	8b 4d ec             	mov    ecx,DWORD PTR [rbp-0x14]
 100e6ba:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
 100e6be:	ba 00 00 00 00       	mov    edx,0x0
 100e6c3:	48 f7 f1             	div    rcx
 100e6c6:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
 100e6ca:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
 100e6ce:	48 89 45 98          	mov    QWORD PTR [rbp-0x68],rax
 100e6d2:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
 100e6d5:	8d 50 ff             	lea    edx,[rax-0x1]
 100e6d8:	89 55 fc             	mov    DWORD PTR [rbp-0x4],edx
 100e6db:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
 100e6df:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
 100e6e3:	48 01 ca             	add    rdx,rcx
 100e6e6:	0f b6 12             	movzx  edx,BYTE PTR [rdx]
 100e6e9:	89 c0                	mov    eax,eax
 100e6eb:	88 54 05 a7          	mov    BYTE PTR [rbp+rax*1-0x59],dl
 100e6ef:	48 83 7d 98 00       	cmp    QWORD PTR [rbp-0x68],0x0
 100e6f4:	74 02                	je     100e6f8 <_hal_print_hex+0x10b>
 100e6f6:	eb ac                	jmp    100e6a4 <_hal_print_hex+0xb7>
 100e6f8:	90                   	nop
 100e6f9:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
 100e6fc:	8d 50 01             	lea    edx,[rax+0x1]
 100e6ff:	48 8d 45 a7          	lea    rax,[rbp-0x59]
 100e703:	89 d2                	mov    edx,edx
 100e705:	48 01 d0             	add    rax,rdx
 100e708:	48 89 c7             	mov    rdi,rax
 100e70b:	e8 8d fc ff ff       	call   100e39d <_hal_print_str>
 100e710:	90                   	nop
 100e711:	c9                   	leave  
 100e712:	c3                   	ret    

000000000100e713 <hal_clear_screen>:
 100e713:	55                   	push   rbp
 100e714:	48 89 e5             	mov    rbp,rsp
 100e717:	48 c7 05 a6 d8 00 00 	mov    QWORD PTR [rip+0xd8a6],0x0        # 101bfc8 <text_pos>
 100e71e:	00 00 00 00 
 100e722:	ba a0 0f 00 00       	mov    edx,0xfa0
 100e727:	be 00 00 00 00       	mov    esi,0x0
 100e72c:	bf 00 80 0b 00       	mov    edi,0xb8000
 100e731:	e8 32 79 ff ff       	call   1006068 <mem_set>
 100e736:	90                   	nop
 100e737:	5d                   	pop    rbp
 100e738:	c3                   	ret    

000000000100e739 <hal_printf>:
 100e739:	55                   	push   rbp
 100e73a:	48 89 e5             	mov    rbp,rsp
 100e73d:	48 83 c4 80          	add    rsp,0xffffffffffffff80
 100e741:	48 89 7d 88          	mov    QWORD PTR [rbp-0x78],rdi
 100e745:	48 89 75 d8          	mov    QWORD PTR [rbp-0x28],rsi
 100e749:	48 89 55 e0          	mov    QWORD PTR [rbp-0x20],rdx
 100e74d:	48 89 4d e8          	mov    QWORD PTR [rbp-0x18],rcx
 100e751:	4c 89 45 f0          	mov    QWORD PTR [rbp-0x10],r8
 100e755:	4c 89 4d f8          	mov    QWORD PTR [rbp-0x8],r9
 100e759:	c7 45 a0 08 00 00 00 	mov    DWORD PTR [rbp-0x60],0x8
 100e760:	48 8d 45 10          	lea    rax,[rbp+0x10]
 100e764:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
 100e768:	48 8d 45 d0          	lea    rax,[rbp-0x30]
 100e76c:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
 100e770:	c6 45 9e 00          	mov    BYTE PTR [rbp-0x62],0x0
 100e774:	c6 45 9f 00          	mov    BYTE PTR [rbp-0x61],0x0
 100e778:	e9 3e 02 00 00       	jmp    100e9bb <hal_printf+0x282>
 100e77d:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
 100e781:	0f b6 00             	movzx  eax,BYTE PTR [rax]
 100e784:	3c 25                	cmp    al,0x25
 100e786:	74 1b                	je     100e7a3 <hal_printf+0x6a>
 100e788:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
 100e78c:	0f b6 00             	movzx  eax,BYTE PTR [rax]
 100e78f:	88 45 9e             	mov    BYTE PTR [rbp-0x62],al
 100e792:	48 8d 45 9e          	lea    rax,[rbp-0x62]
 100e796:	48 89 c7             	mov    rdi,rax
 100e799:	e8 ff fb ff ff       	call   100e39d <_hal_print_str>
 100e79e:	e9 13 02 00 00       	jmp    100e9b6 <hal_printf+0x27d>
 100e7a3:	48 83 45 88 01       	add    QWORD PTR [rbp-0x78],0x1
 100e7a8:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
 100e7ac:	0f b6 00             	movzx  eax,BYTE PTR [rax]
 100e7af:	0f be c0             	movsx  eax,al
 100e7b2:	83 f8 64             	cmp    eax,0x64
 100e7b5:	74 41                	je     100e7f8 <hal_printf+0xbf>
 100e7b7:	83 f8 64             	cmp    eax,0x64
 100e7ba:	7f 20                	jg     100e7dc <hal_printf+0xa3>
 100e7bc:	83 f8 58             	cmp    eax,0x58
 100e7bf:	0f 84 86 01 00 00    	je     100e94b <hal_printf+0x212>
 100e7c5:	83 f8 63             	cmp    eax,0x63
 100e7c8:	0f 84 f1 00 00 00    	je     100e8bf <hal_printf+0x186>
 100e7ce:	83 f8 25             	cmp    eax,0x25
 100e7d1:	0f 84 b7 01 00 00    	je     100e98e <hal_printf+0x255>
 100e7d7:	e9 c4 01 00 00       	jmp    100e9a0 <hal_printf+0x267>
 100e7dc:	83 f8 75             	cmp    eax,0x75
 100e7df:	74 5a                	je     100e83b <hal_printf+0x102>
 100e7e1:	83 f8 78             	cmp    eax,0x78
 100e7e4:	0f 84 1e 01 00 00    	je     100e908 <hal_printf+0x1cf>
 100e7ea:	83 f8 73             	cmp    eax,0x73
 100e7ed:	0f 84 89 00 00 00    	je     100e87c <hal_printf+0x143>
 100e7f3:	e9 a8 01 00 00       	jmp    100e9a0 <hal_printf+0x267>
 100e7f8:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
 100e7fb:	83 f8 30             	cmp    eax,0x30
 100e7fe:	73 17                	jae    100e817 <hal_printf+0xde>
 100e800:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
 100e804:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
 100e807:	89 d2                	mov    edx,edx
 100e809:	48 01 d0             	add    rax,rdx
 100e80c:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
 100e80f:	83 c2 08             	add    edx,0x8
 100e812:	89 55 a0             	mov    DWORD PTR [rbp-0x60],edx
 100e815:	eb 0c                	jmp    100e823 <hal_printf+0xea>
 100e817:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
 100e81b:	48 8d 50 08          	lea    rdx,[rax+0x8]
 100e81f:	48 89 55 a8          	mov    QWORD PTR [rbp-0x58],rdx
 100e823:	48 8b 00             	mov    rax,QWORD PTR [rax]
 100e826:	89 45 cc             	mov    DWORD PTR [rbp-0x34],eax
 100e829:	8b 45 cc             	mov    eax,DWORD PTR [rbp-0x34]
 100e82c:	48 98                	cdqe   
 100e82e:	48 89 c7             	mov    rdi,rax
 100e831:	e8 08 fd ff ff       	call   100e53e <_hal_print_int>
 100e836:	e9 7b 01 00 00       	jmp    100e9b6 <hal_printf+0x27d>
 100e83b:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
 100e83e:	83 f8 30             	cmp    eax,0x30
 100e841:	73 17                	jae    100e85a <hal_printf+0x121>
 100e843:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
 100e847:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
 100e84a:	89 d2                	mov    edx,edx
 100e84c:	48 01 d0             	add    rax,rdx
 100e84f:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
 100e852:	83 c2 08             	add    edx,0x8
 100e855:	89 55 a0             	mov    DWORD PTR [rbp-0x60],edx
 100e858:	eb 0c                	jmp    100e866 <hal_printf+0x12d>
 100e85a:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
 100e85e:	48 8d 50 08          	lea    rdx,[rax+0x8]
 100e862:	48 89 55 a8          	mov    QWORD PTR [rbp-0x58],rdx
 100e866:	48 8b 00             	mov    rax,QWORD PTR [rax]
 100e869:	89 45 c8             	mov    DWORD PTR [rbp-0x38],eax
 100e86c:	8b 45 c8             	mov    eax,DWORD PTR [rbp-0x38]
 100e86f:	48 89 c7             	mov    rdi,rax
 100e872:	e8 41 fc ff ff       	call   100e4b8 <_hal_print_uint>
 100e877:	e9 3a 01 00 00       	jmp    100e9b6 <hal_printf+0x27d>
 100e87c:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
 100e87f:	83 f8 30             	cmp    eax,0x30
 100e882:	73 17                	jae    100e89b <hal_printf+0x162>
 100e884:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
 100e888:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
 100e88b:	89 d2                	mov    edx,edx
 100e88d:	48 01 d0             	add    rax,rdx
 100e890:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
 100e893:	83 c2 08             	add    edx,0x8
 100e896:	89 55 a0             	mov    DWORD PTR [rbp-0x60],edx
 100e899:	eb 0c                	jmp    100e8a7 <hal_printf+0x16e>
 100e89b:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
 100e89f:	48 8d 50 08          	lea    rdx,[rax+0x8]
 100e8a3:	48 89 55 a8          	mov    QWORD PTR [rbp-0x58],rdx
 100e8a7:	48 8b 00             	mov    rax,QWORD PTR [rax]
 100e8aa:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
 100e8ae:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
 100e8b2:	48 89 c7             	mov    rdi,rax
 100e8b5:	e8 e3 fa ff ff       	call   100e39d <_hal_print_str>
 100e8ba:	e9 f7 00 00 00       	jmp    100e9b6 <hal_printf+0x27d>
 100e8bf:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
 100e8c2:	83 f8 30             	cmp    eax,0x30
 100e8c5:	73 17                	jae    100e8de <hal_printf+0x1a5>
 100e8c7:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
 100e8cb:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
 100e8ce:	89 d2                	mov    edx,edx
 100e8d0:	48 01 d0             	add    rax,rdx
 100e8d3:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
 100e8d6:	83 c2 08             	add    edx,0x8
 100e8d9:	89 55 a0             	mov    DWORD PTR [rbp-0x60],edx
 100e8dc:	eb 0c                	jmp    100e8ea <hal_printf+0x1b1>
 100e8de:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
 100e8e2:	48 8d 50 08          	lea    rdx,[rax+0x8]
 100e8e6:	48 89 55 a8          	mov    QWORD PTR [rbp-0x58],rdx
 100e8ea:	48 8b 00             	mov    rax,QWORD PTR [rax]
 100e8ed:	88 45 bf             	mov    BYTE PTR [rbp-0x41],al
 100e8f0:	0f b6 45 bf          	movzx  eax,BYTE PTR [rbp-0x41]
 100e8f4:	88 45 9e             	mov    BYTE PTR [rbp-0x62],al
 100e8f7:	48 8d 45 9e          	lea    rax,[rbp-0x62]
 100e8fb:	48 89 c7             	mov    rdi,rax
 100e8fe:	e8 9a fa ff ff       	call   100e39d <_hal_print_str>
 100e903:	e9 ae 00 00 00       	jmp    100e9b6 <hal_printf+0x27d>
 100e908:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
 100e90b:	83 f8 30             	cmp    eax,0x30
 100e90e:	73 17                	jae    100e927 <hal_printf+0x1ee>
 100e910:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
 100e914:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
 100e917:	89 d2                	mov    edx,edx
 100e919:	48 01 d0             	add    rax,rdx
 100e91c:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
 100e91f:	83 c2 08             	add    edx,0x8
 100e922:	89 55 a0             	mov    DWORD PTR [rbp-0x60],edx
 100e925:	eb 0c                	jmp    100e933 <hal_printf+0x1fa>
 100e927:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
 100e92b:	48 8d 50 08          	lea    rdx,[rax+0x8]
 100e92f:	48 89 55 a8          	mov    QWORD PTR [rbp-0x58],rdx
 100e933:	48 8b 00             	mov    rax,QWORD PTR [rax]
 100e936:	89 45 c8             	mov    DWORD PTR [rbp-0x38],eax
 100e939:	8b 45 c8             	mov    eax,DWORD PTR [rbp-0x38]
 100e93c:	be 00 00 00 00       	mov    esi,0x0
 100e941:	48 89 c7             	mov    rdi,rax
 100e944:	e8 a4 fc ff ff       	call   100e5ed <_hal_print_hex>
 100e949:	eb 6b                	jmp    100e9b6 <hal_printf+0x27d>
 100e94b:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
 100e94e:	83 f8 30             	cmp    eax,0x30
 100e951:	73 17                	jae    100e96a <hal_printf+0x231>
 100e953:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
 100e957:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
 100e95a:	89 d2                	mov    edx,edx
 100e95c:	48 01 d0             	add    rax,rdx
 100e95f:	8b 55 a0             	mov    edx,DWORD PTR [rbp-0x60]
 100e962:	83 c2 08             	add    edx,0x8
 100e965:	89 55 a0             	mov    DWORD PTR [rbp-0x60],edx
 100e968:	eb 0c                	jmp    100e976 <hal_printf+0x23d>
 100e96a:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
 100e96e:	48 8d 50 08          	lea    rdx,[rax+0x8]
 100e972:	48 89 55 a8          	mov    QWORD PTR [rbp-0x58],rdx
 100e976:	48 8b 00             	mov    rax,QWORD PTR [rax]
 100e979:	89 45 c8             	mov    DWORD PTR [rbp-0x38],eax
 100e97c:	8b 45 c8             	mov    eax,DWORD PTR [rbp-0x38]
 100e97f:	be 01 00 00 00       	mov    esi,0x1
 100e984:	48 89 c7             	mov    rdi,rax
 100e987:	e8 61 fc ff ff       	call   100e5ed <_hal_print_hex>
 100e98c:	eb 28                	jmp    100e9b6 <hal_printf+0x27d>
 100e98e:	c6 45 9e 25          	mov    BYTE PTR [rbp-0x62],0x25
 100e992:	48 8d 45 9e          	lea    rax,[rbp-0x62]
 100e996:	48 89 c7             	mov    rdi,rax
 100e999:	e8 ff f9 ff ff       	call   100e39d <_hal_print_str>
 100e99e:	eb 16                	jmp    100e9b6 <hal_printf+0x27d>
 100e9a0:	c6 45 9e 25          	mov    BYTE PTR [rbp-0x62],0x25
 100e9a4:	48 8d 45 9e          	lea    rax,[rbp-0x62]
 100e9a8:	48 89 c7             	mov    rdi,rax
 100e9ab:	e8 ed f9 ff ff       	call   100e39d <_hal_print_str>
 100e9b0:	48 83 6d 88 01       	sub    QWORD PTR [rbp-0x78],0x1
 100e9b5:	90                   	nop
 100e9b6:	48 83 45 88 01       	add    QWORD PTR [rbp-0x78],0x1
 100e9bb:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
 100e9bf:	0f b6 00             	movzx  eax,BYTE PTR [rax]
 100e9c2:	84 c0                	test   al,al
 100e9c4:	0f 85 b3 fd ff ff    	jne    100e77d <hal_printf+0x44>
 100e9ca:	90                   	nop
 100e9cb:	c9                   	leave  
 100e9cc:	c3                   	ret    

000000000100e9cd <k_spin_lock>:
 100e9cd:	55                   	push   rbp
 100e9ce:	48 89 e5             	mov    rbp,rsp
 100e9d1:	48 83 ec 10          	sub    rsp,0x10
 100e9d5:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
 100e9d9:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
 100e9de:	74 19                	je     100e9f9 <k_spin_lock+0x2c>
 100e9e0:	90                   	nop
 100e9e1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 100e9e5:	be 01 00 00 00       	mov    esi,0x1
 100e9ea:	48 89 c7             	mov    rdi,rax
 100e9ed:	e8 72 04 00 00       	call   100ee64 <hal_interlocked_exchange>
 100e9f2:	48 83 f8 01          	cmp    rax,0x1
 100e9f6:	74 e9                	je     100e9e1 <k_spin_lock+0x14>
 100e9f8:	90                   	nop
 100e9f9:	90                   	nop
 100e9fa:	c9                   	leave  
 100e9fb:	c3                   	ret    

000000000100e9fc <k_spin_unlock>:
 100e9fc:	55                   	push   rbp
 100e9fd:	48 89 e5             	mov    rbp,rsp
 100ea00:	48 83 ec 08          	sub    rsp,0x8
 100ea04:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
 100ea08:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
 100ea0d:	74 0c                	je     100ea1b <k_spin_unlock+0x1f>
 100ea0f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 100ea13:	48 c7 00 00 00 00 00 	mov    QWORD PTR [rax],0x0
 100ea1a:	90                   	nop
 100ea1b:	90                   	nop
 100ea1c:	c9                   	leave  
 100ea1d:	c3                   	ret    

000000000100ea1e <kmain>:
 100ea1e:	55                   	push   rbp
 100ea1f:	48 89 e5             	mov    rbp,rsp
 100ea22:	48 83 ec 40          	sub    rsp,0x40
 100ea26:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
 100ea2a:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
 100ea2e:	48 89 c7             	mov    rdi,rax
 100ea31:	e8 b7 f8 ff ff       	call   100e2ed <hal_init>
 100ea36:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
 100ea3a:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
 100ea3f:	75 14                	jne    100ea55 <kmain+0x37>
 100ea41:	bf b8 35 01 01       	mov    edi,0x10135b8
 100ea46:	b8 00 00 00 00       	mov    eax,0x0
 100ea4b:	e8 e9 fc ff ff       	call   100e739 <hal_printf>
 100ea50:	e8 57 04 00 00       	call   100eeac <hal_halt_cpu>
 100ea55:	ba f8 bf 01 01       	mov    edx,0x101bff8
 100ea5a:	b8 00 00 00 01       	mov    eax,0x1000000
 100ea5f:	48 29 c2             	sub    rdx,rax
 100ea62:	48 89 d0             	mov    rax,rdx
 100ea65:	48 8d 90 ff 03 00 00 	lea    rdx,[rax+0x3ff]
 100ea6c:	48 85 c0             	test   rax,rax
 100ea6f:	48 0f 48 c2          	cmovs  rax,rdx
 100ea73:	48 c1 f8 0a          	sar    rax,0xa
 100ea77:	48 89 c2             	mov    rdx,rax
 100ea7a:	b9 f8 bf 01 01       	mov    ecx,0x101bff8
 100ea7f:	b8 00 00 00 01       	mov    eax,0x1000000
 100ea84:	48 29 c1             	sub    rcx,rax
 100ea87:	48 89 c8             	mov    rax,rcx
 100ea8a:	48 89 d1             	mov    rcx,rdx
 100ea8d:	48 89 c2             	mov    rdx,rax
 100ea90:	be 00 00 00 01       	mov    esi,0x1000000
 100ea95:	bf c8 35 01 01       	mov    edi,0x10135c8
 100ea9a:	b8 00 00 00 00       	mov    eax,0x0
 100ea9f:	e8 95 fc ff ff       	call   100e739 <hal_printf>
 100eaa4:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 100eaa8:	48 89 c6             	mov    rsi,rax
 100eaab:	bf f1 35 01 01       	mov    edi,0x10135f1
 100eab0:	b8 00 00 00 00       	mov    eax,0x0
 100eab5:	e8 7f fc ff ff       	call   100e739 <hal_printf>
 100eaba:	e8 0e b5 ff ff       	call   1009fcd <linked_list_test>
 100eabf:	e8 b9 e3 ff ff       	call   100ce7d <avl_tree_test>
 100eac4:	e8 d6 a0 ff ff       	call   1008b9f <salloc_test>
 100eac9:	bf 00 36 01 01       	mov    edi,0x1013600
 100eace:	b8 00 00 00 00       	mov    eax,0x0
 100ead3:	e8 61 fc ff ff       	call   100e739 <hal_printf>
 100ead8:	e8 cf 03 00 00       	call   100eeac <hal_halt_cpu>
 100eadd:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 100eae1:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
 100eae5:	48 85 c0             	test   rax,rax
 100eae8:	0f 84 a2 00 00 00    	je     100eb90 <kmain+0x172>
 100eaee:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 100eaf2:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
 100eaf6:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
 100eafa:	48 89 c6             	mov    rsi,rax
 100eafd:	bf 1c 36 01 01       	mov    edi,0x101361c
 100eb02:	b8 00 00 00 00       	mov    eax,0x0
 100eb07:	e8 2d fc ff ff       	call   100e739 <hal_printf>
 100eb0c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 100eb10:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
 100eb14:	48 8b 40 18          	mov    rax,QWORD PTR [rax+0x18]
 100eb18:	48 89 c6             	mov    rsi,rax
 100eb1b:	bf 33 36 01 01       	mov    edi,0x1013633
 100eb20:	b8 00 00 00 00       	mov    eax,0x0
 100eb25:	e8 0f fc ff ff       	call   100e739 <hal_printf>
 100eb2a:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
 100eb31:	eb 45                	jmp    100eb78 <kmain+0x15a>
 100eb33:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 100eb37:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
 100eb3b:	48 8b 00             	mov    rax,QWORD PTR [rax]
 100eb3e:	8b 55 fc             	mov    edx,DWORD PTR [rbp-0x4]
 100eb41:	89 d6                	mov    esi,edx
 100eb43:	48 89 c7             	mov    rdi,rax
 100eb46:	e8 f6 90 ff ff       	call   1007c41 <linked_list_get>
 100eb4b:	48 83 e8 10          	sub    rax,0x10
 100eb4f:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
 100eb53:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
 100eb57:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
 100eb5b:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
 100eb5f:	48 8b 00             	mov    rax,QWORD PTR [rax]
 100eb62:	48 89 c6             	mov    rsi,rax
 100eb65:	bf 48 36 01 01       	mov    edi,0x1013648
 100eb6a:	b8 00 00 00 00       	mov    eax,0x0
 100eb6f:	e8 c5 fb ff ff       	call   100e739 <hal_printf>
 100eb74:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
 100eb78:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 100eb7c:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
 100eb80:	48 8b 00             	mov    rax,QWORD PTR [rax]
 100eb83:	48 89 c7             	mov    rdi,rax
 100eb86:	e8 44 8d ff ff       	call   10078cf <linked_list_size>
 100eb8b:	3b 45 fc             	cmp    eax,DWORD PTR [rbp-0x4]
 100eb8e:	7f a3                	jg     100eb33 <kmain+0x115>
 100eb90:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 100eb94:	48 8b 40 18          	mov    rax,QWORD PTR [rax+0x18]
 100eb98:	48 85 c0             	test   rax,rax
 100eb9b:	0f 84 9d 00 00 00    	je     100ec3e <kmain+0x220>
 100eba1:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 100eba5:	48 8b 40 18          	mov    rax,QWORD PTR [rax+0x18]
 100eba9:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
 100ebad:	48 89 c6             	mov    rsi,rax
 100ebb0:	bf 68 36 01 01       	mov    edi,0x1013668
 100ebb5:	b8 00 00 00 00       	mov    eax,0x0
 100ebba:	e8 7a fb ff ff       	call   100e739 <hal_printf>
 100ebbf:	48 c7 45 f0 00 00 00 	mov    QWORD PTR [rbp-0x10],0x0
 100ebc6:	00 
 100ebc7:	eb 63                	jmp    100ec2c <kmain+0x20e>
 100ebc9:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 100ebcd:	89 c2                	mov    edx,eax
 100ebcf:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 100ebd3:	48 8b 40 18          	mov    rax,QWORD PTR [rax+0x18]
 100ebd7:	48 8b 00             	mov    rax,QWORD PTR [rax]
 100ebda:	89 d6                	mov    esi,edx
 100ebdc:	48 89 c7             	mov    rdi,rax
 100ebdf:	e8 5d 90 ff ff       	call   1007c41 <linked_list_get>
 100ebe4:	48 83 e8 18          	sub    rax,0x18
 100ebe8:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
 100ebec:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 100ebf0:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
 100ebf4:	48 c1 e8 0a          	shr    rax,0xa
 100ebf8:	48 89 c6             	mov    rsi,rax
 100ebfb:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 100ebff:	48 8b 48 08          	mov    rcx,QWORD PTR [rax+0x8]
 100ec03:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 100ec07:	48 8b 10             	mov    rdx,QWORD PTR [rax]
 100ec0a:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 100ec0e:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
 100ec12:	49 89 f0             	mov    r8,rsi
 100ec15:	48 89 c6             	mov    rsi,rax
 100ec18:	bf 88 36 01 01       	mov    edi,0x1013688
 100ec1d:	b8 00 00 00 00       	mov    eax,0x0
 100ec22:	e8 12 fb ff ff       	call   100e739 <hal_printf>
 100ec27:	48 83 45 f0 01       	add    QWORD PTR [rbp-0x10],0x1
 100ec2c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 100ec30:	48 8b 40 18          	mov    rax,QWORD PTR [rax+0x18]
 100ec34:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
 100ec38:	48 3b 45 f0          	cmp    rax,QWORD PTR [rbp-0x10]
 100ec3c:	73 8b                	jae    100ebc9 <kmain+0x1ab>
 100ec3e:	bf 00 36 01 01       	mov    edi,0x1013600
 100ec43:	b8 00 00 00 00       	mov    eax,0x0
 100ec48:	e8 ec fa ff ff       	call   100e739 <hal_printf>
 100ec4d:	e8 5a 02 00 00       	call   100eeac <hal_halt_cpu>
 100ec52:	90                   	nop
 100ec53:	c9                   	leave  
 100ec54:	c3                   	ret    

000000000100ec55 <pmm_init>:
 100ec55:	55                   	push   rbp
 100ec56:	48 89 e5             	mov    rbp,rsp
 100ec59:	48 83 ec 10          	sub    rsp,0x10
 100ec5d:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
 100ec61:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
 100ec65:	48 8b 05 84 d3 00 00 	mov    rax,QWORD PTR [rip+0xd384]        # 101bff0 <occupied_mem>
 100ec6c:	48 85 c0             	test   rax,rax
 100ec6f:	74 13                	je     100ec84 <pmm_init+0x2f>
 100ec71:	48 8b 05 70 d3 00 00 	mov    rax,QWORD PTR [rip+0xd370]        # 101bfe8 <available_mem>
 100ec78:	48 85 c0             	test   rax,rax
 100ec7b:	74 07                	je     100ec84 <pmm_init+0x2f>
 100ec7d:	b8 01 00 00 00       	mov    eax,0x1
 100ec82:	eb 05                	jmp    100ec89 <pmm_init+0x34>
 100ec84:	b8 00 00 00 00       	mov    eax,0x0
 100ec89:	48 98                	cdqe   
 100ec8b:	be 00 00 00 00       	mov    esi,0x0
 100ec90:	48 89 c7             	mov    rdi,rax
 100ec93:	e8 b9 ea ff ff       	call   100d751 <hal_assert>
 100ec98:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 100ec9c:	48 89 05 4d d3 00 00 	mov    QWORD PTR [rip+0xd34d],rax        # 101bff0 <occupied_mem>
 100eca3:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 100eca7:	48 89 05 3a d3 00 00 	mov    QWORD PTR [rip+0xd33a],rax        # 101bfe8 <available_mem>
 100ecae:	90                   	nop
 100ecaf:	c9                   	leave  
 100ecb0:	c3                   	ret    

000000000100ecb1 <_pmm_add_page>:
 100ecb1:	55                   	push   rbp
 100ecb2:	48 89 e5             	mov    rbp,rsp
 100ecb5:	48 83 ec 30          	sub    rsp,0x30
 100ecb9:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
 100ecbd:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
 100ecc1:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
 100ecc5:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
 100ecca:	0f 95 c0             	setne  al
 100eccd:	0f b6 c0             	movzx  eax,al
 100ecd0:	be 00 00 00 00       	mov    esi,0x0
 100ecd5:	48 89 c7             	mov    rdi,rax
 100ecd8:	e8 74 ea ff ff       	call   100d751 <hal_assert>
 100ecdd:	48 81 65 e0 00 f0 ff 	and    QWORD PTR [rbp-0x20],0xfffffffffffff000
 100ece4:	ff 
 100ece5:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 100ece9:	48 89 c7             	mov    rdi,rax
 100ecec:	e8 de 8b ff ff       	call   10078cf <linked_list_size>
 100ecf1:	85 c0                	test   eax,eax
 100ecf3:	74 39                	je     100ed2e <_pmm_add_page+0x7d>
 100ecf5:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
 100ecfc:	eb 1d                	jmp    100ed1b <_pmm_add_page+0x6a>
 100ecfe:	8b 55 fc             	mov    edx,DWORD PTR [rbp-0x4]
 100ed01:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 100ed05:	89 d6                	mov    esi,edx
 100ed07:	48 89 c7             	mov    rdi,rax
 100ed0a:	e8 32 8f ff ff       	call   1007c41 <linked_list_get>
 100ed0f:	48 83 e8 10          	sub    rax,0x10
 100ed13:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
 100ed17:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
 100ed1b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 100ed1f:	48 89 c7             	mov    rdi,rax
 100ed22:	e8 a8 8b ff ff       	call   10078cf <linked_list_size>
 100ed27:	3b 45 fc             	cmp    eax,DWORD PTR [rbp-0x4]
 100ed2a:	7f d2                	jg     100ecfe <_pmm_add_page+0x4d>
 100ed2c:	eb 01                	jmp    100ed2f <_pmm_add_page+0x7e>
 100ed2e:	90                   	nop
 100ed2f:	c9                   	leave  
 100ed30:	c3                   	ret    

000000000100ed31 <pmm_alloc_page>:
 100ed31:	55                   	push   rbp
 100ed32:	48 89 e5             	mov    rbp,rsp
 100ed35:	48 83 ec 10          	sub    rsp,0x10
 100ed39:	48 8b 05 b0 d2 00 00 	mov    rax,QWORD PTR [rip+0xd2b0]        # 101bff0 <occupied_mem>
 100ed40:	48 85 c0             	test   rax,rax
 100ed43:	74 13                	je     100ed58 <pmm_alloc_page+0x27>
 100ed45:	48 8b 05 9c d2 00 00 	mov    rax,QWORD PTR [rip+0xd29c]        # 101bfe8 <available_mem>
 100ed4c:	48 85 c0             	test   rax,rax
 100ed4f:	74 07                	je     100ed58 <pmm_alloc_page+0x27>
 100ed51:	b8 01 00 00 00       	mov    eax,0x1
 100ed56:	eb 05                	jmp    100ed5d <pmm_alloc_page+0x2c>
 100ed58:	b8 00 00 00 00       	mov    eax,0x0
 100ed5d:	48 98                	cdqe   
 100ed5f:	be 00 00 00 00       	mov    esi,0x0
 100ed64:	48 89 c7             	mov    rdi,rax
 100ed67:	e8 e5 e9 ff ff       	call   100d751 <hal_assert>
 100ed6c:	48 8b 05 75 d2 00 00 	mov    rax,QWORD PTR [rip+0xd275]        # 101bfe8 <available_mem>
 100ed73:	48 89 c7             	mov    rdi,rax
 100ed76:	e8 54 8b ff ff       	call   10078cf <linked_list_size>
 100ed7b:	85 c0                	test   eax,eax
 100ed7d:	75 07                	jne    100ed86 <pmm_alloc_page+0x55>
 100ed7f:	b8 00 00 00 00       	mov    eax,0x0
 100ed84:	eb 26                	jmp    100edac <pmm_alloc_page+0x7b>
 100ed86:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
 100ed8d:	eb 04                	jmp    100ed93 <pmm_alloc_page+0x62>
 100ed8f:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
 100ed93:	48 8b 05 4e d2 00 00 	mov    rax,QWORD PTR [rip+0xd24e]        # 101bfe8 <available_mem>
 100ed9a:	48 89 c7             	mov    rdi,rax
 100ed9d:	e8 2d 8b ff ff       	call   10078cf <linked_list_size>
 100eda2:	3b 45 fc             	cmp    eax,DWORD PTR [rbp-0x4]
 100eda5:	7f e8                	jg     100ed8f <pmm_alloc_page+0x5e>
 100eda7:	b8 00 00 00 00       	mov    eax,0x0
 100edac:	c9                   	leave  
 100edad:	c3                   	ret    

000000000100edae <pmm_free_page>:
 100edae:	55                   	push   rbp
 100edaf:	48 89 e5             	mov    rbp,rsp
 100edb2:	48 83 ec 08          	sub    rsp,0x8
 100edb6:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
 100edba:	90                   	nop
 100edbb:	c9                   	leave  
 100edbc:	c3                   	ret    

000000000100edbd <k_register_interrupt_handler>:
 100edbd:	55                   	push   rbp
 100edbe:	48 89 e5             	mov    rbp,rsp
 100edc1:	48 83 ec 10          	sub    rsp,0x10
 100edc5:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
 100edc9:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
 100edcd:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
 100edd1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 100edd5:	48 89 d6             	mov    rsi,rdx
 100edd8:	48 89 c7             	mov    rdi,rax
 100eddb:	e8 1f e9 ff ff       	call   100d6ff <hal_register_interrupt_handler>
 100ede0:	90                   	nop
 100ede1:	c9                   	leave  
 100ede2:	c3                   	ret    

000000000100ede3 <k_deregister_interrupt_handler>:
 100ede3:	55                   	push   rbp
 100ede4:	48 89 e5             	mov    rbp,rsp
 100ede7:	48 83 ec 10          	sub    rsp,0x10
 100edeb:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
 100edef:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
 100edf3:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
 100edf7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 100edfb:	48 89 d6             	mov    rsi,rdx
 100edfe:	48 89 c7             	mov    rdi,rax
 100ee01:	e8 f9 e8 ff ff       	call   100d6ff <hal_register_interrupt_handler>
 100ee06:	90                   	nop
 100ee07:	c9                   	leave  
 100ee08:	c3                   	ret    

000000000100ee09 <k_disable_interrupt>:
 100ee09:	55                   	push   rbp
 100ee0a:	48 89 e5             	mov    rbp,rsp
 100ee0d:	b8 00 00 00 00       	mov    eax,0x0
 100ee12:	e8 91 00 00 00       	call   100eea8 <hal_disable_interrupt>
 100ee17:	90                   	nop
 100ee18:	5d                   	pop    rbp
 100ee19:	c3                   	ret    

000000000100ee1a <k_enable_interrupt>:
 100ee1a:	55                   	push   rbp
 100ee1b:	48 89 e5             	mov    rbp,rsp
 100ee1e:	b8 00 00 00 00       	mov    eax,0x0
 100ee23:	e8 80 00 00 00       	call   100eea8 <hal_disable_interrupt>
 100ee28:	90                   	nop
 100ee29:	5d                   	pop    rbp
 100ee2a:	c3                   	ret    
 100ee2b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

000000000100ee30 <hal_flush_gdt>:
 100ee30:	55                   	push   rbp
 100ee31:	48 89 e5             	mov    rbp,rsp
 100ee34:	0f 01 17             	lgdt   [rdi]
 100ee37:	52                   	push   rdx
 100ee38:	55                   	push   rbp
 100ee39:	9c                   	pushf  
 100ee3a:	58                   	pop    rax
 100ee3b:	50                   	push   rax
 100ee3c:	56                   	push   rsi
 100ee3d:	68 44 ee 00 01       	push   0x100ee44
 100ee42:	48 cf                	iretq  

000000000100ee44 <hal_flush_gdt.reload>:
 100ee44:	8e c2                	mov    es,edx
 100ee46:	8e e2                	mov    fs,edx
 100ee48:	8e ea                	mov    gs,edx
 100ee4a:	8e da                	mov    ds,edx
 100ee4c:	48 89 ec             	mov    rsp,rbp
 100ee4f:	5d                   	pop    rbp
 100ee50:	c3                   	ret    

000000000100ee51 <hal_flush_tlb>:
 100ee51:	0f 20 d8             	mov    rax,cr3
 100ee54:	0f 22 d8             	mov    cr3,rax
 100ee57:	c3                   	ret    

000000000100ee58 <hal_flush_idt>:
 100ee58:	0f 01 1f             	lidt   [rdi]
 100ee5b:	c3                   	ret    

000000000100ee5c <hal_read_cr3>:
 100ee5c:	0f 20 d8             	mov    rax,cr3
 100ee5f:	c3                   	ret    

000000000100ee60 <hal_write_cr3>:
 100ee60:	0f 22 df             	mov    cr3,rdi
 100ee63:	c3                   	ret    

000000000100ee64 <hal_interlocked_exchange>:
 100ee64:	f0 48 87 37          	lock xchg QWORD PTR [rdi],rsi
 100ee68:	48 89 f0             	mov    rax,rsi
 100ee6b:	c3                   	ret    

000000000100ee6c <hal_cpuid>:
 100ee6c:	55                   	push   rbp
 100ee6d:	48 89 e5             	mov    rbp,rsp
 100ee70:	53                   	push   rbx
 100ee71:	51                   	push   rcx
 100ee72:	52                   	push   rdx
 100ee73:	8b 07                	mov    eax,DWORD PTR [rdi]
 100ee75:	8b 0a                	mov    ecx,DWORD PTR [rdx]
 100ee77:	0f a2                	cpuid  
 100ee79:	89 07                	mov    DWORD PTR [rdi],eax
 100ee7b:	89 1e                	mov    DWORD PTR [rsi],ebx
 100ee7d:	41 5b                	pop    r11
 100ee7f:	41 89 0b             	mov    DWORD PTR [r11],ecx
 100ee82:	41 5b                	pop    r11
 100ee84:	41 89 13             	mov    DWORD PTR [r11],edx
 100ee87:	5b                   	pop    rbx
 100ee88:	48 89 ec             	mov    rsp,rbp
 100ee8b:	5d                   	pop    rbp
 100ee8c:	c3                   	ret    

000000000100ee8d <hal_write_port>:
 100ee8d:	48 89 fa             	mov    rdx,rdi
 100ee90:	48 89 f0             	mov    rax,rsi
 100ee93:	ef                   	out    dx,eax
 100ee94:	90                   	nop
 100ee95:	90                   	nop
 100ee96:	c3                   	ret    

000000000100ee97 <hal_read_port>:
 100ee97:	48 89 fa             	mov    rdx,rdi
 100ee9a:	48 31 c0             	xor    rax,rax
 100ee9d:	ed                   	in     eax,dx
 100ee9e:	90                   	nop
 100ee9f:	90                   	nop
 100eea0:	c3                   	ret    

000000000100eea1 <hal_write_mem_32>:
 100eea1:	89 37                	mov    DWORD PTR [rdi],esi
 100eea3:	c3                   	ret    

000000000100eea4 <hal_write_mem_64>:
 100eea4:	48 89 37             	mov    QWORD PTR [rdi],rsi
 100eea7:	c3                   	ret    

000000000100eea8 <hal_disable_interrupt>:
 100eea8:	fa                   	cli    
 100eea9:	c3                   	ret    

000000000100eeaa <hal_enable_interrupt>:
 100eeaa:	fb                   	sti    
 100eeab:	c3                   	ret    

000000000100eeac <hal_halt_cpu>:
 100eeac:	f4                   	hlt    
 100eead:	eb fd                	jmp    100eeac <hal_halt_cpu>

000000000100eeaf <hal_bochs_magic_breakpoint>:
 100eeaf:	66 87 db             	xchg   bx,bx
 100eeb2:	c3                   	ret    

000000000100eeb3 <hal_read_msr>:
 100eeb3:	52                   	push   rdx
 100eeb4:	8b 0f                	mov    ecx,DWORD PTR [rdi]
 100eeb6:	0f 32                	rdmsr  
 100eeb8:	89 0f                	mov    DWORD PTR [rdi],ecx
 100eeba:	89 16                	mov    DWORD PTR [rsi],edx
 100eebc:	41 5b                	pop    r11
 100eebe:	41 89 03             	mov    DWORD PTR [r11],eax
 100eec1:	c3                   	ret    

000000000100eec2 <hal_write_msr>:
 100eec2:	8b 0f                	mov    ecx,DWORD PTR [rdi]
 100eec4:	8b 02                	mov    eax,DWORD PTR [rdx]
 100eec6:	8b 16                	mov    edx,DWORD PTR [rsi]
 100eec8:	0f 30                	wrmsr  
 100eeca:	c3                   	ret    
 100eecb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

000000000100eed0 <hal_interrupt_handler_0>:
 100eed0:	55                   	push   rbp
 100eed1:	48 89 e5             	mov    rbp,rsp
 100eed4:	50                   	push   rax
 100eed5:	53                   	push   rbx
 100eed6:	51                   	push   rcx
 100eed7:	52                   	push   rdx
 100eed8:	55                   	push   rbp
 100eed9:	57                   	push   rdi
 100eeda:	56                   	push   rsi
 100eedb:	41 50                	push   r8
 100eedd:	41 51                	push   r9
 100eedf:	41 52                	push   r10
 100eee1:	41 53                	push   r11
 100eee3:	41 54                	push   r12
 100eee5:	41 55                	push   r13
 100eee7:	41 56                	push   r14
 100eee9:	41 57                	push   r15
 100eeeb:	fc                   	cld    
 100eeec:	bf 00 00 00 00       	mov    edi,0x0
 100eef1:	48 89 ee             	mov    rsi,rbp
 100eef4:	48 83 c6 08          	add    rsi,0x8
 100eef8:	ba 00 00 00 00       	mov    edx,0x0
 100eefd:	e8 98 e8 ff ff       	call   100d79a <hal_interrupt_dispatcher>
 100ef02:	41 5f                	pop    r15
 100ef04:	41 5e                	pop    r14
 100ef06:	41 5d                	pop    r13
 100ef08:	41 5c                	pop    r12
 100ef0a:	41 5b                	pop    r11
 100ef0c:	41 5a                	pop    r10
 100ef0e:	41 59                	pop    r9
 100ef10:	41 58                	pop    r8
 100ef12:	5e                   	pop    rsi
 100ef13:	5f                   	pop    rdi
 100ef14:	5d                   	pop    rbp
 100ef15:	5a                   	pop    rdx
 100ef16:	59                   	pop    rcx
 100ef17:	5b                   	pop    rbx
 100ef18:	58                   	pop    rax
 100ef19:	5d                   	pop    rbp
 100ef1a:	48 cf                	iretq  

000000000100ef1c <hal_interrupt_handler_1>:
 100ef1c:	55                   	push   rbp
 100ef1d:	48 89 e5             	mov    rbp,rsp
 100ef20:	50                   	push   rax
 100ef21:	53                   	push   rbx
 100ef22:	51                   	push   rcx
 100ef23:	52                   	push   rdx
 100ef24:	55                   	push   rbp
 100ef25:	57                   	push   rdi
 100ef26:	56                   	push   rsi
 100ef27:	41 50                	push   r8
 100ef29:	41 51                	push   r9
 100ef2b:	41 52                	push   r10
 100ef2d:	41 53                	push   r11
 100ef2f:	41 54                	push   r12
 100ef31:	41 55                	push   r13
 100ef33:	41 56                	push   r14
 100ef35:	41 57                	push   r15
 100ef37:	fc                   	cld    
 100ef38:	bf 01 00 00 00       	mov    edi,0x1
 100ef3d:	48 89 ee             	mov    rsi,rbp
 100ef40:	48 83 c6 08          	add    rsi,0x8
 100ef44:	ba 00 00 00 00       	mov    edx,0x0
 100ef49:	e8 4c e8 ff ff       	call   100d79a <hal_interrupt_dispatcher>
 100ef4e:	41 5f                	pop    r15
 100ef50:	41 5e                	pop    r14
 100ef52:	41 5d                	pop    r13
 100ef54:	41 5c                	pop    r12
 100ef56:	41 5b                	pop    r11
 100ef58:	41 5a                	pop    r10
 100ef5a:	41 59                	pop    r9
 100ef5c:	41 58                	pop    r8
 100ef5e:	5e                   	pop    rsi
 100ef5f:	5f                   	pop    rdi
 100ef60:	5d                   	pop    rbp
 100ef61:	5a                   	pop    rdx
 100ef62:	59                   	pop    rcx
 100ef63:	5b                   	pop    rbx
 100ef64:	58                   	pop    rax
 100ef65:	5d                   	pop    rbp
 100ef66:	48 cf                	iretq  

000000000100ef68 <hal_interrupt_handler_2>:
 100ef68:	55                   	push   rbp
 100ef69:	48 89 e5             	mov    rbp,rsp
 100ef6c:	50                   	push   rax
 100ef6d:	53                   	push   rbx
 100ef6e:	51                   	push   rcx
 100ef6f:	52                   	push   rdx
 100ef70:	55                   	push   rbp
 100ef71:	57                   	push   rdi
 100ef72:	56                   	push   rsi
 100ef73:	41 50                	push   r8
 100ef75:	41 51                	push   r9
 100ef77:	41 52                	push   r10
 100ef79:	41 53                	push   r11
 100ef7b:	41 54                	push   r12
 100ef7d:	41 55                	push   r13
 100ef7f:	41 56                	push   r14
 100ef81:	41 57                	push   r15
 100ef83:	fc                   	cld    
 100ef84:	bf 02 00 00 00       	mov    edi,0x2
 100ef89:	48 89 ee             	mov    rsi,rbp
 100ef8c:	48 83 c6 08          	add    rsi,0x8
 100ef90:	ba 00 00 00 00       	mov    edx,0x0
 100ef95:	e8 00 e8 ff ff       	call   100d79a <hal_interrupt_dispatcher>
 100ef9a:	41 5f                	pop    r15
 100ef9c:	41 5e                	pop    r14
 100ef9e:	41 5d                	pop    r13
 100efa0:	41 5c                	pop    r12
 100efa2:	41 5b                	pop    r11
 100efa4:	41 5a                	pop    r10
 100efa6:	41 59                	pop    r9
 100efa8:	41 58                	pop    r8
 100efaa:	5e                   	pop    rsi
 100efab:	5f                   	pop    rdi
 100efac:	5d                   	pop    rbp
 100efad:	5a                   	pop    rdx
 100efae:	59                   	pop    rcx
 100efaf:	5b                   	pop    rbx
 100efb0:	58                   	pop    rax
 100efb1:	5d                   	pop    rbp
 100efb2:	48 cf                	iretq  

000000000100efb4 <hal_interrupt_handler_3>:
 100efb4:	55                   	push   rbp
 100efb5:	48 89 e5             	mov    rbp,rsp
 100efb8:	50                   	push   rax
 100efb9:	53                   	push   rbx
 100efba:	51                   	push   rcx
 100efbb:	52                   	push   rdx
 100efbc:	55                   	push   rbp
 100efbd:	57                   	push   rdi
 100efbe:	56                   	push   rsi
 100efbf:	41 50                	push   r8
 100efc1:	41 51                	push   r9
 100efc3:	41 52                	push   r10
 100efc5:	41 53                	push   r11
 100efc7:	41 54                	push   r12
 100efc9:	41 55                	push   r13
 100efcb:	41 56                	push   r14
 100efcd:	41 57                	push   r15
 100efcf:	fc                   	cld    
 100efd0:	bf 03 00 00 00       	mov    edi,0x3
 100efd5:	48 89 ee             	mov    rsi,rbp
 100efd8:	48 83 c6 08          	add    rsi,0x8
 100efdc:	ba 00 00 00 00       	mov    edx,0x0
 100efe1:	e8 b4 e7 ff ff       	call   100d79a <hal_interrupt_dispatcher>
 100efe6:	41 5f                	pop    r15
 100efe8:	41 5e                	pop    r14
 100efea:	41 5d                	pop    r13
 100efec:	41 5c                	pop    r12
 100efee:	41 5b                	pop    r11
 100eff0:	41 5a                	pop    r10
 100eff2:	41 59                	pop    r9
 100eff4:	41 58                	pop    r8
 100eff6:	5e                   	pop    rsi
 100eff7:	5f                   	pop    rdi
 100eff8:	5d                   	pop    rbp
 100eff9:	5a                   	pop    rdx
 100effa:	59                   	pop    rcx
 100effb:	5b                   	pop    rbx
 100effc:	58                   	pop    rax
 100effd:	5d                   	pop    rbp
 100effe:	48 cf                	iretq  

000000000100f000 <hal_interrupt_handler_4>:
 100f000:	55                   	push   rbp
 100f001:	48 89 e5             	mov    rbp,rsp
 100f004:	50                   	push   rax
 100f005:	53                   	push   rbx
 100f006:	51                   	push   rcx
 100f007:	52                   	push   rdx
 100f008:	55                   	push   rbp
 100f009:	57                   	push   rdi
 100f00a:	56                   	push   rsi
 100f00b:	41 50                	push   r8
 100f00d:	41 51                	push   r9
 100f00f:	41 52                	push   r10
 100f011:	41 53                	push   r11
 100f013:	41 54                	push   r12
 100f015:	41 55                	push   r13
 100f017:	41 56                	push   r14
 100f019:	41 57                	push   r15
 100f01b:	fc                   	cld    
 100f01c:	bf 04 00 00 00       	mov    edi,0x4
 100f021:	48 89 ee             	mov    rsi,rbp
 100f024:	48 83 c6 08          	add    rsi,0x8
 100f028:	ba 00 00 00 00       	mov    edx,0x0
 100f02d:	e8 68 e7 ff ff       	call   100d79a <hal_interrupt_dispatcher>
 100f032:	41 5f                	pop    r15
 100f034:	41 5e                	pop    r14
 100f036:	41 5d                	pop    r13
 100f038:	41 5c                	pop    r12
 100f03a:	41 5b                	pop    r11
 100f03c:	41 5a                	pop    r10
 100f03e:	41 59                	pop    r9
 100f040:	41 58                	pop    r8
 100f042:	5e                   	pop    rsi
 100f043:	5f                   	pop    rdi
 100f044:	5d                   	pop    rbp
 100f045:	5a                   	pop    rdx
 100f046:	59                   	pop    rcx
 100f047:	5b                   	pop    rbx
 100f048:	58                   	pop    rax
 100f049:	5d                   	pop    rbp
 100f04a:	48 cf                	iretq  

000000000100f04c <hal_interrupt_handler_5>:
 100f04c:	55                   	push   rbp
 100f04d:	48 89 e5             	mov    rbp,rsp
 100f050:	50                   	push   rax
 100f051:	53                   	push   rbx
 100f052:	51                   	push   rcx
 100f053:	52                   	push   rdx
 100f054:	55                   	push   rbp
 100f055:	57                   	push   rdi
 100f056:	56                   	push   rsi
 100f057:	41 50                	push   r8
 100f059:	41 51                	push   r9
 100f05b:	41 52                	push   r10
 100f05d:	41 53                	push   r11
 100f05f:	41 54                	push   r12
 100f061:	41 55                	push   r13
 100f063:	41 56                	push   r14
 100f065:	41 57                	push   r15
 100f067:	fc                   	cld    
 100f068:	bf 05 00 00 00       	mov    edi,0x5
 100f06d:	48 89 ee             	mov    rsi,rbp
 100f070:	48 83 c6 08          	add    rsi,0x8
 100f074:	ba 00 00 00 00       	mov    edx,0x0
 100f079:	e8 1c e7 ff ff       	call   100d79a <hal_interrupt_dispatcher>
 100f07e:	41 5f                	pop    r15
 100f080:	41 5e                	pop    r14
 100f082:	41 5d                	pop    r13
 100f084:	41 5c                	pop    r12
 100f086:	41 5b                	pop    r11
 100f088:	41 5a                	pop    r10
 100f08a:	41 59                	pop    r9
 100f08c:	41 58                	pop    r8
 100f08e:	5e                   	pop    rsi
 100f08f:	5f                   	pop    rdi
 100f090:	5d                   	pop    rbp
 100f091:	5a                   	pop    rdx
 100f092:	59                   	pop    rcx
 100f093:	5b                   	pop    rbx
 100f094:	58                   	pop    rax
 100f095:	5d                   	pop    rbp
 100f096:	48 cf                	iretq  

000000000100f098 <hal_interrupt_handler_6>:
 100f098:	55                   	push   rbp
 100f099:	48 89 e5             	mov    rbp,rsp
 100f09c:	50                   	push   rax
 100f09d:	53                   	push   rbx
 100f09e:	51                   	push   rcx
 100f09f:	52                   	push   rdx
 100f0a0:	55                   	push   rbp
 100f0a1:	57                   	push   rdi
 100f0a2:	56                   	push   rsi
 100f0a3:	41 50                	push   r8
 100f0a5:	41 51                	push   r9
 100f0a7:	41 52                	push   r10
 100f0a9:	41 53                	push   r11
 100f0ab:	41 54                	push   r12
 100f0ad:	41 55                	push   r13
 100f0af:	41 56                	push   r14
 100f0b1:	41 57                	push   r15
 100f0b3:	fc                   	cld    
 100f0b4:	bf 06 00 00 00       	mov    edi,0x6
 100f0b9:	48 89 ee             	mov    rsi,rbp
 100f0bc:	48 83 c6 08          	add    rsi,0x8
 100f0c0:	ba 00 00 00 00       	mov    edx,0x0
 100f0c5:	e8 d0 e6 ff ff       	call   100d79a <hal_interrupt_dispatcher>
 100f0ca:	41 5f                	pop    r15
 100f0cc:	41 5e                	pop    r14
 100f0ce:	41 5d                	pop    r13
 100f0d0:	41 5c                	pop    r12
 100f0d2:	41 5b                	pop    r11
 100f0d4:	41 5a                	pop    r10
 100f0d6:	41 59                	pop    r9
 100f0d8:	41 58                	pop    r8
 100f0da:	5e                   	pop    rsi
 100f0db:	5f                   	pop    rdi
 100f0dc:	5d                   	pop    rbp
 100f0dd:	5a                   	pop    rdx
 100f0de:	59                   	pop    rcx
 100f0df:	5b                   	pop    rbx
 100f0e0:	58                   	pop    rax
 100f0e1:	5d                   	pop    rbp
 100f0e2:	48 cf                	iretq  

000000000100f0e4 <hal_interrupt_handler_7>:
 100f0e4:	55                   	push   rbp
 100f0e5:	48 89 e5             	mov    rbp,rsp
 100f0e8:	50                   	push   rax
 100f0e9:	53                   	push   rbx
 100f0ea:	51                   	push   rcx
 100f0eb:	52                   	push   rdx
 100f0ec:	55                   	push   rbp
 100f0ed:	57                   	push   rdi
 100f0ee:	56                   	push   rsi
 100f0ef:	41 50                	push   r8
 100f0f1:	41 51                	push   r9
 100f0f3:	41 52                	push   r10
 100f0f5:	41 53                	push   r11
 100f0f7:	41 54                	push   r12
 100f0f9:	41 55                	push   r13
 100f0fb:	41 56                	push   r14
 100f0fd:	41 57                	push   r15
 100f0ff:	fc                   	cld    
 100f100:	bf 07 00 00 00       	mov    edi,0x7
 100f105:	48 89 ee             	mov    rsi,rbp
 100f108:	48 83 c6 08          	add    rsi,0x8
 100f10c:	ba 00 00 00 00       	mov    edx,0x0
 100f111:	e8 84 e6 ff ff       	call   100d79a <hal_interrupt_dispatcher>
 100f116:	41 5f                	pop    r15
 100f118:	41 5e                	pop    r14
 100f11a:	41 5d                	pop    r13
 100f11c:	41 5c                	pop    r12
 100f11e:	41 5b                	pop    r11
 100f120:	41 5a                	pop    r10
 100f122:	41 59                	pop    r9
 100f124:	41 58                	pop    r8
 100f126:	5e                   	pop    rsi
 100f127:	5f                   	pop    rdi
 100f128:	5d                   	pop    rbp
 100f129:	5a                   	pop    rdx
 100f12a:	59                   	pop    rcx
 100f12b:	5b                   	pop    rbx
 100f12c:	58                   	pop    rax
 100f12d:	5d                   	pop    rbp
 100f12e:	48 cf                	iretq  

000000000100f130 <hal_interrupt_handler_8>:
 100f130:	55                   	push   rbp
 100f131:	48 89 e5             	mov    rbp,rsp
 100f134:	50                   	push   rax
 100f135:	53                   	push   rbx
 100f136:	51                   	push   rcx
 100f137:	52                   	push   rdx
 100f138:	55                   	push   rbp
 100f139:	57                   	push   rdi
 100f13a:	56                   	push   rsi
 100f13b:	41 50                	push   r8
 100f13d:	41 51                	push   r9
 100f13f:	41 52                	push   r10
 100f141:	41 53                	push   r11
 100f143:	41 54                	push   r12
 100f145:	41 55                	push   r13
 100f147:	41 56                	push   r14
 100f149:	41 57                	push   r15
 100f14b:	fc                   	cld    
 100f14c:	bf 08 00 00 00       	mov    edi,0x8
 100f151:	48 89 ee             	mov    rsi,rbp
 100f154:	48 83 c6 10          	add    rsi,0x10
 100f158:	48 8b 55 08          	mov    rdx,QWORD PTR [rbp+0x8]
 100f15c:	e8 39 e6 ff ff       	call   100d79a <hal_interrupt_dispatcher>
 100f161:	41 5f                	pop    r15
 100f163:	41 5e                	pop    r14
 100f165:	41 5d                	pop    r13
 100f167:	41 5c                	pop    r12
 100f169:	41 5b                	pop    r11
 100f16b:	41 5a                	pop    r10
 100f16d:	41 59                	pop    r9
 100f16f:	41 58                	pop    r8
 100f171:	5e                   	pop    rsi
 100f172:	5f                   	pop    rdi
 100f173:	5d                   	pop    rbp
 100f174:	5a                   	pop    rdx
 100f175:	59                   	pop    rcx
 100f176:	5b                   	pop    rbx
 100f177:	58                   	pop    rax
 100f178:	5d                   	pop    rbp
 100f179:	48 83 c4 08          	add    rsp,0x8
 100f17d:	48 cf                	iretq  

000000000100f17f <hal_interrupt_handler_10>:
 100f17f:	55                   	push   rbp
 100f180:	48 89 e5             	mov    rbp,rsp
 100f183:	50                   	push   rax
 100f184:	53                   	push   rbx
 100f185:	51                   	push   rcx
 100f186:	52                   	push   rdx
 100f187:	55                   	push   rbp
 100f188:	57                   	push   rdi
 100f189:	56                   	push   rsi
 100f18a:	41 50                	push   r8
 100f18c:	41 51                	push   r9
 100f18e:	41 52                	push   r10
 100f190:	41 53                	push   r11
 100f192:	41 54                	push   r12
 100f194:	41 55                	push   r13
 100f196:	41 56                	push   r14
 100f198:	41 57                	push   r15
 100f19a:	fc                   	cld    
 100f19b:	bf 0a 00 00 00       	mov    edi,0xa
 100f1a0:	48 89 ee             	mov    rsi,rbp
 100f1a3:	48 83 c6 10          	add    rsi,0x10
 100f1a7:	48 8b 55 08          	mov    rdx,QWORD PTR [rbp+0x8]
 100f1ab:	e8 ea e5 ff ff       	call   100d79a <hal_interrupt_dispatcher>
 100f1b0:	41 5f                	pop    r15
 100f1b2:	41 5e                	pop    r14
 100f1b4:	41 5d                	pop    r13
 100f1b6:	41 5c                	pop    r12
 100f1b8:	41 5b                	pop    r11
 100f1ba:	41 5a                	pop    r10
 100f1bc:	41 59                	pop    r9
 100f1be:	41 58                	pop    r8
 100f1c0:	5e                   	pop    rsi
 100f1c1:	5f                   	pop    rdi
 100f1c2:	5d                   	pop    rbp
 100f1c3:	5a                   	pop    rdx
 100f1c4:	59                   	pop    rcx
 100f1c5:	5b                   	pop    rbx
 100f1c6:	58                   	pop    rax
 100f1c7:	5d                   	pop    rbp
 100f1c8:	48 83 c4 08          	add    rsp,0x8
 100f1cc:	48 cf                	iretq  

000000000100f1ce <hal_interrupt_handler_11>:
 100f1ce:	55                   	push   rbp
 100f1cf:	48 89 e5             	mov    rbp,rsp
 100f1d2:	50                   	push   rax
 100f1d3:	53                   	push   rbx
 100f1d4:	51                   	push   rcx
 100f1d5:	52                   	push   rdx
 100f1d6:	55                   	push   rbp
 100f1d7:	57                   	push   rdi
 100f1d8:	56                   	push   rsi
 100f1d9:	41 50                	push   r8
 100f1db:	41 51                	push   r9
 100f1dd:	41 52                	push   r10
 100f1df:	41 53                	push   r11
 100f1e1:	41 54                	push   r12
 100f1e3:	41 55                	push   r13
 100f1e5:	41 56                	push   r14
 100f1e7:	41 57                	push   r15
 100f1e9:	fc                   	cld    
 100f1ea:	bf 0b 00 00 00       	mov    edi,0xb
 100f1ef:	48 89 ee             	mov    rsi,rbp
 100f1f2:	48 83 c6 10          	add    rsi,0x10
 100f1f6:	48 8b 55 08          	mov    rdx,QWORD PTR [rbp+0x8]
 100f1fa:	e8 9b e5 ff ff       	call   100d79a <hal_interrupt_dispatcher>
 100f1ff:	41 5f                	pop    r15
 100f201:	41 5e                	pop    r14
 100f203:	41 5d                	pop    r13
 100f205:	41 5c                	pop    r12
 100f207:	41 5b                	pop    r11
 100f209:	41 5a                	pop    r10
 100f20b:	41 59                	pop    r9
 100f20d:	41 58                	pop    r8
 100f20f:	5e                   	pop    rsi
 100f210:	5f                   	pop    rdi
 100f211:	5d                   	pop    rbp
 100f212:	5a                   	pop    rdx
 100f213:	59                   	pop    rcx
 100f214:	5b                   	pop    rbx
 100f215:	58                   	pop    rax
 100f216:	5d                   	pop    rbp
 100f217:	48 83 c4 08          	add    rsp,0x8
 100f21b:	48 cf                	iretq  

000000000100f21d <hal_interrupt_handler_12>:
 100f21d:	55                   	push   rbp
 100f21e:	48 89 e5             	mov    rbp,rsp
 100f221:	50                   	push   rax
 100f222:	53                   	push   rbx
 100f223:	51                   	push   rcx
 100f224:	52                   	push   rdx
 100f225:	55                   	push   rbp
 100f226:	57                   	push   rdi
 100f227:	56                   	push   rsi
 100f228:	41 50                	push   r8
 100f22a:	41 51                	push   r9
 100f22c:	41 52                	push   r10
 100f22e:	41 53                	push   r11
 100f230:	41 54                	push   r12
 100f232:	41 55                	push   r13
 100f234:	41 56                	push   r14
 100f236:	41 57                	push   r15
 100f238:	fc                   	cld    
 100f239:	bf 0c 00 00 00       	mov    edi,0xc
 100f23e:	48 89 ee             	mov    rsi,rbp
 100f241:	48 83 c6 10          	add    rsi,0x10
 100f245:	48 8b 55 08          	mov    rdx,QWORD PTR [rbp+0x8]
 100f249:	e8 4c e5 ff ff       	call   100d79a <hal_interrupt_dispatcher>
 100f24e:	41 5f                	pop    r15
 100f250:	41 5e                	pop    r14
 100f252:	41 5d                	pop    r13
 100f254:	41 5c                	pop    r12
 100f256:	41 5b                	pop    r11
 100f258:	41 5a                	pop    r10
 100f25a:	41 59                	pop    r9
 100f25c:	41 58                	pop    r8
 100f25e:	5e                   	pop    rsi
 100f25f:	5f                   	pop    rdi
 100f260:	5d                   	pop    rbp
 100f261:	5a                   	pop    rdx
 100f262:	59                   	pop    rcx
 100f263:	5b                   	pop    rbx
 100f264:	58                   	pop    rax
 100f265:	5d                   	pop    rbp
 100f266:	48 83 c4 08          	add    rsp,0x8
 100f26a:	48 cf                	iretq  

000000000100f26c <hal_interrupt_handler_13>:
 100f26c:	55                   	push   rbp
 100f26d:	48 89 e5             	mov    rbp,rsp
 100f270:	50                   	push   rax
 100f271:	53                   	push   rbx
 100f272:	51                   	push   rcx
 100f273:	52                   	push   rdx
 100f274:	55                   	push   rbp
 100f275:	57                   	push   rdi
 100f276:	56                   	push   rsi
 100f277:	41 50                	push   r8
 100f279:	41 51                	push   r9
 100f27b:	41 52                	push   r10
 100f27d:	41 53                	push   r11
 100f27f:	41 54                	push   r12
 100f281:	41 55                	push   r13
 100f283:	41 56                	push   r14
 100f285:	41 57                	push   r15
 100f287:	fc                   	cld    
 100f288:	bf 0d 00 00 00       	mov    edi,0xd
 100f28d:	48 89 ee             	mov    rsi,rbp
 100f290:	48 83 c6 10          	add    rsi,0x10
 100f294:	48 8b 55 08          	mov    rdx,QWORD PTR [rbp+0x8]
 100f298:	e8 fd e4 ff ff       	call   100d79a <hal_interrupt_dispatcher>
 100f29d:	41 5f                	pop    r15
 100f29f:	41 5e                	pop    r14
 100f2a1:	41 5d                	pop    r13
 100f2a3:	41 5c                	pop    r12
 100f2a5:	41 5b                	pop    r11
 100f2a7:	41 5a                	pop    r10
 100f2a9:	41 59                	pop    r9
 100f2ab:	41 58                	pop    r8
 100f2ad:	5e                   	pop    rsi
 100f2ae:	5f                   	pop    rdi
 100f2af:	5d                   	pop    rbp
 100f2b0:	5a                   	pop    rdx
 100f2b1:	59                   	pop    rcx
 100f2b2:	5b                   	pop    rbx
 100f2b3:	58                   	pop    rax
 100f2b4:	5d                   	pop    rbp
 100f2b5:	48 83 c4 08          	add    rsp,0x8
 100f2b9:	48 cf                	iretq  

000000000100f2bb <hal_interrupt_handler_14>:
 100f2bb:	55                   	push   rbp
 100f2bc:	48 89 e5             	mov    rbp,rsp
 100f2bf:	50                   	push   rax
 100f2c0:	53                   	push   rbx
 100f2c1:	51                   	push   rcx
 100f2c2:	52                   	push   rdx
 100f2c3:	55                   	push   rbp
 100f2c4:	57                   	push   rdi
 100f2c5:	56                   	push   rsi
 100f2c6:	41 50                	push   r8
 100f2c8:	41 51                	push   r9
 100f2ca:	41 52                	push   r10
 100f2cc:	41 53                	push   r11
 100f2ce:	41 54                	push   r12
 100f2d0:	41 55                	push   r13
 100f2d2:	41 56                	push   r14
 100f2d4:	41 57                	push   r15
 100f2d6:	fc                   	cld    
 100f2d7:	bf 0e 00 00 00       	mov    edi,0xe
 100f2dc:	48 89 ee             	mov    rsi,rbp
 100f2df:	48 83 c6 10          	add    rsi,0x10
 100f2e3:	48 8b 55 08          	mov    rdx,QWORD PTR [rbp+0x8]
 100f2e7:	e8 ae e4 ff ff       	call   100d79a <hal_interrupt_dispatcher>
 100f2ec:	41 5f                	pop    r15
 100f2ee:	41 5e                	pop    r14
 100f2f0:	41 5d                	pop    r13
 100f2f2:	41 5c                	pop    r12
 100f2f4:	41 5b                	pop    r11
 100f2f6:	41 5a                	pop    r10
 100f2f8:	41 59                	pop    r9
 100f2fa:	41 58                	pop    r8
 100f2fc:	5e                   	pop    rsi
 100f2fd:	5f                   	pop    rdi
 100f2fe:	5d                   	pop    rbp
 100f2ff:	5a                   	pop    rdx
 100f300:	59                   	pop    rcx
 100f301:	5b                   	pop    rbx
 100f302:	58                   	pop    rax
 100f303:	5d                   	pop    rbp
 100f304:	48 83 c4 08          	add    rsp,0x8
 100f308:	48 cf                	iretq  

000000000100f30a <hal_interrupt_handler_16>:
 100f30a:	55                   	push   rbp
 100f30b:	48 89 e5             	mov    rbp,rsp
 100f30e:	50                   	push   rax
 100f30f:	53                   	push   rbx
 100f310:	51                   	push   rcx
 100f311:	52                   	push   rdx
 100f312:	55                   	push   rbp
 100f313:	57                   	push   rdi
 100f314:	56                   	push   rsi
 100f315:	41 50                	push   r8
 100f317:	41 51                	push   r9
 100f319:	41 52                	push   r10
 100f31b:	41 53                	push   r11
 100f31d:	41 54                	push   r12
 100f31f:	41 55                	push   r13
 100f321:	41 56                	push   r14
 100f323:	41 57                	push   r15
 100f325:	fc                   	cld    
 100f326:	bf 10 00 00 00       	mov    edi,0x10
 100f32b:	48 89 ee             	mov    rsi,rbp
 100f32e:	48 83 c6 08          	add    rsi,0x8
 100f332:	ba 00 00 00 00       	mov    edx,0x0
 100f337:	e8 5e e4 ff ff       	call   100d79a <hal_interrupt_dispatcher>
 100f33c:	41 5f                	pop    r15
 100f33e:	41 5e                	pop    r14
 100f340:	41 5d                	pop    r13
 100f342:	41 5c                	pop    r12
 100f344:	41 5b                	pop    r11
 100f346:	41 5a                	pop    r10
 100f348:	41 59                	pop    r9
 100f34a:	41 58                	pop    r8
 100f34c:	5e                   	pop    rsi
 100f34d:	5f                   	pop    rdi
 100f34e:	5d                   	pop    rbp
 100f34f:	5a                   	pop    rdx
 100f350:	59                   	pop    rcx
 100f351:	5b                   	pop    rbx
 100f352:	58                   	pop    rax
 100f353:	5d                   	pop    rbp
 100f354:	48 cf                	iretq  

000000000100f356 <hal_interrupt_handler_17>:
 100f356:	55                   	push   rbp
 100f357:	48 89 e5             	mov    rbp,rsp
 100f35a:	50                   	push   rax
 100f35b:	53                   	push   rbx
 100f35c:	51                   	push   rcx
 100f35d:	52                   	push   rdx
 100f35e:	55                   	push   rbp
 100f35f:	57                   	push   rdi
 100f360:	56                   	push   rsi
 100f361:	41 50                	push   r8
 100f363:	41 51                	push   r9
 100f365:	41 52                	push   r10
 100f367:	41 53                	push   r11
 100f369:	41 54                	push   r12
 100f36b:	41 55                	push   r13
 100f36d:	41 56                	push   r14
 100f36f:	41 57                	push   r15
 100f371:	fc                   	cld    
 100f372:	bf 11 00 00 00       	mov    edi,0x11
 100f377:	48 89 ee             	mov    rsi,rbp
 100f37a:	48 83 c6 10          	add    rsi,0x10
 100f37e:	48 8b 55 08          	mov    rdx,QWORD PTR [rbp+0x8]
 100f382:	e8 13 e4 ff ff       	call   100d79a <hal_interrupt_dispatcher>
 100f387:	41 5f                	pop    r15
 100f389:	41 5e                	pop    r14
 100f38b:	41 5d                	pop    r13
 100f38d:	41 5c                	pop    r12
 100f38f:	41 5b                	pop    r11
 100f391:	41 5a                	pop    r10
 100f393:	41 59                	pop    r9
 100f395:	41 58                	pop    r8
 100f397:	5e                   	pop    rsi
 100f398:	5f                   	pop    rdi
 100f399:	5d                   	pop    rbp
 100f39a:	5a                   	pop    rdx
 100f39b:	59                   	pop    rcx
 100f39c:	5b                   	pop    rbx
 100f39d:	58                   	pop    rax
 100f39e:	5d                   	pop    rbp
 100f39f:	48 83 c4 08          	add    rsp,0x8
 100f3a3:	48 cf                	iretq  

000000000100f3a5 <hal_interrupt_handler_18>:
 100f3a5:	55                   	push   rbp
 100f3a6:	48 89 e5             	mov    rbp,rsp
 100f3a9:	50                   	push   rax
 100f3aa:	53                   	push   rbx
 100f3ab:	51                   	push   rcx
 100f3ac:	52                   	push   rdx
 100f3ad:	55                   	push   rbp
 100f3ae:	57                   	push   rdi
 100f3af:	56                   	push   rsi
 100f3b0:	41 50                	push   r8
 100f3b2:	41 51                	push   r9
 100f3b4:	41 52                	push   r10
 100f3b6:	41 53                	push   r11
 100f3b8:	41 54                	push   r12
 100f3ba:	41 55                	push   r13
 100f3bc:	41 56                	push   r14
 100f3be:	41 57                	push   r15
 100f3c0:	fc                   	cld    
 100f3c1:	bf 12 00 00 00       	mov    edi,0x12
 100f3c6:	48 89 ee             	mov    rsi,rbp
 100f3c9:	48 83 c6 08          	add    rsi,0x8
 100f3cd:	ba 00 00 00 00       	mov    edx,0x0
 100f3d2:	e8 c3 e3 ff ff       	call   100d79a <hal_interrupt_dispatcher>
 100f3d7:	41 5f                	pop    r15
 100f3d9:	41 5e                	pop    r14
 100f3db:	41 5d                	pop    r13
 100f3dd:	41 5c                	pop    r12
 100f3df:	41 5b                	pop    r11
 100f3e1:	41 5a                	pop    r10
 100f3e3:	41 59                	pop    r9
 100f3e5:	41 58                	pop    r8
 100f3e7:	5e                   	pop    rsi
 100f3e8:	5f                   	pop    rdi
 100f3e9:	5d                   	pop    rbp
 100f3ea:	5a                   	pop    rdx
 100f3eb:	59                   	pop    rcx
 100f3ec:	5b                   	pop    rbx
 100f3ed:	58                   	pop    rax
 100f3ee:	5d                   	pop    rbp
 100f3ef:	48 cf                	iretq  

000000000100f3f1 <hal_interrupt_handler_19>:
 100f3f1:	55                   	push   rbp
 100f3f2:	48 89 e5             	mov    rbp,rsp
 100f3f5:	50                   	push   rax
 100f3f6:	53                   	push   rbx
 100f3f7:	51                   	push   rcx
 100f3f8:	52                   	push   rdx
 100f3f9:	55                   	push   rbp
 100f3fa:	57                   	push   rdi
 100f3fb:	56                   	push   rsi
 100f3fc:	41 50                	push   r8
 100f3fe:	41 51                	push   r9
 100f400:	41 52                	push   r10
 100f402:	41 53                	push   r11
 100f404:	41 54                	push   r12
 100f406:	41 55                	push   r13
 100f408:	41 56                	push   r14
 100f40a:	41 57                	push   r15
 100f40c:	fc                   	cld    
 100f40d:	bf 13 00 00 00       	mov    edi,0x13
 100f412:	48 89 ee             	mov    rsi,rbp
 100f415:	48 83 c6 08          	add    rsi,0x8
 100f419:	ba 00 00 00 00       	mov    edx,0x0
 100f41e:	e8 77 e3 ff ff       	call   100d79a <hal_interrupt_dispatcher>
 100f423:	41 5f                	pop    r15
 100f425:	41 5e                	pop    r14
 100f427:	41 5d                	pop    r13
 100f429:	41 5c                	pop    r12
 100f42b:	41 5b                	pop    r11
 100f42d:	41 5a                	pop    r10
 100f42f:	41 59                	pop    r9
 100f431:	41 58                	pop    r8
 100f433:	5e                   	pop    rsi
 100f434:	5f                   	pop    rdi
 100f435:	5d                   	pop    rbp
 100f436:	5a                   	pop    rdx
 100f437:	59                   	pop    rcx
 100f438:	5b                   	pop    rbx
 100f439:	58                   	pop    rax
 100f43a:	5d                   	pop    rbp
 100f43b:	48 cf                	iretq  

000000000100f43d <hal_interrupt_handler_20>:
 100f43d:	55                   	push   rbp
 100f43e:	48 89 e5             	mov    rbp,rsp
 100f441:	50                   	push   rax
 100f442:	53                   	push   rbx
 100f443:	51                   	push   rcx
 100f444:	52                   	push   rdx
 100f445:	55                   	push   rbp
 100f446:	57                   	push   rdi
 100f447:	56                   	push   rsi
 100f448:	41 50                	push   r8
 100f44a:	41 51                	push   r9
 100f44c:	41 52                	push   r10
 100f44e:	41 53                	push   r11
 100f450:	41 54                	push   r12
 100f452:	41 55                	push   r13
 100f454:	41 56                	push   r14
 100f456:	41 57                	push   r15
 100f458:	fc                   	cld    
 100f459:	bf 14 00 00 00       	mov    edi,0x14
 100f45e:	48 89 ee             	mov    rsi,rbp
 100f461:	48 83 c6 08          	add    rsi,0x8
 100f465:	ba 00 00 00 00       	mov    edx,0x0
 100f46a:	e8 2b e3 ff ff       	call   100d79a <hal_interrupt_dispatcher>
 100f46f:	41 5f                	pop    r15
 100f471:	41 5e                	pop    r14
 100f473:	41 5d                	pop    r13
 100f475:	41 5c                	pop    r12
 100f477:	41 5b                	pop    r11
 100f479:	41 5a                	pop    r10
 100f47b:	41 59                	pop    r9
 100f47d:	41 58                	pop    r8
 100f47f:	5e                   	pop    rsi
 100f480:	5f                   	pop    rdi
 100f481:	5d                   	pop    rbp
 100f482:	5a                   	pop    rdx
 100f483:	59                   	pop    rcx
 100f484:	5b                   	pop    rbx
 100f485:	58                   	pop    rax
 100f486:	5d                   	pop    rbp
 100f487:	48 cf                	iretq  

000000000100f489 <hal_interrupt_handler_32>:
 100f489:	55                   	push   rbp
 100f48a:	48 89 e5             	mov    rbp,rsp
 100f48d:	50                   	push   rax
 100f48e:	53                   	push   rbx
 100f48f:	51                   	push   rcx
 100f490:	52                   	push   rdx
 100f491:	55                   	push   rbp
 100f492:	57                   	push   rdi
 100f493:	56                   	push   rsi
 100f494:	41 50                	push   r8
 100f496:	41 51                	push   r9
 100f498:	41 52                	push   r10
 100f49a:	41 53                	push   r11
 100f49c:	41 54                	push   r12
 100f49e:	41 55                	push   r13
 100f4a0:	41 56                	push   r14
 100f4a2:	41 57                	push   r15
 100f4a4:	fc                   	cld    
 100f4a5:	bf 20 00 00 00       	mov    edi,0x20
 100f4aa:	48 89 ee             	mov    rsi,rbp
 100f4ad:	48 83 c6 08          	add    rsi,0x8
 100f4b1:	ba 00 00 00 00       	mov    edx,0x0
 100f4b6:	e8 df e2 ff ff       	call   100d79a <hal_interrupt_dispatcher>
 100f4bb:	41 5f                	pop    r15
 100f4bd:	41 5e                	pop    r14
 100f4bf:	41 5d                	pop    r13
 100f4c1:	41 5c                	pop    r12
 100f4c3:	41 5b                	pop    r11
 100f4c5:	41 5a                	pop    r10
 100f4c7:	41 59                	pop    r9
 100f4c9:	41 58                	pop    r8
 100f4cb:	5e                   	pop    rsi
 100f4cc:	5f                   	pop    rdi
 100f4cd:	5d                   	pop    rbp
 100f4ce:	5a                   	pop    rdx
 100f4cf:	59                   	pop    rcx
 100f4d0:	5b                   	pop    rbx
 100f4d1:	58                   	pop    rax
 100f4d2:	5d                   	pop    rbp
 100f4d3:	48 cf                	iretq  

000000000100f4d5 <hal_interrupt_handler_33>:
 100f4d5:	55                   	push   rbp
 100f4d6:	48 89 e5             	mov    rbp,rsp
 100f4d9:	50                   	push   rax
 100f4da:	53                   	push   rbx
 100f4db:	51                   	push   rcx
 100f4dc:	52                   	push   rdx
 100f4dd:	55                   	push   rbp
 100f4de:	57                   	push   rdi
 100f4df:	56                   	push   rsi
 100f4e0:	41 50                	push   r8
 100f4e2:	41 51                	push   r9
 100f4e4:	41 52                	push   r10
 100f4e6:	41 53                	push   r11
 100f4e8:	41 54                	push   r12
 100f4ea:	41 55                	push   r13
 100f4ec:	41 56                	push   r14
 100f4ee:	41 57                	push   r15
 100f4f0:	fc                   	cld    
 100f4f1:	bf 21 00 00 00       	mov    edi,0x21
 100f4f6:	48 89 ee             	mov    rsi,rbp
 100f4f9:	48 83 c6 08          	add    rsi,0x8
 100f4fd:	ba 00 00 00 00       	mov    edx,0x0
 100f502:	e8 93 e2 ff ff       	call   100d79a <hal_interrupt_dispatcher>
 100f507:	41 5f                	pop    r15
 100f509:	41 5e                	pop    r14
 100f50b:	41 5d                	pop    r13
 100f50d:	41 5c                	pop    r12
 100f50f:	41 5b                	pop    r11
 100f511:	41 5a                	pop    r10
 100f513:	41 59                	pop    r9
 100f515:	41 58                	pop    r8
 100f517:	5e                   	pop    rsi
 100f518:	5f                   	pop    rdi
 100f519:	5d                   	pop    rbp
 100f51a:	5a                   	pop    rdx
 100f51b:	59                   	pop    rcx
 100f51c:	5b                   	pop    rbx
 100f51d:	58                   	pop    rax
 100f51e:	5d                   	pop    rbp
 100f51f:	48 cf                	iretq  

000000000100f521 <hal_interrupt_handler_34>:
 100f521:	55                   	push   rbp
 100f522:	48 89 e5             	mov    rbp,rsp
 100f525:	50                   	push   rax
 100f526:	53                   	push   rbx
 100f527:	51                   	push   rcx
 100f528:	52                   	push   rdx
 100f529:	55                   	push   rbp
 100f52a:	57                   	push   rdi
 100f52b:	56                   	push   rsi
 100f52c:	41 50                	push   r8
 100f52e:	41 51                	push   r9
 100f530:	41 52                	push   r10
 100f532:	41 53                	push   r11
 100f534:	41 54                	push   r12
 100f536:	41 55                	push   r13
 100f538:	41 56                	push   r14
 100f53a:	41 57                	push   r15
 100f53c:	fc                   	cld    
 100f53d:	bf 22 00 00 00       	mov    edi,0x22
 100f542:	48 89 ee             	mov    rsi,rbp
 100f545:	48 83 c6 08          	add    rsi,0x8
 100f549:	ba 00 00 00 00       	mov    edx,0x0
 100f54e:	e8 47 e2 ff ff       	call   100d79a <hal_interrupt_dispatcher>
 100f553:	41 5f                	pop    r15
 100f555:	41 5e                	pop    r14
 100f557:	41 5d                	pop    r13
 100f559:	41 5c                	pop    r12
 100f55b:	41 5b                	pop    r11
 100f55d:	41 5a                	pop    r10
 100f55f:	41 59                	pop    r9
 100f561:	41 58                	pop    r8
 100f563:	5e                   	pop    rsi
 100f564:	5f                   	pop    rdi
 100f565:	5d                   	pop    rbp
 100f566:	5a                   	pop    rdx
 100f567:	59                   	pop    rcx
 100f568:	5b                   	pop    rbx
 100f569:	58                   	pop    rax
 100f56a:	5d                   	pop    rbp
 100f56b:	48 cf                	iretq  

000000000100f56d <hal_interrupt_handler_35>:
 100f56d:	55                   	push   rbp
 100f56e:	48 89 e5             	mov    rbp,rsp
 100f571:	50                   	push   rax
 100f572:	53                   	push   rbx
 100f573:	51                   	push   rcx
 100f574:	52                   	push   rdx
 100f575:	55                   	push   rbp
 100f576:	57                   	push   rdi
 100f577:	56                   	push   rsi
 100f578:	41 50                	push   r8
 100f57a:	41 51                	push   r9
 100f57c:	41 52                	push   r10
 100f57e:	41 53                	push   r11
 100f580:	41 54                	push   r12
 100f582:	41 55                	push   r13
 100f584:	41 56                	push   r14
 100f586:	41 57                	push   r15
 100f588:	fc                   	cld    
 100f589:	bf 23 00 00 00       	mov    edi,0x23
 100f58e:	48 89 ee             	mov    rsi,rbp
 100f591:	48 83 c6 08          	add    rsi,0x8
 100f595:	ba 00 00 00 00       	mov    edx,0x0
 100f59a:	e8 fb e1 ff ff       	call   100d79a <hal_interrupt_dispatcher>
 100f59f:	41 5f                	pop    r15
 100f5a1:	41 5e                	pop    r14
 100f5a3:	41 5d                	pop    r13
 100f5a5:	41 5c                	pop    r12
 100f5a7:	41 5b                	pop    r11
 100f5a9:	41 5a                	pop    r10
 100f5ab:	41 59                	pop    r9
 100f5ad:	41 58                	pop    r8
 100f5af:	5e                   	pop    rsi
 100f5b0:	5f                   	pop    rdi
 100f5b1:	5d                   	pop    rbp
 100f5b2:	5a                   	pop    rdx
 100f5b3:	59                   	pop    rcx
 100f5b4:	5b                   	pop    rbx
 100f5b5:	58                   	pop    rax
 100f5b6:	5d                   	pop    rbp
 100f5b7:	48 cf                	iretq  

000000000100f5b9 <hal_interrupt_handler_36>:
 100f5b9:	55                   	push   rbp
 100f5ba:	48 89 e5             	mov    rbp,rsp
 100f5bd:	50                   	push   rax
 100f5be:	53                   	push   rbx
 100f5bf:	51                   	push   rcx
 100f5c0:	52                   	push   rdx
 100f5c1:	55                   	push   rbp
 100f5c2:	57                   	push   rdi
 100f5c3:	56                   	push   rsi
 100f5c4:	41 50                	push   r8
 100f5c6:	41 51                	push   r9
 100f5c8:	41 52                	push   r10
 100f5ca:	41 53                	push   r11
 100f5cc:	41 54                	push   r12
 100f5ce:	41 55                	push   r13
 100f5d0:	41 56                	push   r14
 100f5d2:	41 57                	push   r15
 100f5d4:	fc                   	cld    
 100f5d5:	bf 24 00 00 00       	mov    edi,0x24
 100f5da:	48 89 ee             	mov    rsi,rbp
 100f5dd:	48 83 c6 08          	add    rsi,0x8
 100f5e1:	ba 00 00 00 00       	mov    edx,0x0
 100f5e6:	e8 af e1 ff ff       	call   100d79a <hal_interrupt_dispatcher>
 100f5eb:	41 5f                	pop    r15
 100f5ed:	41 5e                	pop    r14
 100f5ef:	41 5d                	pop    r13
 100f5f1:	41 5c                	pop    r12
 100f5f3:	41 5b                	pop    r11
 100f5f5:	41 5a                	pop    r10
 100f5f7:	41 59                	pop    r9
 100f5f9:	41 58                	pop    r8
 100f5fb:	5e                   	pop    rsi
 100f5fc:	5f                   	pop    rdi
 100f5fd:	5d                   	pop    rbp
 100f5fe:	5a                   	pop    rdx
 100f5ff:	59                   	pop    rcx
 100f600:	5b                   	pop    rbx
 100f601:	58                   	pop    rax
 100f602:	5d                   	pop    rbp
 100f603:	48 cf                	iretq  

000000000100f605 <hal_interrupt_handler_37>:
 100f605:	55                   	push   rbp
 100f606:	48 89 e5             	mov    rbp,rsp
 100f609:	50                   	push   rax
 100f60a:	53                   	push   rbx
 100f60b:	51                   	push   rcx
 100f60c:	52                   	push   rdx
 100f60d:	55                   	push   rbp
 100f60e:	57                   	push   rdi
 100f60f:	56                   	push   rsi
 100f610:	41 50                	push   r8
 100f612:	41 51                	push   r9
 100f614:	41 52                	push   r10
 100f616:	41 53                	push   r11
 100f618:	41 54                	push   r12
 100f61a:	41 55                	push   r13
 100f61c:	41 56                	push   r14
 100f61e:	41 57                	push   r15
 100f620:	fc                   	cld    
 100f621:	bf 25 00 00 00       	mov    edi,0x25
 100f626:	48 89 ee             	mov    rsi,rbp
 100f629:	48 83 c6 08          	add    rsi,0x8
 100f62d:	ba 00 00 00 00       	mov    edx,0x0
 100f632:	e8 63 e1 ff ff       	call   100d79a <hal_interrupt_dispatcher>
 100f637:	41 5f                	pop    r15
 100f639:	41 5e                	pop    r14
 100f63b:	41 5d                	pop    r13
 100f63d:	41 5c                	pop    r12
 100f63f:	41 5b                	pop    r11
 100f641:	41 5a                	pop    r10
 100f643:	41 59                	pop    r9
 100f645:	41 58                	pop    r8
 100f647:	5e                   	pop    rsi
 100f648:	5f                   	pop    rdi
 100f649:	5d                   	pop    rbp
 100f64a:	5a                   	pop    rdx
 100f64b:	59                   	pop    rcx
 100f64c:	5b                   	pop    rbx
 100f64d:	58                   	pop    rax
 100f64e:	5d                   	pop    rbp
 100f64f:	48 cf                	iretq  

000000000100f651 <hal_interrupt_handler_38>:
 100f651:	55                   	push   rbp
 100f652:	48 89 e5             	mov    rbp,rsp
 100f655:	50                   	push   rax
 100f656:	53                   	push   rbx
 100f657:	51                   	push   rcx
 100f658:	52                   	push   rdx
 100f659:	55                   	push   rbp
 100f65a:	57                   	push   rdi
 100f65b:	56                   	push   rsi
 100f65c:	41 50                	push   r8
 100f65e:	41 51                	push   r9
 100f660:	41 52                	push   r10
 100f662:	41 53                	push   r11
 100f664:	41 54                	push   r12
 100f666:	41 55                	push   r13
 100f668:	41 56                	push   r14
 100f66a:	41 57                	push   r15
 100f66c:	fc                   	cld    
 100f66d:	bf 26 00 00 00       	mov    edi,0x26
 100f672:	48 89 ee             	mov    rsi,rbp
 100f675:	48 83 c6 08          	add    rsi,0x8
 100f679:	ba 00 00 00 00       	mov    edx,0x0
 100f67e:	e8 17 e1 ff ff       	call   100d79a <hal_interrupt_dispatcher>
 100f683:	41 5f                	pop    r15
 100f685:	41 5e                	pop    r14
 100f687:	41 5d                	pop    r13
 100f689:	41 5c                	pop    r12
 100f68b:	41 5b                	pop    r11
 100f68d:	41 5a                	pop    r10
 100f68f:	41 59                	pop    r9
 100f691:	41 58                	pop    r8
 100f693:	5e                   	pop    rsi
 100f694:	5f                   	pop    rdi
 100f695:	5d                   	pop    rbp
 100f696:	5a                   	pop    rdx
 100f697:	59                   	pop    rcx
 100f698:	5b                   	pop    rbx
 100f699:	58                   	pop    rax
 100f69a:	5d                   	pop    rbp
 100f69b:	48 cf                	iretq  

000000000100f69d <hal_interrupt_handler_39>:
 100f69d:	55                   	push   rbp
 100f69e:	48 89 e5             	mov    rbp,rsp
 100f6a1:	50                   	push   rax
 100f6a2:	53                   	push   rbx
 100f6a3:	51                   	push   rcx
 100f6a4:	52                   	push   rdx
 100f6a5:	55                   	push   rbp
 100f6a6:	57                   	push   rdi
 100f6a7:	56                   	push   rsi
 100f6a8:	41 50                	push   r8
 100f6aa:	41 51                	push   r9
 100f6ac:	41 52                	push   r10
 100f6ae:	41 53                	push   r11
 100f6b0:	41 54                	push   r12
 100f6b2:	41 55                	push   r13
 100f6b4:	41 56                	push   r14
 100f6b6:	41 57                	push   r15
 100f6b8:	fc                   	cld    
 100f6b9:	bf 27 00 00 00       	mov    edi,0x27
 100f6be:	48 89 ee             	mov    rsi,rbp
 100f6c1:	48 83 c6 08          	add    rsi,0x8
 100f6c5:	ba 00 00 00 00       	mov    edx,0x0
 100f6ca:	e8 cb e0 ff ff       	call   100d79a <hal_interrupt_dispatcher>
 100f6cf:	41 5f                	pop    r15
 100f6d1:	41 5e                	pop    r14
 100f6d3:	41 5d                	pop    r13
 100f6d5:	41 5c                	pop    r12
 100f6d7:	41 5b                	pop    r11
 100f6d9:	41 5a                	pop    r10
 100f6db:	41 59                	pop    r9
 100f6dd:	41 58                	pop    r8
 100f6df:	5e                   	pop    rsi
 100f6e0:	5f                   	pop    rdi
 100f6e1:	5d                   	pop    rbp
 100f6e2:	5a                   	pop    rdx
 100f6e3:	59                   	pop    rcx
 100f6e4:	5b                   	pop    rbx
 100f6e5:	58                   	pop    rax
 100f6e6:	5d                   	pop    rbp
 100f6e7:	48 cf                	iretq  
 100f6e9:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f6f0:	00 00 00 
 100f6f3:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f6fa:	00 00 00 
 100f6fd:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f704:	00 00 00 
 100f707:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f70e:	00 00 00 
 100f711:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f718:	00 00 00 
 100f71b:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f722:	00 00 00 
 100f725:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f72c:	00 00 00 
 100f72f:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f736:	00 00 00 
 100f739:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f740:	00 00 00 
 100f743:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f74a:	00 00 00 
 100f74d:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f754:	00 00 00 
 100f757:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f75e:	00 00 00 
 100f761:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f768:	00 00 00 
 100f76b:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f772:	00 00 00 
 100f775:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f77c:	00 00 00 
 100f77f:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f786:	00 00 00 
 100f789:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f790:	00 00 00 
 100f793:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f79a:	00 00 00 
 100f79d:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f7a4:	00 00 00 
 100f7a7:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f7ae:	00 00 00 
 100f7b1:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f7b8:	00 00 00 
 100f7bb:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f7c2:	00 00 00 
 100f7c5:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f7cc:	00 00 00 
 100f7cf:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f7d6:	00 00 00 
 100f7d9:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f7e0:	00 00 00 
 100f7e3:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f7ea:	00 00 00 
 100f7ed:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f7f4:	00 00 00 
 100f7f7:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f7fe:	00 00 00 
 100f801:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f808:	00 00 00 
 100f80b:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f812:	00 00 00 
 100f815:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f81c:	00 00 00 
 100f81f:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f826:	00 00 00 
 100f829:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f830:	00 00 00 
 100f833:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f83a:	00 00 00 
 100f83d:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f844:	00 00 00 
 100f847:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f84e:	00 00 00 
 100f851:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f858:	00 00 00 
 100f85b:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f862:	00 00 00 
 100f865:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f86c:	00 00 00 
 100f86f:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f876:	00 00 00 
 100f879:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f880:	00 00 00 
 100f883:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f88a:	00 00 00 
 100f88d:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f894:	00 00 00 
 100f897:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f89e:	00 00 00 
 100f8a1:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f8a8:	00 00 00 
 100f8ab:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f8b2:	00 00 00 
 100f8b5:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f8bc:	00 00 00 
 100f8bf:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f8c6:	00 00 00 
 100f8c9:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f8d0:	00 00 00 
 100f8d3:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f8da:	00 00 00 
 100f8dd:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f8e4:	00 00 00 
 100f8e7:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f8ee:	00 00 00 
 100f8f1:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f8f8:	00 00 00 
 100f8fb:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f902:	00 00 00 
 100f905:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f90c:	00 00 00 
 100f90f:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f916:	00 00 00 
 100f919:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f920:	00 00 00 
 100f923:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f92a:	00 00 00 
 100f92d:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f934:	00 00 00 
 100f937:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f93e:	00 00 00 
 100f941:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f948:	00 00 00 
 100f94b:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f952:	00 00 00 
 100f955:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f95c:	00 00 00 
 100f95f:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f966:	00 00 00 
 100f969:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f970:	00 00 00 
 100f973:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f97a:	00 00 00 
 100f97d:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f984:	00 00 00 
 100f987:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f98e:	00 00 00 
 100f991:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f998:	00 00 00 
 100f99b:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f9a2:	00 00 00 
 100f9a5:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f9ac:	00 00 00 
 100f9af:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f9b6:	00 00 00 
 100f9b9:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f9c0:	00 00 00 
 100f9c3:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f9ca:	00 00 00 
 100f9cd:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f9d4:	00 00 00 
 100f9d7:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f9de:	00 00 00 
 100f9e1:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f9e8:	00 00 00 
 100f9eb:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f9f2:	00 00 00 
 100f9f5:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100f9fc:	00 00 00 
 100f9ff:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fa06:	00 00 00 
 100fa09:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fa10:	00 00 00 
 100fa13:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fa1a:	00 00 00 
 100fa1d:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fa24:	00 00 00 
 100fa27:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fa2e:	00 00 00 
 100fa31:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fa38:	00 00 00 
 100fa3b:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fa42:	00 00 00 
 100fa45:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fa4c:	00 00 00 
 100fa4f:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fa56:	00 00 00 
 100fa59:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fa60:	00 00 00 
 100fa63:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fa6a:	00 00 00 
 100fa6d:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fa74:	00 00 00 
 100fa77:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fa7e:	00 00 00 
 100fa81:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fa88:	00 00 00 
 100fa8b:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fa92:	00 00 00 
 100fa95:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fa9c:	00 00 00 
 100fa9f:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100faa6:	00 00 00 
 100faa9:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fab0:	00 00 00 
 100fab3:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100faba:	00 00 00 
 100fabd:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fac4:	00 00 00 
 100fac7:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100face:	00 00 00 
 100fad1:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fad8:	00 00 00 
 100fadb:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fae2:	00 00 00 
 100fae5:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100faec:	00 00 00 
 100faef:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100faf6:	00 00 00 
 100faf9:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fb00:	00 00 00 
 100fb03:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fb0a:	00 00 00 
 100fb0d:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fb14:	00 00 00 
 100fb17:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fb1e:	00 00 00 
 100fb21:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fb28:	00 00 00 
 100fb2b:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fb32:	00 00 00 
 100fb35:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fb3c:	00 00 00 
 100fb3f:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fb46:	00 00 00 
 100fb49:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fb50:	00 00 00 
 100fb53:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fb5a:	00 00 00 
 100fb5d:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fb64:	00 00 00 
 100fb67:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fb6e:	00 00 00 
 100fb71:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fb78:	00 00 00 
 100fb7b:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fb82:	00 00 00 
 100fb85:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fb8c:	00 00 00 
 100fb8f:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fb96:	00 00 00 
 100fb99:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fba0:	00 00 00 
 100fba3:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fbaa:	00 00 00 
 100fbad:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fbb4:	00 00 00 
 100fbb7:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fbbe:	00 00 00 
 100fbc1:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fbc8:	00 00 00 
 100fbcb:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fbd2:	00 00 00 
 100fbd5:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fbdc:	00 00 00 
 100fbdf:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fbe6:	00 00 00 
 100fbe9:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fbf0:	00 00 00 
 100fbf3:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fbfa:	00 00 00 
 100fbfd:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fc04:	00 00 00 
 100fc07:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fc0e:	00 00 00 
 100fc11:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fc18:	00 00 00 
 100fc1b:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fc22:	00 00 00 
 100fc25:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fc2c:	00 00 00 
 100fc2f:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fc36:	00 00 00 
 100fc39:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fc40:	00 00 00 
 100fc43:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fc4a:	00 00 00 
 100fc4d:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fc54:	00 00 00 
 100fc57:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fc5e:	00 00 00 
 100fc61:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fc68:	00 00 00 
 100fc6b:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fc72:	00 00 00 
 100fc75:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fc7c:	00 00 00 
 100fc7f:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fc86:	00 00 00 
 100fc89:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fc90:	00 00 00 
 100fc93:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fc9a:	00 00 00 
 100fc9d:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fca4:	00 00 00 
 100fca7:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fcae:	00 00 00 
 100fcb1:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fcb8:	00 00 00 
 100fcbb:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fcc2:	00 00 00 
 100fcc5:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fccc:	00 00 00 
 100fccf:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fcd6:	00 00 00 
 100fcd9:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fce0:	00 00 00 
 100fce3:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fcea:	00 00 00 
 100fced:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fcf4:	00 00 00 
 100fcf7:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fcfe:	00 00 00 
 100fd01:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fd08:	00 00 00 
 100fd0b:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fd12:	00 00 00 
 100fd15:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fd1c:	00 00 00 
 100fd1f:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fd26:	00 00 00 
 100fd29:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fd30:	00 00 00 
 100fd33:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fd3a:	00 00 00 
 100fd3d:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fd44:	00 00 00 
 100fd47:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fd4e:	00 00 00 
 100fd51:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fd58:	00 00 00 
 100fd5b:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fd62:	00 00 00 
 100fd65:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fd6c:	00 00 00 
 100fd6f:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fd76:	00 00 00 
 100fd79:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fd80:	00 00 00 
 100fd83:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fd8a:	00 00 00 
 100fd8d:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fd94:	00 00 00 
 100fd97:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fd9e:	00 00 00 
 100fda1:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fda8:	00 00 00 
 100fdab:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fdb2:	00 00 00 
 100fdb5:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fdbc:	00 00 00 
 100fdbf:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fdc6:	00 00 00 
 100fdc9:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fdd0:	00 00 00 
 100fdd3:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fdda:	00 00 00 
 100fddd:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fde4:	00 00 00 
 100fde7:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fdee:	00 00 00 
 100fdf1:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fdf8:	00 00 00 
 100fdfb:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fe02:	00 00 00 
 100fe05:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fe0c:	00 00 00 
 100fe0f:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fe16:	00 00 00 
 100fe19:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fe20:	00 00 00 
 100fe23:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fe2a:	00 00 00 
 100fe2d:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fe34:	00 00 00 
 100fe37:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fe3e:	00 00 00 
 100fe41:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fe48:	00 00 00 
 100fe4b:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fe52:	00 00 00 
 100fe55:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fe5c:	00 00 00 
 100fe5f:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fe66:	00 00 00 
 100fe69:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fe70:	00 00 00 
 100fe73:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fe7a:	00 00 00 
 100fe7d:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fe84:	00 00 00 
 100fe87:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fe8e:	00 00 00 
 100fe91:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fe98:	00 00 00 
 100fe9b:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fea2:	00 00 00 
 100fea5:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100feac:	00 00 00 
 100feaf:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100feb6:	00 00 00 
 100feb9:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fec0:	00 00 00 
 100fec3:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100feca:	00 00 00 
 100fecd:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fed4:	00 00 00 
 100fed7:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fede:	00 00 00 
 100fee1:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fee8:	00 00 00 
 100feeb:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fef2:	00 00 00 
 100fef5:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fefc:	00 00 00 
 100feff:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100ff06:	00 00 00 
 100ff09:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100ff10:	00 00 00 
 100ff13:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100ff1a:	00 00 00 
 100ff1d:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100ff24:	00 00 00 
 100ff27:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100ff2e:	00 00 00 
 100ff31:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100ff38:	00 00 00 
 100ff3b:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100ff42:	00 00 00 
 100ff45:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100ff4c:	00 00 00 
 100ff4f:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100ff56:	00 00 00 
 100ff59:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100ff60:	00 00 00 
 100ff63:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100ff6a:	00 00 00 
 100ff6d:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100ff74:	00 00 00 
 100ff77:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100ff7e:	00 00 00 
 100ff81:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100ff88:	00 00 00 
 100ff8b:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100ff92:	00 00 00 
 100ff95:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100ff9c:	00 00 00 
 100ff9f:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100ffa6:	00 00 00 
 100ffa9:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100ffb0:	00 00 00 
 100ffb3:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100ffba:	00 00 00 
 100ffbd:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100ffc4:	00 00 00 
 100ffc7:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100ffce:	00 00 00 
 100ffd1:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100ffd8:	00 00 00 
 100ffdb:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100ffe2:	00 00 00 
 100ffe5:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100ffec:	00 00 00 
 100ffef:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 100fff6:	00 00 00 
 100fff9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000001010000 <entry>:
 1010000:	fa                   	cli    
 1010001:	66 b8 10 00          	mov    ax,0x10
 1010005:	8e d8                	mov    ds,eax
 1010007:	8e c0                	mov    es,eax
 1010009:	8e e0                	mov    fs,eax
 101000b:	8e e8                	mov    gs,eax
 101000d:	8e d0                	mov    ss,eax
 101000f:	48 bc 00 30 01 01 00 	movabs rsp,0x1013000
 1010016:	00 00 00 
 1010019:	48 89 f7             	mov    rdi,rsi
 101001c:	e8 fd e9 ff ff       	call   100ea1e <kmain>
 1010021:	f4                   	hlt    
 1010022:	90                   	nop
 1010023:	90                   	nop
 1010024:	90                   	nop
 1010025:	90                   	nop
 1010026:	90                   	nop
 1010027:	90                   	nop
 1010028:	90                   	nop
 1010029:	90                   	nop
 101002a:	90                   	nop
 101002b:	90                   	nop
 101002c:	90                   	nop
 101002d:	90                   	nop
 101002e:	90                   	nop
 101002f:	90                   	nop
 1010030:	90                   	nop
 1010031:	90                   	nop
 1010032:	90                   	nop
 1010033:	90                   	nop
 1010034:	90                   	nop
 1010035:	90                   	nop
 1010036:	90                   	nop
 1010037:	90                   	nop
 1010038:	90                   	nop
 1010039:	90                   	nop
 101003a:	90                   	nop
 101003b:	90                   	nop
 101003c:	90                   	nop
 101003d:	90                   	nop
 101003e:	90                   	nop
 101003f:	90                   	nop
 1010040:	90                   	nop
 1010041:	90                   	nop
 1010042:	90                   	nop
 1010043:	90                   	nop
 1010044:	90                   	nop
 1010045:	90                   	nop
 1010046:	90                   	nop
 1010047:	90                   	nop
 1010048:	90                   	nop
 1010049:	90                   	nop
 101004a:	90                   	nop
 101004b:	90                   	nop
 101004c:	90                   	nop
 101004d:	90                   	nop
 101004e:	90                   	nop
 101004f:	90                   	nop
 1010050:	90                   	nop
 1010051:	90                   	nop
 1010052:	90                   	nop
 1010053:	90                   	nop
 1010054:	90                   	nop
 1010055:	90                   	nop
 1010056:	90                   	nop
 1010057:	90                   	nop
 1010058:	90                   	nop
 1010059:	90                   	nop
 101005a:	90                   	nop
 101005b:	90                   	nop
 101005c:	90                   	nop
 101005d:	90                   	nop
 101005e:	90                   	nop
 101005f:	90                   	nop
 1010060:	90                   	nop
 1010061:	90                   	nop
 1010062:	90                   	nop
 1010063:	90                   	nop
 1010064:	90                   	nop
 1010065:	90                   	nop
 1010066:	90                   	nop
 1010067:	90                   	nop
 1010068:	90                   	nop
 1010069:	90                   	nop
 101006a:	90                   	nop
 101006b:	90                   	nop
 101006c:	90                   	nop
 101006d:	90                   	nop
 101006e:	90                   	nop
 101006f:	90                   	nop
 1010070:	90                   	nop
 1010071:	90                   	nop
 1010072:	90                   	nop
 1010073:	90                   	nop
 1010074:	90                   	nop
 1010075:	90                   	nop
 1010076:	90                   	nop
 1010077:	90                   	nop
 1010078:	90                   	nop
 1010079:	90                   	nop
 101007a:	90                   	nop
 101007b:	90                   	nop
 101007c:	90                   	nop
 101007d:	90                   	nop
 101007e:	90                   	nop
 101007f:	90                   	nop
 1010080:	90                   	nop
 1010081:	90                   	nop
 1010082:	90                   	nop
 1010083:	90                   	nop
 1010084:	90                   	nop
 1010085:	90                   	nop
 1010086:	90                   	nop
 1010087:	90                   	nop
 1010088:	90                   	nop
 1010089:	90                   	nop
 101008a:	90                   	nop
 101008b:	90                   	nop
 101008c:	90                   	nop
 101008d:	90                   	nop
 101008e:	90                   	nop
 101008f:	90                   	nop
 1010090:	90                   	nop
 1010091:	90                   	nop
 1010092:	90                   	nop
 1010093:	90                   	nop
 1010094:	90                   	nop
 1010095:	90                   	nop
 1010096:	90                   	nop
 1010097:	90                   	nop
 1010098:	90                   	nop
 1010099:	90                   	nop
 101009a:	90                   	nop
 101009b:	90                   	nop
 101009c:	90                   	nop
 101009d:	90                   	nop
 101009e:	90                   	nop
 101009f:	90                   	nop
 10100a0:	90                   	nop
 10100a1:	90                   	nop
 10100a2:	90                   	nop
 10100a3:	90                   	nop
 10100a4:	90                   	nop
 10100a5:	90                   	nop
 10100a6:	90                   	nop
 10100a7:	90                   	nop
 10100a8:	90                   	nop
 10100a9:	90                   	nop
 10100aa:	90                   	nop
 10100ab:	90                   	nop
 10100ac:	90                   	nop
 10100ad:	90                   	nop
 10100ae:	90                   	nop
 10100af:	90                   	nop
 10100b0:	90                   	nop
 10100b1:	90                   	nop
 10100b2:	90                   	nop
 10100b3:	90                   	nop
 10100b4:	90                   	nop
 10100b5:	90                   	nop
 10100b6:	90                   	nop
 10100b7:	90                   	nop
 10100b8:	90                   	nop
 10100b9:	90                   	nop
 10100ba:	90                   	nop
 10100bb:	90                   	nop
 10100bc:	90                   	nop
 10100bd:	90                   	nop
 10100be:	90                   	nop
 10100bf:	90                   	nop
 10100c0:	90                   	nop
 10100c1:	90                   	nop
 10100c2:	90                   	nop
 10100c3:	90                   	nop
 10100c4:	90                   	nop
 10100c5:	90                   	nop
 10100c6:	90                   	nop
 10100c7:	90                   	nop
 10100c8:	90                   	nop
 10100c9:	90                   	nop
 10100ca:	90                   	nop
 10100cb:	90                   	nop
 10100cc:	90                   	nop
 10100cd:	90                   	nop
 10100ce:	90                   	nop
 10100cf:	90                   	nop
 10100d0:	90                   	nop
 10100d1:	90                   	nop
 10100d2:	90                   	nop
 10100d3:	90                   	nop
 10100d4:	90                   	nop
 10100d5:	90                   	nop
 10100d6:	90                   	nop
 10100d7:	90                   	nop
 10100d8:	90                   	nop
 10100d9:	90                   	nop
 10100da:	90                   	nop
 10100db:	90                   	nop
 10100dc:	90                   	nop
 10100dd:	90                   	nop
 10100de:	90                   	nop
 10100df:	90                   	nop
 10100e0:	90                   	nop
 10100e1:	90                   	nop
 10100e2:	90                   	nop
 10100e3:	90                   	nop
 10100e4:	90                   	nop
 10100e5:	90                   	nop
 10100e6:	90                   	nop
 10100e7:	90                   	nop
 10100e8:	90                   	nop
 10100e9:	90                   	nop
 10100ea:	90                   	nop
 10100eb:	90                   	nop
 10100ec:	90                   	nop
 10100ed:	90                   	nop
 10100ee:	90                   	nop
 10100ef:	90                   	nop
 10100f0:	90                   	nop
 10100f1:	90                   	nop
 10100f2:	90                   	nop
 10100f3:	90                   	nop
 10100f4:	90                   	nop
 10100f5:	90                   	nop
 10100f6:	90                   	nop
 10100f7:	90                   	nop
 10100f8:	90                   	nop
 10100f9:	90                   	nop
 10100fa:	90                   	nop
 10100fb:	90                   	nop
 10100fc:	90                   	nop
 10100fd:	90                   	nop
 10100fe:	90                   	nop
 10100ff:	90                   	nop
 1010100:	90                   	nop
 1010101:	90                   	nop
 1010102:	90                   	nop
 1010103:	90                   	nop
 1010104:	90                   	nop
 1010105:	90                   	nop
 1010106:	90                   	nop
 1010107:	90                   	nop
 1010108:	90                   	nop
 1010109:	90                   	nop
 101010a:	90                   	nop
 101010b:	90                   	nop
 101010c:	90                   	nop
 101010d:	90                   	nop
 101010e:	90                   	nop
 101010f:	90                   	nop
 1010110:	90                   	nop
 1010111:	90                   	nop
 1010112:	90                   	nop
 1010113:	90                   	nop
 1010114:	90                   	nop
 1010115:	90                   	nop
 1010116:	90                   	nop
 1010117:	90                   	nop
 1010118:	90                   	nop
 1010119:	90                   	nop
 101011a:	90                   	nop
 101011b:	90                   	nop
 101011c:	90                   	nop
 101011d:	90                   	nop
 101011e:	90                   	nop
 101011f:	90                   	nop
 1010120:	90                   	nop
 1010121:	90                   	nop
 1010122:	90                   	nop
 1010123:	90                   	nop
 1010124:	90                   	nop
 1010125:	90                   	nop
 1010126:	90                   	nop
 1010127:	90                   	nop
 1010128:	90                   	nop
 1010129:	90                   	nop
 101012a:	90                   	nop
 101012b:	90                   	nop
 101012c:	90                   	nop
 101012d:	90                   	nop
 101012e:	90                   	nop
 101012f:	90                   	nop
 1010130:	90                   	nop
 1010131:	90                   	nop
 1010132:	90                   	nop
 1010133:	90                   	nop
 1010134:	90                   	nop
 1010135:	90                   	nop
 1010136:	90                   	nop
 1010137:	90                   	nop
 1010138:	90                   	nop
 1010139:	90                   	nop
 101013a:	90                   	nop
 101013b:	90                   	nop
 101013c:	90                   	nop
 101013d:	90                   	nop
 101013e:	90                   	nop
 101013f:	90                   	nop
 1010140:	90                   	nop
 1010141:	90                   	nop
 1010142:	90                   	nop
 1010143:	90                   	nop
 1010144:	90                   	nop
 1010145:	90                   	nop
 1010146:	90                   	nop
 1010147:	90                   	nop
 1010148:	90                   	nop
 1010149:	90                   	nop
 101014a:	90                   	nop
 101014b:	90                   	nop
 101014c:	90                   	nop
 101014d:	90                   	nop
 101014e:	90                   	nop
 101014f:	90                   	nop
 1010150:	90                   	nop
 1010151:	90                   	nop
 1010152:	90                   	nop
 1010153:	90                   	nop
 1010154:	90                   	nop
 1010155:	90                   	nop
 1010156:	90                   	nop
 1010157:	90                   	nop
 1010158:	90                   	nop
 1010159:	90                   	nop
 101015a:	90                   	nop
 101015b:	90                   	nop
 101015c:	90                   	nop
 101015d:	90                   	nop
 101015e:	90                   	nop
 101015f:	90                   	nop
 1010160:	90                   	nop
 1010161:	90                   	nop
 1010162:	90                   	nop
 1010163:	90                   	nop
 1010164:	90                   	nop
 1010165:	90                   	nop
 1010166:	90                   	nop
 1010167:	90                   	nop
 1010168:	90                   	nop
 1010169:	90                   	nop
 101016a:	90                   	nop
 101016b:	90                   	nop
 101016c:	90                   	nop
 101016d:	90                   	nop
 101016e:	90                   	nop
 101016f:	90                   	nop
 1010170:	90                   	nop
 1010171:	90                   	nop
 1010172:	90                   	nop
 1010173:	90                   	nop
 1010174:	90                   	nop
 1010175:	90                   	nop
 1010176:	90                   	nop
 1010177:	90                   	nop
 1010178:	90                   	nop
 1010179:	90                   	nop
 101017a:	90                   	nop
 101017b:	90                   	nop
 101017c:	90                   	nop
 101017d:	90                   	nop
 101017e:	90                   	nop
 101017f:	90                   	nop
 1010180:	90                   	nop
 1010181:	90                   	nop
 1010182:	90                   	nop
 1010183:	90                   	nop
 1010184:	90                   	nop
 1010185:	90                   	nop
 1010186:	90                   	nop
 1010187:	90                   	nop
 1010188:	90                   	nop
 1010189:	90                   	nop
 101018a:	90                   	nop
 101018b:	90                   	nop
 101018c:	90                   	nop
 101018d:	90                   	nop
 101018e:	90                   	nop
 101018f:	90                   	nop
 1010190:	90                   	nop
 1010191:	90                   	nop
 1010192:	90                   	nop
 1010193:	90                   	nop
 1010194:	90                   	nop
 1010195:	90                   	nop
 1010196:	90                   	nop
 1010197:	90                   	nop
 1010198:	90                   	nop
 1010199:	90                   	nop
 101019a:	90                   	nop
 101019b:	90                   	nop
 101019c:	90                   	nop
 101019d:	90                   	nop
 101019e:	90                   	nop
 101019f:	90                   	nop
 10101a0:	90                   	nop
 10101a1:	90                   	nop
 10101a2:	90                   	nop
 10101a3:	90                   	nop
 10101a4:	90                   	nop
 10101a5:	90                   	nop
 10101a6:	90                   	nop
 10101a7:	90                   	nop
 10101a8:	90                   	nop
 10101a9:	90                   	nop
 10101aa:	90                   	nop
 10101ab:	90                   	nop
 10101ac:	90                   	nop
 10101ad:	90                   	nop
 10101ae:	90                   	nop
 10101af:	90                   	nop
 10101b0:	90                   	nop
 10101b1:	90                   	nop
 10101b2:	90                   	nop
 10101b3:	90                   	nop
 10101b4:	90                   	nop
 10101b5:	90                   	nop
 10101b6:	90                   	nop
 10101b7:	90                   	nop
 10101b8:	90                   	nop
 10101b9:	90                   	nop
 10101ba:	90                   	nop
 10101bb:	90                   	nop
 10101bc:	90                   	nop
 10101bd:	90                   	nop
 10101be:	90                   	nop
 10101bf:	90                   	nop
 10101c0:	90                   	nop
 10101c1:	90                   	nop
 10101c2:	90                   	nop
 10101c3:	90                   	nop
 10101c4:	90                   	nop
 10101c5:	90                   	nop
 10101c6:	90                   	nop
 10101c7:	90                   	nop
 10101c8:	90                   	nop
 10101c9:	90                   	nop
 10101ca:	90                   	nop
 10101cb:	90                   	nop
 10101cc:	90                   	nop
 10101cd:	90                   	nop
 10101ce:	90                   	nop
 10101cf:	90                   	nop
 10101d0:	90                   	nop
 10101d1:	90                   	nop
 10101d2:	90                   	nop
 10101d3:	90                   	nop
 10101d4:	90                   	nop
 10101d5:	90                   	nop
 10101d6:	90                   	nop
 10101d7:	90                   	nop
 10101d8:	90                   	nop
 10101d9:	90                   	nop
 10101da:	90                   	nop
 10101db:	90                   	nop
 10101dc:	90                   	nop
 10101dd:	90                   	nop
 10101de:	90                   	nop
 10101df:	90                   	nop
 10101e0:	90                   	nop
 10101e1:	90                   	nop
 10101e2:	90                   	nop
 10101e3:	90                   	nop
 10101e4:	90                   	nop
 10101e5:	90                   	nop
 10101e6:	90                   	nop
 10101e7:	90                   	nop
 10101e8:	90                   	nop
 10101e9:	90                   	nop
 10101ea:	90                   	nop
 10101eb:	90                   	nop
 10101ec:	90                   	nop
 10101ed:	90                   	nop
 10101ee:	90                   	nop
 10101ef:	90                   	nop
 10101f0:	90                   	nop
 10101f1:	90                   	nop
 10101f2:	90                   	nop
 10101f3:	90                   	nop
 10101f4:	90                   	nop
 10101f5:	90                   	nop
 10101f6:	90                   	nop
 10101f7:	90                   	nop
 10101f8:	90                   	nop
 10101f9:	90                   	nop
 10101fa:	90                   	nop
 10101fb:	90                   	nop
 10101fc:	90                   	nop
 10101fd:	90                   	nop
 10101fe:	90                   	nop
 10101ff:	90                   	nop
 1010200:	90                   	nop
 1010201:	90                   	nop
 1010202:	90                   	nop
 1010203:	90                   	nop
 1010204:	90                   	nop
 1010205:	90                   	nop
 1010206:	90                   	nop
 1010207:	90                   	nop
 1010208:	90                   	nop
 1010209:	90                   	nop
 101020a:	90                   	nop
 101020b:	90                   	nop
 101020c:	90                   	nop
 101020d:	90                   	nop
 101020e:	90                   	nop
 101020f:	90                   	nop
 1010210:	90                   	nop
 1010211:	90                   	nop
 1010212:	90                   	nop
 1010213:	90                   	nop
 1010214:	90                   	nop
 1010215:	90                   	nop
 1010216:	90                   	nop
 1010217:	90                   	nop
 1010218:	90                   	nop
 1010219:	90                   	nop
 101021a:	90                   	nop
 101021b:	90                   	nop
 101021c:	90                   	nop
 101021d:	90                   	nop
 101021e:	90                   	nop
 101021f:	90                   	nop
 1010220:	90                   	nop
 1010221:	90                   	nop
 1010222:	90                   	nop
 1010223:	90                   	nop
 1010224:	90                   	nop
 1010225:	90                   	nop
 1010226:	90                   	nop
 1010227:	90                   	nop
 1010228:	90                   	nop
 1010229:	90                   	nop
 101022a:	90                   	nop
 101022b:	90                   	nop
 101022c:	90                   	nop
 101022d:	90                   	nop
 101022e:	90                   	nop
 101022f:	90                   	nop
 1010230:	90                   	nop
 1010231:	90                   	nop
 1010232:	90                   	nop
 1010233:	90                   	nop
 1010234:	90                   	nop
 1010235:	90                   	nop
 1010236:	90                   	nop
 1010237:	90                   	nop
 1010238:	90                   	nop
 1010239:	90                   	nop
 101023a:	90                   	nop
 101023b:	90                   	nop
 101023c:	90                   	nop
 101023d:	90                   	nop
 101023e:	90                   	nop
 101023f:	90                   	nop
 1010240:	90                   	nop
 1010241:	90                   	nop
 1010242:	90                   	nop
 1010243:	90                   	nop
 1010244:	90                   	nop
 1010245:	90                   	nop
 1010246:	90                   	nop
 1010247:	90                   	nop
 1010248:	90                   	nop
 1010249:	90                   	nop
 101024a:	90                   	nop
 101024b:	90                   	nop
 101024c:	90                   	nop
 101024d:	90                   	nop
 101024e:	90                   	nop
 101024f:	90                   	nop
 1010250:	90                   	nop
 1010251:	90                   	nop
 1010252:	90                   	nop
 1010253:	90                   	nop
 1010254:	90                   	nop
 1010255:	90                   	nop
 1010256:	90                   	nop
 1010257:	90                   	nop
 1010258:	90                   	nop
 1010259:	90                   	nop
 101025a:	90                   	nop
 101025b:	90                   	nop
 101025c:	90                   	nop
 101025d:	90                   	nop
 101025e:	90                   	nop
 101025f:	90                   	nop
 1010260:	90                   	nop
 1010261:	90                   	nop
 1010262:	90                   	nop
 1010263:	90                   	nop
 1010264:	90                   	nop
 1010265:	90                   	nop
 1010266:	90                   	nop
 1010267:	90                   	nop
 1010268:	90                   	nop
 1010269:	90                   	nop
 101026a:	90                   	nop
 101026b:	90                   	nop
 101026c:	90                   	nop
 101026d:	90                   	nop
 101026e:	90                   	nop
 101026f:	90                   	nop
 1010270:	90                   	nop
 1010271:	90                   	nop
 1010272:	90                   	nop
 1010273:	90                   	nop
 1010274:	90                   	nop
 1010275:	90                   	nop
 1010276:	90                   	nop
 1010277:	90                   	nop
 1010278:	90                   	nop
 1010279:	90                   	nop
 101027a:	90                   	nop
 101027b:	90                   	nop
 101027c:	90                   	nop
 101027d:	90                   	nop
 101027e:	90                   	nop
 101027f:	90                   	nop
 1010280:	90                   	nop
 1010281:	90                   	nop
 1010282:	90                   	nop
 1010283:	90                   	nop
 1010284:	90                   	nop
 1010285:	90                   	nop
 1010286:	90                   	nop
 1010287:	90                   	nop
 1010288:	90                   	nop
 1010289:	90                   	nop
 101028a:	90                   	nop
 101028b:	90                   	nop
 101028c:	90                   	nop
 101028d:	90                   	nop
 101028e:	90                   	nop
 101028f:	90                   	nop
 1010290:	90                   	nop
 1010291:	90                   	nop
 1010292:	90                   	nop
 1010293:	90                   	nop
 1010294:	90                   	nop
 1010295:	90                   	nop
 1010296:	90                   	nop
 1010297:	90                   	nop
 1010298:	90                   	nop
 1010299:	90                   	nop
 101029a:	90                   	nop
 101029b:	90                   	nop
 101029c:	90                   	nop
 101029d:	90                   	nop
 101029e:	90                   	nop
 101029f:	90                   	nop
 10102a0:	90                   	nop
 10102a1:	90                   	nop
 10102a2:	90                   	nop
 10102a3:	90                   	nop
 10102a4:	90                   	nop
 10102a5:	90                   	nop
 10102a6:	90                   	nop
 10102a7:	90                   	nop
 10102a8:	90                   	nop
 10102a9:	90                   	nop
 10102aa:	90                   	nop
 10102ab:	90                   	nop
 10102ac:	90                   	nop
 10102ad:	90                   	nop
 10102ae:	90                   	nop
 10102af:	90                   	nop
 10102b0:	90                   	nop
 10102b1:	90                   	nop
 10102b2:	90                   	nop
 10102b3:	90                   	nop
 10102b4:	90                   	nop
 10102b5:	90                   	nop
 10102b6:	90                   	nop
 10102b7:	90                   	nop
 10102b8:	90                   	nop
 10102b9:	90                   	nop
 10102ba:	90                   	nop
 10102bb:	90                   	nop
 10102bc:	90                   	nop
 10102bd:	90                   	nop
 10102be:	90                   	nop
 10102bf:	90                   	nop
 10102c0:	90                   	nop
 10102c1:	90                   	nop
 10102c2:	90                   	nop
 10102c3:	90                   	nop
 10102c4:	90                   	nop
 10102c5:	90                   	nop
 10102c6:	90                   	nop
 10102c7:	90                   	nop
 10102c8:	90                   	nop
 10102c9:	90                   	nop
 10102ca:	90                   	nop
 10102cb:	90                   	nop
 10102cc:	90                   	nop
 10102cd:	90                   	nop
 10102ce:	90                   	nop
 10102cf:	90                   	nop
 10102d0:	90                   	nop
 10102d1:	90                   	nop
 10102d2:	90                   	nop
 10102d3:	90                   	nop
 10102d4:	90                   	nop
 10102d5:	90                   	nop
 10102d6:	90                   	nop
 10102d7:	90                   	nop
 10102d8:	90                   	nop
 10102d9:	90                   	nop
 10102da:	90                   	nop
 10102db:	90                   	nop
 10102dc:	90                   	nop
 10102dd:	90                   	nop
 10102de:	90                   	nop
 10102df:	90                   	nop
 10102e0:	90                   	nop
 10102e1:	90                   	nop
 10102e2:	90                   	nop
 10102e3:	90                   	nop
 10102e4:	90                   	nop
 10102e5:	90                   	nop
 10102e6:	90                   	nop
 10102e7:	90                   	nop
 10102e8:	90                   	nop
 10102e9:	90                   	nop
 10102ea:	90                   	nop
 10102eb:	90                   	nop
 10102ec:	90                   	nop
 10102ed:	90                   	nop
 10102ee:	90                   	nop
 10102ef:	90                   	nop
 10102f0:	90                   	nop
 10102f1:	90                   	nop
 10102f2:	90                   	nop
 10102f3:	90                   	nop
 10102f4:	90                   	nop
 10102f5:	90                   	nop
 10102f6:	90                   	nop
 10102f7:	90                   	nop
 10102f8:	90                   	nop
 10102f9:	90                   	nop
 10102fa:	90                   	nop
 10102fb:	90                   	nop
 10102fc:	90                   	nop
 10102fd:	90                   	nop
 10102fe:	90                   	nop
 10102ff:	90                   	nop
 1010300:	90                   	nop
 1010301:	90                   	nop
 1010302:	90                   	nop
 1010303:	90                   	nop
 1010304:	90                   	nop
 1010305:	90                   	nop
 1010306:	90                   	nop
 1010307:	90                   	nop
 1010308:	90                   	nop
 1010309:	90                   	nop
 101030a:	90                   	nop
 101030b:	90                   	nop
 101030c:	90                   	nop
 101030d:	90                   	nop
 101030e:	90                   	nop
 101030f:	90                   	nop
 1010310:	90                   	nop
 1010311:	90                   	nop
 1010312:	90                   	nop
 1010313:	90                   	nop
 1010314:	90                   	nop
 1010315:	90                   	nop
 1010316:	90                   	nop
 1010317:	90                   	nop
 1010318:	90                   	nop
 1010319:	90                   	nop
 101031a:	90                   	nop
 101031b:	90                   	nop
 101031c:	90                   	nop
 101031d:	90                   	nop
 101031e:	90                   	nop
 101031f:	90                   	nop
 1010320:	90                   	nop
 1010321:	90                   	nop
 1010322:	90                   	nop
 1010323:	90                   	nop
 1010324:	90                   	nop
 1010325:	90                   	nop
 1010326:	90                   	nop
 1010327:	90                   	nop
 1010328:	90                   	nop
 1010329:	90                   	nop
 101032a:	90                   	nop
 101032b:	90                   	nop
 101032c:	90                   	nop
 101032d:	90                   	nop
 101032e:	90                   	nop
 101032f:	90                   	nop
 1010330:	90                   	nop
 1010331:	90                   	nop
 1010332:	90                   	nop
 1010333:	90                   	nop
 1010334:	90                   	nop
 1010335:	90                   	nop
 1010336:	90                   	nop
 1010337:	90                   	nop
 1010338:	90                   	nop
 1010339:	90                   	nop
 101033a:	90                   	nop
 101033b:	90                   	nop
 101033c:	90                   	nop
 101033d:	90                   	nop
 101033e:	90                   	nop
 101033f:	90                   	nop
 1010340:	90                   	nop
 1010341:	90                   	nop
 1010342:	90                   	nop
 1010343:	90                   	nop
 1010344:	90                   	nop
 1010345:	90                   	nop
 1010346:	90                   	nop
 1010347:	90                   	nop
 1010348:	90                   	nop
 1010349:	90                   	nop
 101034a:	90                   	nop
 101034b:	90                   	nop
 101034c:	90                   	nop
 101034d:	90                   	nop
 101034e:	90                   	nop
 101034f:	90                   	nop
 1010350:	90                   	nop
 1010351:	90                   	nop
 1010352:	90                   	nop
 1010353:	90                   	nop
 1010354:	90                   	nop
 1010355:	90                   	nop
 1010356:	90                   	nop
 1010357:	90                   	nop
 1010358:	90                   	nop
 1010359:	90                   	nop
 101035a:	90                   	nop
 101035b:	90                   	nop
 101035c:	90                   	nop
 101035d:	90                   	nop
 101035e:	90                   	nop
 101035f:	90                   	nop
 1010360:	90                   	nop
 1010361:	90                   	nop
 1010362:	90                   	nop
 1010363:	90                   	nop
 1010364:	90                   	nop
 1010365:	90                   	nop
 1010366:	90                   	nop
 1010367:	90                   	nop
 1010368:	90                   	nop
 1010369:	90                   	nop
 101036a:	90                   	nop
 101036b:	90                   	nop
 101036c:	90                   	nop
 101036d:	90                   	nop
 101036e:	90                   	nop
 101036f:	90                   	nop
 1010370:	90                   	nop
 1010371:	90                   	nop
 1010372:	90                   	nop
 1010373:	90                   	nop
 1010374:	90                   	nop
 1010375:	90                   	nop
 1010376:	90                   	nop
 1010377:	90                   	nop
 1010378:	90                   	nop
 1010379:	90                   	nop
 101037a:	90                   	nop
 101037b:	90                   	nop
 101037c:	90                   	nop
 101037d:	90                   	nop
 101037e:	90                   	nop
 101037f:	90                   	nop
 1010380:	90                   	nop
 1010381:	90                   	nop
 1010382:	90                   	nop
 1010383:	90                   	nop
 1010384:	90                   	nop
 1010385:	90                   	nop
 1010386:	90                   	nop
 1010387:	90                   	nop
 1010388:	90                   	nop
 1010389:	90                   	nop
 101038a:	90                   	nop
 101038b:	90                   	nop
 101038c:	90                   	nop
 101038d:	90                   	nop
 101038e:	90                   	nop
 101038f:	90                   	nop
 1010390:	90                   	nop
 1010391:	90                   	nop
 1010392:	90                   	nop
 1010393:	90                   	nop
 1010394:	90                   	nop
 1010395:	90                   	nop
 1010396:	90                   	nop
 1010397:	90                   	nop
 1010398:	90                   	nop
 1010399:	90                   	nop
 101039a:	90                   	nop
 101039b:	90                   	nop
 101039c:	90                   	nop
 101039d:	90                   	nop
 101039e:	90                   	nop
 101039f:	90                   	nop
 10103a0:	90                   	nop
 10103a1:	90                   	nop
 10103a2:	90                   	nop
 10103a3:	90                   	nop
 10103a4:	90                   	nop
 10103a5:	90                   	nop
 10103a6:	90                   	nop
 10103a7:	90                   	nop
 10103a8:	90                   	nop
 10103a9:	90                   	nop
 10103aa:	90                   	nop
 10103ab:	90                   	nop
 10103ac:	90                   	nop
 10103ad:	90                   	nop
 10103ae:	90                   	nop
 10103af:	90                   	nop
 10103b0:	90                   	nop
 10103b1:	90                   	nop
 10103b2:	90                   	nop
 10103b3:	90                   	nop
 10103b4:	90                   	nop
 10103b5:	90                   	nop
 10103b6:	90                   	nop
 10103b7:	90                   	nop
 10103b8:	90                   	nop
 10103b9:	90                   	nop
 10103ba:	90                   	nop
 10103bb:	90                   	nop
 10103bc:	90                   	nop
 10103bd:	90                   	nop
 10103be:	90                   	nop
 10103bf:	90                   	nop
 10103c0:	90                   	nop
 10103c1:	90                   	nop
 10103c2:	90                   	nop
 10103c3:	90                   	nop
 10103c4:	90                   	nop
 10103c5:	90                   	nop
 10103c6:	90                   	nop
 10103c7:	90                   	nop
 10103c8:	90                   	nop
 10103c9:	90                   	nop
 10103ca:	90                   	nop
 10103cb:	90                   	nop
 10103cc:	90                   	nop
 10103cd:	90                   	nop
 10103ce:	90                   	nop
 10103cf:	90                   	nop
 10103d0:	90                   	nop
 10103d1:	90                   	nop
 10103d2:	90                   	nop
 10103d3:	90                   	nop
 10103d4:	90                   	nop
 10103d5:	90                   	nop
 10103d6:	90                   	nop
 10103d7:	90                   	nop
 10103d8:	90                   	nop
 10103d9:	90                   	nop
 10103da:	90                   	nop
 10103db:	90                   	nop
 10103dc:	90                   	nop
 10103dd:	90                   	nop
 10103de:	90                   	nop
 10103df:	90                   	nop
 10103e0:	90                   	nop
 10103e1:	90                   	nop
 10103e2:	90                   	nop
 10103e3:	90                   	nop
 10103e4:	90                   	nop
 10103e5:	90                   	nop
 10103e6:	90                   	nop
 10103e7:	90                   	nop
 10103e8:	90                   	nop
 10103e9:	90                   	nop
 10103ea:	90                   	nop
 10103eb:	90                   	nop
 10103ec:	90                   	nop
 10103ed:	90                   	nop
 10103ee:	90                   	nop
 10103ef:	90                   	nop
 10103f0:	90                   	nop
 10103f1:	90                   	nop
 10103f2:	90                   	nop
 10103f3:	90                   	nop
 10103f4:	90                   	nop
 10103f5:	90                   	nop
 10103f6:	90                   	nop
 10103f7:	90                   	nop
 10103f8:	90                   	nop
 10103f9:	90                   	nop
 10103fa:	90                   	nop
 10103fb:	90                   	nop
 10103fc:	90                   	nop
 10103fd:	90                   	nop
 10103fe:	90                   	nop
 10103ff:	90                   	nop
 1010400:	90                   	nop
 1010401:	90                   	nop
 1010402:	90                   	nop
 1010403:	90                   	nop
 1010404:	90                   	nop
 1010405:	90                   	nop
 1010406:	90                   	nop
 1010407:	90                   	nop
 1010408:	90                   	nop
 1010409:	90                   	nop
 101040a:	90                   	nop
 101040b:	90                   	nop
 101040c:	90                   	nop
 101040d:	90                   	nop
 101040e:	90                   	nop
 101040f:	90                   	nop
 1010410:	90                   	nop
 1010411:	90                   	nop
 1010412:	90                   	nop
 1010413:	90                   	nop
 1010414:	90                   	nop
 1010415:	90                   	nop
 1010416:	90                   	nop
 1010417:	90                   	nop
 1010418:	90                   	nop
 1010419:	90                   	nop
 101041a:	90                   	nop
 101041b:	90                   	nop
 101041c:	90                   	nop
 101041d:	90                   	nop
 101041e:	90                   	nop
 101041f:	90                   	nop
 1010420:	90                   	nop
 1010421:	90                   	nop
 1010422:	90                   	nop
 1010423:	90                   	nop
 1010424:	90                   	nop
 1010425:	90                   	nop
 1010426:	90                   	nop
 1010427:	90                   	nop
 1010428:	90                   	nop
 1010429:	90                   	nop
 101042a:	90                   	nop
 101042b:	90                   	nop
 101042c:	90                   	nop
 101042d:	90                   	nop
 101042e:	90                   	nop
 101042f:	90                   	nop
 1010430:	90                   	nop
 1010431:	90                   	nop
 1010432:	90                   	nop
 1010433:	90                   	nop
 1010434:	90                   	nop
 1010435:	90                   	nop
 1010436:	90                   	nop
 1010437:	90                   	nop
 1010438:	90                   	nop
 1010439:	90                   	nop
 101043a:	90                   	nop
 101043b:	90                   	nop
 101043c:	90                   	nop
 101043d:	90                   	nop
 101043e:	90                   	nop
 101043f:	90                   	nop
 1010440:	90                   	nop
 1010441:	90                   	nop
 1010442:	90                   	nop
 1010443:	90                   	nop
 1010444:	90                   	nop
 1010445:	90                   	nop
 1010446:	90                   	nop
 1010447:	90                   	nop
 1010448:	90                   	nop
 1010449:	90                   	nop
 101044a:	90                   	nop
 101044b:	90                   	nop
 101044c:	90                   	nop
 101044d:	90                   	nop
 101044e:	90                   	nop
 101044f:	90                   	nop
 1010450:	90                   	nop
 1010451:	90                   	nop
 1010452:	90                   	nop
 1010453:	90                   	nop
 1010454:	90                   	nop
 1010455:	90                   	nop
 1010456:	90                   	nop
 1010457:	90                   	nop
 1010458:	90                   	nop
 1010459:	90                   	nop
 101045a:	90                   	nop
 101045b:	90                   	nop
 101045c:	90                   	nop
 101045d:	90                   	nop
 101045e:	90                   	nop
 101045f:	90                   	nop
 1010460:	90                   	nop
 1010461:	90                   	nop
 1010462:	90                   	nop
 1010463:	90                   	nop
 1010464:	90                   	nop
 1010465:	90                   	nop
 1010466:	90                   	nop
 1010467:	90                   	nop
 1010468:	90                   	nop
 1010469:	90                   	nop
 101046a:	90                   	nop
 101046b:	90                   	nop
 101046c:	90                   	nop
 101046d:	90                   	nop
 101046e:	90                   	nop
 101046f:	90                   	nop
 1010470:	90                   	nop
 1010471:	90                   	nop
 1010472:	90                   	nop
 1010473:	90                   	nop
 1010474:	90                   	nop
 1010475:	90                   	nop
 1010476:	90                   	nop
 1010477:	90                   	nop
 1010478:	90                   	nop
 1010479:	90                   	nop
 101047a:	90                   	nop
 101047b:	90                   	nop
 101047c:	90                   	nop
 101047d:	90                   	nop
 101047e:	90                   	nop
 101047f:	90                   	nop
 1010480:	90                   	nop
 1010481:	90                   	nop
 1010482:	90                   	nop
 1010483:	90                   	nop
 1010484:	90                   	nop
 1010485:	90                   	nop
 1010486:	90                   	nop
 1010487:	90                   	nop
 1010488:	90                   	nop
 1010489:	90                   	nop
 101048a:	90                   	nop
 101048b:	90                   	nop
 101048c:	90                   	nop
 101048d:	90                   	nop
 101048e:	90                   	nop
 101048f:	90                   	nop
 1010490:	90                   	nop
 1010491:	90                   	nop
 1010492:	90                   	nop
 1010493:	90                   	nop
 1010494:	90                   	nop
 1010495:	90                   	nop
 1010496:	90                   	nop
 1010497:	90                   	nop
 1010498:	90                   	nop
 1010499:	90                   	nop
 101049a:	90                   	nop
 101049b:	90                   	nop
 101049c:	90                   	nop
 101049d:	90                   	nop
 101049e:	90                   	nop
 101049f:	90                   	nop
 10104a0:	90                   	nop
 10104a1:	90                   	nop
 10104a2:	90                   	nop
 10104a3:	90                   	nop
 10104a4:	90                   	nop
 10104a5:	90                   	nop
 10104a6:	90                   	nop
 10104a7:	90                   	nop
 10104a8:	90                   	nop
 10104a9:	90                   	nop
 10104aa:	90                   	nop
 10104ab:	90                   	nop
 10104ac:	90                   	nop
 10104ad:	90                   	nop
 10104ae:	90                   	nop
 10104af:	90                   	nop
 10104b0:	90                   	nop
 10104b1:	90                   	nop
 10104b2:	90                   	nop
 10104b3:	90                   	nop
 10104b4:	90                   	nop
 10104b5:	90                   	nop
 10104b6:	90                   	nop
 10104b7:	90                   	nop
 10104b8:	90                   	nop
 10104b9:	90                   	nop
 10104ba:	90                   	nop
 10104bb:	90                   	nop
 10104bc:	90                   	nop
 10104bd:	90                   	nop
 10104be:	90                   	nop
 10104bf:	90                   	nop
 10104c0:	90                   	nop
 10104c1:	90                   	nop
 10104c2:	90                   	nop
 10104c3:	90                   	nop
 10104c4:	90                   	nop
 10104c5:	90                   	nop
 10104c6:	90                   	nop
 10104c7:	90                   	nop
 10104c8:	90                   	nop
 10104c9:	90                   	nop
 10104ca:	90                   	nop
 10104cb:	90                   	nop
 10104cc:	90                   	nop
 10104cd:	90                   	nop
 10104ce:	90                   	nop
 10104cf:	90                   	nop
 10104d0:	90                   	nop
 10104d1:	90                   	nop
 10104d2:	90                   	nop
 10104d3:	90                   	nop
 10104d4:	90                   	nop
 10104d5:	90                   	nop
 10104d6:	90                   	nop
 10104d7:	90                   	nop
 10104d8:	90                   	nop
 10104d9:	90                   	nop
 10104da:	90                   	nop
 10104db:	90                   	nop
 10104dc:	90                   	nop
 10104dd:	90                   	nop
 10104de:	90                   	nop
 10104df:	90                   	nop
 10104e0:	90                   	nop
 10104e1:	90                   	nop
 10104e2:	90                   	nop
 10104e3:	90                   	nop
 10104e4:	90                   	nop
 10104e5:	90                   	nop
 10104e6:	90                   	nop
 10104e7:	90                   	nop
 10104e8:	90                   	nop
 10104e9:	90                   	nop
 10104ea:	90                   	nop
 10104eb:	90                   	nop
 10104ec:	90                   	nop
 10104ed:	90                   	nop
 10104ee:	90                   	nop
 10104ef:	90                   	nop
 10104f0:	90                   	nop
 10104f1:	90                   	nop
 10104f2:	90                   	nop
 10104f3:	90                   	nop
 10104f4:	90                   	nop
 10104f5:	90                   	nop
 10104f6:	90                   	nop
 10104f7:	90                   	nop
 10104f8:	90                   	nop
 10104f9:	90                   	nop
 10104fa:	90                   	nop
 10104fb:	90                   	nop
 10104fc:	90                   	nop
 10104fd:	90                   	nop
 10104fe:	90                   	nop
 10104ff:	90                   	nop
 1010500:	90                   	nop
 1010501:	90                   	nop
 1010502:	90                   	nop
 1010503:	90                   	nop
 1010504:	90                   	nop
 1010505:	90                   	nop
 1010506:	90                   	nop
 1010507:	90                   	nop
 1010508:	90                   	nop
 1010509:	90                   	nop
 101050a:	90                   	nop
 101050b:	90                   	nop
 101050c:	90                   	nop
 101050d:	90                   	nop
 101050e:	90                   	nop
 101050f:	90                   	nop
 1010510:	90                   	nop
 1010511:	90                   	nop
 1010512:	90                   	nop
 1010513:	90                   	nop
 1010514:	90                   	nop
 1010515:	90                   	nop
 1010516:	90                   	nop
 1010517:	90                   	nop
 1010518:	90                   	nop
 1010519:	90                   	nop
 101051a:	90                   	nop
 101051b:	90                   	nop
 101051c:	90                   	nop
 101051d:	90                   	nop
 101051e:	90                   	nop
 101051f:	90                   	nop
 1010520:	90                   	nop
 1010521:	90                   	nop
 1010522:	90                   	nop
 1010523:	90                   	nop
 1010524:	90                   	nop
 1010525:	90                   	nop
 1010526:	90                   	nop
 1010527:	90                   	nop
 1010528:	90                   	nop
 1010529:	90                   	nop
 101052a:	90                   	nop
 101052b:	90                   	nop
 101052c:	90                   	nop
 101052d:	90                   	nop
 101052e:	90                   	nop
 101052f:	90                   	nop
 1010530:	90                   	nop
 1010531:	90                   	nop
 1010532:	90                   	nop
 1010533:	90                   	nop
 1010534:	90                   	nop
 1010535:	90                   	nop
 1010536:	90                   	nop
 1010537:	90                   	nop
 1010538:	90                   	nop
 1010539:	90                   	nop
 101053a:	90                   	nop
 101053b:	90                   	nop
 101053c:	90                   	nop
 101053d:	90                   	nop
 101053e:	90                   	nop
 101053f:	90                   	nop
 1010540:	90                   	nop
 1010541:	90                   	nop
 1010542:	90                   	nop
 1010543:	90                   	nop
 1010544:	90                   	nop
 1010545:	90                   	nop
 1010546:	90                   	nop
 1010547:	90                   	nop
 1010548:	90                   	nop
 1010549:	90                   	nop
 101054a:	90                   	nop
 101054b:	90                   	nop
 101054c:	90                   	nop
 101054d:	90                   	nop
 101054e:	90                   	nop
 101054f:	90                   	nop
 1010550:	90                   	nop
 1010551:	90                   	nop
 1010552:	90                   	nop
 1010553:	90                   	nop
 1010554:	90                   	nop
 1010555:	90                   	nop
 1010556:	90                   	nop
 1010557:	90                   	nop
 1010558:	90                   	nop
 1010559:	90                   	nop
 101055a:	90                   	nop
 101055b:	90                   	nop
 101055c:	90                   	nop
 101055d:	90                   	nop
 101055e:	90                   	nop
 101055f:	90                   	nop
 1010560:	90                   	nop
 1010561:	90                   	nop
 1010562:	90                   	nop
 1010563:	90                   	nop
 1010564:	90                   	nop
 1010565:	90                   	nop
 1010566:	90                   	nop
 1010567:	90                   	nop
 1010568:	90                   	nop
 1010569:	90                   	nop
 101056a:	90                   	nop
 101056b:	90                   	nop
 101056c:	90                   	nop
 101056d:	90                   	nop
 101056e:	90                   	nop
 101056f:	90                   	nop
 1010570:	90                   	nop
 1010571:	90                   	nop
 1010572:	90                   	nop
 1010573:	90                   	nop
 1010574:	90                   	nop
 1010575:	90                   	nop
 1010576:	90                   	nop
 1010577:	90                   	nop
 1010578:	90                   	nop
 1010579:	90                   	nop
 101057a:	90                   	nop
 101057b:	90                   	nop
 101057c:	90                   	nop
 101057d:	90                   	nop
 101057e:	90                   	nop
 101057f:	90                   	nop
 1010580:	90                   	nop
 1010581:	90                   	nop
 1010582:	90                   	nop
 1010583:	90                   	nop
 1010584:	90                   	nop
 1010585:	90                   	nop
 1010586:	90                   	nop
 1010587:	90                   	nop
 1010588:	90                   	nop
 1010589:	90                   	nop
 101058a:	90                   	nop
 101058b:	90                   	nop
 101058c:	90                   	nop
 101058d:	90                   	nop
 101058e:	90                   	nop
 101058f:	90                   	nop
 1010590:	90                   	nop
 1010591:	90                   	nop
 1010592:	90                   	nop
 1010593:	90                   	nop
 1010594:	90                   	nop
 1010595:	90                   	nop
 1010596:	90                   	nop
 1010597:	90                   	nop
 1010598:	90                   	nop
 1010599:	90                   	nop
 101059a:	90                   	nop
 101059b:	90                   	nop
 101059c:	90                   	nop
 101059d:	90                   	nop
 101059e:	90                   	nop
 101059f:	90                   	nop
 10105a0:	90                   	nop
 10105a1:	90                   	nop
 10105a2:	90                   	nop
 10105a3:	90                   	nop
 10105a4:	90                   	nop
 10105a5:	90                   	nop
 10105a6:	90                   	nop
 10105a7:	90                   	nop
 10105a8:	90                   	nop
 10105a9:	90                   	nop
 10105aa:	90                   	nop
 10105ab:	90                   	nop
 10105ac:	90                   	nop
 10105ad:	90                   	nop
 10105ae:	90                   	nop
 10105af:	90                   	nop
 10105b0:	90                   	nop
 10105b1:	90                   	nop
 10105b2:	90                   	nop
 10105b3:	90                   	nop
 10105b4:	90                   	nop
 10105b5:	90                   	nop
 10105b6:	90                   	nop
 10105b7:	90                   	nop
 10105b8:	90                   	nop
 10105b9:	90                   	nop
 10105ba:	90                   	nop
 10105bb:	90                   	nop
 10105bc:	90                   	nop
 10105bd:	90                   	nop
 10105be:	90                   	nop
 10105bf:	90                   	nop
 10105c0:	90                   	nop
 10105c1:	90                   	nop
 10105c2:	90                   	nop
 10105c3:	90                   	nop
 10105c4:	90                   	nop
 10105c5:	90                   	nop
 10105c6:	90                   	nop
 10105c7:	90                   	nop
 10105c8:	90                   	nop
 10105c9:	90                   	nop
 10105ca:	90                   	nop
 10105cb:	90                   	nop
 10105cc:	90                   	nop
 10105cd:	90                   	nop
 10105ce:	90                   	nop
 10105cf:	90                   	nop
 10105d0:	90                   	nop
 10105d1:	90                   	nop
 10105d2:	90                   	nop
 10105d3:	90                   	nop
 10105d4:	90                   	nop
 10105d5:	90                   	nop
 10105d6:	90                   	nop
 10105d7:	90                   	nop
 10105d8:	90                   	nop
 10105d9:	90                   	nop
 10105da:	90                   	nop
 10105db:	90                   	nop
 10105dc:	90                   	nop
 10105dd:	90                   	nop
 10105de:	90                   	nop
 10105df:	90                   	nop
 10105e0:	90                   	nop
 10105e1:	90                   	nop
 10105e2:	90                   	nop
 10105e3:	90                   	nop
 10105e4:	90                   	nop
 10105e5:	90                   	nop
 10105e6:	90                   	nop
 10105e7:	90                   	nop
 10105e8:	90                   	nop
 10105e9:	90                   	nop
 10105ea:	90                   	nop
 10105eb:	90                   	nop
 10105ec:	90                   	nop
 10105ed:	90                   	nop
 10105ee:	90                   	nop
 10105ef:	90                   	nop
 10105f0:	90                   	nop
 10105f1:	90                   	nop
 10105f2:	90                   	nop
 10105f3:	90                   	nop
 10105f4:	90                   	nop
 10105f5:	90                   	nop
 10105f6:	90                   	nop
 10105f7:	90                   	nop
 10105f8:	90                   	nop
 10105f9:	90                   	nop
 10105fa:	90                   	nop
 10105fb:	90                   	nop
 10105fc:	90                   	nop
 10105fd:	90                   	nop
 10105fe:	90                   	nop
 10105ff:	90                   	nop
 1010600:	90                   	nop
 1010601:	90                   	nop
 1010602:	90                   	nop
 1010603:	90                   	nop
 1010604:	90                   	nop
 1010605:	90                   	nop
 1010606:	90                   	nop
 1010607:	90                   	nop
 1010608:	90                   	nop
 1010609:	90                   	nop
 101060a:	90                   	nop
 101060b:	90                   	nop
 101060c:	90                   	nop
 101060d:	90                   	nop
 101060e:	90                   	nop
 101060f:	90                   	nop
 1010610:	90                   	nop
 1010611:	90                   	nop
 1010612:	90                   	nop
 1010613:	90                   	nop
 1010614:	90                   	nop
 1010615:	90                   	nop
 1010616:	90                   	nop
 1010617:	90                   	nop
 1010618:	90                   	nop
 1010619:	90                   	nop
 101061a:	90                   	nop
 101061b:	90                   	nop
 101061c:	90                   	nop
 101061d:	90                   	nop
 101061e:	90                   	nop
 101061f:	90                   	nop
 1010620:	90                   	nop
 1010621:	90                   	nop
 1010622:	90                   	nop
 1010623:	90                   	nop
 1010624:	90                   	nop
 1010625:	90                   	nop
 1010626:	90                   	nop
 1010627:	90                   	nop
 1010628:	90                   	nop
 1010629:	90                   	nop
 101062a:	90                   	nop
 101062b:	90                   	nop
 101062c:	90                   	nop
 101062d:	90                   	nop
 101062e:	90                   	nop
 101062f:	90                   	nop
 1010630:	90                   	nop
 1010631:	90                   	nop
 1010632:	90                   	nop
 1010633:	90                   	nop
 1010634:	90                   	nop
 1010635:	90                   	nop
 1010636:	90                   	nop
 1010637:	90                   	nop
 1010638:	90                   	nop
 1010639:	90                   	nop
 101063a:	90                   	nop
 101063b:	90                   	nop
 101063c:	90                   	nop
 101063d:	90                   	nop
 101063e:	90                   	nop
 101063f:	90                   	nop
 1010640:	90                   	nop
 1010641:	90                   	nop
 1010642:	90                   	nop
 1010643:	90                   	nop
 1010644:	90                   	nop
 1010645:	90                   	nop
 1010646:	90                   	nop
 1010647:	90                   	nop
 1010648:	90                   	nop
 1010649:	90                   	nop
 101064a:	90                   	nop
 101064b:	90                   	nop
 101064c:	90                   	nop
 101064d:	90                   	nop
 101064e:	90                   	nop
 101064f:	90                   	nop
 1010650:	90                   	nop
 1010651:	90                   	nop
 1010652:	90                   	nop
 1010653:	90                   	nop
 1010654:	90                   	nop
 1010655:	90                   	nop
 1010656:	90                   	nop
 1010657:	90                   	nop
 1010658:	90                   	nop
 1010659:	90                   	nop
 101065a:	90                   	nop
 101065b:	90                   	nop
 101065c:	90                   	nop
 101065d:	90                   	nop
 101065e:	90                   	nop
 101065f:	90                   	nop
 1010660:	90                   	nop
 1010661:	90                   	nop
 1010662:	90                   	nop
 1010663:	90                   	nop
 1010664:	90                   	nop
 1010665:	90                   	nop
 1010666:	90                   	nop
 1010667:	90                   	nop
 1010668:	90                   	nop
 1010669:	90                   	nop
 101066a:	90                   	nop
 101066b:	90                   	nop
 101066c:	90                   	nop
 101066d:	90                   	nop
 101066e:	90                   	nop
 101066f:	90                   	nop
 1010670:	90                   	nop
 1010671:	90                   	nop
 1010672:	90                   	nop
 1010673:	90                   	nop
 1010674:	90                   	nop
 1010675:	90                   	nop
 1010676:	90                   	nop
 1010677:	90                   	nop
 1010678:	90                   	nop
 1010679:	90                   	nop
 101067a:	90                   	nop
 101067b:	90                   	nop
 101067c:	90                   	nop
 101067d:	90                   	nop
 101067e:	90                   	nop
 101067f:	90                   	nop
 1010680:	90                   	nop
 1010681:	90                   	nop
 1010682:	90                   	nop
 1010683:	90                   	nop
 1010684:	90                   	nop
 1010685:	90                   	nop
 1010686:	90                   	nop
 1010687:	90                   	nop
 1010688:	90                   	nop
 1010689:	90                   	nop
 101068a:	90                   	nop
 101068b:	90                   	nop
 101068c:	90                   	nop
 101068d:	90                   	nop
 101068e:	90                   	nop
 101068f:	90                   	nop
 1010690:	90                   	nop
 1010691:	90                   	nop
 1010692:	90                   	nop
 1010693:	90                   	nop
 1010694:	90                   	nop
 1010695:	90                   	nop
 1010696:	90                   	nop
 1010697:	90                   	nop
 1010698:	90                   	nop
 1010699:	90                   	nop
 101069a:	90                   	nop
 101069b:	90                   	nop
 101069c:	90                   	nop
 101069d:	90                   	nop
 101069e:	90                   	nop
 101069f:	90                   	nop
 10106a0:	90                   	nop
 10106a1:	90                   	nop
 10106a2:	90                   	nop
 10106a3:	90                   	nop
 10106a4:	90                   	nop
 10106a5:	90                   	nop
 10106a6:	90                   	nop
 10106a7:	90                   	nop
 10106a8:	90                   	nop
 10106a9:	90                   	nop
 10106aa:	90                   	nop
 10106ab:	90                   	nop
 10106ac:	90                   	nop
 10106ad:	90                   	nop
 10106ae:	90                   	nop
 10106af:	90                   	nop
 10106b0:	90                   	nop
 10106b1:	90                   	nop
 10106b2:	90                   	nop
 10106b3:	90                   	nop
 10106b4:	90                   	nop
 10106b5:	90                   	nop
 10106b6:	90                   	nop
 10106b7:	90                   	nop
 10106b8:	90                   	nop
 10106b9:	90                   	nop
 10106ba:	90                   	nop
 10106bb:	90                   	nop
 10106bc:	90                   	nop
 10106bd:	90                   	nop
 10106be:	90                   	nop
 10106bf:	90                   	nop
 10106c0:	90                   	nop
 10106c1:	90                   	nop
 10106c2:	90                   	nop
 10106c3:	90                   	nop
 10106c4:	90                   	nop
 10106c5:	90                   	nop
 10106c6:	90                   	nop
 10106c7:	90                   	nop
 10106c8:	90                   	nop
 10106c9:	90                   	nop
 10106ca:	90                   	nop
 10106cb:	90                   	nop
 10106cc:	90                   	nop
 10106cd:	90                   	nop
 10106ce:	90                   	nop
 10106cf:	90                   	nop
 10106d0:	90                   	nop
 10106d1:	90                   	nop
 10106d2:	90                   	nop
 10106d3:	90                   	nop
 10106d4:	90                   	nop
 10106d5:	90                   	nop
 10106d6:	90                   	nop
 10106d7:	90                   	nop
 10106d8:	90                   	nop
 10106d9:	90                   	nop
 10106da:	90                   	nop
 10106db:	90                   	nop
 10106dc:	90                   	nop
 10106dd:	90                   	nop
 10106de:	90                   	nop
 10106df:	90                   	nop
 10106e0:	90                   	nop
 10106e1:	90                   	nop
 10106e2:	90                   	nop
 10106e3:	90                   	nop
 10106e4:	90                   	nop
 10106e5:	90                   	nop
 10106e6:	90                   	nop
 10106e7:	90                   	nop
 10106e8:	90                   	nop
 10106e9:	90                   	nop
 10106ea:	90                   	nop
 10106eb:	90                   	nop
 10106ec:	90                   	nop
 10106ed:	90                   	nop
 10106ee:	90                   	nop
 10106ef:	90                   	nop
 10106f0:	90                   	nop
 10106f1:	90                   	nop
 10106f2:	90                   	nop
 10106f3:	90                   	nop
 10106f4:	90                   	nop
 10106f5:	90                   	nop
 10106f6:	90                   	nop
 10106f7:	90                   	nop
 10106f8:	90                   	nop
 10106f9:	90                   	nop
 10106fa:	90                   	nop
 10106fb:	90                   	nop
 10106fc:	90                   	nop
 10106fd:	90                   	nop
 10106fe:	90                   	nop
 10106ff:	90                   	nop
 1010700:	90                   	nop
 1010701:	90                   	nop
 1010702:	90                   	nop
 1010703:	90                   	nop
 1010704:	90                   	nop
 1010705:	90                   	nop
 1010706:	90                   	nop
 1010707:	90                   	nop
 1010708:	90                   	nop
 1010709:	90                   	nop
 101070a:	90                   	nop
 101070b:	90                   	nop
 101070c:	90                   	nop
 101070d:	90                   	nop
 101070e:	90                   	nop
 101070f:	90                   	nop
 1010710:	90                   	nop
 1010711:	90                   	nop
 1010712:	90                   	nop
 1010713:	90                   	nop
 1010714:	90                   	nop
 1010715:	90                   	nop
 1010716:	90                   	nop
 1010717:	90                   	nop
 1010718:	90                   	nop
 1010719:	90                   	nop
 101071a:	90                   	nop
 101071b:	90                   	nop
 101071c:	90                   	nop
 101071d:	90                   	nop
 101071e:	90                   	nop
 101071f:	90                   	nop
 1010720:	90                   	nop
 1010721:	90                   	nop
 1010722:	90                   	nop
 1010723:	90                   	nop
 1010724:	90                   	nop
 1010725:	90                   	nop
 1010726:	90                   	nop
 1010727:	90                   	nop
 1010728:	90                   	nop
 1010729:	90                   	nop
 101072a:	90                   	nop
 101072b:	90                   	nop
 101072c:	90                   	nop
 101072d:	90                   	nop
 101072e:	90                   	nop
 101072f:	90                   	nop
 1010730:	90                   	nop
 1010731:	90                   	nop
 1010732:	90                   	nop
 1010733:	90                   	nop
 1010734:	90                   	nop
 1010735:	90                   	nop
 1010736:	90                   	nop
 1010737:	90                   	nop
 1010738:	90                   	nop
 1010739:	90                   	nop
 101073a:	90                   	nop
 101073b:	90                   	nop
 101073c:	90                   	nop
 101073d:	90                   	nop
 101073e:	90                   	nop
 101073f:	90                   	nop
 1010740:	90                   	nop
 1010741:	90                   	nop
 1010742:	90                   	nop
 1010743:	90                   	nop
 1010744:	90                   	nop
 1010745:	90                   	nop
 1010746:	90                   	nop
 1010747:	90                   	nop
 1010748:	90                   	nop
 1010749:	90                   	nop
 101074a:	90                   	nop
 101074b:	90                   	nop
 101074c:	90                   	nop
 101074d:	90                   	nop
 101074e:	90                   	nop
 101074f:	90                   	nop
 1010750:	90                   	nop
 1010751:	90                   	nop
 1010752:	90                   	nop
 1010753:	90                   	nop
 1010754:	90                   	nop
 1010755:	90                   	nop
 1010756:	90                   	nop
 1010757:	90                   	nop
 1010758:	90                   	nop
 1010759:	90                   	nop
 101075a:	90                   	nop
 101075b:	90                   	nop
 101075c:	90                   	nop
 101075d:	90                   	nop
 101075e:	90                   	nop
 101075f:	90                   	nop
 1010760:	90                   	nop
 1010761:	90                   	nop
 1010762:	90                   	nop
 1010763:	90                   	nop
 1010764:	90                   	nop
 1010765:	90                   	nop
 1010766:	90                   	nop
 1010767:	90                   	nop
 1010768:	90                   	nop
 1010769:	90                   	nop
 101076a:	90                   	nop
 101076b:	90                   	nop
 101076c:	90                   	nop
 101076d:	90                   	nop
 101076e:	90                   	nop
 101076f:	90                   	nop
 1010770:	90                   	nop
 1010771:	90                   	nop
 1010772:	90                   	nop
 1010773:	90                   	nop
 1010774:	90                   	nop
 1010775:	90                   	nop
 1010776:	90                   	nop
 1010777:	90                   	nop
 1010778:	90                   	nop
 1010779:	90                   	nop
 101077a:	90                   	nop
 101077b:	90                   	nop
 101077c:	90                   	nop
 101077d:	90                   	nop
 101077e:	90                   	nop
 101077f:	90                   	nop
 1010780:	90                   	nop
 1010781:	90                   	nop
 1010782:	90                   	nop
 1010783:	90                   	nop
 1010784:	90                   	nop
 1010785:	90                   	nop
 1010786:	90                   	nop
 1010787:	90                   	nop
 1010788:	90                   	nop
 1010789:	90                   	nop
 101078a:	90                   	nop
 101078b:	90                   	nop
 101078c:	90                   	nop
 101078d:	90                   	nop
 101078e:	90                   	nop
 101078f:	90                   	nop
 1010790:	90                   	nop
 1010791:	90                   	nop
 1010792:	90                   	nop
 1010793:	90                   	nop
 1010794:	90                   	nop
 1010795:	90                   	nop
 1010796:	90                   	nop
 1010797:	90                   	nop
 1010798:	90                   	nop
 1010799:	90                   	nop
 101079a:	90                   	nop
 101079b:	90                   	nop
 101079c:	90                   	nop
 101079d:	90                   	nop
 101079e:	90                   	nop
 101079f:	90                   	nop
 10107a0:	90                   	nop
 10107a1:	90                   	nop
 10107a2:	90                   	nop
 10107a3:	90                   	nop
 10107a4:	90                   	nop
 10107a5:	90                   	nop
 10107a6:	90                   	nop
 10107a7:	90                   	nop
 10107a8:	90                   	nop
 10107a9:	90                   	nop
 10107aa:	90                   	nop
 10107ab:	90                   	nop
 10107ac:	90                   	nop
 10107ad:	90                   	nop
 10107ae:	90                   	nop
 10107af:	90                   	nop
 10107b0:	90                   	nop
 10107b1:	90                   	nop
 10107b2:	90                   	nop
 10107b3:	90                   	nop
 10107b4:	90                   	nop
 10107b5:	90                   	nop
 10107b6:	90                   	nop
 10107b7:	90                   	nop
 10107b8:	90                   	nop
 10107b9:	90                   	nop
 10107ba:	90                   	nop
 10107bb:	90                   	nop
 10107bc:	90                   	nop
 10107bd:	90                   	nop
 10107be:	90                   	nop
 10107bf:	90                   	nop
 10107c0:	90                   	nop
 10107c1:	90                   	nop
 10107c2:	90                   	nop
 10107c3:	90                   	nop
 10107c4:	90                   	nop
 10107c5:	90                   	nop
 10107c6:	90                   	nop
 10107c7:	90                   	nop
 10107c8:	90                   	nop
 10107c9:	90                   	nop
 10107ca:	90                   	nop
 10107cb:	90                   	nop
 10107cc:	90                   	nop
 10107cd:	90                   	nop
 10107ce:	90                   	nop
 10107cf:	90                   	nop
 10107d0:	90                   	nop
 10107d1:	90                   	nop
 10107d2:	90                   	nop
 10107d3:	90                   	nop
 10107d4:	90                   	nop
 10107d5:	90                   	nop
 10107d6:	90                   	nop
 10107d7:	90                   	nop
 10107d8:	90                   	nop
 10107d9:	90                   	nop
 10107da:	90                   	nop
 10107db:	90                   	nop
 10107dc:	90                   	nop
 10107dd:	90                   	nop
 10107de:	90                   	nop
 10107df:	90                   	nop
 10107e0:	90                   	nop
 10107e1:	90                   	nop
 10107e2:	90                   	nop
 10107e3:	90                   	nop
 10107e4:	90                   	nop
 10107e5:	90                   	nop
 10107e6:	90                   	nop
 10107e7:	90                   	nop
 10107e8:	90                   	nop
 10107e9:	90                   	nop
 10107ea:	90                   	nop
 10107eb:	90                   	nop
 10107ec:	90                   	nop
 10107ed:	90                   	nop
 10107ee:	90                   	nop
 10107ef:	90                   	nop
 10107f0:	90                   	nop
 10107f1:	90                   	nop
 10107f2:	90                   	nop
 10107f3:	90                   	nop
 10107f4:	90                   	nop
 10107f5:	90                   	nop
 10107f6:	90                   	nop
 10107f7:	90                   	nop
 10107f8:	90                   	nop
 10107f9:	90                   	nop
 10107fa:	90                   	nop
 10107fb:	90                   	nop
 10107fc:	90                   	nop
 10107fd:	90                   	nop
 10107fe:	90                   	nop
 10107ff:	90                   	nop
 1010800:	90                   	nop
 1010801:	90                   	nop
 1010802:	90                   	nop
 1010803:	90                   	nop
 1010804:	90                   	nop
 1010805:	90                   	nop
 1010806:	90                   	nop
 1010807:	90                   	nop
 1010808:	90                   	nop
 1010809:	90                   	nop
 101080a:	90                   	nop
 101080b:	90                   	nop
 101080c:	90                   	nop
 101080d:	90                   	nop
 101080e:	90                   	nop
 101080f:	90                   	nop
 1010810:	90                   	nop
 1010811:	90                   	nop
 1010812:	90                   	nop
 1010813:	90                   	nop
 1010814:	90                   	nop
 1010815:	90                   	nop
 1010816:	90                   	nop
 1010817:	90                   	nop
 1010818:	90                   	nop
 1010819:	90                   	nop
 101081a:	90                   	nop
 101081b:	90                   	nop
 101081c:	90                   	nop
 101081d:	90                   	nop
 101081e:	90                   	nop
 101081f:	90                   	nop
 1010820:	90                   	nop
 1010821:	90                   	nop
 1010822:	90                   	nop
 1010823:	90                   	nop
 1010824:	90                   	nop
 1010825:	90                   	nop
 1010826:	90                   	nop
 1010827:	90                   	nop
 1010828:	90                   	nop
 1010829:	90                   	nop
 101082a:	90                   	nop
 101082b:	90                   	nop
 101082c:	90                   	nop
 101082d:	90                   	nop
 101082e:	90                   	nop
 101082f:	90                   	nop
 1010830:	90                   	nop
 1010831:	90                   	nop
 1010832:	90                   	nop
 1010833:	90                   	nop
 1010834:	90                   	nop
 1010835:	90                   	nop
 1010836:	90                   	nop
 1010837:	90                   	nop
 1010838:	90                   	nop
 1010839:	90                   	nop
 101083a:	90                   	nop
 101083b:	90                   	nop
 101083c:	90                   	nop
 101083d:	90                   	nop
 101083e:	90                   	nop
 101083f:	90                   	nop
 1010840:	90                   	nop
 1010841:	90                   	nop
 1010842:	90                   	nop
 1010843:	90                   	nop
 1010844:	90                   	nop
 1010845:	90                   	nop
 1010846:	90                   	nop
 1010847:	90                   	nop
 1010848:	90                   	nop
 1010849:	90                   	nop
 101084a:	90                   	nop
 101084b:	90                   	nop
 101084c:	90                   	nop
 101084d:	90                   	nop
 101084e:	90                   	nop
 101084f:	90                   	nop
 1010850:	90                   	nop
 1010851:	90                   	nop
 1010852:	90                   	nop
 1010853:	90                   	nop
 1010854:	90                   	nop
 1010855:	90                   	nop
 1010856:	90                   	nop
 1010857:	90                   	nop
 1010858:	90                   	nop
 1010859:	90                   	nop
 101085a:	90                   	nop
 101085b:	90                   	nop
 101085c:	90                   	nop
 101085d:	90                   	nop
 101085e:	90                   	nop
 101085f:	90                   	nop
 1010860:	90                   	nop
 1010861:	90                   	nop
 1010862:	90                   	nop
 1010863:	90                   	nop
 1010864:	90                   	nop
 1010865:	90                   	nop
 1010866:	90                   	nop
 1010867:	90                   	nop
 1010868:	90                   	nop
 1010869:	90                   	nop
 101086a:	90                   	nop
 101086b:	90                   	nop
 101086c:	90                   	nop
 101086d:	90                   	nop
 101086e:	90                   	nop
 101086f:	90                   	nop
 1010870:	90                   	nop
 1010871:	90                   	nop
 1010872:	90                   	nop
 1010873:	90                   	nop
 1010874:	90                   	nop
 1010875:	90                   	nop
 1010876:	90                   	nop
 1010877:	90                   	nop
 1010878:	90                   	nop
 1010879:	90                   	nop
 101087a:	90                   	nop
 101087b:	90                   	nop
 101087c:	90                   	nop
 101087d:	90                   	nop
 101087e:	90                   	nop
 101087f:	90                   	nop
 1010880:	90                   	nop
 1010881:	90                   	nop
 1010882:	90                   	nop
 1010883:	90                   	nop
 1010884:	90                   	nop
 1010885:	90                   	nop
 1010886:	90                   	nop
 1010887:	90                   	nop
 1010888:	90                   	nop
 1010889:	90                   	nop
 101088a:	90                   	nop
 101088b:	90                   	nop
 101088c:	90                   	nop
 101088d:	90                   	nop
 101088e:	90                   	nop
 101088f:	90                   	nop
 1010890:	90                   	nop
 1010891:	90                   	nop
 1010892:	90                   	nop
 1010893:	90                   	nop
 1010894:	90                   	nop
 1010895:	90                   	nop
 1010896:	90                   	nop
 1010897:	90                   	nop
 1010898:	90                   	nop
 1010899:	90                   	nop
 101089a:	90                   	nop
 101089b:	90                   	nop
 101089c:	90                   	nop
 101089d:	90                   	nop
 101089e:	90                   	nop
 101089f:	90                   	nop
 10108a0:	90                   	nop
 10108a1:	90                   	nop
 10108a2:	90                   	nop
 10108a3:	90                   	nop
 10108a4:	90                   	nop
 10108a5:	90                   	nop
 10108a6:	90                   	nop
 10108a7:	90                   	nop
 10108a8:	90                   	nop
 10108a9:	90                   	nop
 10108aa:	90                   	nop
 10108ab:	90                   	nop
 10108ac:	90                   	nop
 10108ad:	90                   	nop
 10108ae:	90                   	nop
 10108af:	90                   	nop
 10108b0:	90                   	nop
 10108b1:	90                   	nop
 10108b2:	90                   	nop
 10108b3:	90                   	nop
 10108b4:	90                   	nop
 10108b5:	90                   	nop
 10108b6:	90                   	nop
 10108b7:	90                   	nop
 10108b8:	90                   	nop
 10108b9:	90                   	nop
 10108ba:	90                   	nop
 10108bb:	90                   	nop
 10108bc:	90                   	nop
 10108bd:	90                   	nop
 10108be:	90                   	nop
 10108bf:	90                   	nop
 10108c0:	90                   	nop
 10108c1:	90                   	nop
 10108c2:	90                   	nop
 10108c3:	90                   	nop
 10108c4:	90                   	nop
 10108c5:	90                   	nop
 10108c6:	90                   	nop
 10108c7:	90                   	nop
 10108c8:	90                   	nop
 10108c9:	90                   	nop
 10108ca:	90                   	nop
 10108cb:	90                   	nop
 10108cc:	90                   	nop
 10108cd:	90                   	nop
 10108ce:	90                   	nop
 10108cf:	90                   	nop
 10108d0:	90                   	nop
 10108d1:	90                   	nop
 10108d2:	90                   	nop
 10108d3:	90                   	nop
 10108d4:	90                   	nop
 10108d5:	90                   	nop
 10108d6:	90                   	nop
 10108d7:	90                   	nop
 10108d8:	90                   	nop
 10108d9:	90                   	nop
 10108da:	90                   	nop
 10108db:	90                   	nop
 10108dc:	90                   	nop
 10108dd:	90                   	nop
 10108de:	90                   	nop
 10108df:	90                   	nop
 10108e0:	90                   	nop
 10108e1:	90                   	nop
 10108e2:	90                   	nop
 10108e3:	90                   	nop
 10108e4:	90                   	nop
 10108e5:	90                   	nop
 10108e6:	90                   	nop
 10108e7:	90                   	nop
 10108e8:	90                   	nop
 10108e9:	90                   	nop
 10108ea:	90                   	nop
 10108eb:	90                   	nop
 10108ec:	90                   	nop
 10108ed:	90                   	nop
 10108ee:	90                   	nop
 10108ef:	90                   	nop
 10108f0:	90                   	nop
 10108f1:	90                   	nop
 10108f2:	90                   	nop
 10108f3:	90                   	nop
 10108f4:	90                   	nop
 10108f5:	90                   	nop
 10108f6:	90                   	nop
 10108f7:	90                   	nop
 10108f8:	90                   	nop
 10108f9:	90                   	nop
 10108fa:	90                   	nop
 10108fb:	90                   	nop
 10108fc:	90                   	nop
 10108fd:	90                   	nop
 10108fe:	90                   	nop
 10108ff:	90                   	nop
 1010900:	90                   	nop
 1010901:	90                   	nop
 1010902:	90                   	nop
 1010903:	90                   	nop
 1010904:	90                   	nop
 1010905:	90                   	nop
 1010906:	90                   	nop
 1010907:	90                   	nop
 1010908:	90                   	nop
 1010909:	90                   	nop
 101090a:	90                   	nop
 101090b:	90                   	nop
 101090c:	90                   	nop
 101090d:	90                   	nop
 101090e:	90                   	nop
 101090f:	90                   	nop
 1010910:	90                   	nop
 1010911:	90                   	nop
 1010912:	90                   	nop
 1010913:	90                   	nop
 1010914:	90                   	nop
 1010915:	90                   	nop
 1010916:	90                   	nop
 1010917:	90                   	nop
 1010918:	90                   	nop
 1010919:	90                   	nop
 101091a:	90                   	nop
 101091b:	90                   	nop
 101091c:	90                   	nop
 101091d:	90                   	nop
 101091e:	90                   	nop
 101091f:	90                   	nop
 1010920:	90                   	nop
 1010921:	90                   	nop
 1010922:	90                   	nop
 1010923:	90                   	nop
 1010924:	90                   	nop
 1010925:	90                   	nop
 1010926:	90                   	nop
 1010927:	90                   	nop
 1010928:	90                   	nop
 1010929:	90                   	nop
 101092a:	90                   	nop
 101092b:	90                   	nop
 101092c:	90                   	nop
 101092d:	90                   	nop
 101092e:	90                   	nop
 101092f:	90                   	nop
 1010930:	90                   	nop
 1010931:	90                   	nop
 1010932:	90                   	nop
 1010933:	90                   	nop
 1010934:	90                   	nop
 1010935:	90                   	nop
 1010936:	90                   	nop
 1010937:	90                   	nop
 1010938:	90                   	nop
 1010939:	90                   	nop
 101093a:	90                   	nop
 101093b:	90                   	nop
 101093c:	90                   	nop
 101093d:	90                   	nop
 101093e:	90                   	nop
 101093f:	90                   	nop
 1010940:	90                   	nop
 1010941:	90                   	nop
 1010942:	90                   	nop
 1010943:	90                   	nop
 1010944:	90                   	nop
 1010945:	90                   	nop
 1010946:	90                   	nop
 1010947:	90                   	nop
 1010948:	90                   	nop
 1010949:	90                   	nop
 101094a:	90                   	nop
 101094b:	90                   	nop
 101094c:	90                   	nop
 101094d:	90                   	nop
 101094e:	90                   	nop
 101094f:	90                   	nop
 1010950:	90                   	nop
 1010951:	90                   	nop
 1010952:	90                   	nop
 1010953:	90                   	nop
 1010954:	90                   	nop
 1010955:	90                   	nop
 1010956:	90                   	nop
 1010957:	90                   	nop
 1010958:	90                   	nop
 1010959:	90                   	nop
 101095a:	90                   	nop
 101095b:	90                   	nop
 101095c:	90                   	nop
 101095d:	90                   	nop
 101095e:	90                   	nop
 101095f:	90                   	nop
 1010960:	90                   	nop
 1010961:	90                   	nop
 1010962:	90                   	nop
 1010963:	90                   	nop
 1010964:	90                   	nop
 1010965:	90                   	nop
 1010966:	90                   	nop
 1010967:	90                   	nop
 1010968:	90                   	nop
 1010969:	90                   	nop
 101096a:	90                   	nop
 101096b:	90                   	nop
 101096c:	90                   	nop
 101096d:	90                   	nop
 101096e:	90                   	nop
 101096f:	90                   	nop
 1010970:	90                   	nop
 1010971:	90                   	nop
 1010972:	90                   	nop
 1010973:	90                   	nop
 1010974:	90                   	nop
 1010975:	90                   	nop
 1010976:	90                   	nop
 1010977:	90                   	nop
 1010978:	90                   	nop
 1010979:	90                   	nop
 101097a:	90                   	nop
 101097b:	90                   	nop
 101097c:	90                   	nop
 101097d:	90                   	nop
 101097e:	90                   	nop
 101097f:	90                   	nop
 1010980:	90                   	nop
 1010981:	90                   	nop
 1010982:	90                   	nop
 1010983:	90                   	nop
 1010984:	90                   	nop
 1010985:	90                   	nop
 1010986:	90                   	nop
 1010987:	90                   	nop
 1010988:	90                   	nop
 1010989:	90                   	nop
 101098a:	90                   	nop
 101098b:	90                   	nop
 101098c:	90                   	nop
 101098d:	90                   	nop
 101098e:	90                   	nop
 101098f:	90                   	nop
 1010990:	90                   	nop
 1010991:	90                   	nop
 1010992:	90                   	nop
 1010993:	90                   	nop
 1010994:	90                   	nop
 1010995:	90                   	nop
 1010996:	90                   	nop
 1010997:	90                   	nop
 1010998:	90                   	nop
 1010999:	90                   	nop
 101099a:	90                   	nop
 101099b:	90                   	nop
 101099c:	90                   	nop
 101099d:	90                   	nop
 101099e:	90                   	nop
 101099f:	90                   	nop
 10109a0:	90                   	nop
 10109a1:	90                   	nop
 10109a2:	90                   	nop
 10109a3:	90                   	nop
 10109a4:	90                   	nop
 10109a5:	90                   	nop
 10109a6:	90                   	nop
 10109a7:	90                   	nop
 10109a8:	90                   	nop
 10109a9:	90                   	nop
 10109aa:	90                   	nop
 10109ab:	90                   	nop
 10109ac:	90                   	nop
 10109ad:	90                   	nop
 10109ae:	90                   	nop
 10109af:	90                   	nop
 10109b0:	90                   	nop
 10109b1:	90                   	nop
 10109b2:	90                   	nop
 10109b3:	90                   	nop
 10109b4:	90                   	nop
 10109b5:	90                   	nop
 10109b6:	90                   	nop
 10109b7:	90                   	nop
 10109b8:	90                   	nop
 10109b9:	90                   	nop
 10109ba:	90                   	nop
 10109bb:	90                   	nop
 10109bc:	90                   	nop
 10109bd:	90                   	nop
 10109be:	90                   	nop
 10109bf:	90                   	nop
 10109c0:	90                   	nop
 10109c1:	90                   	nop
 10109c2:	90                   	nop
 10109c3:	90                   	nop
 10109c4:	90                   	nop
 10109c5:	90                   	nop
 10109c6:	90                   	nop
 10109c7:	90                   	nop
 10109c8:	90                   	nop
 10109c9:	90                   	nop
 10109ca:	90                   	nop
 10109cb:	90                   	nop
 10109cc:	90                   	nop
 10109cd:	90                   	nop
 10109ce:	90                   	nop
 10109cf:	90                   	nop
 10109d0:	90                   	nop
 10109d1:	90                   	nop
 10109d2:	90                   	nop
 10109d3:	90                   	nop
 10109d4:	90                   	nop
 10109d5:	90                   	nop
 10109d6:	90                   	nop
 10109d7:	90                   	nop
 10109d8:	90                   	nop
 10109d9:	90                   	nop
 10109da:	90                   	nop
 10109db:	90                   	nop
 10109dc:	90                   	nop
 10109dd:	90                   	nop
 10109de:	90                   	nop
 10109df:	90                   	nop
 10109e0:	90                   	nop
 10109e1:	90                   	nop
 10109e2:	90                   	nop
 10109e3:	90                   	nop
 10109e4:	90                   	nop
 10109e5:	90                   	nop
 10109e6:	90                   	nop
 10109e7:	90                   	nop
 10109e8:	90                   	nop
 10109e9:	90                   	nop
 10109ea:	90                   	nop
 10109eb:	90                   	nop
 10109ec:	90                   	nop
 10109ed:	90                   	nop
 10109ee:	90                   	nop
 10109ef:	90                   	nop
 10109f0:	90                   	nop
 10109f1:	90                   	nop
 10109f2:	90                   	nop
 10109f3:	90                   	nop
 10109f4:	90                   	nop
 10109f5:	90                   	nop
 10109f6:	90                   	nop
 10109f7:	90                   	nop
 10109f8:	90                   	nop
 10109f9:	90                   	nop
 10109fa:	90                   	nop
 10109fb:	90                   	nop
 10109fc:	90                   	nop
 10109fd:	90                   	nop
 10109fe:	90                   	nop
 10109ff:	90                   	nop
 1010a00:	90                   	nop
 1010a01:	90                   	nop
 1010a02:	90                   	nop
 1010a03:	90                   	nop
 1010a04:	90                   	nop
 1010a05:	90                   	nop
 1010a06:	90                   	nop
 1010a07:	90                   	nop
 1010a08:	90                   	nop
 1010a09:	90                   	nop
 1010a0a:	90                   	nop
 1010a0b:	90                   	nop
 1010a0c:	90                   	nop
 1010a0d:	90                   	nop
 1010a0e:	90                   	nop
 1010a0f:	90                   	nop
 1010a10:	90                   	nop
 1010a11:	90                   	nop
 1010a12:	90                   	nop
 1010a13:	90                   	nop
 1010a14:	90                   	nop
 1010a15:	90                   	nop
 1010a16:	90                   	nop
 1010a17:	90                   	nop
 1010a18:	90                   	nop
 1010a19:	90                   	nop
 1010a1a:	90                   	nop
 1010a1b:	90                   	nop
 1010a1c:	90                   	nop
 1010a1d:	90                   	nop
 1010a1e:	90                   	nop
 1010a1f:	90                   	nop
 1010a20:	90                   	nop
 1010a21:	90                   	nop
 1010a22:	90                   	nop
 1010a23:	90                   	nop
 1010a24:	90                   	nop
 1010a25:	90                   	nop
 1010a26:	90                   	nop
 1010a27:	90                   	nop
 1010a28:	90                   	nop
 1010a29:	90                   	nop
 1010a2a:	90                   	nop
 1010a2b:	90                   	nop
 1010a2c:	90                   	nop
 1010a2d:	90                   	nop
 1010a2e:	90                   	nop
 1010a2f:	90                   	nop
 1010a30:	90                   	nop
 1010a31:	90                   	nop
 1010a32:	90                   	nop
 1010a33:	90                   	nop
 1010a34:	90                   	nop
 1010a35:	90                   	nop
 1010a36:	90                   	nop
 1010a37:	90                   	nop
 1010a38:	90                   	nop
 1010a39:	90                   	nop
 1010a3a:	90                   	nop
 1010a3b:	90                   	nop
 1010a3c:	90                   	nop
 1010a3d:	90                   	nop
 1010a3e:	90                   	nop
 1010a3f:	90                   	nop
 1010a40:	90                   	nop
 1010a41:	90                   	nop
 1010a42:	90                   	nop
 1010a43:	90                   	nop
 1010a44:	90                   	nop
 1010a45:	90                   	nop
 1010a46:	90                   	nop
 1010a47:	90                   	nop
 1010a48:	90                   	nop
 1010a49:	90                   	nop
 1010a4a:	90                   	nop
 1010a4b:	90                   	nop
 1010a4c:	90                   	nop
 1010a4d:	90                   	nop
 1010a4e:	90                   	nop
 1010a4f:	90                   	nop
 1010a50:	90                   	nop
 1010a51:	90                   	nop
 1010a52:	90                   	nop
 1010a53:	90                   	nop
 1010a54:	90                   	nop
 1010a55:	90                   	nop
 1010a56:	90                   	nop
 1010a57:	90                   	nop
 1010a58:	90                   	nop
 1010a59:	90                   	nop
 1010a5a:	90                   	nop
 1010a5b:	90                   	nop
 1010a5c:	90                   	nop
 1010a5d:	90                   	nop
 1010a5e:	90                   	nop
 1010a5f:	90                   	nop
 1010a60:	90                   	nop
 1010a61:	90                   	nop
 1010a62:	90                   	nop
 1010a63:	90                   	nop
 1010a64:	90                   	nop
 1010a65:	90                   	nop
 1010a66:	90                   	nop
 1010a67:	90                   	nop
 1010a68:	90                   	nop
 1010a69:	90                   	nop
 1010a6a:	90                   	nop
 1010a6b:	90                   	nop
 1010a6c:	90                   	nop
 1010a6d:	90                   	nop
 1010a6e:	90                   	nop
 1010a6f:	90                   	nop
 1010a70:	90                   	nop
 1010a71:	90                   	nop
 1010a72:	90                   	nop
 1010a73:	90                   	nop
 1010a74:	90                   	nop
 1010a75:	90                   	nop
 1010a76:	90                   	nop
 1010a77:	90                   	nop
 1010a78:	90                   	nop
 1010a79:	90                   	nop
 1010a7a:	90                   	nop
 1010a7b:	90                   	nop
 1010a7c:	90                   	nop
 1010a7d:	90                   	nop
 1010a7e:	90                   	nop
 1010a7f:	90                   	nop
 1010a80:	90                   	nop
 1010a81:	90                   	nop
 1010a82:	90                   	nop
 1010a83:	90                   	nop
 1010a84:	90                   	nop
 1010a85:	90                   	nop
 1010a86:	90                   	nop
 1010a87:	90                   	nop
 1010a88:	90                   	nop
 1010a89:	90                   	nop
 1010a8a:	90                   	nop
 1010a8b:	90                   	nop
 1010a8c:	90                   	nop
 1010a8d:	90                   	nop
 1010a8e:	90                   	nop
 1010a8f:	90                   	nop
 1010a90:	90                   	nop
 1010a91:	90                   	nop
 1010a92:	90                   	nop
 1010a93:	90                   	nop
 1010a94:	90                   	nop
 1010a95:	90                   	nop
 1010a96:	90                   	nop
 1010a97:	90                   	nop
 1010a98:	90                   	nop
 1010a99:	90                   	nop
 1010a9a:	90                   	nop
 1010a9b:	90                   	nop
 1010a9c:	90                   	nop
 1010a9d:	90                   	nop
 1010a9e:	90                   	nop
 1010a9f:	90                   	nop
 1010aa0:	90                   	nop
 1010aa1:	90                   	nop
 1010aa2:	90                   	nop
 1010aa3:	90                   	nop
 1010aa4:	90                   	nop
 1010aa5:	90                   	nop
 1010aa6:	90                   	nop
 1010aa7:	90                   	nop
 1010aa8:	90                   	nop
 1010aa9:	90                   	nop
 1010aaa:	90                   	nop
 1010aab:	90                   	nop
 1010aac:	90                   	nop
 1010aad:	90                   	nop
 1010aae:	90                   	nop
 1010aaf:	90                   	nop
 1010ab0:	90                   	nop
 1010ab1:	90                   	nop
 1010ab2:	90                   	nop
 1010ab3:	90                   	nop
 1010ab4:	90                   	nop
 1010ab5:	90                   	nop
 1010ab6:	90                   	nop
 1010ab7:	90                   	nop
 1010ab8:	90                   	nop
 1010ab9:	90                   	nop
 1010aba:	90                   	nop
 1010abb:	90                   	nop
 1010abc:	90                   	nop
 1010abd:	90                   	nop
 1010abe:	90                   	nop
 1010abf:	90                   	nop
 1010ac0:	90                   	nop
 1010ac1:	90                   	nop
 1010ac2:	90                   	nop
 1010ac3:	90                   	nop
 1010ac4:	90                   	nop
 1010ac5:	90                   	nop
 1010ac6:	90                   	nop
 1010ac7:	90                   	nop
 1010ac8:	90                   	nop
 1010ac9:	90                   	nop
 1010aca:	90                   	nop
 1010acb:	90                   	nop
 1010acc:	90                   	nop
 1010acd:	90                   	nop
 1010ace:	90                   	nop
 1010acf:	90                   	nop
 1010ad0:	90                   	nop
 1010ad1:	90                   	nop
 1010ad2:	90                   	nop
 1010ad3:	90                   	nop
 1010ad4:	90                   	nop
 1010ad5:	90                   	nop
 1010ad6:	90                   	nop
 1010ad7:	90                   	nop
 1010ad8:	90                   	nop
 1010ad9:	90                   	nop
 1010ada:	90                   	nop
 1010adb:	90                   	nop
 1010adc:	90                   	nop
 1010add:	90                   	nop
 1010ade:	90                   	nop
 1010adf:	90                   	nop
 1010ae0:	90                   	nop
 1010ae1:	90                   	nop
 1010ae2:	90                   	nop
 1010ae3:	90                   	nop
 1010ae4:	90                   	nop
 1010ae5:	90                   	nop
 1010ae6:	90                   	nop
 1010ae7:	90                   	nop
 1010ae8:	90                   	nop
 1010ae9:	90                   	nop
 1010aea:	90                   	nop
 1010aeb:	90                   	nop
 1010aec:	90                   	nop
 1010aed:	90                   	nop
 1010aee:	90                   	nop
 1010aef:	90                   	nop
 1010af0:	90                   	nop
 1010af1:	90                   	nop
 1010af2:	90                   	nop
 1010af3:	90                   	nop
 1010af4:	90                   	nop
 1010af5:	90                   	nop
 1010af6:	90                   	nop
 1010af7:	90                   	nop
 1010af8:	90                   	nop
 1010af9:	90                   	nop
 1010afa:	90                   	nop
 1010afb:	90                   	nop
 1010afc:	90                   	nop
 1010afd:	90                   	nop
 1010afe:	90                   	nop
 1010aff:	90                   	nop
 1010b00:	90                   	nop
 1010b01:	90                   	nop
 1010b02:	90                   	nop
 1010b03:	90                   	nop
 1010b04:	90                   	nop
 1010b05:	90                   	nop
 1010b06:	90                   	nop
 1010b07:	90                   	nop
 1010b08:	90                   	nop
 1010b09:	90                   	nop
 1010b0a:	90                   	nop
 1010b0b:	90                   	nop
 1010b0c:	90                   	nop
 1010b0d:	90                   	nop
 1010b0e:	90                   	nop
 1010b0f:	90                   	nop
 1010b10:	90                   	nop
 1010b11:	90                   	nop
 1010b12:	90                   	nop
 1010b13:	90                   	nop
 1010b14:	90                   	nop
 1010b15:	90                   	nop
 1010b16:	90                   	nop
 1010b17:	90                   	nop
 1010b18:	90                   	nop
 1010b19:	90                   	nop
 1010b1a:	90                   	nop
 1010b1b:	90                   	nop
 1010b1c:	90                   	nop
 1010b1d:	90                   	nop
 1010b1e:	90                   	nop
 1010b1f:	90                   	nop
 1010b20:	90                   	nop
 1010b21:	90                   	nop
 1010b22:	90                   	nop
 1010b23:	90                   	nop
 1010b24:	90                   	nop
 1010b25:	90                   	nop
 1010b26:	90                   	nop
 1010b27:	90                   	nop
 1010b28:	90                   	nop
 1010b29:	90                   	nop
 1010b2a:	90                   	nop
 1010b2b:	90                   	nop
 1010b2c:	90                   	nop
 1010b2d:	90                   	nop
 1010b2e:	90                   	nop
 1010b2f:	90                   	nop
 1010b30:	90                   	nop
 1010b31:	90                   	nop
 1010b32:	90                   	nop
 1010b33:	90                   	nop
 1010b34:	90                   	nop
 1010b35:	90                   	nop
 1010b36:	90                   	nop
 1010b37:	90                   	nop
 1010b38:	90                   	nop
 1010b39:	90                   	nop
 1010b3a:	90                   	nop
 1010b3b:	90                   	nop
 1010b3c:	90                   	nop
 1010b3d:	90                   	nop
 1010b3e:	90                   	nop
 1010b3f:	90                   	nop
 1010b40:	90                   	nop
 1010b41:	90                   	nop
 1010b42:	90                   	nop
 1010b43:	90                   	nop
 1010b44:	90                   	nop
 1010b45:	90                   	nop
 1010b46:	90                   	nop
 1010b47:	90                   	nop
 1010b48:	90                   	nop
 1010b49:	90                   	nop
 1010b4a:	90                   	nop
 1010b4b:	90                   	nop
 1010b4c:	90                   	nop
 1010b4d:	90                   	nop
 1010b4e:	90                   	nop
 1010b4f:	90                   	nop
 1010b50:	90                   	nop
 1010b51:	90                   	nop
 1010b52:	90                   	nop
 1010b53:	90                   	nop
 1010b54:	90                   	nop
 1010b55:	90                   	nop
 1010b56:	90                   	nop
 1010b57:	90                   	nop
 1010b58:	90                   	nop
 1010b59:	90                   	nop
 1010b5a:	90                   	nop
 1010b5b:	90                   	nop
 1010b5c:	90                   	nop
 1010b5d:	90                   	nop
 1010b5e:	90                   	nop
 1010b5f:	90                   	nop
 1010b60:	90                   	nop
 1010b61:	90                   	nop
 1010b62:	90                   	nop
 1010b63:	90                   	nop
 1010b64:	90                   	nop
 1010b65:	90                   	nop
 1010b66:	90                   	nop
 1010b67:	90                   	nop
 1010b68:	90                   	nop
 1010b69:	90                   	nop
 1010b6a:	90                   	nop
 1010b6b:	90                   	nop
 1010b6c:	90                   	nop
 1010b6d:	90                   	nop
 1010b6e:	90                   	nop
 1010b6f:	90                   	nop
 1010b70:	90                   	nop
 1010b71:	90                   	nop
 1010b72:	90                   	nop
 1010b73:	90                   	nop
 1010b74:	90                   	nop
 1010b75:	90                   	nop
 1010b76:	90                   	nop
 1010b77:	90                   	nop
 1010b78:	90                   	nop
 1010b79:	90                   	nop
 1010b7a:	90                   	nop
 1010b7b:	90                   	nop
 1010b7c:	90                   	nop
 1010b7d:	90                   	nop
 1010b7e:	90                   	nop
 1010b7f:	90                   	nop
 1010b80:	90                   	nop
 1010b81:	90                   	nop
 1010b82:	90                   	nop
 1010b83:	90                   	nop
 1010b84:	90                   	nop
 1010b85:	90                   	nop
 1010b86:	90                   	nop
 1010b87:	90                   	nop
 1010b88:	90                   	nop
 1010b89:	90                   	nop
 1010b8a:	90                   	nop
 1010b8b:	90                   	nop
 1010b8c:	90                   	nop
 1010b8d:	90                   	nop
 1010b8e:	90                   	nop
 1010b8f:	90                   	nop
 1010b90:	90                   	nop
 1010b91:	90                   	nop
 1010b92:	90                   	nop
 1010b93:	90                   	nop
 1010b94:	90                   	nop
 1010b95:	90                   	nop
 1010b96:	90                   	nop
 1010b97:	90                   	nop
 1010b98:	90                   	nop
 1010b99:	90                   	nop
 1010b9a:	90                   	nop
 1010b9b:	90                   	nop
 1010b9c:	90                   	nop
 1010b9d:	90                   	nop
 1010b9e:	90                   	nop
 1010b9f:	90                   	nop
 1010ba0:	90                   	nop
 1010ba1:	90                   	nop
 1010ba2:	90                   	nop
 1010ba3:	90                   	nop
 1010ba4:	90                   	nop
 1010ba5:	90                   	nop
 1010ba6:	90                   	nop
 1010ba7:	90                   	nop
 1010ba8:	90                   	nop
 1010ba9:	90                   	nop
 1010baa:	90                   	nop
 1010bab:	90                   	nop
 1010bac:	90                   	nop
 1010bad:	90                   	nop
 1010bae:	90                   	nop
 1010baf:	90                   	nop
 1010bb0:	90                   	nop
 1010bb1:	90                   	nop
 1010bb2:	90                   	nop
 1010bb3:	90                   	nop
 1010bb4:	90                   	nop
 1010bb5:	90                   	nop
 1010bb6:	90                   	nop
 1010bb7:	90                   	nop
 1010bb8:	90                   	nop
 1010bb9:	90                   	nop
 1010bba:	90                   	nop
 1010bbb:	90                   	nop
 1010bbc:	90                   	nop
 1010bbd:	90                   	nop
 1010bbe:	90                   	nop
 1010bbf:	90                   	nop
 1010bc0:	90                   	nop
 1010bc1:	90                   	nop
 1010bc2:	90                   	nop
 1010bc3:	90                   	nop
 1010bc4:	90                   	nop
 1010bc5:	90                   	nop
 1010bc6:	90                   	nop
 1010bc7:	90                   	nop
 1010bc8:	90                   	nop
 1010bc9:	90                   	nop
 1010bca:	90                   	nop
 1010bcb:	90                   	nop
 1010bcc:	90                   	nop
 1010bcd:	90                   	nop
 1010bce:	90                   	nop
 1010bcf:	90                   	nop
 1010bd0:	90                   	nop
 1010bd1:	90                   	nop
 1010bd2:	90                   	nop
 1010bd3:	90                   	nop
 1010bd4:	90                   	nop
 1010bd5:	90                   	nop
 1010bd6:	90                   	nop
 1010bd7:	90                   	nop
 1010bd8:	90                   	nop
 1010bd9:	90                   	nop
 1010bda:	90                   	nop
 1010bdb:	90                   	nop
 1010bdc:	90                   	nop
 1010bdd:	90                   	nop
 1010bde:	90                   	nop
 1010bdf:	90                   	nop
 1010be0:	90                   	nop
 1010be1:	90                   	nop
 1010be2:	90                   	nop
 1010be3:	90                   	nop
 1010be4:	90                   	nop
 1010be5:	90                   	nop
 1010be6:	90                   	nop
 1010be7:	90                   	nop
 1010be8:	90                   	nop
 1010be9:	90                   	nop
 1010bea:	90                   	nop
 1010beb:	90                   	nop
 1010bec:	90                   	nop
 1010bed:	90                   	nop
 1010bee:	90                   	nop
 1010bef:	90                   	nop
 1010bf0:	90                   	nop
 1010bf1:	90                   	nop
 1010bf2:	90                   	nop
 1010bf3:	90                   	nop
 1010bf4:	90                   	nop
 1010bf5:	90                   	nop
 1010bf6:	90                   	nop
 1010bf7:	90                   	nop
 1010bf8:	90                   	nop
 1010bf9:	90                   	nop
 1010bfa:	90                   	nop
 1010bfb:	90                   	nop
 1010bfc:	90                   	nop
 1010bfd:	90                   	nop
 1010bfe:	90                   	nop
 1010bff:	90                   	nop
 1010c00:	90                   	nop
 1010c01:	90                   	nop
 1010c02:	90                   	nop
 1010c03:	90                   	nop
 1010c04:	90                   	nop
 1010c05:	90                   	nop
 1010c06:	90                   	nop
 1010c07:	90                   	nop
 1010c08:	90                   	nop
 1010c09:	90                   	nop
 1010c0a:	90                   	nop
 1010c0b:	90                   	nop
 1010c0c:	90                   	nop
 1010c0d:	90                   	nop
 1010c0e:	90                   	nop
 1010c0f:	90                   	nop
 1010c10:	90                   	nop
 1010c11:	90                   	nop
 1010c12:	90                   	nop
 1010c13:	90                   	nop
 1010c14:	90                   	nop
 1010c15:	90                   	nop
 1010c16:	90                   	nop
 1010c17:	90                   	nop
 1010c18:	90                   	nop
 1010c19:	90                   	nop
 1010c1a:	90                   	nop
 1010c1b:	90                   	nop
 1010c1c:	90                   	nop
 1010c1d:	90                   	nop
 1010c1e:	90                   	nop
 1010c1f:	90                   	nop
 1010c20:	90                   	nop
 1010c21:	90                   	nop
 1010c22:	90                   	nop
 1010c23:	90                   	nop
 1010c24:	90                   	nop
 1010c25:	90                   	nop
 1010c26:	90                   	nop
 1010c27:	90                   	nop
 1010c28:	90                   	nop
 1010c29:	90                   	nop
 1010c2a:	90                   	nop
 1010c2b:	90                   	nop
 1010c2c:	90                   	nop
 1010c2d:	90                   	nop
 1010c2e:	90                   	nop
 1010c2f:	90                   	nop
 1010c30:	90                   	nop
 1010c31:	90                   	nop
 1010c32:	90                   	nop
 1010c33:	90                   	nop
 1010c34:	90                   	nop
 1010c35:	90                   	nop
 1010c36:	90                   	nop
 1010c37:	90                   	nop
 1010c38:	90                   	nop
 1010c39:	90                   	nop
 1010c3a:	90                   	nop
 1010c3b:	90                   	nop
 1010c3c:	90                   	nop
 1010c3d:	90                   	nop
 1010c3e:	90                   	nop
 1010c3f:	90                   	nop
 1010c40:	90                   	nop
 1010c41:	90                   	nop
 1010c42:	90                   	nop
 1010c43:	90                   	nop
 1010c44:	90                   	nop
 1010c45:	90                   	nop
 1010c46:	90                   	nop
 1010c47:	90                   	nop
 1010c48:	90                   	nop
 1010c49:	90                   	nop
 1010c4a:	90                   	nop
 1010c4b:	90                   	nop
 1010c4c:	90                   	nop
 1010c4d:	90                   	nop
 1010c4e:	90                   	nop
 1010c4f:	90                   	nop
 1010c50:	90                   	nop
 1010c51:	90                   	nop
 1010c52:	90                   	nop
 1010c53:	90                   	nop
 1010c54:	90                   	nop
 1010c55:	90                   	nop
 1010c56:	90                   	nop
 1010c57:	90                   	nop
 1010c58:	90                   	nop
 1010c59:	90                   	nop
 1010c5a:	90                   	nop
 1010c5b:	90                   	nop
 1010c5c:	90                   	nop
 1010c5d:	90                   	nop
 1010c5e:	90                   	nop
 1010c5f:	90                   	nop
 1010c60:	90                   	nop
 1010c61:	90                   	nop
 1010c62:	90                   	nop
 1010c63:	90                   	nop
 1010c64:	90                   	nop
 1010c65:	90                   	nop
 1010c66:	90                   	nop
 1010c67:	90                   	nop
 1010c68:	90                   	nop
 1010c69:	90                   	nop
 1010c6a:	90                   	nop
 1010c6b:	90                   	nop
 1010c6c:	90                   	nop
 1010c6d:	90                   	nop
 1010c6e:	90                   	nop
 1010c6f:	90                   	nop
 1010c70:	90                   	nop
 1010c71:	90                   	nop
 1010c72:	90                   	nop
 1010c73:	90                   	nop
 1010c74:	90                   	nop
 1010c75:	90                   	nop
 1010c76:	90                   	nop
 1010c77:	90                   	nop
 1010c78:	90                   	nop
 1010c79:	90                   	nop
 1010c7a:	90                   	nop
 1010c7b:	90                   	nop
 1010c7c:	90                   	nop
 1010c7d:	90                   	nop
 1010c7e:	90                   	nop
 1010c7f:	90                   	nop
 1010c80:	90                   	nop
 1010c81:	90                   	nop
 1010c82:	90                   	nop
 1010c83:	90                   	nop
 1010c84:	90                   	nop
 1010c85:	90                   	nop
 1010c86:	90                   	nop
 1010c87:	90                   	nop
 1010c88:	90                   	nop
 1010c89:	90                   	nop
 1010c8a:	90                   	nop
 1010c8b:	90                   	nop
 1010c8c:	90                   	nop
 1010c8d:	90                   	nop
 1010c8e:	90                   	nop
 1010c8f:	90                   	nop
 1010c90:	90                   	nop
 1010c91:	90                   	nop
 1010c92:	90                   	nop
 1010c93:	90                   	nop
 1010c94:	90                   	nop
 1010c95:	90                   	nop
 1010c96:	90                   	nop
 1010c97:	90                   	nop
 1010c98:	90                   	nop
 1010c99:	90                   	nop
 1010c9a:	90                   	nop
 1010c9b:	90                   	nop
 1010c9c:	90                   	nop
 1010c9d:	90                   	nop
 1010c9e:	90                   	nop
 1010c9f:	90                   	nop
 1010ca0:	90                   	nop
 1010ca1:	90                   	nop
 1010ca2:	90                   	nop
 1010ca3:	90                   	nop
 1010ca4:	90                   	nop
 1010ca5:	90                   	nop
 1010ca6:	90                   	nop
 1010ca7:	90                   	nop
 1010ca8:	90                   	nop
 1010ca9:	90                   	nop
 1010caa:	90                   	nop
 1010cab:	90                   	nop
 1010cac:	90                   	nop
 1010cad:	90                   	nop
 1010cae:	90                   	nop
 1010caf:	90                   	nop
 1010cb0:	90                   	nop
 1010cb1:	90                   	nop
 1010cb2:	90                   	nop
 1010cb3:	90                   	nop
 1010cb4:	90                   	nop
 1010cb5:	90                   	nop
 1010cb6:	90                   	nop
 1010cb7:	90                   	nop
 1010cb8:	90                   	nop
 1010cb9:	90                   	nop
 1010cba:	90                   	nop
 1010cbb:	90                   	nop
 1010cbc:	90                   	nop
 1010cbd:	90                   	nop
 1010cbe:	90                   	nop
 1010cbf:	90                   	nop
 1010cc0:	90                   	nop
 1010cc1:	90                   	nop
 1010cc2:	90                   	nop
 1010cc3:	90                   	nop
 1010cc4:	90                   	nop
 1010cc5:	90                   	nop
 1010cc6:	90                   	nop
 1010cc7:	90                   	nop
 1010cc8:	90                   	nop
 1010cc9:	90                   	nop
 1010cca:	90                   	nop
 1010ccb:	90                   	nop
 1010ccc:	90                   	nop
 1010ccd:	90                   	nop
 1010cce:	90                   	nop
 1010ccf:	90                   	nop
 1010cd0:	90                   	nop
 1010cd1:	90                   	nop
 1010cd2:	90                   	nop
 1010cd3:	90                   	nop
 1010cd4:	90                   	nop
 1010cd5:	90                   	nop
 1010cd6:	90                   	nop
 1010cd7:	90                   	nop
 1010cd8:	90                   	nop
 1010cd9:	90                   	nop
 1010cda:	90                   	nop
 1010cdb:	90                   	nop
 1010cdc:	90                   	nop
 1010cdd:	90                   	nop
 1010cde:	90                   	nop
 1010cdf:	90                   	nop
 1010ce0:	90                   	nop
 1010ce1:	90                   	nop
 1010ce2:	90                   	nop
 1010ce3:	90                   	nop
 1010ce4:	90                   	nop
 1010ce5:	90                   	nop
 1010ce6:	90                   	nop
 1010ce7:	90                   	nop
 1010ce8:	90                   	nop
 1010ce9:	90                   	nop
 1010cea:	90                   	nop
 1010ceb:	90                   	nop
 1010cec:	90                   	nop
 1010ced:	90                   	nop
 1010cee:	90                   	nop
 1010cef:	90                   	nop
 1010cf0:	90                   	nop
 1010cf1:	90                   	nop
 1010cf2:	90                   	nop
 1010cf3:	90                   	nop
 1010cf4:	90                   	nop
 1010cf5:	90                   	nop
 1010cf6:	90                   	nop
 1010cf7:	90                   	nop
 1010cf8:	90                   	nop
 1010cf9:	90                   	nop
 1010cfa:	90                   	nop
 1010cfb:	90                   	nop
 1010cfc:	90                   	nop
 1010cfd:	90                   	nop
 1010cfe:	90                   	nop
 1010cff:	90                   	nop
 1010d00:	90                   	nop
 1010d01:	90                   	nop
 1010d02:	90                   	nop
 1010d03:	90                   	nop
 1010d04:	90                   	nop
 1010d05:	90                   	nop
 1010d06:	90                   	nop
 1010d07:	90                   	nop
 1010d08:	90                   	nop
 1010d09:	90                   	nop
 1010d0a:	90                   	nop
 1010d0b:	90                   	nop
 1010d0c:	90                   	nop
 1010d0d:	90                   	nop
 1010d0e:	90                   	nop
 1010d0f:	90                   	nop
 1010d10:	90                   	nop
 1010d11:	90                   	nop
 1010d12:	90                   	nop
 1010d13:	90                   	nop
 1010d14:	90                   	nop
 1010d15:	90                   	nop
 1010d16:	90                   	nop
 1010d17:	90                   	nop
 1010d18:	90                   	nop
 1010d19:	90                   	nop
 1010d1a:	90                   	nop
 1010d1b:	90                   	nop
 1010d1c:	90                   	nop
 1010d1d:	90                   	nop
 1010d1e:	90                   	nop
 1010d1f:	90                   	nop
 1010d20:	90                   	nop
 1010d21:	90                   	nop
 1010d22:	90                   	nop
 1010d23:	90                   	nop
 1010d24:	90                   	nop
 1010d25:	90                   	nop
 1010d26:	90                   	nop
 1010d27:	90                   	nop
 1010d28:	90                   	nop
 1010d29:	90                   	nop
 1010d2a:	90                   	nop
 1010d2b:	90                   	nop
 1010d2c:	90                   	nop
 1010d2d:	90                   	nop
 1010d2e:	90                   	nop
 1010d2f:	90                   	nop
 1010d30:	90                   	nop
 1010d31:	90                   	nop
 1010d32:	90                   	nop
 1010d33:	90                   	nop
 1010d34:	90                   	nop
 1010d35:	90                   	nop
 1010d36:	90                   	nop
 1010d37:	90                   	nop
 1010d38:	90                   	nop
 1010d39:	90                   	nop
 1010d3a:	90                   	nop
 1010d3b:	90                   	nop
 1010d3c:	90                   	nop
 1010d3d:	90                   	nop
 1010d3e:	90                   	nop
 1010d3f:	90                   	nop
 1010d40:	90                   	nop
 1010d41:	90                   	nop
 1010d42:	90                   	nop
 1010d43:	90                   	nop
 1010d44:	90                   	nop
 1010d45:	90                   	nop
 1010d46:	90                   	nop
 1010d47:	90                   	nop
 1010d48:	90                   	nop
 1010d49:	90                   	nop
 1010d4a:	90                   	nop
 1010d4b:	90                   	nop
 1010d4c:	90                   	nop
 1010d4d:	90                   	nop
 1010d4e:	90                   	nop
 1010d4f:	90                   	nop
 1010d50:	90                   	nop
 1010d51:	90                   	nop
 1010d52:	90                   	nop
 1010d53:	90                   	nop
 1010d54:	90                   	nop
 1010d55:	90                   	nop
 1010d56:	90                   	nop
 1010d57:	90                   	nop
 1010d58:	90                   	nop
 1010d59:	90                   	nop
 1010d5a:	90                   	nop
 1010d5b:	90                   	nop
 1010d5c:	90                   	nop
 1010d5d:	90                   	nop
 1010d5e:	90                   	nop
 1010d5f:	90                   	nop
 1010d60:	90                   	nop
 1010d61:	90                   	nop
 1010d62:	90                   	nop
 1010d63:	90                   	nop
 1010d64:	90                   	nop
 1010d65:	90                   	nop
 1010d66:	90                   	nop
 1010d67:	90                   	nop
 1010d68:	90                   	nop
 1010d69:	90                   	nop
 1010d6a:	90                   	nop
 1010d6b:	90                   	nop
 1010d6c:	90                   	nop
 1010d6d:	90                   	nop
 1010d6e:	90                   	nop
 1010d6f:	90                   	nop
 1010d70:	90                   	nop
 1010d71:	90                   	nop
 1010d72:	90                   	nop
 1010d73:	90                   	nop
 1010d74:	90                   	nop
 1010d75:	90                   	nop
 1010d76:	90                   	nop
 1010d77:	90                   	nop
 1010d78:	90                   	nop
 1010d79:	90                   	nop
 1010d7a:	90                   	nop
 1010d7b:	90                   	nop
 1010d7c:	90                   	nop
 1010d7d:	90                   	nop
 1010d7e:	90                   	nop
 1010d7f:	90                   	nop
 1010d80:	90                   	nop
 1010d81:	90                   	nop
 1010d82:	90                   	nop
 1010d83:	90                   	nop
 1010d84:	90                   	nop
 1010d85:	90                   	nop
 1010d86:	90                   	nop
 1010d87:	90                   	nop
 1010d88:	90                   	nop
 1010d89:	90                   	nop
 1010d8a:	90                   	nop
 1010d8b:	90                   	nop
 1010d8c:	90                   	nop
 1010d8d:	90                   	nop
 1010d8e:	90                   	nop
 1010d8f:	90                   	nop
 1010d90:	90                   	nop
 1010d91:	90                   	nop
 1010d92:	90                   	nop
 1010d93:	90                   	nop
 1010d94:	90                   	nop
 1010d95:	90                   	nop
 1010d96:	90                   	nop
 1010d97:	90                   	nop
 1010d98:	90                   	nop
 1010d99:	90                   	nop
 1010d9a:	90                   	nop
 1010d9b:	90                   	nop
 1010d9c:	90                   	nop
 1010d9d:	90                   	nop
 1010d9e:	90                   	nop
 1010d9f:	90                   	nop
 1010da0:	90                   	nop
 1010da1:	90                   	nop
 1010da2:	90                   	nop
 1010da3:	90                   	nop
 1010da4:	90                   	nop
 1010da5:	90                   	nop
 1010da6:	90                   	nop
 1010da7:	90                   	nop
 1010da8:	90                   	nop
 1010da9:	90                   	nop
 1010daa:	90                   	nop
 1010dab:	90                   	nop
 1010dac:	90                   	nop
 1010dad:	90                   	nop
 1010dae:	90                   	nop
 1010daf:	90                   	nop
 1010db0:	90                   	nop
 1010db1:	90                   	nop
 1010db2:	90                   	nop
 1010db3:	90                   	nop
 1010db4:	90                   	nop
 1010db5:	90                   	nop
 1010db6:	90                   	nop
 1010db7:	90                   	nop
 1010db8:	90                   	nop
 1010db9:	90                   	nop
 1010dba:	90                   	nop
 1010dbb:	90                   	nop
 1010dbc:	90                   	nop
 1010dbd:	90                   	nop
 1010dbe:	90                   	nop
 1010dbf:	90                   	nop
 1010dc0:	90                   	nop
 1010dc1:	90                   	nop
 1010dc2:	90                   	nop
 1010dc3:	90                   	nop
 1010dc4:	90                   	nop
 1010dc5:	90                   	nop
 1010dc6:	90                   	nop
 1010dc7:	90                   	nop
 1010dc8:	90                   	nop
 1010dc9:	90                   	nop
 1010dca:	90                   	nop
 1010dcb:	90                   	nop
 1010dcc:	90                   	nop
 1010dcd:	90                   	nop
 1010dce:	90                   	nop
 1010dcf:	90                   	nop
 1010dd0:	90                   	nop
 1010dd1:	90                   	nop
 1010dd2:	90                   	nop
 1010dd3:	90                   	nop
 1010dd4:	90                   	nop
 1010dd5:	90                   	nop
 1010dd6:	90                   	nop
 1010dd7:	90                   	nop
 1010dd8:	90                   	nop
 1010dd9:	90                   	nop
 1010dda:	90                   	nop
 1010ddb:	90                   	nop
 1010ddc:	90                   	nop
 1010ddd:	90                   	nop
 1010dde:	90                   	nop
 1010ddf:	90                   	nop
 1010de0:	90                   	nop
 1010de1:	90                   	nop
 1010de2:	90                   	nop
 1010de3:	90                   	nop
 1010de4:	90                   	nop
 1010de5:	90                   	nop
 1010de6:	90                   	nop
 1010de7:	90                   	nop
 1010de8:	90                   	nop
 1010de9:	90                   	nop
 1010dea:	90                   	nop
 1010deb:	90                   	nop
 1010dec:	90                   	nop
 1010ded:	90                   	nop
 1010dee:	90                   	nop
 1010def:	90                   	nop
 1010df0:	90                   	nop
 1010df1:	90                   	nop
 1010df2:	90                   	nop
 1010df3:	90                   	nop
 1010df4:	90                   	nop
 1010df5:	90                   	nop
 1010df6:	90                   	nop
 1010df7:	90                   	nop
 1010df8:	90                   	nop
 1010df9:	90                   	nop
 1010dfa:	90                   	nop
 1010dfb:	90                   	nop
 1010dfc:	90                   	nop
 1010dfd:	90                   	nop
 1010dfe:	90                   	nop
 1010dff:	90                   	nop
 1010e00:	90                   	nop
 1010e01:	90                   	nop
 1010e02:	90                   	nop
 1010e03:	90                   	nop
 1010e04:	90                   	nop
 1010e05:	90                   	nop
 1010e06:	90                   	nop
 1010e07:	90                   	nop
 1010e08:	90                   	nop
 1010e09:	90                   	nop
 1010e0a:	90                   	nop
 1010e0b:	90                   	nop
 1010e0c:	90                   	nop
 1010e0d:	90                   	nop
 1010e0e:	90                   	nop
 1010e0f:	90                   	nop
 1010e10:	90                   	nop
 1010e11:	90                   	nop
 1010e12:	90                   	nop
 1010e13:	90                   	nop
 1010e14:	90                   	nop
 1010e15:	90                   	nop
 1010e16:	90                   	nop
 1010e17:	90                   	nop
 1010e18:	90                   	nop
 1010e19:	90                   	nop
 1010e1a:	90                   	nop
 1010e1b:	90                   	nop
 1010e1c:	90                   	nop
 1010e1d:	90                   	nop
 1010e1e:	90                   	nop
 1010e1f:	90                   	nop
 1010e20:	90                   	nop
 1010e21:	90                   	nop
 1010e22:	90                   	nop
 1010e23:	90                   	nop
 1010e24:	90                   	nop
 1010e25:	90                   	nop
 1010e26:	90                   	nop
 1010e27:	90                   	nop
 1010e28:	90                   	nop
 1010e29:	90                   	nop
 1010e2a:	90                   	nop
 1010e2b:	90                   	nop
 1010e2c:	90                   	nop
 1010e2d:	90                   	nop
 1010e2e:	90                   	nop
 1010e2f:	90                   	nop
 1010e30:	90                   	nop
 1010e31:	90                   	nop
 1010e32:	90                   	nop
 1010e33:	90                   	nop
 1010e34:	90                   	nop
 1010e35:	90                   	nop
 1010e36:	90                   	nop
 1010e37:	90                   	nop
 1010e38:	90                   	nop
 1010e39:	90                   	nop
 1010e3a:	90                   	nop
 1010e3b:	90                   	nop
 1010e3c:	90                   	nop
 1010e3d:	90                   	nop
 1010e3e:	90                   	nop
 1010e3f:	90                   	nop
 1010e40:	90                   	nop
 1010e41:	90                   	nop
 1010e42:	90                   	nop
 1010e43:	90                   	nop
 1010e44:	90                   	nop
 1010e45:	90                   	nop
 1010e46:	90                   	nop
 1010e47:	90                   	nop
 1010e48:	90                   	nop
 1010e49:	90                   	nop
 1010e4a:	90                   	nop
 1010e4b:	90                   	nop
 1010e4c:	90                   	nop
 1010e4d:	90                   	nop
 1010e4e:	90                   	nop
 1010e4f:	90                   	nop
 1010e50:	90                   	nop
 1010e51:	90                   	nop
 1010e52:	90                   	nop
 1010e53:	90                   	nop
 1010e54:	90                   	nop
 1010e55:	90                   	nop
 1010e56:	90                   	nop
 1010e57:	90                   	nop
 1010e58:	90                   	nop
 1010e59:	90                   	nop
 1010e5a:	90                   	nop
 1010e5b:	90                   	nop
 1010e5c:	90                   	nop
 1010e5d:	90                   	nop
 1010e5e:	90                   	nop
 1010e5f:	90                   	nop
 1010e60:	90                   	nop
 1010e61:	90                   	nop
 1010e62:	90                   	nop
 1010e63:	90                   	nop
 1010e64:	90                   	nop
 1010e65:	90                   	nop
 1010e66:	90                   	nop
 1010e67:	90                   	nop
 1010e68:	90                   	nop
 1010e69:	90                   	nop
 1010e6a:	90                   	nop
 1010e6b:	90                   	nop
 1010e6c:	90                   	nop
 1010e6d:	90                   	nop
 1010e6e:	90                   	nop
 1010e6f:	90                   	nop
 1010e70:	90                   	nop
 1010e71:	90                   	nop
 1010e72:	90                   	nop
 1010e73:	90                   	nop
 1010e74:	90                   	nop
 1010e75:	90                   	nop
 1010e76:	90                   	nop
 1010e77:	90                   	nop
 1010e78:	90                   	nop
 1010e79:	90                   	nop
 1010e7a:	90                   	nop
 1010e7b:	90                   	nop
 1010e7c:	90                   	nop
 1010e7d:	90                   	nop
 1010e7e:	90                   	nop
 1010e7f:	90                   	nop
 1010e80:	90                   	nop
 1010e81:	90                   	nop
 1010e82:	90                   	nop
 1010e83:	90                   	nop
 1010e84:	90                   	nop
 1010e85:	90                   	nop
 1010e86:	90                   	nop
 1010e87:	90                   	nop
 1010e88:	90                   	nop
 1010e89:	90                   	nop
 1010e8a:	90                   	nop
 1010e8b:	90                   	nop
 1010e8c:	90                   	nop
 1010e8d:	90                   	nop
 1010e8e:	90                   	nop
 1010e8f:	90                   	nop
 1010e90:	90                   	nop
 1010e91:	90                   	nop
 1010e92:	90                   	nop
 1010e93:	90                   	nop
 1010e94:	90                   	nop
 1010e95:	90                   	nop
 1010e96:	90                   	nop
 1010e97:	90                   	nop
 1010e98:	90                   	nop
 1010e99:	90                   	nop
 1010e9a:	90                   	nop
 1010e9b:	90                   	nop
 1010e9c:	90                   	nop
 1010e9d:	90                   	nop
 1010e9e:	90                   	nop
 1010e9f:	90                   	nop
 1010ea0:	90                   	nop
 1010ea1:	90                   	nop
 1010ea2:	90                   	nop
 1010ea3:	90                   	nop
 1010ea4:	90                   	nop
 1010ea5:	90                   	nop
 1010ea6:	90                   	nop
 1010ea7:	90                   	nop
 1010ea8:	90                   	nop
 1010ea9:	90                   	nop
 1010eaa:	90                   	nop
 1010eab:	90                   	nop
 1010eac:	90                   	nop
 1010ead:	90                   	nop
 1010eae:	90                   	nop
 1010eaf:	90                   	nop
 1010eb0:	90                   	nop
 1010eb1:	90                   	nop
 1010eb2:	90                   	nop
 1010eb3:	90                   	nop
 1010eb4:	90                   	nop
 1010eb5:	90                   	nop
 1010eb6:	90                   	nop
 1010eb7:	90                   	nop
 1010eb8:	90                   	nop
 1010eb9:	90                   	nop
 1010eba:	90                   	nop
 1010ebb:	90                   	nop
 1010ebc:	90                   	nop
 1010ebd:	90                   	nop
 1010ebe:	90                   	nop
 1010ebf:	90                   	nop
 1010ec0:	90                   	nop
 1010ec1:	90                   	nop
 1010ec2:	90                   	nop
 1010ec3:	90                   	nop
 1010ec4:	90                   	nop
 1010ec5:	90                   	nop
 1010ec6:	90                   	nop
 1010ec7:	90                   	nop
 1010ec8:	90                   	nop
 1010ec9:	90                   	nop
 1010eca:	90                   	nop
 1010ecb:	90                   	nop
 1010ecc:	90                   	nop
 1010ecd:	90                   	nop
 1010ece:	90                   	nop
 1010ecf:	90                   	nop
 1010ed0:	90                   	nop
 1010ed1:	90                   	nop
 1010ed2:	90                   	nop
 1010ed3:	90                   	nop
 1010ed4:	90                   	nop
 1010ed5:	90                   	nop
 1010ed6:	90                   	nop
 1010ed7:	90                   	nop
 1010ed8:	90                   	nop
 1010ed9:	90                   	nop
 1010eda:	90                   	nop
 1010edb:	90                   	nop
 1010edc:	90                   	nop
 1010edd:	90                   	nop
 1010ede:	90                   	nop
 1010edf:	90                   	nop
 1010ee0:	90                   	nop
 1010ee1:	90                   	nop
 1010ee2:	90                   	nop
 1010ee3:	90                   	nop
 1010ee4:	90                   	nop
 1010ee5:	90                   	nop
 1010ee6:	90                   	nop
 1010ee7:	90                   	nop
 1010ee8:	90                   	nop
 1010ee9:	90                   	nop
 1010eea:	90                   	nop
 1010eeb:	90                   	nop
 1010eec:	90                   	nop
 1010eed:	90                   	nop
 1010eee:	90                   	nop
 1010eef:	90                   	nop
 1010ef0:	90                   	nop
 1010ef1:	90                   	nop
 1010ef2:	90                   	nop
 1010ef3:	90                   	nop
 1010ef4:	90                   	nop
 1010ef5:	90                   	nop
 1010ef6:	90                   	nop
 1010ef7:	90                   	nop
 1010ef8:	90                   	nop
 1010ef9:	90                   	nop
 1010efa:	90                   	nop
 1010efb:	90                   	nop
 1010efc:	90                   	nop
 1010efd:	90                   	nop
 1010efe:	90                   	nop
 1010eff:	90                   	nop
 1010f00:	90                   	nop
 1010f01:	90                   	nop
 1010f02:	90                   	nop
 1010f03:	90                   	nop
 1010f04:	90                   	nop
 1010f05:	90                   	nop
 1010f06:	90                   	nop
 1010f07:	90                   	nop
 1010f08:	90                   	nop
 1010f09:	90                   	nop
 1010f0a:	90                   	nop
 1010f0b:	90                   	nop
 1010f0c:	90                   	nop
 1010f0d:	90                   	nop
 1010f0e:	90                   	nop
 1010f0f:	90                   	nop
 1010f10:	90                   	nop
 1010f11:	90                   	nop
 1010f12:	90                   	nop
 1010f13:	90                   	nop
 1010f14:	90                   	nop
 1010f15:	90                   	nop
 1010f16:	90                   	nop
 1010f17:	90                   	nop
 1010f18:	90                   	nop
 1010f19:	90                   	nop
 1010f1a:	90                   	nop
 1010f1b:	90                   	nop
 1010f1c:	90                   	nop
 1010f1d:	90                   	nop
 1010f1e:	90                   	nop
 1010f1f:	90                   	nop
 1010f20:	90                   	nop
 1010f21:	90                   	nop
 1010f22:	90                   	nop
 1010f23:	90                   	nop
 1010f24:	90                   	nop
 1010f25:	90                   	nop
 1010f26:	90                   	nop
 1010f27:	90                   	nop
 1010f28:	90                   	nop
 1010f29:	90                   	nop
 1010f2a:	90                   	nop
 1010f2b:	90                   	nop
 1010f2c:	90                   	nop
 1010f2d:	90                   	nop
 1010f2e:	90                   	nop
 1010f2f:	90                   	nop
 1010f30:	90                   	nop
 1010f31:	90                   	nop
 1010f32:	90                   	nop
 1010f33:	90                   	nop
 1010f34:	90                   	nop
 1010f35:	90                   	nop
 1010f36:	90                   	nop
 1010f37:	90                   	nop
 1010f38:	90                   	nop
 1010f39:	90                   	nop
 1010f3a:	90                   	nop
 1010f3b:	90                   	nop
 1010f3c:	90                   	nop
 1010f3d:	90                   	nop
 1010f3e:	90                   	nop
 1010f3f:	90                   	nop
 1010f40:	90                   	nop
 1010f41:	90                   	nop
 1010f42:	90                   	nop
 1010f43:	90                   	nop
 1010f44:	90                   	nop
 1010f45:	90                   	nop
 1010f46:	90                   	nop
 1010f47:	90                   	nop
 1010f48:	90                   	nop
 1010f49:	90                   	nop
 1010f4a:	90                   	nop
 1010f4b:	90                   	nop
 1010f4c:	90                   	nop
 1010f4d:	90                   	nop
 1010f4e:	90                   	nop
 1010f4f:	90                   	nop
 1010f50:	90                   	nop
 1010f51:	90                   	nop
 1010f52:	90                   	nop
 1010f53:	90                   	nop
 1010f54:	90                   	nop
 1010f55:	90                   	nop
 1010f56:	90                   	nop
 1010f57:	90                   	nop
 1010f58:	90                   	nop
 1010f59:	90                   	nop
 1010f5a:	90                   	nop
 1010f5b:	90                   	nop
 1010f5c:	90                   	nop
 1010f5d:	90                   	nop
 1010f5e:	90                   	nop
 1010f5f:	90                   	nop
 1010f60:	90                   	nop
 1010f61:	90                   	nop
 1010f62:	90                   	nop
 1010f63:	90                   	nop
 1010f64:	90                   	nop
 1010f65:	90                   	nop
 1010f66:	90                   	nop
 1010f67:	90                   	nop
 1010f68:	90                   	nop
 1010f69:	90                   	nop
 1010f6a:	90                   	nop
 1010f6b:	90                   	nop
 1010f6c:	90                   	nop
 1010f6d:	90                   	nop
 1010f6e:	90                   	nop
 1010f6f:	90                   	nop
 1010f70:	90                   	nop
 1010f71:	90                   	nop
 1010f72:	90                   	nop
 1010f73:	90                   	nop
 1010f74:	90                   	nop
 1010f75:	90                   	nop
 1010f76:	90                   	nop
 1010f77:	90                   	nop
 1010f78:	90                   	nop
 1010f79:	90                   	nop
 1010f7a:	90                   	nop
 1010f7b:	90                   	nop
 1010f7c:	90                   	nop
 1010f7d:	90                   	nop
 1010f7e:	90                   	nop
 1010f7f:	90                   	nop
 1010f80:	90                   	nop
 1010f81:	90                   	nop
 1010f82:	90                   	nop
 1010f83:	90                   	nop
 1010f84:	90                   	nop
 1010f85:	90                   	nop
 1010f86:	90                   	nop
 1010f87:	90                   	nop
 1010f88:	90                   	nop
 1010f89:	90                   	nop
 1010f8a:	90                   	nop
 1010f8b:	90                   	nop
 1010f8c:	90                   	nop
 1010f8d:	90                   	nop
 1010f8e:	90                   	nop
 1010f8f:	90                   	nop
 1010f90:	90                   	nop
 1010f91:	90                   	nop
 1010f92:	90                   	nop
 1010f93:	90                   	nop
 1010f94:	90                   	nop
 1010f95:	90                   	nop
 1010f96:	90                   	nop
 1010f97:	90                   	nop
 1010f98:	90                   	nop
 1010f99:	90                   	nop
 1010f9a:	90                   	nop
 1010f9b:	90                   	nop
 1010f9c:	90                   	nop
 1010f9d:	90                   	nop
 1010f9e:	90                   	nop
 1010f9f:	90                   	nop
 1010fa0:	90                   	nop
 1010fa1:	90                   	nop
 1010fa2:	90                   	nop
 1010fa3:	90                   	nop
 1010fa4:	90                   	nop
 1010fa5:	90                   	nop
 1010fa6:	90                   	nop
 1010fa7:	90                   	nop
 1010fa8:	90                   	nop
 1010fa9:	90                   	nop
 1010faa:	90                   	nop
 1010fab:	90                   	nop
 1010fac:	90                   	nop
 1010fad:	90                   	nop
 1010fae:	90                   	nop
 1010faf:	90                   	nop
 1010fb0:	90                   	nop
 1010fb1:	90                   	nop
 1010fb2:	90                   	nop
 1010fb3:	90                   	nop
 1010fb4:	90                   	nop
 1010fb5:	90                   	nop
 1010fb6:	90                   	nop
 1010fb7:	90                   	nop
 1010fb8:	90                   	nop
 1010fb9:	90                   	nop
 1010fba:	90                   	nop
 1010fbb:	90                   	nop
 1010fbc:	90                   	nop
 1010fbd:	90                   	nop
 1010fbe:	90                   	nop
 1010fbf:	90                   	nop
 1010fc0:	90                   	nop
 1010fc1:	90                   	nop
 1010fc2:	90                   	nop
 1010fc3:	90                   	nop
 1010fc4:	90                   	nop
 1010fc5:	90                   	nop
 1010fc6:	90                   	nop
 1010fc7:	90                   	nop
 1010fc8:	90                   	nop
 1010fc9:	90                   	nop
 1010fca:	90                   	nop
 1010fcb:	90                   	nop
 1010fcc:	90                   	nop
 1010fcd:	90                   	nop
 1010fce:	90                   	nop
 1010fcf:	90                   	nop
 1010fd0:	90                   	nop
 1010fd1:	90                   	nop
 1010fd2:	90                   	nop
 1010fd3:	90                   	nop
 1010fd4:	90                   	nop
 1010fd5:	90                   	nop
 1010fd6:	90                   	nop
 1010fd7:	90                   	nop
 1010fd8:	90                   	nop
 1010fd9:	90                   	nop
 1010fda:	90                   	nop
 1010fdb:	90                   	nop
 1010fdc:	90                   	nop
 1010fdd:	90                   	nop
 1010fde:	90                   	nop
 1010fdf:	90                   	nop
 1010fe0:	90                   	nop
 1010fe1:	90                   	nop
 1010fe2:	90                   	nop
 1010fe3:	90                   	nop
 1010fe4:	90                   	nop
 1010fe5:	90                   	nop
 1010fe6:	90                   	nop
 1010fe7:	90                   	nop
 1010fe8:	90                   	nop
 1010fe9:	90                   	nop
 1010fea:	90                   	nop
 1010feb:	90                   	nop
 1010fec:	90                   	nop
 1010fed:	90                   	nop
 1010fee:	90                   	nop
 1010fef:	90                   	nop
 1010ff0:	90                   	nop
 1010ff1:	90                   	nop
 1010ff2:	90                   	nop
 1010ff3:	90                   	nop
 1010ff4:	90                   	nop
 1010ff5:	90                   	nop
 1010ff6:	90                   	nop
 1010ff7:	90                   	nop
 1010ff8:	90                   	nop
 1010ff9:	90                   	nop
 1010ffa:	90                   	nop
 1010ffb:	90                   	nop
 1010ffc:	90                   	nop
 1010ffd:	90                   	nop
 1010ffe:	90                   	nop
 1010fff:	90                   	nop
	...

Disassembly of section .data:

0000000001013000 <seed>:
 1013000:	01 00                	add    DWORD PTR [rax],eax
	...

0000000001013004 <max>:
 1013004:	ff                   	(bad)  
 1013005:	ff                   	(bad)  
 1013006:	ff 00                	inc    DWORD PTR [rax]

0000000001013008 <salloc_header_size>:
 1013008:	04 00                	add    al,0x0
 101300a:	00 00                	add    BYTE PTR [rax],al
 101300c:	73 61                	jae    101306f <salloc_header_size+0x67>
 101300e:	6c                   	ins    BYTE PTR es:[rdi],dx
 101300f:	6c                   	ins    BYTE PTR es:[rdi],dx
 1013010:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 1013011:	63 20                	movsxd esp,DWORD PTR [rax]
 1013013:	74 65                	je     101307a <salloc_header_size+0x72>
 1013015:	73 74                	jae    101308b <salloc_header_size+0x83>
 1013017:	00 73 61             	add    BYTE PTR [rbx+0x61],dh
 101301a:	6c                   	ins    BYTE PTR es:[rdi],dx
 101301b:	6c                   	ins    BYTE PTR es:[rdi],dx
 101301c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 101301d:	63 5f 69             	movsxd ebx,DWORD PTR [rdi+0x69]
 1013020:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 1013021:	69 74 5f 74 65 73 74 	imul   esi,DWORD PTR [rdi+rbx*2+0x74],0x747365
 1013028:	00 
 1013029:	73 61                	jae    101308c <salloc_header_size+0x84>
 101302b:	6c                   	ins    BYTE PTR es:[rdi],dx
 101302c:	6c                   	ins    BYTE PTR es:[rdi],dx
 101302d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 101302e:	63 5f 62             	movsxd ebx,DWORD PTR [rdi+0x62]
 1013031:	61                   	(bad)  
 1013032:	73 69                	jae    101309d <salloc_header_size+0x95>
 1013034:	63 5f 61             	movsxd ebx,DWORD PTR [rdi+0x61]
 1013037:	6c                   	ins    BYTE PTR es:[rdi],dx
 1013038:	6c                   	ins    BYTE PTR es:[rdi],dx
 1013039:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 101303a:	63 00                	movsxd eax,DWORD PTR [rax]
 101303c:	73 61                	jae    101309f <salloc_header_size+0x97>
 101303e:	6c                   	ins    BYTE PTR es:[rdi],dx
 101303f:	6c                   	ins    BYTE PTR es:[rdi],dx
 1013040:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 1013041:	63 5f 66             	movsxd ebx,DWORD PTR [rdi+0x66]
 1013044:	75 6c                	jne    10130b2 <salloc_header_size+0xaa>
 1013046:	6c                   	ins    BYTE PTR es:[rdi],dx
 1013047:	5f                   	pop    rdi
 1013048:	61                   	(bad)  
 1013049:	6c                   	ins    BYTE PTR es:[rdi],dx
 101304a:	6c                   	ins    BYTE PTR es:[rdi],dx
 101304b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 101304c:	63 00                	movsxd eax,DWORD PTR [rax]
 101304e:	73 61                	jae    10130b1 <salloc_header_size+0xa9>
 1013050:	6c                   	ins    BYTE PTR es:[rdi],dx
 1013051:	6c                   	ins    BYTE PTR es:[rdi],dx
 1013052:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 1013053:	63 5f 6f             	movsxd ebx,DWORD PTR [rdi+0x6f]
 1013056:	76 65                	jbe    10130bd <salloc_header_size+0xb5>
 1013058:	72 66                	jb     10130c0 <salloc_header_size+0xb8>
 101305a:	6c                   	ins    BYTE PTR es:[rdi],dx
 101305b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 101305c:	77 5f                	ja     10130bd <salloc_header_size+0xb5>
 101305e:	61                   	(bad)  
 101305f:	6c                   	ins    BYTE PTR es:[rdi],dx
 1013060:	6c                   	ins    BYTE PTR es:[rdi],dx
 1013061:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 1013062:	63 00                	movsxd eax,DWORD PTR [rax]
 1013064:	73 61                	jae    10130c7 <salloc_header_size+0xbf>
 1013066:	6c                   	ins    BYTE PTR es:[rdi],dx
 1013067:	6c                   	ins    BYTE PTR es:[rdi],dx
 1013068:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 1013069:	63 5f 6d             	movsxd ebx,DWORD PTR [rdi+0x6d]
 101306c:	75 6c                	jne    10130da <salloc_header_size+0xd2>
 101306e:	74 69                	je     10130d9 <salloc_header_size+0xd1>
 1013070:	70 6c                	jo     10130de <salloc_header_size+0xd6>
 1013072:	65 5f                	gs pop rdi
 1013074:	61                   	(bad)  
 1013075:	6c                   	ins    BYTE PTR es:[rdi],dx
 1013076:	6c                   	ins    BYTE PTR es:[rdi],dx
 1013077:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 1013078:	63 00                	movsxd eax,DWORD PTR [rax]
 101307a:	73 61                	jae    10130dd <salloc_header_size+0xd5>
 101307c:	6c                   	ins    BYTE PTR es:[rdi],dx
 101307d:	6c                   	ins    BYTE PTR es:[rdi],dx
 101307e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 101307f:	63 5f 61             	movsxd ebx,DWORD PTR [rdi+0x61]
 1013082:	6c                   	ins    BYTE PTR es:[rdi],dx
 1013083:	6c                   	ins    BYTE PTR es:[rdi],dx
 1013084:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 1013085:	63 5f 6e             	movsxd ebx,DWORD PTR [rdi+0x6e]
 1013088:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 1013089:	74 5f                	je     10130ea <salloc_header_size+0xe2>
 101308b:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
 101308d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 101308e:	75 67                	jne    10130f7 <salloc_header_size+0xef>
 1013090:	68 00 73 61 6c       	push   0x6c617300
 1013095:	6c                   	ins    BYTE PTR es:[rdi],dx
 1013096:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 1013097:	63 5f 62             	movsxd ebx,DWORD PTR [rdi+0x62]
 101309a:	61                   	(bad)  
 101309b:	73 69                	jae    1013106 <salloc_header_size+0xfe>
 101309d:	63 5f 66             	movsxd ebx,DWORD PTR [rdi+0x66]
 10130a0:	72 65                	jb     1013107 <salloc_header_size+0xff>
 10130a2:	65 00 73 61          	add    BYTE PTR gs:[rbx+0x61],dh
 10130a6:	6c                   	ins    BYTE PTR es:[rdi],dx
 10130a7:	6c                   	ins    BYTE PTR es:[rdi],dx
 10130a8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 10130a9:	63 5f 66             	movsxd ebx,DWORD PTR [rdi+0x66]
 10130ac:	75 6c                	jne    101311a <salloc_header_size+0x112>
 10130ae:	6c                   	ins    BYTE PTR es:[rdi],dx
 10130af:	5f                   	pop    rdi
 10130b0:	66 72 65             	data16 jb 1013118 <salloc_header_size+0x110>
 10130b3:	65 00 73 61          	add    BYTE PTR gs:[rbx+0x61],dh
 10130b7:	6c                   	ins    BYTE PTR es:[rdi],dx
 10130b8:	6c                   	ins    BYTE PTR es:[rdi],dx
 10130b9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 10130ba:	63 5f 6d             	movsxd ebx,DWORD PTR [rdi+0x6d]
 10130bd:	75 6c                	jne    101312b <salloc_header_size+0x123>
 10130bf:	74 69                	je     101312a <salloc_header_size+0x122>
 10130c1:	70 6c                	jo     101312f <salloc_header_size+0x127>
 10130c3:	65 5f                	gs pop rdi
 10130c5:	66 72 65             	data16 jb 101312d <salloc_header_size+0x125>
 10130c8:	65 00 73 61          	add    BYTE PTR gs:[rbx+0x61],dh
 10130cc:	6c                   	ins    BYTE PTR es:[rdi],dx
 10130cd:	6c                   	ins    BYTE PTR es:[rdi],dx
 10130ce:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 10130cf:	63 5f 66             	movsxd ebx,DWORD PTR [rdi+0x66]
 10130d2:	72 65                	jb     1013139 <salloc_header_size+0x131>
 10130d4:	65 5f                	gs pop rdi
 10130d6:	6a 6f                	push   0x6f
 10130d8:	69 6e 5f 74 61 69 6c 	imul   ebp,DWORD PTR [rsi+0x5f],0x6c696174
 10130df:	00 73 61             	add    BYTE PTR [rbx+0x61],dh
 10130e2:	6c                   	ins    BYTE PTR es:[rdi],dx
 10130e3:	6c                   	ins    BYTE PTR es:[rdi],dx
 10130e4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 10130e5:	63 5f 66             	movsxd ebx,DWORD PTR [rdi+0x66]
 10130e8:	72 65                	jb     101314f <salloc_header_size+0x147>
 10130ea:	65 5f                	gs pop rdi
 10130ec:	6a 6f                	push   0x6f
 10130ee:	69 6e 5f 68 65 61 64 	imul   ebp,DWORD PTR [rsi+0x5f],0x64616568
 10130f5:	00 73 61             	add    BYTE PTR [rbx+0x61],dh
 10130f8:	6c                   	ins    BYTE PTR es:[rdi],dx
 10130f9:	6c                   	ins    BYTE PTR es:[rdi],dx
 10130fa:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 10130fb:	63 5f 66             	movsxd ebx,DWORD PTR [rdi+0x66]
 10130fe:	72 65                	jb     1013165 <salloc_header_size+0x15d>
 1013100:	65 5f                	gs pop rdi
 1013102:	6a 6f                	push   0x6f
 1013104:	69 6e 5f 6d 69 64 00 	imul   ebp,DWORD PTR [rsi+0x5f],0x64696d
 101310b:	73 61                	jae    101316e <salloc_header_size+0x166>
 101310d:	6c                   	ins    BYTE PTR es:[rdi],dx
 101310e:	6c                   	ins    BYTE PTR es:[rdi],dx
 101310f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 1013110:	63 5f 66             	movsxd ebx,DWORD PTR [rdi+0x66]
 1013113:	72 65                	jb     101317a <salloc_header_size+0x172>
 1013115:	65 5f                	gs pop rdi
 1013117:	6a 6f                	push   0x6f
 1013119:	69 6e 5f 63 6f 6e 73 	imul   ebp,DWORD PTR [rsi+0x5f],0x736e6f63
 1013120:	65 63 75 74          	movsxd esi,DWORD PTR gs:[rbp+0x74]
 1013124:	69 76 65 00 73 61 6c 	imul   esi,DWORD PTR [rsi+0x65],0x6c617300
 101312b:	6c                   	ins    BYTE PTR es:[rdi],dx
 101312c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 101312d:	63 5f 66             	movsxd ebx,DWORD PTR [rdi+0x66]
 1013130:	72 65                	jb     1013197 <salloc_header_size+0x18f>
 1013132:	65 5f                	gs pop rdi
 1013134:	61                   	(bad)  
 1013135:	6c                   	ins    BYTE PTR es:[rdi],dx
 1013136:	6c                   	ins    BYTE PTR es:[rdi],dx
 1013137:	00 4c 69 6e          	add    BYTE PTR [rcx+rbp*2+0x6e],cl
 101313b:	6b 65 64 20          	imul   esp,DWORD PTR [rbp+0x64],0x20
 101313f:	6c                   	ins    BYTE PTR es:[rdi],dx
 1013140:	69 73 74 20 74 65 73 	imul   esi,DWORD PTR [rbx+0x74],0x73657420
 1013147:	74 00                	je     1013149 <salloc_header_size+0x141>
 1013149:	69 6e 73 65 72 74 5f 	imul   ebp,DWORD PTR [rsi+0x73],0x5f747265
 1013150:	74 65                	je     10131b7 <salloc_header_size+0x1af>
 1013152:	73 74                	jae    10131c8 <salloc_header_size+0x1c0>
 1013154:	5f                   	pop    rdi
 1013155:	62                   	(bad)  
 1013156:	65 67 69 6e 6e 69 6e 	imul   ebp,DWORD PTR gs:[esi+0x6e],0x676e69
 101315d:	67 00 
 101315f:	69 6e 73 65 72 74 5f 	imul   ebp,DWORD PTR [rsi+0x73],0x5f747265
 1013166:	74 65                	je     10131cd <salloc_header_size+0x1c5>
 1013168:	73 74                	jae    10131de <salloc_header_size+0x1d6>
 101316a:	5f                   	pop    rdi
 101316b:	6d                   	ins    DWORD PTR es:[rdi],dx
 101316c:	69 64 64 6c 65 00 69 	imul   esp,DWORD PTR [rsp+riz*2+0x6c],0x6e690065
 1013173:	6e 
 1013174:	73 65                	jae    10131db <salloc_header_size+0x1d3>
 1013176:	72 74                	jb     10131ec <salloc_header_size+0x1e4>
 1013178:	5f                   	pop    rdi
 1013179:	74 65                	je     10131e0 <salloc_header_size+0x1d8>
 101317b:	73 74                	jae    10131f1 <salloc_header_size+0x1e9>
 101317d:	5f                   	pop    rdi
 101317e:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
 1013180:	64 00 69 6e          	add    BYTE PTR fs:[rcx+0x6e],ch
 1013184:	73 65                	jae    10131eb <salloc_header_size+0x1e3>
 1013186:	72 74                	jb     10131fc <salloc_header_size+0x1f4>
 1013188:	5f                   	pop    rdi
 1013189:	74 65                	je     10131f0 <salloc_header_size+0x1e8>
 101318b:	73 74                	jae    1013201 <salloc_header_size+0x1f9>
 101318d:	5f                   	pop    rdi
 101318e:	69 6e 76 61 6c 69 64 	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
 1013195:	00 72 65             	add    BYTE PTR [rdx+0x65],dh
 1013198:	6d                   	ins    DWORD PTR es:[rdi],dx
 1013199:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 101319a:	76 65                	jbe    1013201 <salloc_header_size+0x1f9>
 101319c:	5f                   	pop    rdi
 101319d:	74 65                	je     1013204 <salloc_header_size+0x1fc>
 101319f:	73 74                	jae    1013215 <salloc_header_size+0x20d>
 10131a1:	5f                   	pop    rdi
 10131a2:	62                   	(bad)  
 10131a3:	65 67 69 6e 6e 69 6e 	imul   ebp,DWORD PTR gs:[esi+0x6e],0x676e69
 10131aa:	67 00 
 10131ac:	72 65                	jb     1013213 <salloc_header_size+0x20b>
 10131ae:	6d                   	ins    DWORD PTR es:[rdi],dx
 10131af:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 10131b0:	76 65                	jbe    1013217 <salloc_header_size+0x20f>
 10131b2:	5f                   	pop    rdi
 10131b3:	74 65                	je     101321a <salloc_header_size+0x212>
 10131b5:	73 74                	jae    101322b <salloc_header_size+0x223>
 10131b7:	5f                   	pop    rdi
 10131b8:	6d                   	ins    DWORD PTR es:[rdi],dx
 10131b9:	69 64 64 6c 65 00 72 	imul   esp,DWORD PTR [rsp+riz*2+0x6c],0x65720065
 10131c0:	65 
 10131c1:	6d                   	ins    DWORD PTR es:[rdi],dx
 10131c2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 10131c3:	76 65                	jbe    101322a <salloc_header_size+0x222>
 10131c5:	5f                   	pop    rdi
 10131c6:	74 65                	je     101322d <salloc_header_size+0x225>
 10131c8:	73 74                	jae    101323e <salloc_header_size+0x236>
 10131ca:	5f                   	pop    rdi
 10131cb:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
 10131cd:	64 00 72 65          	add    BYTE PTR fs:[rdx+0x65],dh
 10131d1:	6d                   	ins    DWORD PTR es:[rdi],dx
 10131d2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 10131d3:	76 65                	jbe    101323a <salloc_header_size+0x232>
 10131d5:	5f                   	pop    rdi
 10131d6:	74 65                	je     101323d <salloc_header_size+0x235>
 10131d8:	73 74                	jae    101324e <salloc_header_size+0x246>
 10131da:	5f                   	pop    rdi
 10131db:	69 6e 76 61 6c 69 64 	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
 10131e2:	00 73 69             	add    BYTE PTR [rbx+0x69],dh
 10131e5:	7a 65                	jp     101324c <salloc_header_size+0x244>
 10131e7:	5f                   	pop    rdi
 10131e8:	74 65                	je     101324f <salloc_header_size+0x247>
 10131ea:	73 74                	jae    1013260 <salloc_header_size+0x258>
 10131ec:	00 72 65             	add    BYTE PTR [rdx+0x65],dh
 10131ef:	6d                   	ins    DWORD PTR es:[rdi],dx
 10131f0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 10131f1:	76 65                	jbe    1013258 <salloc_header_size+0x250>
 10131f3:	5f                   	pop    rdi
 10131f4:	74 65                	je     101325b <salloc_header_size+0x253>
 10131f6:	73 74                	jae    101326c <salloc_header_size+0x264>
 10131f8:	5f                   	pop    rdi
 10131f9:	61                   	(bad)  
 10131fa:	6c                   	ins    BYTE PTR es:[rdi],dx
 10131fb:	6c                   	ins    BYTE PTR es:[rdi],dx
 10131fc:	00 70 75             	add    BYTE PTR [rax+0x75],dh
 10131ff:	73 68                	jae    1013269 <salloc_header_size+0x261>
 1013201:	5f                   	pop    rdi
 1013202:	70 6f                	jo     1013273 <salloc_header_size+0x26b>
 1013204:	70 5f                	jo     1013265 <salloc_header_size+0x25d>
 1013206:	66 72 6f             	data16 jb 1013278 <salloc_header_size+0x270>
 1013209:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 101320a:	74 5f                	je     101326b <salloc_header_size+0x263>
 101320c:	74 65                	je     1013273 <salloc_header_size+0x26b>
 101320e:	73 74                	jae    1013284 <salloc_header_size+0x27c>
 1013210:	00 70 75             	add    BYTE PTR [rax+0x75],dh
 1013213:	73 68                	jae    101327d <salloc_header_size+0x275>
 1013215:	5f                   	pop    rdi
 1013216:	70 6f                	jo     1013287 <salloc_header_size+0x27f>
 1013218:	70 5f                	jo     1013279 <salloc_header_size+0x271>
 101321a:	62 61                	(bad)  
 101321c:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
 101321f:	74 65                	je     1013286 <salloc_header_size+0x27e>
 1013221:	73 74                	jae    1013297 <salloc_header_size+0x28f>
 1013223:	00 73 65             	add    BYTE PTR [rbx+0x65],dh
 1013226:	61                   	(bad)  
 1013227:	72 63                	jb     101328c <salloc_header_size+0x284>
 1013229:	68 5f 74 65 73       	push   0x7365745f
 101322e:	74 00                	je     1013230 <salloc_header_size+0x228>
 1013230:	41 56                	push   r14
 1013232:	4c 20 74 72 65       	rex.WR and BYTE PTR [rdx+rsi*2+0x65],r14b
 1013237:	65 20 74 65 73       	and    BYTE PTR gs:[rbp+riz*2+0x73],dh
 101323c:	74 00                	je     101323e <salloc_header_size+0x236>
 101323e:	69 6e 73 65 72 74 5f 	imul   ebp,DWORD PTR [rsi+0x73],0x5f747265
 1013245:	73 69                	jae    10132b0 <salloc_header_size+0x2a8>
 1013247:	6d                   	ins    DWORD PTR es:[rdi],dx
 1013248:	70 6c                	jo     10132b6 <salloc_header_size+0x2ae>
 101324a:	65 5f                	gs pop rdi
 101324c:	6c                   	ins    BYTE PTR es:[rdi],dx
 101324d:	00 69 6e             	add    BYTE PTR [rcx+0x6e],ch
 1013250:	73 65                	jae    10132b7 <salloc_header_size+0x2af>
 1013252:	72 74                	jb     10132c8 <salloc_header_size+0x2c0>
 1013254:	5f                   	pop    rdi
 1013255:	73 69                	jae    10132c0 <salloc_header_size+0x2b8>
 1013257:	6d                   	ins    DWORD PTR es:[rdi],dx
 1013258:	70 6c                	jo     10132c6 <salloc_header_size+0x2be>
 101325a:	65 5f                	gs pop rdi
 101325c:	72 00                	jb     101325e <salloc_header_size+0x256>
 101325e:	69 6e 73 65 72 74 5f 	imul   ebp,DWORD PTR [rsi+0x73],0x5f747265
 1013265:	73 69                	jae    10132d0 <salloc_header_size+0x2c8>
 1013267:	6d                   	ins    DWORD PTR es:[rdi],dx
 1013268:	70 6c                	jo     10132d6 <salloc_header_size+0x2ce>
 101326a:	65 5f                	gs pop rdi
 101326c:	6c                   	ins    BYTE PTR es:[rdi],dx
 101326d:	6c                   	ins    BYTE PTR es:[rdi],dx
 101326e:	00 69 6e             	add    BYTE PTR [rcx+0x6e],ch
 1013271:	73 65                	jae    10132d8 <salloc_header_size+0x2d0>
 1013273:	72 74                	jb     10132e9 <salloc_header_size+0x2e1>
 1013275:	5f                   	pop    rdi
 1013276:	73 69                	jae    10132e1 <salloc_header_size+0x2d9>
 1013278:	6d                   	ins    DWORD PTR es:[rdi],dx
 1013279:	70 6c                	jo     10132e7 <salloc_header_size+0x2df>
 101327b:	65 5f                	gs pop rdi
 101327d:	72 72                	jb     10132f1 <salloc_header_size+0x2e9>
 101327f:	00 69 6e             	add    BYTE PTR [rcx+0x6e],ch
 1013282:	73 65                	jae    10132e9 <salloc_header_size+0x2e1>
 1013284:	72 74                	jb     10132fa <salloc_header_size+0x2f2>
 1013286:	5f                   	pop    rdi
 1013287:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
 101328a:	70 6c                	jo     10132f8 <salloc_header_size+0x2f0>
 101328c:	65 78 5f             	gs js  10132ee <salloc_header_size+0x2e6>
 101328f:	31 00                	xor    DWORD PTR [rax],eax
 1013291:	69 6e 73 65 72 74 5f 	imul   ebp,DWORD PTR [rsi+0x73],0x5f747265
 1013298:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
 101329b:	70 6c                	jo     1013309 <salloc_header_size+0x301>
 101329d:	65 78 5f             	gs js  10132ff <salloc_header_size+0x2f7>
 10132a0:	32 00                	xor    al,BYTE PTR [rax]
 10132a2:	69 6e 73 65 72 74 5f 	imul   ebp,DWORD PTR [rsi+0x73],0x5f747265
 10132a9:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
 10132ac:	70 6c                	jo     101331a <salloc_header_size+0x312>
 10132ae:	65 78 5f             	gs js  1013310 <salloc_header_size+0x308>
 10132b1:	33 00                	xor    eax,DWORD PTR [rax]
 10132b3:	69 6e 73 65 72 74 5f 	imul   ebp,DWORD PTR [rsi+0x73],0x5f747265
 10132ba:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
 10132bd:	70 6c                	jo     101332b <salloc_header_size+0x323>
 10132bf:	65 78 5f             	gs js  1013321 <salloc_header_size+0x319>
 10132c2:	34 00                	xor    al,0x0
 10132c4:	69 6e 73 65 72 74 5f 	imul   ebp,DWORD PTR [rsi+0x73],0x5f747265
 10132cb:	64 75 70             	fs jne 101333e <salloc_header_size+0x336>
 10132ce:	6c                   	ins    BYTE PTR es:[rdi],dx
 10132cf:	69 63 61 74 65 00 64 	imul   esp,DWORD PTR [rbx+0x61],0x64006574
 10132d6:	65 6c                	gs ins BYTE PTR es:[rdi],dx
 10132d8:	65 74 65             	gs je  1013340 <salloc_header_size+0x338>
 10132db:	5f                   	pop    rdi
 10132dc:	73 69                	jae    1013347 <salloc_header_size+0x33f>
 10132de:	6d                   	ins    DWORD PTR es:[rdi],dx
 10132df:	70 6c                	jo     101334d <salloc_header_size+0x345>
 10132e1:	65 5f                	gs pop rdi
 10132e3:	6c                   	ins    BYTE PTR es:[rdi],dx
 10132e4:	00 64 65 6c          	add    BYTE PTR [rbp+riz*2+0x6c],ah
 10132e8:	65 74 65             	gs je  1013350 <salloc_header_size+0x348>
 10132eb:	5f                   	pop    rdi
 10132ec:	73 69                	jae    1013357 <salloc_header_size+0x34f>
 10132ee:	6d                   	ins    DWORD PTR es:[rdi],dx
 10132ef:	70 6c                	jo     101335d <salloc_header_size+0x355>
 10132f1:	65 5f                	gs pop rdi
 10132f3:	72 00                	jb     10132f5 <salloc_header_size+0x2ed>
 10132f5:	64 65 6c             	fs gs ins BYTE PTR es:[rdi],dx
 10132f8:	65 74 65             	gs je  1013360 <salloc_header_size+0x358>
 10132fb:	5f                   	pop    rdi
 10132fc:	73 69                	jae    1013367 <salloc_header_size+0x35f>
 10132fe:	6d                   	ins    DWORD PTR es:[rdi],dx
 10132ff:	70 6c                	jo     101336d <salloc_header_size+0x365>
 1013301:	65 5f                	gs pop rdi
 1013303:	6c                   	ins    BYTE PTR es:[rdi],dx
 1013304:	6c                   	ins    BYTE PTR es:[rdi],dx
 1013305:	00 64 65 6c          	add    BYTE PTR [rbp+riz*2+0x6c],ah
 1013309:	65 74 65             	gs je  1013371 <salloc_header_size+0x369>
 101330c:	5f                   	pop    rdi
 101330d:	73 69                	jae    1013378 <salloc_header_size+0x370>
 101330f:	6d                   	ins    DWORD PTR es:[rdi],dx
 1013310:	70 6c                	jo     101337e <salloc_header_size+0x376>
 1013312:	65 5f                	gs pop rdi
 1013314:	72 72                	jb     1013388 <salloc_header_size+0x380>
 1013316:	00 64 65 6c          	add    BYTE PTR [rbp+riz*2+0x6c],ah
 101331a:	65 74 65             	gs je  1013382 <salloc_header_size+0x37a>
 101331d:	5f                   	pop    rdi
 101331e:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
 1013321:	70 6c                	jo     101338f <salloc_header_size+0x387>
 1013323:	65 78 5f             	gs js  1013385 <salloc_header_size+0x37d>
 1013326:	31 00                	xor    DWORD PTR [rax],eax
 1013328:	64 65 6c             	fs gs ins BYTE PTR es:[rdi],dx
 101332b:	65 74 65             	gs je  1013393 <salloc_header_size+0x38b>
 101332e:	5f                   	pop    rdi
 101332f:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
 1013332:	70 6c                	jo     10133a0 <salloc_header_size+0x398>
 1013334:	65 78 5f             	gs js  1013396 <salloc_header_size+0x38e>
 1013337:	32 00                	xor    al,BYTE PTR [rax]
 1013339:	64 65 6c             	fs gs ins BYTE PTR es:[rdi],dx
 101333c:	65 74 65             	gs je  10133a4 <salloc_header_size+0x39c>
 101333f:	5f                   	pop    rdi
 1013340:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
 1013343:	70 6c                	jo     10133b1 <salloc_header_size+0x3a9>
 1013345:	65 78 5f             	gs js  10133a7 <salloc_header_size+0x39f>
 1013348:	33 00                	xor    eax,DWORD PTR [rax]
 101334a:	64 65 6c             	fs gs ins BYTE PTR es:[rdi],dx
 101334d:	65 74 65             	gs je  10133b5 <salloc_header_size+0x3ad>
 1013350:	5f                   	pop    rdi
 1013351:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
 1013354:	70 6c                	jo     10133c2 <salloc_header_size+0x3ba>
 1013356:	65 78 5f             	gs js  10133b8 <salloc_header_size+0x3b0>
 1013359:	34 00                	xor    al,0x0
 101335b:	00 00                	add    BYTE PTR [rax],al
 101335d:	00 00                	add    BYTE PTR [rax],al
 101335f:	00 64 65 6c          	add    BYTE PTR [rbp+riz*2+0x6c],ah
 1013363:	65 74 65             	gs je  10133cb <salloc_header_size+0x3c3>
 1013366:	5f                   	pop    rdi
 1013367:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
 101336a:	70 6c                	jo     10133d8 <salloc_header_size+0x3d0>
 101336c:	65 78 5f             	gs js  10133ce <salloc_header_size+0x3c6>
 101336f:	73 69                	jae    10133da <salloc_header_size+0x3d2>
 1013371:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 1013372:	67 6c                	ins    BYTE PTR es:[edi],dx
 1013374:	65 5f                	gs pop rdi
 1013376:	72 6f                	jb     10133e7 <salloc_header_size+0x3df>
 1013378:	74 61                	je     10133db <salloc_header_size+0x3d3>
 101337a:	74 69                	je     10133e5 <salloc_header_size+0x3dd>
 101337c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 101337d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 101337e:	00 00                	add    BYTE PTR [rax],al
 1013380:	64 65 6c             	fs gs ins BYTE PTR es:[rdi],dx
 1013383:	65 74 65             	gs je  10133eb <salloc_header_size+0x3e3>
 1013386:	5f                   	pop    rdi
 1013387:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
 101338a:	70 6c                	jo     10133f8 <salloc_header_size+0x3f0>
 101338c:	65 78 5f             	gs js  10133ee <salloc_header_size+0x3e6>
 101338f:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
 1013391:	75 62                	jne    10133f5 <salloc_header_size+0x3ed>
 1013393:	6c                   	ins    BYTE PTR es:[rdi],dx
 1013394:	65 5f                	gs pop rdi
 1013396:	72 6f                	jb     1013407 <salloc_header_size+0x3ff>
 1013398:	74 61                	je     10133fb <salloc_header_size+0x3f3>
 101339a:	74 69                	je     1013405 <salloc_header_size+0x3fd>
 101339c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 101339d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 101339e:	00 00                	add    BYTE PTR [rax],al
 10133a0:	64 65 6c             	fs gs ins BYTE PTR es:[rdi],dx
 10133a3:	65 74 65             	gs je  101340b <salloc_header_size+0x403>
 10133a6:	5f                   	pop    rdi
 10133a7:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
 10133aa:	70 6c                	jo     1013418 <salloc_header_size+0x410>
 10133ac:	65 78 5f             	gs js  101340e <salloc_header_size+0x406>
 10133af:	6d                   	ins    DWORD PTR es:[rdi],dx
 10133b0:	75 6c                	jne    101341e <salloc_header_size+0x416>
 10133b2:	74 69                	je     101341d <salloc_header_size+0x415>
 10133b4:	70 6c                	jo     1013422 <salloc_header_size+0x41a>
 10133b6:	65 5f                	gs pop rdi
 10133b8:	72 6f                	jb     1013429 <salloc_header_size+0x421>
 10133ba:	74 61                	je     101341d <salloc_header_size+0x415>
 10133bc:	74 69                	je     1013427 <salloc_header_size+0x41f>
 10133be:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 10133bf:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 10133c0:	00 64 65 6c          	add    BYTE PTR [rbp+riz*2+0x6c],ah
 10133c4:	65 74 65             	gs je  101342c <salloc_header_size+0x424>
 10133c7:	5f                   	pop    rdi
 10133c8:	44                   	rex.R
 10133c9:	4e                   	rex.WRX
 10133ca:	45 00 74 65 73       	add    BYTE PTR [r13+riz*2+0x73],r14b
 10133cf:	74 5f                	je     1013430 <salloc_header_size+0x428>
 10133d1:	61                   	(bad)  
 10133d2:	70 6f                	jo     1013443 <salloc_header_size+0x43b>
 10133d4:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
 10133d7:	79 70                	jns    1013449 <salloc_header_size+0x441>
 10133d9:	73 65                	jae    1013440 <salloc_header_size+0x438>
 10133db:	00 00                	add    BYTE PTR [rax],al
 10133dd:	00 00                	add    BYTE PTR [rax],al
 10133df:	00 5b 54             	add    BYTE PTR [rbx+0x54],bl
 10133e2:	44 2d 49 4e 46 4f    	rex.R sub eax,0x4f464e49
 10133e8:	5d                   	pop    rbp
 10133e9:	5b                   	pop    rbx
 10133ea:	25 73 5d 20 2d       	and    eax,0x2d205d73
 10133ef:	20 00                	and    BYTE PTR [rax],al
 10133f1:	5b                   	pop    rbx
 10133f2:	54                   	push   rsp
 10133f3:	44 2d 57 41 52 4e    	rex.R sub eax,0x4e524157
 10133f9:	5d                   	pop    rbp
 10133fa:	5b                   	pop    rbx
 10133fb:	25 73 5d 20 2d       	and    eax,0x2d205d73
 1013400:	20 00                	and    BYTE PTR [rax],al
 1013402:	5b                   	pop    rbx
 1013403:	54                   	push   rsp
 1013404:	44 2d 45 52 52 5d    	rex.R sub eax,0x5d525245
 101340a:	5b                   	pop    rbx
 101340b:	25 73 5d 20 2d       	and    eax,0x2d205d73
 1013410:	20 00                	and    BYTE PTR [rax],al
 1013412:	41 6e                	rex.B outs dx,BYTE PTR ds:[rsi]
 1013414:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 1013415:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 1013416:	79 6d                	jns    1013485 <salloc_header_size+0x47d>
 1013418:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 1013419:	75 73                	jne    101348e <salloc_header_size+0x486>
 101341b:	20 43 61             	and    BYTE PTR [rbx+0x61],al
 101341e:	73 65                	jae    1013485 <salloc_header_size+0x47d>
	...
 1013428:	47                   	rex.RXB
 1013429:	49                   	rex.WB
 101342a:	4e                   	rex.WRX
 101342b:	46                   	rex.RX
 101342c:	4f 20 66 75          	rex.WRXB and BYTE PTR [r14+0x75],r12b
 1013430:	6c                   	ins    BYTE PTR es:[rdi],dx
 1013431:	6c                   	ins    BYTE PTR es:[rdi],dx
 1013432:	2c 20                	sub    al,0x20
 1013434:	5b                   	pop    rbx
 1013435:	25 73 5d 20 72       	and    eax,0x72205d73
 101343a:	65 73 75             	gs jae 10134b2 <salloc_header_size+0x4aa>
 101343d:	6c                   	ins    BYTE PTR es:[rdi],dx
 101343e:	74 20                	je     1013460 <salloc_header_size+0x458>
 1013440:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 1013441:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 1013442:	74 20                	je     1013464 <salloc_header_size+0x45c>
 1013444:	72 65                	jb     10134ab <salloc_header_size+0x4a3>
 1013446:	63 6f 72             	movsxd ebp,DWORD PTR [rdi+0x72]
 1013449:	64 65 64 2e 0a 00    	fs gs fs or al,BYTE PTR cs:[rax]
 101344f:	41 6e                	rex.B outs dx,BYTE PTR ds:[rsi]
 1013451:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 1013452:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 1013453:	79 6d                	jns    10134c2 <salloc_header_size+0x4ba>
 1013455:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 1013456:	75 73                	jne    10134cb <salloc_header_size+0x4c3>
 1013458:	20 54 65 73          	and    BYTE PTR [rbp+riz*2+0x73],dl
 101345c:	74 00                	je     101345e <salloc_header_size+0x456>
 101345e:	46                   	rex.RX
 101345f:	41                   	rex.B
 1013460:	49                   	rex.WB
 1013461:	4c 00 50 41          	rex.WR add BYTE PTR [rax+0x41],r10b
 1013465:	53                   	push   rbx
 1013466:	53                   	push   rbx
 1013467:	00 25 73 0a 00 00    	add    BYTE PTR [rip+0xa73],ah        # 1013ee0 <salloc_header_size+0xed8>
 101346d:	00 00                	add    BYTE PTR [rax],al
 101346f:	00 20                	add    BYTE PTR [rax],ah
 1013471:	20 20                	and    BYTE PTR [rax],ah
 1013473:	20 25 64 20 63 61    	and    BYTE PTR [rip+0x61632064],ah        # 626454dd <MULTIBOOT_LOADED_MAGIC+0x2b8cf254>
 1013479:	73 65                	jae    10134e0 <salloc_header_size+0x4d8>
 101347b:	73 20                	jae    101349d <salloc_header_size+0x495>
 101347d:	65 78 65             	gs js  10134e5 <salloc_header_size+0x4dd>
 1013480:	63 75 74             	movsxd esi,DWORD PTR [rbp+0x74]
 1013483:	65 64 2e 20 53 3a    	gs fs and BYTE PTR cs:[rbx+0x3a],dl
 1013489:	20 25 64 2e 20 46    	and    BYTE PTR [rip+0x46202e64],ah        # 472162f3 <MULTIBOOT_LOADED_MAGIC+0x104a006a>
 101348f:	3a 20                	cmp    ah,BYTE PTR [rax]
 1013491:	25 64 2e 0a 00       	and    eax,0xa2e64
 1013496:	20 20                	and    BYTE PTR [rax],ah
 1013498:	20 20                	and    BYTE PTR [rax],ah
 101349a:	20 20                	and    BYTE PTR [rax],ah
 101349c:	20 20                	and    BYTE PTR [rax],ah
 101349e:	25 73 20 46 41       	and    eax,0x41462073
 10134a3:	49                   	rex.WB
 10134a4:	4c                   	rex.WR
 10134a5:	45                   	rex.RB
 10134a6:	44 0a 00             	or     r8b,BYTE PTR [rax]
 10134a9:	00 00                	add    BYTE PTR [rax],al
 10134ab:	00 00                	add    BYTE PTR [rax],al
 10134ad:	00 00                	add    BYTE PTR [rax],al
 10134af:	00 47 41             	add    BYTE PTR [rdi+0x41],al
 10134b2:	54                   	push   rsp
 10134b3:	20 66 75             	and    BYTE PTR [rsi+0x75],ah
 10134b6:	6c                   	ins    BYTE PTR es:[rdi],dx
 10134b7:	6c                   	ins    BYTE PTR es:[rdi],dx
 10134b8:	2c 20                	sub    al,0x20
 10134ba:	72 65                	jb     1013521 <salloc_header_size+0x519>
 10134bc:	6a 65                	push   0x65
 10134be:	63 74 69 6e          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6e]
 10134c2:	67 20 66 75          	and    BYTE PTR [esi+0x75],ah
 10134c6:	72 74                	jb     101353c <salloc_header_size+0x534>
 10134c8:	68 65 72 20 61       	push   0x61207265
 10134cd:	6c                   	ins    BYTE PTR es:[rdi],dx
 10134ce:	6c                   	ins    BYTE PTR es:[rdi],dx
 10134cf:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 10134d0:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
 10134d3:	69 6f 6e 73 2e 0a 00 	imul   ebp,DWORD PTR [rdi+0x6e],0xa2e73
 10134da:	00 00                	add    BYTE PTR [rax],al
 10134dc:	00 00                	add    BYTE PTR [rax],al
 10134de:	00 00                	add    BYTE PTR [rax],al
 10134e0:	4e 55                	rex.WRX push rbp
 10134e2:	4c                   	rex.WR
 10134e3:	4c 00 00             	rex.WR add BYTE PTR [rax],r8b
 10134e6:	00 00                	add    BYTE PTR [rax],al
 10134e8:	48                   	rex.W
 10134e9:	41                   	rex.B
 10134ea:	4c 3a 20             	rex.WR cmp r12b,BYTE PTR [rax]
 10134ed:	41 73 73             	rex.B jae 1013563 <salloc_header_size+0x55b>
 10134f0:	65 72 74             	gs jb  1013567 <salloc_header_size+0x55f>
 10134f3:	69 6f 6e 20 66 61 69 	imul   ebp,DWORD PTR [rdi+0x6e],0x69616620
 10134fa:	6c                   	ins    BYTE PTR es:[rdi],dx
 10134fb:	65 64 2e 20 44 65 74 	gs fs and BYTE PTR cs:[rbp+riz*2+0x74],al
 1013502:	61                   	(bad)  
 1013503:	69 6c 3a 20 25 73 00 	imul   ebp,DWORD PTR [rdx+rdi*1+0x20],0x7325
 101350a:	00 
 101350b:	00 00                	add    BYTE PTR [rax],al
 101350d:	00 00                	add    BYTE PTR [rax],al
 101350f:	00 55 6e             	add    BYTE PTR [rbp+0x6e],dl
 1013512:	68 61 6e 64 6c       	push   0x6c646e61
 1013517:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
 101351c:	74 65                	je     1013583 <salloc_header_size+0x57b>
 101351e:	72 72                	jb     1013592 <salloc_header_size+0x58a>
 1013520:	75 70                	jne    1013592 <salloc_header_size+0x58a>
 1013522:	74 20                	je     1013544 <salloc_header_size+0x53c>
 1013524:	25 64 20 61 74       	and    eax,0x74612064
 1013529:	20 30                	and    BYTE PTR [rax],dh
 101352b:	78 25                	js     1013552 <salloc_header_size+0x54a>
 101352d:	58                   	pop    rax
 101352e:	2e 20 45 72          	and    BYTE PTR cs:[rbp+0x72],al
 1013532:	72 3a                	jb     101356e <salloc_header_size+0x566>
 1013534:	20 25 64 2e 0a 00    	and    BYTE PTR [rip+0xa2e64],ah        # 10b639e <kernel_end+0x9a3a6>
 101353a:	00 00                	add    BYTE PTR [rax],al
 101353c:	00 00                	add    BYTE PTR [rax],al
 101353e:	00 00                	add    BYTE PTR [rax],al
 1013540:	45 52                	rex.RB push r10
 1013542:	52                   	push   rdx
 1013543:	4f 52                	rex.WRXB push r10
 1013545:	3a 20                	cmp    ah,BYTE PTR [rax]
 1013547:	41 50                	push   r8
 1013549:	49                   	rex.WB
 101354a:	43 20 6e 6f          	rex.XB and BYTE PTR [r14+0x6f],bpl
 101354e:	74 20                	je     1013570 <salloc_header_size+0x568>
 1013550:	73 75                	jae    10135c7 <salloc_header_size+0x5bf>
 1013552:	70 70                	jo     10135c4 <salloc_header_size+0x5bc>
 1013554:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 1013555:	72 74                	jb     10135cb <salloc_header_size+0x5c3>
 1013557:	65 64 20 62 79       	gs and BYTE PTR fs:[rdx+0x79],ah
 101355c:	20 43 50             	and    BYTE PTR [rbx+0x50],al
 101355f:	55                   	push   rbp
 1013560:	2e 0a 00             	or     al,BYTE PTR cs:[rax]
 1013563:	41 50                	push   r8
 1013565:	49                   	rex.WB
 1013566:	43 20 42 61          	rex.XB and BYTE PTR [r10+0x61],al
 101356a:	73 65                	jae    10135d1 <salloc_header_size+0x5c9>
 101356c:	3a 20                	cmp    ah,BYTE PTR [rax]
 101356e:	30 78 25             	xor    BYTE PTR [rax+0x25],bh
 1013571:	58                   	pop    rax
 1013572:	0a 00                	or     al,BYTE PTR [rax]
 1013574:	59                   	pop    rcx
 1013575:	65 73 00             	gs jae 1013578 <salloc_header_size+0x570>
 1013578:	4e 6f                	rex.WRX outs dx,DWORD PTR ds:[rsi]
 101357a:	00 41 50             	add    BYTE PTR [rcx+0x50],al
 101357d:	49                   	rex.WB
 101357e:	43 20 45 6e          	rex.XB and BYTE PTR [r13+0x6e],al
 1013582:	61                   	(bad)  
 1013583:	62                   	(bad)  
 1013584:	6c                   	ins    BYTE PTR es:[rdi],dx
 1013585:	65 64 3a 20          	gs cmp ah,BYTE PTR fs:[rax]
 1013589:	25 73 0a 00 42       	and    eax,0x42000a73
 101358e:	53                   	push   rbx
 101358f:	50                   	push   rax
 1013590:	3a 20                	cmp    ah,BYTE PTR [rax]
 1013592:	25 73 0a 00 41       	and    eax,0x41000a73
 1013597:	50                   	push   rax
 1013598:	49                   	rex.WB
 1013599:	43 20 53 70          	rex.XB and BYTE PTR [r11+0x70],dl
 101359d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 101359e:	75 72                	jne    1013612 <salloc_header_size+0x60a>
 10135a0:	3a 20                	cmp    ah,BYTE PTR [rax]
 10135a2:	30 78 25             	xor    BYTE PTR [rax+0x25],bh
 10135a5:	58                   	pop    rax
 10135a6:	0a 00                	or     al,BYTE PTR [rax]
 10135a8:	49                   	rex.WB
 10135a9:	44 54                	rex.R push rsp
 10135ab:	3a 20                	cmp    ah,BYTE PTR [rax]
 10135ad:	30 78 25             	xor    BYTE PTR [rax+0x25],bh
 10135b0:	78 0a                	js     10135bc <salloc_header_size+0x5b4>
 10135b2:	00 00                	add    BYTE PTR [rax],al
 10135b4:	00 00                	add    BYTE PTR [rax],al
 10135b6:	00 00                	add    BYTE PTR [rax],al
 10135b8:	48                   	rex.W
 10135b9:	41                   	rex.B
 10135ba:	4c 20 66 61          	rex.WR and BYTE PTR [rsi+0x61],r12b
 10135be:	69 6c 65 64 2e 0a 00 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0xa2e
 10135c5:	00 
 10135c6:	00 00                	add    BYTE PTR [rax],al
 10135c8:	4b                   	rex.WXB
 10135c9:	65 72 6e             	gs jb  101363a <salloc_header_size+0x632>
 10135cc:	65 6c                	gs ins BYTE PTR es:[rdi],dx
 10135ce:	20 4c 6f 61          	and    BYTE PTR [rdi+rbp*2+0x61],cl
 10135d2:	64 65 64 20 61 74    	fs gs and BYTE PTR fs:[rcx+0x74],ah
 10135d8:	20 30                	and    BYTE PTR [rax],dh
 10135da:	78 25                	js     1013601 <salloc_header_size+0x5f9>
 10135dc:	58                   	pop    rax
 10135dd:	2e 20 53 69          	and    BYTE PTR cs:[rbx+0x69],dl
 10135e1:	7a 65                	jp     1013648 <salloc_header_size+0x640>
 10135e3:	3a 20                	cmp    ah,BYTE PTR [rax]
 10135e5:	25 75 42 2c 20       	and    eax,0x202c4275
 10135ea:	25 75 4b 42 0a       	and    eax,0xa424b75
 10135ef:	0a 00                	or     al,BYTE PTR [rax]
 10135f1:	43 50                	rex.XB push r8
 10135f3:	55                   	push   rbp
 10135f4:	20 56 65             	and    BYTE PTR [rsi+0x65],dl
 10135f7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 10135f8:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
 10135fa:	72 3a                	jb     1013636 <salloc_header_size+0x62e>
 10135fc:	25 73 0a 00 4b       	and    eax,0x4b000a73
 1013601:	52                   	push   rdx
 1013602:	4e                   	rex.WRX
 1013603:	4c 3a 20             	rex.WR cmp r12b,BYTE PTR [rax]
 1013606:	4b                   	rex.WXB
 1013607:	65 72 6e             	gs jb  1013678 <salloc_header_size+0x670>
 101360a:	65 6c                	gs ins BYTE PTR es:[rdi],dx
 101360c:	20 74 61 73          	and    BYTE PTR [rcx+riz*2+0x73],dh
 1013610:	6b 20 66             	imul   esp,DWORD PTR [rax],0x66
 1013613:	69 6e 69 73 68 65 64 	imul   ebp,DWORD PTR [rsi+0x69],0x64656873
 101361a:	2e 00 49 6e          	add    BYTE PTR cs:[rcx+0x6e],cl
 101361e:	73 74                	jae    1013694 <salloc_header_size+0x68c>
 1013620:	61                   	(bad)  
 1013621:	6c                   	ins    BYTE PTR es:[rdi],dx
 1013622:	6c                   	ins    BYTE PTR es:[rdi],dx
 1013623:	65 64 20 4d 65       	gs and BYTE PTR fs:[rbp+0x65],cl
 1013628:	6d                   	ins    DWORD PTR es:[rdi],dx
 1013629:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 101362a:	72 79                	jb     10136a5 <salloc_header_size+0x69d>
 101362c:	3a 20                	cmp    ah,BYTE PTR [rax]
 101362e:	25 75 42 0a 00       	and    eax,0xa4275
 1013633:	55                   	push   rbp
 1013634:	73 65                	jae    101369b <salloc_header_size+0x693>
 1013636:	61                   	(bad)  
 1013637:	62                   	(bad)  
 1013638:	6c                   	ins    BYTE PTR es:[rdi],dx
 1013639:	65 20 4d 65          	and    BYTE PTR gs:[rbp+0x65],cl
 101363d:	6d                   	ins    DWORD PTR es:[rdi],dx
 101363e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 101363f:	72 79                	jb     10136ba <salloc_header_size+0x6b2>
 1013641:	3a 20                	cmp    ah,BYTE PTR [rax]
 1013643:	25 75 42 0a 00       	and    eax,0xa4275
 1013648:	42 61                	rex.X (bad) 
 101364a:	73 65                	jae    10136b1 <salloc_header_size+0x6a9>
 101364c:	20 41 64             	and    BYTE PTR [rcx+0x64],al
 101364f:	64 72 3a             	fs jb  101368c <salloc_header_size+0x684>
 1013652:	30 78 25             	xor    BYTE PTR [rax+0x25],bh
 1013655:	58                   	pop    rax
 1013656:	20 4e 75             	and    BYTE PTR [rsi+0x75],cl
 1013659:	6d                   	ins    DWORD PTR es:[rdi],dx
 101365a:	20 6f 66             	and    BYTE PTR [rdi+0x66],ch
 101365d:	20 50 61             	and    BYTE PTR [rax+0x61],dl
 1013660:	67 65 73 3a          	addr32 gs jae 101369e <salloc_header_size+0x696>
 1013664:	25 75 0a 00 0a       	and    eax,0xa000a75
 1013669:	4e 75 6d             	rex.WRX jne 10136d9 <salloc_header_size+0x6d1>
 101366c:	62                   	(bad)  
 101366d:	65 72 20             	gs jb  1013690 <salloc_header_size+0x688>
 1013670:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 1013671:	66 20 4d 6f          	data16 and BYTE PTR [rbp+0x6f],cl
 1013675:	64 75 6c             	fs jne 10136e4 <salloc_header_size+0x6dc>
 1013678:	65 73 20             	gs jae 101369b <salloc_header_size+0x693>
 101367b:	4c 6f                	rex.WR outs dx,DWORD PTR ds:[rsi]
 101367d:	61                   	(bad)  
 101367e:	64 65 64 3a 20       	fs gs cmp ah,BYTE PTR fs:[rax]
 1013683:	25 75 00 00 00       	and    eax,0x75
 1013688:	0a 4d 6f             	or     cl,BYTE PTR [rbp+0x6f]
 101368b:	64 75 6c             	fs jne 10136fa <salloc_header_size+0x6f2>
 101368e:	65 20 4e 61          	and    BYTE PTR gs:[rsi+0x61],cl
 1013692:	6d                   	ins    DWORD PTR es:[rdi],dx
 1013693:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
 1013696:	25 73 0a 20 4d       	and    eax,0x4d200a73
 101369b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 101369c:	64 75 6c             	fs jne 101370b <salloc_header_size+0x703>
 101369f:	65 20 41 64          	and    BYTE PTR gs:[rcx+0x64],al
 10136a3:	64 72 3a             	fs jb  10136e0 <salloc_header_size+0x6d8>
 10136a6:	20 30                	and    BYTE PTR [rax],dh
 10136a8:	78 25                	js     10136cf <salloc_header_size+0x6c7>
 10136aa:	58                   	pop    rax
 10136ab:	0a 20                	or     ah,BYTE PTR [rax]
 10136ad:	4d 6f                	rex.WRB outs dx,DWORD PTR ds:[rsi]
 10136af:	64 75 6c             	fs jne 101371e <salloc_header_size+0x716>
 10136b2:	65 20 53 69          	and    BYTE PTR gs:[rbx+0x69],dl
 10136b6:	7a 65                	jp     101371d <salloc_header_size+0x715>
 10136b8:	3a 20                	cmp    ah,BYTE PTR [rax]
 10136ba:	25 75 42 2c 20       	and    eax,0x202c4275
 10136bf:	25 75 4b 42 0a       	and    eax,0xa424b75
	...

Disassembly of section .bss:

0000000001014000 <buffer>:
	...

0000000001014400 <counter>:
	...

0000000001014420 <apocalypse>:
	...

0000000001019240 <ginfo>:
	...

0000000001019440 <gat>:
	...

0000000001019c40 <test_name>:
	...

0000000001019c60 <kernel_heap>:
	...

000000000101bc60 <g_idt>:
	...

000000000101bee0 <g_idt_ptr>:
	...

000000000101bef0 <g_gdt_ptr>:
	...

000000000101bf00 <g_intr_handler_table>:
	...

000000000101bf80 <g_gdt>:
	...

000000000101bfc8 <text_pos>:
	...

000000000101bfd0 <GRUB_PACKED>:
	...

000000000101bfe8 <available_mem>:
	...

000000000101bff0 <occupied_mem>:
	...

Disassembly of section .debug_info:

0000000000000000 <.debug_info>:
       0:	91                   	xchg   ecx,eax
       1:	01 00                	add    DWORD PTR [rax],eax
       3:	00 04 00             	add    BYTE PTR [rax+rax*1],al
       6:	00 00                	add    BYTE PTR [rax],al
       8:	00 00                	add    BYTE PTR [rax],al
       a:	08 01                	or     BYTE PTR [rcx],al
       c:	27                   	(bad)  
       d:	00 00                	add    BYTE PTR [rax],al
       f:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
      12:	00 00                	add    BYTE PTR [rax],al
      14:	00 e5                	add    ch,ah
      16:	00 00                	add    BYTE PTR [rax],al
      18:	00 00                	add    BYTE PTR [rax],al
      1a:	60                   	(bad)  
      1b:	00 01                	add    BYTE PTR [rcx],al
      1d:	00 00                	add    BYTE PTR [rax],al
      1f:	00 00                	add    BYTE PTR [rax],al
      21:	34 01                	xor    al,0x1
	...
      2b:	00 00                	add    BYTE PTR [rax],al
      2d:	02 25 0e 00 00 02    	add    ah,BYTE PTR [rip+0x200000e]        # 2000041 <kernel_end+0xfe4049>
      33:	24 38                	and    al,0x38
      35:	00 00                	add    BYTE PTR [rax],al
      37:	00 03                	add    BYTE PTR [rbx],al
      39:	01 06                	add    DWORD PTR [rsi],eax
      3b:	c6 00 00             	mov    BYTE PTR [rax],0x0
      3e:	00 03                	add    BYTE PTR [rbx],al
      40:	02 05 1c 01 00 00    	add    al,BYTE PTR [rip+0x11c]        # 162 <MULTIBOOT_HEADER_SIZE+0x10a>
      46:	04 04                	add    al,0x4
      48:	05 69 6e 74 00       	add    eax,0x746e69
      4d:	03 08                	add    ecx,DWORD PTR [rax]
      4f:	05 13 01 00 00       	add    eax,0x113
      54:	03 01                	add    eax,DWORD PTR [rcx]
      56:	08 c4                	or     ah,al
      58:	00 00                	add    BYTE PTR [rax],al
      5a:	00 03                	add    BYTE PTR [rbx],al
      5c:	02 07                	add    al,BYTE PTR [rdi]
      5e:	d2 00                	rol    BYTE PTR [rax],cl
      60:	00 00                	add    BYTE PTR [rax],al
      62:	03 04 07             	add    eax,DWORD PTR [rdi+rax*1]
      65:	6a 10                	push   0x10
      67:	00 00                	add    BYTE PTR [rax],al
      69:	02 7b 11             	add    bh,BYTE PTR [rbx+0x11]
      6c:	00 00                	add    BYTE PTR [rax],al
      6e:	02 37                	add    dh,BYTE PTR [rdi]
      70:	74 00                	je     72 <MULTIBOOT_HEADER_SIZE+0x1a>
      72:	00 00                	add    BYTE PTR [rax],al
      74:	03 08                	add    ecx,DWORD PTR [rax]
      76:	07                   	(bad)  
      77:	65 10 00             	adc    BYTE PTR gs:[rax],al
      7a:	00 03                	add    BYTE PTR [rbx],al
      7c:	08 05 0e 01 00 00    	or     BYTE PTR [rip+0x10e],al        # 190 <MULTIBOOT_HEADER_SIZE+0x138>
      82:	03 10                	add    edx,DWORD PTR [rax]
      84:	04 2e                	add    al,0x2e
      86:	01 00                	add    DWORD PTR [rax],eax
      88:	00 03                	add    BYTE PTR [rbx],al
      8a:	08 07                	or     BYTE PTR [rdi],al
      8c:	05 01 00 00 05       	add    eax,0x5000001
      91:	08 06                	or     BYTE PTR [rsi],al
      93:	26 01 00             	add    DWORD PTR es:[rax],eax
      96:	00 01                	add    BYTE PTR [rcx],al
      98:	0a 00                	or     al,BYTE PTR [rax]
      9a:	60                   	(bad)  
      9b:	00 01                	add    BYTE PTR [rcx],al
      9d:	00 00                	add    BYTE PTR [rax],al
      9f:	00 00                	add    BYTE PTR [rax],al
      a1:	68 00 00 00 00       	push   0x0
      a6:	00 00                	add    BYTE PTR [rax],al
      a8:	00 01                	add    BYTE PTR [rcx],al
      aa:	9c                   	pushf  
      ab:	f6 00 00             	test   BYTE PTR [rax],0x0
      ae:	00 07                	add    BYTE PTR [rdi],al
      b0:	73 72                	jae    124 <MULTIBOOT_HEADER_SIZE+0xcc>
      b2:	63 00                	movsxd eax,DWORD PTR [rax]
      b4:	01 0a                	add    DWORD PTR [rdx],ecx
      b6:	90                   	nop
      b7:	00 00                	add    BYTE PTR [rax],al
      b9:	00 02                	add    BYTE PTR [rdx],al
      bb:	91                   	xchg   ecx,eax
      bc:	58                   	pop    rax
      bd:	07                   	(bad)  
      be:	64 73 74             	fs jae 135 <MULTIBOOT_HEADER_SIZE+0xdd>
      c1:	00 01                	add    BYTE PTR [rcx],al
      c3:	0a 90 00 00 00 02    	or     dl,BYTE PTR [rax+0x2000000]
      c9:	91                   	xchg   ecx,eax
      ca:	50                   	push   rax
      cb:	08 30                	or     BYTE PTR [rax],dh
      cd:	03 00                	add    eax,DWORD PTR [rax]
      cf:	00 01                	add    BYTE PTR [rcx],al
      d1:	0a 69 00             	or     ch,BYTE PTR [rcx+0x0]
      d4:	00 00                	add    BYTE PTR [rax],al
      d6:	02 91 48 09 22 00    	add    dl,BYTE PTR [rcx+0x220948]
      dc:	00 00                	add    BYTE PTR [rax],al
      de:	01 0e                	add    DWORD PTR [rsi],ecx
      e0:	f6 00 00             	test   BYTE PTR [rax],0x0
      e3:	00 02                	add    BYTE PTR [rdx],al
      e5:	91                   	xchg   ecx,eax
      e6:	68 09 00 01 00       	push   0x10009
      eb:	00 01                	add    BYTE PTR [rcx],al
      ed:	0f f6 00             	psadbw mm0,QWORD PTR [rax]
      f0:	00 00                	add    BYTE PTR [rax],al
      f2:	02 91 60 00 0a 08    	add    dl,BYTE PTR [rcx+0x80a0060]
      f8:	fc                   	cld    
      f9:	00 00                	add    BYTE PTR [rax],al
      fb:	00 03                	add    BYTE PTR [rbx],al
      fd:	01 06                	add    DWORD PTR [rsi],eax
      ff:	cd 00                	int    0x0
     101:	00 00                	add    BYTE PTR [rax],al
     103:	06                   	(bad)  
     104:	f8                   	clc    
     105:	00 00                	add    BYTE PTR [rax],al
     107:	00 01                	add    BYTE PTR [rcx],al
     109:	15 68 60 00 01       	adc    eax,0x1006068
     10e:	00 00                	add    BYTE PTR [rax],al
     110:	00 00                	add    BYTE PTR [rax],al
     112:	47 00 00             	rex.RXB add BYTE PTR [r8],r8b
     115:	00 00                	add    BYTE PTR [rax],al
     117:	00 00                	add    BYTE PTR [rax],al
     119:	00 01                	add    BYTE PTR [rcx],al
     11b:	9c                   	pushf  
     11c:	4b 01 00             	rex.WXB add QWORD PTR [r8],rax
     11f:	00 07                	add    BYTE PTR [rdi],al
     121:	73 72                	jae    195 <MULTIBOOT_HEADER_SIZE+0x13d>
     123:	63 00                	movsxd eax,DWORD PTR [rax]
     125:	01 15 90 00 00 00    	add    DWORD PTR [rip+0x90],edx        # 1bb <MULTIBOOT_HEADER_SIZE+0x163>
     12b:	02 91 68 07 76 61    	add    dl,BYTE PTR [rcx+0x61760768]
     131:	6c                   	ins    BYTE PTR es:[rdi],dx
     132:	00 01                	add    BYTE PTR [rcx],al
     134:	15 4b 01 00 00       	adc    eax,0x14b
     139:	02 91 64 08 30 03    	add    dl,BYTE PTR [rcx+0x3300864]
     13f:	00 00                	add    BYTE PTR [rax],al
     141:	01 15 69 00 00 00    	add    DWORD PTR [rip+0x69],edx        # 1b0 <MULTIBOOT_HEADER_SIZE+0x158>
     147:	02 91 58 00 0b 2d    	add    dl,BYTE PTR [rcx+0x2d0b0058]
     14d:	00 00                	add    BYTE PTR [rax],al
     14f:	00 0c 19             	add    BYTE PTR [rcx+rbx*1],cl
     152:	00 00                	add    BYTE PTR [rax],al
     154:	00 01                	add    BYTE PTR [rcx],al
     156:	1e                   	(bad)  
     157:	af                   	scas   eax,DWORD PTR es:[rdi]
     158:	60                   	(bad)  
     159:	00 01                	add    BYTE PTR [rcx],al
     15b:	00 00                	add    BYTE PTR [rax],al
     15d:	00 00                	add    BYTE PTR [rax],al
     15f:	85 00                	test   DWORD PTR [rax],eax
     161:	00 00                	add    BYTE PTR [rax],al
     163:	00 00                	add    BYTE PTR [rax],al
     165:	00 00                	add    BYTE PTR [rax],al
     167:	01 9c 07 73 72 63 00 	add    DWORD PTR [rdi+rax*1+0x637273],ebx
     16e:	01 1e                	add    DWORD PTR [rsi],ebx
     170:	90                   	nop
     171:	00 00                	add    BYTE PTR [rax],al
     173:	00 02                	add    BYTE PTR [rdx],al
     175:	91                   	xchg   ecx,eax
     176:	68 07 64 73 74       	push   0x74736407
     17b:	00 01                	add    BYTE PTR [rcx],al
     17d:	1e                   	(bad)  
     17e:	90                   	nop
     17f:	00 00                	add    BYTE PTR [rax],al
     181:	00 02                	add    BYTE PTR [rdx],al
     183:	91                   	xchg   ecx,eax
     184:	60                   	(bad)  
     185:	08 30                	or     BYTE PTR [rax],dh
     187:	03 00                	add    eax,DWORD PTR [rax]
     189:	00 01                	add    BYTE PTR [rcx],al
     18b:	1e                   	(bad)  
     18c:	69 00 00 00 02 91    	imul   eax,DWORD PTR [rax],0x91020000
     192:	58                   	pop    rax
     193:	00 00                	add    BYTE PTR [rax],al
     195:	1a 01                	sbb    al,BYTE PTR [rcx]
     197:	00 00                	add    BYTE PTR [rax],al
     199:	04 00                	add    al,0x0
     19b:	ad                   	lods   eax,DWORD PTR ds:[rsi]
     19c:	00 00                	add    BYTE PTR [rax],al
     19e:	00 08                	add    BYTE PTR [rax],cl
     1a0:	01 27                	add    DWORD PTR [rdi],esp
     1a2:	00 00                	add    BYTE PTR [rax],al
     1a4:	00 0c 3a             	add    BYTE PTR [rdx+rdi*1],cl
     1a7:	01 00                	add    DWORD PTR [rax],eax
     1a9:	00 e5                	add    ch,ah
     1ab:	00 00                	add    BYTE PTR [rax],al
     1ad:	00 34 61             	add    BYTE PTR [rcx+riz*2],dh
     1b0:	00 01                	add    BYTE PTR [rcx],al
     1b2:	00 00                	add    BYTE PTR [rax],al
     1b4:	00 00                	add    BYTE PTR [rax],al
     1b6:	ca 00 00             	retf   0x0
     1b9:	00 00                	add    BYTE PTR [rax],al
     1bb:	00 00                	add    BYTE PTR [rax],al
     1bd:	00 aa 00 00 00 02    	add    BYTE PTR [rdx+0x2000000],ch
     1c3:	08 05 13 01 00 00    	or     BYTE PTR [rip+0x113],al        # 2dc <MULTIBOOT_HEADER_SIZE+0x284>
     1c9:	02 08                	add    cl,BYTE PTR [rax]
     1cb:	07                   	(bad)  
     1cc:	65 10 00             	adc    BYTE PTR gs:[rax],al
     1cf:	00 03                	add    BYTE PTR [rbx],al
     1d1:	04 05                	add    al,0x5
     1d3:	69 6e 74 00 02 08 05 	imul   ebp,DWORD PTR [rsi+0x74],0x5080200
     1da:	0e                   	(bad)  
     1db:	01 00                	add    DWORD PTR [rax],eax
     1dd:	00 02                	add    BYTE PTR [rdx],al
     1df:	10 04 2e             	adc    BYTE PTR [rsi+rbp*1],al
     1e2:	01 00                	add    DWORD PTR [rax],eax
     1e4:	00 02                	add    BYTE PTR [rdx],al
     1e6:	08 07                	or     BYTE PTR [rdi],al
     1e8:	05 01 00 00 02       	add    eax,0x2000001
     1ed:	04 07                	add    al,0x7
     1ef:	6a 10                	push   0x10
     1f1:	00 00                	add    BYTE PTR [rax],al
     1f3:	02 01                	add    al,BYTE PTR [rcx]
     1f5:	06                   	(bad)  
     1f6:	c6 00 00             	mov    BYTE PTR [rax],0x0
     1f9:	00 02                	add    BYTE PTR [rdx],al
     1fb:	02 05 1c 01 00 00    	add    al,BYTE PTR [rip+0x11c]        # 31d <MULTIBOOT_HEADER_SIZE+0x2c5>
     201:	02 01                	add    al,BYTE PTR [rcx]
     203:	08 c4                	or     ah,al
     205:	00 00                	add    BYTE PTR [rax],al
     207:	00 02                	add    BYTE PTR [rdx],al
     209:	02 07                	add    al,BYTE PTR [rdi]
     20b:	d2 00                	rol    BYTE PTR [rax],cl
     20d:	00 00                	add    BYTE PTR [rax],al
     20f:	04 7b                	add    al,0x7b
     211:	11 00                	adc    DWORD PTR [rax],eax
     213:	00 02                	add    BYTE PTR [rdx],al
     215:	37                   	(bad)  
     216:	34 00                	xor    al,0x0
     218:	00 00                	add    BYTE PTR [rax],al
     21a:	05 53 01 00 00       	add    eax,0x153
     21f:	01 08                	add    DWORD PTR [rax],ecx
     221:	7a 00                	jp     223 <MULTIBOOT_HEADER_SIZE+0x1cb>
     223:	00 00                	add    BYTE PTR [rax],al
     225:	34 61                	xor    al,0x61
     227:	00 01                	add    BYTE PTR [rcx],al
     229:	00 00                	add    BYTE PTR [rax],al
     22b:	00 00                	add    BYTE PTR [rax],al
     22d:	3d 00 00 00 00       	cmp    eax,0x0
     232:	00 00                	add    BYTE PTR [rax],al
     234:	00 01                	add    BYTE PTR [rcx],al
     236:	9c                   	pushf  
     237:	c3                   	ret    
     238:	00 00                	add    BYTE PTR [rax],al
     23a:	00 06                	add    BYTE PTR [rsi],al
     23c:	73 74                	jae    2b2 <MULTIBOOT_HEADER_SIZE+0x25a>
     23e:	72 00                	jb     240 <MULTIBOOT_HEADER_SIZE+0x1e8>
     240:	01 08                	add    DWORD PTR [rax],ecx
     242:	c3                   	ret    
     243:	00 00                	add    BYTE PTR [rax],al
     245:	00 02                	add    BYTE PTR [rdx],al
     247:	91                   	xchg   ecx,eax
     248:	58                   	pop    rax
     249:	07                   	(bad)  
     24a:	6d                   	ins    DWORD PTR es:[rdi],dx
     24b:	01 00                	add    DWORD PTR [rax],eax
     24d:	00 01                	add    BYTE PTR [rcx],al
     24f:	0a 7a 00             	or     bh,BYTE PTR [rdx+0x0]
     252:	00 00                	add    BYTE PTR [rax],al
     254:	02 91 68 00 08 08    	add    dl,BYTE PTR [rcx+0x8080068]
     25a:	d0 00                	rol    BYTE PTR [rax],1
     25c:	00 00                	add    BYTE PTR [rax],al
     25e:	02 01                	add    al,BYTE PTR [rcx]
     260:	06                   	(bad)  
     261:	cd 00                	int    0x0
     263:	00 00                	add    BYTE PTR [rax],al
     265:	09 c9                	or     ecx,ecx
     267:	00 00                	add    BYTE PTR [rax],al
     269:	00 0a                	add    BYTE PTR [rdx],cl
     26b:	65 01 00             	add    DWORD PTR gs:[rax],eax
     26e:	00 01                	add    BYTE PTR [rcx],al
     270:	15 7a 00 00 00       	adc    eax,0x7a
     275:	71 61                	jno    2d8 <MULTIBOOT_HEADER_SIZE+0x280>
     277:	00 01                	add    BYTE PTR [rcx],al
     279:	00 00                	add    BYTE PTR [rax],al
     27b:	00 00                	add    BYTE PTR [rax],al
     27d:	8d 00                	lea    eax,[rax]
     27f:	00 00                	add    BYTE PTR [rax],al
     281:	00 00                	add    BYTE PTR [rax],al
     283:	00 00                	add    BYTE PTR [rax],al
     285:	01 9c 0b 5b 01 00 00 	add    DWORD PTR [rbx+rcx*1+0x15b],ebx
     28c:	01 15 c3 00 00 00    	add    DWORD PTR [rip+0xc3],edx        # 355 <MULTIBOOT_HEADER_SIZE+0x2fd>
     292:	02 91 58 0b 60 01    	add    dl,BYTE PTR [rcx+0x1600b58]
     298:	00 00                	add    BYTE PTR [rax],al
     29a:	01 15 c3 00 00 00    	add    DWORD PTR [rip+0xc3],edx        # 363 <MULTIBOOT_HEADER_SIZE+0x30b>
     2a0:	02 91 50 07 6d 01    	add    dl,BYTE PTR [rcx+0x16d0750]
     2a6:	00 00                	add    BYTE PTR [rax],al
     2a8:	01 19                	add    DWORD PTR [rcx],ebx
     2aa:	7a 00                	jp     2ac <MULTIBOOT_HEADER_SIZE+0x254>
     2ac:	00 00                	add    BYTE PTR [rax],al
     2ae:	02 91 68 00 00 21    	add    dl,BYTE PTR [rcx+0x21000068]
     2b4:	01 00                	add    DWORD PTR [rax],eax
     2b6:	00 04 00             	add    BYTE PTR [rax+rax*1],al
     2b9:	57                   	push   rdi
     2ba:	01 00                	add    DWORD PTR [rax],eax
     2bc:	00 08                	add    BYTE PTR [rax],cl
     2be:	01 27                	add    DWORD PTR [rdi],esp
     2c0:	00 00                	add    BYTE PTR [rax],al
     2c2:	00 0c 8b             	add    BYTE PTR [rbx+rcx*4],cl
     2c5:	01 00                	add    DWORD PTR [rax],eax
     2c7:	00 e5                	add    ch,ah
     2c9:	00 00                	add    BYTE PTR [rax],al
     2cb:	00 fe                	add    dh,bh
     2cd:	61                   	(bad)  
     2ce:	00 01                	add    BYTE PTR [rcx],al
     2d0:	00 00                	add    BYTE PTR [rax],al
     2d2:	00 00                	add    BYTE PTR [rax],al
     2d4:	66 00 00             	data16 add BYTE PTR [rax],al
     2d7:	00 00                	add    BYTE PTR [rax],al
     2d9:	00 00                	add    BYTE PTR [rax],al
     2db:	00 2a                	add    BYTE PTR [rdx],ch
     2dd:	01 00                	add    DWORD PTR [rax],eax
     2df:	00 02                	add    BYTE PTR [rdx],al
     2e1:	08 05 13 01 00 00    	or     BYTE PTR [rip+0x113],al        # 3fa <MULTIBOOT_HEADER_SIZE+0x3a2>
     2e7:	02 08                	add    cl,BYTE PTR [rax]
     2e9:	07                   	(bad)  
     2ea:	65 10 00             	adc    BYTE PTR gs:[rax],al
     2ed:	00 03                	add    BYTE PTR [rbx],al
     2ef:	04 05                	add    al,0x5
     2f1:	69 6e 74 00 02 08 05 	imul   ebp,DWORD PTR [rsi+0x74],0x5080200
     2f8:	0e                   	(bad)  
     2f9:	01 00                	add    DWORD PTR [rax],eax
     2fb:	00 02                	add    BYTE PTR [rdx],al
     2fd:	10 04 2e             	adc    BYTE PTR [rsi+rbp*1],al
     300:	01 00                	add    DWORD PTR [rax],eax
     302:	00 02                	add    BYTE PTR [rdx],al
     304:	08 07                	or     BYTE PTR [rdi],al
     306:	05 01 00 00 02       	add    eax,0x2000001
     30b:	04 07                	add    al,0x7
     30d:	6a 10                	push   0x10
     30f:	00 00                	add    BYTE PTR [rax],al
     311:	02 01                	add    al,BYTE PTR [rcx]
     313:	06                   	(bad)  
     314:	c6 00 00             	mov    BYTE PTR [rax],0x0
     317:	00 02                	add    BYTE PTR [rdx],al
     319:	02 05 1c 01 00 00    	add    al,BYTE PTR [rip+0x11c]        # 43b <MULTIBOOT_HEADER_SIZE+0x3e3>
     31f:	02 01                	add    al,BYTE PTR [rcx]
     321:	08 c4                	or     ah,al
     323:	00 00                	add    BYTE PTR [rax],al
     325:	00 02                	add    BYTE PTR [rdx],al
     327:	02 07                	add    al,BYTE PTR [rdi]
     329:	d2 00                	rol    BYTE PTR [rax],cl
     32b:	00 00                	add    BYTE PTR [rax],al
     32d:	04 2f                	add    al,0x2f
     32f:	11 00                	adc    DWORD PTR [rax],eax
     331:	00 02                	add    BYTE PTR [rdx],al
     333:	33 57 00             	xor    edx,DWORD PTR [rdi+0x0]
     336:	00 00                	add    BYTE PTR [rax],al
     338:	05 75 01 00 00       	add    eax,0x175
     33d:	01 0b                	add    DWORD PTR [rbx],ecx
     33f:	7a 00                	jp     341 <MULTIBOOT_HEADER_SIZE+0x2e9>
     341:	00 00                	add    BYTE PTR [rax],al
     343:	fe                   	(bad)  
     344:	61                   	(bad)  
     345:	00 01                	add    BYTE PTR [rcx],al
     347:	00 00                	add    BYTE PTR [rax],al
     349:	00 00                	add    BYTE PTR [rax],al
     34b:	38 00                	cmp    BYTE PTR [rax],al
     34d:	00 00                	add    BYTE PTR [rax],al
     34f:	00 00                	add    BYTE PTR [rax],al
     351:	00 00                	add    BYTE PTR [rax],al
     353:	01 9c 06 80 01 00 00 	add    DWORD PTR [rsi+rax*1+0x180],ebx
     35a:	01 11                	add    DWORD PTR [rcx],edx
     35c:	36 62                	ss (bad) 
     35e:	00 01                	add    BYTE PTR [rcx],al
     360:	00 00                	add    BYTE PTR [rax],al
     362:	00 00                	add    BYTE PTR [rax],al
     364:	17                   	(bad)  
     365:	00 00                	add    BYTE PTR [rax],al
     367:	00 00                	add    BYTE PTR [rax],al
     369:	00 00                	add    BYTE PTR [rax],al
     36b:	00 01                	add    BYTE PTR [rcx],al
     36d:	9c                   	pushf  
     36e:	ce                   	(bad)  
     36f:	00 00                	add    BYTE PTR [rax],al
     371:	00 07                	add    BYTE PTR [rdi],al
     373:	7a 01                	jp     376 <MULTIBOOT_HEADER_SIZE+0x31e>
     375:	00 00                	add    BYTE PTR [rax],al
     377:	01 11                	add    DWORD PTR [rcx],edx
     379:	7a 00                	jp     37b <MULTIBOOT_HEADER_SIZE+0x323>
     37b:	00 00                	add    BYTE PTR [rax],al
     37d:	02 91 6c 00 06 74    	add    dl,BYTE PTR [rcx+0x7406006c]
     383:	01 00                	add    DWORD PTR [rax],eax
     385:	00 01                	add    BYTE PTR [rcx],al
     387:	16                   	(bad)  
     388:	4d 62                	rex.WRB (bad) 
     38a:	00 01                	add    BYTE PTR [rcx],al
     38c:	00 00                	add    BYTE PTR [rax],al
     38e:	00 00                	add    BYTE PTR [rax],al
     390:	17                   	(bad)  
     391:	00 00                	add    BYTE PTR [rax],al
     393:	00 00                	add    BYTE PTR [rax],al
     395:	00 00                	add    BYTE PTR [rax],al
     397:	00 01                	add    BYTE PTR [rcx],al
     399:	9c                   	pushf  
     39a:	fa                   	cli    
     39b:	00 00                	add    BYTE PTR [rax],al
     39d:	00 07                	add    BYTE PTR [rdi],al
     39f:	86 01                	xchg   BYTE PTR [rcx],al
     3a1:	00 00                	add    BYTE PTR [rax],al
     3a3:	01 16                	add    DWORD PTR [rsi],edx
     3a5:	7a 00                	jp     3a7 <MULTIBOOT_HEADER_SIZE+0x34f>
     3a7:	00 00                	add    BYTE PTR [rax],al
     3a9:	02 91 6c 00 08 7b    	add    dl,BYTE PTR [rcx+0x7b08006c]
     3af:	01 00                	add    DWORD PTR [rax],eax
     3b1:	00 01                	add    BYTE PTR [rcx],al
     3b3:	08 7a 00             	or     BYTE PTR [rdx+0x0],bh
     3b6:	00 00                	add    BYTE PTR [rax],al
     3b8:	09 03                	or     DWORD PTR [rbx],eax
     3ba:	00 30                	add    BYTE PTR [rax],dh
     3bc:	01 01                	add    DWORD PTR [rcx],eax
     3be:	00 00                	add    BYTE PTR [rax],al
     3c0:	00 00                	add    BYTE PTR [rax],al
     3c2:	09 6d 61             	or     DWORD PTR [rbp+0x61],ebp
     3c5:	78 00                	js     3c7 <MULTIBOOT_HEADER_SIZE+0x36f>
     3c7:	01 09                	add    DWORD PTR [rcx],ecx
     3c9:	7a 00                	jp     3cb <MULTIBOOT_HEADER_SIZE+0x373>
     3cb:	00 00                	add    BYTE PTR [rax],al
     3cd:	09 03                	or     DWORD PTR [rbx],eax
     3cf:	04 30                	add    al,0x30
     3d1:	01 01                	add    DWORD PTR [rcx],eax
     3d3:	00 00                	add    BYTE PTR [rax],al
     3d5:	00 00                	add    BYTE PTR [rax],al
     3d7:	00 cf                	add    bh,cl
     3d9:	07                   	(bad)  
     3da:	00 00                	add    BYTE PTR [rax],al
     3dc:	04 00                	add    al,0x0
     3de:	ef                   	out    dx,eax
     3df:	01 00                	add    DWORD PTR [rax],eax
     3e1:	00 08                	add    BYTE PTR [rax],cl
     3e3:	01 27                	add    DWORD PTR [rdi],esp
     3e5:	00 00                	add    BYTE PTR [rax],al
     3e7:	00 0c b8             	add    BYTE PTR [rax+rdi*4],cl
     3ea:	01 00                	add    DWORD PTR [rax],eax
     3ec:	00 e5                	add    ch,ah
     3ee:	00 00                	add    BYTE PTR [rax],al
     3f0:	00 64 62 00          	add    BYTE PTR [rdx+riz*2+0x0],ah
     3f4:	01 00                	add    DWORD PTR [rax],eax
     3f6:	00 00                	add    BYTE PTR [rax],al
     3f8:	00 64 0f 00          	add    BYTE PTR [rdi+rcx*1+0x0],ah
     3fc:	00 00                	add    BYTE PTR [rax],al
     3fe:	00 00                	add    BYTE PTR [rax],al
     400:	00 9b 01 00 00 02    	add    BYTE PTR [rbx+0x2000001],bl
     406:	08 05 13 01 00 00    	or     BYTE PTR [rip+0x113],al        # 51f <MULTIBOOT_HEADER_SIZE+0x4c7>
     40c:	02 08                	add    cl,BYTE PTR [rax]
     40e:	07                   	(bad)  
     40f:	65 10 00             	adc    BYTE PTR gs:[rax],al
     412:	00 03                	add    BYTE PTR [rbx],al
     414:	04 05                	add    al,0x5
     416:	69 6e 74 00 02 08 05 	imul   ebp,DWORD PTR [rsi+0x74],0x5080200
     41d:	0e                   	(bad)  
     41e:	01 00                	add    DWORD PTR [rax],eax
     420:	00 02                	add    BYTE PTR [rdx],al
     422:	10 04 2e             	adc    BYTE PTR [rsi+rbp*1],al
     425:	01 00                	add    DWORD PTR [rax],eax
     427:	00 02                	add    BYTE PTR [rdx],al
     429:	08 07                	or     BYTE PTR [rdi],al
     42b:	05 01 00 00 02       	add    eax,0x2000001
     430:	04 07                	add    al,0x7
     432:	6a 10                	push   0x10
     434:	00 00                	add    BYTE PTR [rax],al
     436:	02 01                	add    al,BYTE PTR [rcx]
     438:	06                   	(bad)  
     439:	c6 00 00             	mov    BYTE PTR [rax],0x0
     43c:	00 02                	add    BYTE PTR [rdx],al
     43e:	02 05 1c 01 00 00    	add    al,BYTE PTR [rip+0x11c]        # 560 <MULTIBOOT_HEADER_SIZE+0x508>
     444:	04 30                	add    al,0x30
     446:	11 00                	adc    DWORD PTR [rax],eax
     448:	00 04 26             	add    BYTE PTR [rsi+riz*1],al
     44b:	3b 00                	cmp    eax,DWORD PTR [rax]
     44d:	00 00                	add    BYTE PTR [rax],al
     44f:	02 01                	add    al,BYTE PTR [rcx]
     451:	08 c4                	or     ah,al
     453:	00 00                	add    BYTE PTR [rax],al
     455:	00 02                	add    BYTE PTR [rdx],al
     457:	02 07                	add    al,BYTE PTR [rdi]
     459:	d2 00                	rol    BYTE PTR [rax],cl
     45b:	00 00                	add    BYTE PTR [rax],al
     45d:	05 01 04 00 00       	add    eax,0x401
     462:	20 03                	and    BYTE PTR [rbx],al
     464:	0b c2                	or     eax,edx
     466:	00 00                	add    BYTE PTR [rax],al
     468:	00 06                	add    BYTE PTR [rsi],al
     46a:	22 03                	and    al,BYTE PTR [rbx]
     46c:	00 00                	add    BYTE PTR [rax],al
     46e:	03 0d c2 00 00 00    	add    ecx,DWORD PTR [rip+0xc2]        # 536 <MULTIBOOT_HEADER_SIZE+0x4de>
     474:	00 06                	add    BYTE PTR [rsi],al
     476:	db 01                	fild   DWORD PTR [rcx]
     478:	00 00                	add    BYTE PTR [rax],al
     47a:	03 0e                	add    ecx,DWORD PTR [rsi]
     47c:	c2 00 00             	ret    0x0
     47f:	00 08                	add    BYTE PTR [rax],cl
     481:	06                   	(bad)  
     482:	8f 02                	pop    QWORD PTR [rdx]
     484:	00 00                	add    BYTE PTR [rax],al
     486:	03 0f                	add    ecx,DWORD PTR [rdi]
     488:	c2 00 00             	ret    0x0
     48b:	00 10                	add    BYTE PTR [rax],dl
     48d:	06                   	(bad)  
     48e:	fa                   	cli    
     48f:	01 00                	add    DWORD PTR [rax],eax
     491:	00 03                	add    BYTE PTR [rbx],al
     493:	10 6c 00 00          	adc    BYTE PTR [rax+rax*1+0x0],ch
     497:	00 18                	add    BYTE PTR [rax],bl
     499:	00 07                	add    BYTE PTR [rdi],al
     49b:	08 85 00 00 00 04    	or     BYTE PTR [rbp+0x4000000],al
     4a1:	02 04 00             	add    al,BYTE PTR [rax+rax*1]
     4a4:	00 03                	add    BYTE PTR [rbx],al
     4a6:	11 85 00 00 00 08    	adc    DWORD PTR [rbp+0x8000000],eax
     4ac:	08 03                	or     BYTE PTR [rbx],al
     4ae:	13 e8                	adc    ebp,eax
     4b0:	00 00                	add    BYTE PTR [rax],al
     4b2:	00 06                	add    BYTE PTR [rsi],al
     4b4:	18 04 00             	sbb    BYTE PTR [rax+rax*1],al
     4b7:	00 03                	add    BYTE PTR [rbx],al
     4b9:	15 e8 00 00 00       	adc    eax,0xe8
     4be:	00 00                	add    BYTE PTR [rax],al
     4c0:	07                   	(bad)  
     4c1:	08 c8                	or     al,cl
     4c3:	00 00                	add    BYTE PTR [rax],al
     4c5:	00 04 65 02 00 00 03 	add    BYTE PTR [riz*2+0x3000002],al
     4cc:	16                   	(bad)  
     4cd:	d3 00                	rol    DWORD PTR [rax],cl
     4cf:	00 00                	add    BYTE PTR [rax],al
     4d1:	09 1b                	or     DWORD PTR [rbx],ebx
     4d3:	03 00                	add    eax,DWORD PTR [rax]
     4d5:	00 01                	add    BYTE PTR [rcx],al
     4d7:	35 6c 00 00 00       	xor    eax,0x6c
     4dc:	64 62                	fs (bad) 
     4de:	00 01                	add    BYTE PTR [rcx],al
     4e0:	00 00                	add    BYTE PTR [rax],al
     4e2:	00 00                	add    BYTE PTR [rax],al
     4e4:	1a 00                	sbb    al,BYTE PTR [rax]
     4e6:	00 00                	add    BYTE PTR [rax],al
     4e8:	00 00                	add    BYTE PTR [rax],al
     4ea:	00 00                	add    BYTE PTR [rax],al
     4ec:	01 9c 33 01 00 00 0a 	add    DWORD PTR [rbx+rsi*1+0xa000001],ebx
     4f3:	61                   	(bad)  
     4f4:	00 01                	add    BYTE PTR [rcx],al
     4f6:	35 6c 00 00 00       	xor    eax,0x6c
     4fb:	02 91 6c 0a 62 00    	add    dl,BYTE PTR [rcx+0x620a6c]
     501:	01 35 6c 00 00 00    	add    DWORD PTR [rip+0x6c],esi        # 573 <MULTIBOOT_HEADER_SIZE+0x51b>
     507:	02 91 68 00 09 c1    	add    dl,BYTE PTR [rcx-0x3ef6ff98]
     50d:	02 00                	add    al,BYTE PTR [rax]
     50f:	00 02                	add    BYTE PTR [rdx],al
     511:	09 6c 00 00          	or     DWORD PTR [rax+rax*1+0x0],ebp
     515:	00 7e 62             	add    BYTE PTR [rsi+0x62],bh
     518:	00 01                	add    BYTE PTR [rcx],al
     51a:	00 00                	add    BYTE PTR [rax],al
     51c:	00 00                	add    BYTE PTR [rax],al
     51e:	23 00                	and    eax,DWORD PTR [rax]
     520:	00 00                	add    BYTE PTR [rax],al
     522:	00 00                	add    BYTE PTR [rax],al
     524:	00 00                	add    BYTE PTR [rax],al
     526:	01 9c 63 01 00 00 0b 	add    DWORD PTR [rbx+riz*2+0xb000001],ebx
     52d:	74 06                	je     535 <MULTIBOOT_HEADER_SIZE+0x4dd>
     52f:	00 00                	add    BYTE PTR [rax],al
     531:	02 09                	add    cl,BYTE PTR [rcx]
     533:	e8 00 00 00 02       	call   2000538 <kernel_end+0xfe4540>
     538:	91                   	xchg   ecx,eax
     539:	68 00 0c 43 02       	push   0x2430c00
     53e:	00 00                	add    BYTE PTR [rax],al
     540:	02 0e                	add    cl,BYTE PTR [rsi]
     542:	6c                   	ins    BYTE PTR es:[rdi],dx
     543:	00 00                	add    BYTE PTR [rax],al
     545:	00 a1 62 00 01 00    	add    BYTE PTR [rcx+0x10062],ah
     54b:	00 00                	add    BYTE PTR [rax],al
     54d:	00 47 00             	add    BYTE PTR [rdi+0x0],al
     550:	00 00                	add    BYTE PTR [rax],al
     552:	00 00                	add    BYTE PTR [rax],al
     554:	00 00                	add    BYTE PTR [rax],al
     556:	01 9c 93 01 00 00 0b 	add    DWORD PTR [rbx+rdx*4+0xb000001],ebx
     55d:	74 06                	je     565 <MULTIBOOT_HEADER_SIZE+0x50d>
     55f:	00 00                	add    BYTE PTR [rax],al
     561:	02 0e                	add    cl,BYTE PTR [rsi]
     563:	e8 00 00 00 02       	call   2000568 <kernel_end+0xfe4570>
     568:	91                   	xchg   ecx,eax
     569:	60                   	(bad)  
     56a:	00 0c e5 03 00 00 02 	add    BYTE PTR [riz*8+0x2000003],cl
     571:	15 e8 00 00 00       	adc    eax,0xe8
     576:	e8 62 00 01 00       	call   105dd <MULTIBOOT_HEADER_SIZE+0x10585>
     57b:	00 00                	add    BYTE PTR [rax],al
     57d:	00 e2                	add    dl,ah
     57f:	00 00                	add    BYTE PTR [rax],al
     581:	00 00                	add    BYTE PTR [rax],al
     583:	00 00                	add    BYTE PTR [rax],al
     585:	00 01                	add    BYTE PTR [rcx],al
     587:	9c                   	pushf  
     588:	d1 01                	rol    DWORD PTR [rcx],1
     58a:	00 00                	add    BYTE PTR [rax],al
     58c:	0b 18                	or     ebx,DWORD PTR [rax]
     58e:	04 00                	add    al,0x0
     590:	00 02                	add    BYTE PTR [rdx],al
     592:	15 e8 00 00 00       	adc    eax,0xe8
     597:	02 91 50 0d 76 03    	add    dl,BYTE PTR [rcx+0x3760d50]
     59d:	00 00                	add    BYTE PTR [rax],al
     59f:	02 17                	add    dl,BYTE PTR [rdi]
     5a1:	e8 00 00 00 02       	call   20005a6 <kernel_end+0xfe45ae>
     5a6:	91                   	xchg   ecx,eax
     5a7:	60                   	(bad)  
     5a8:	00 0c a6             	add    BYTE PTR [rsi+riz*4],cl
     5ab:	02 00                	add    al,BYTE PTR [rax]
     5ad:	00 02                	add    BYTE PTR [rdx],al
     5af:	26 e8 00 00 00 ca    	es call ffffffffca0005b5 <MULTIBOOT_CHECK_SUM+0xb25256e3>
     5b5:	63 00                	movsxd eax,DWORD PTR [rax]
     5b7:	01 00                	add    DWORD PTR [rax],eax
     5b9:	00 00                	add    BYTE PTR [rax],al
     5bb:	00 e1                	add    cl,ah
     5bd:	00 00                	add    BYTE PTR [rax],al
     5bf:	00 00                	add    BYTE PTR [rax],al
     5c1:	00 00                	add    BYTE PTR [rax],al
     5c3:	00 01                	add    BYTE PTR [rcx],al
     5c5:	9c                   	pushf  
     5c6:	0f 02 00             	lar    eax,WORD PTR [rax]
     5c9:	00 0b                	add    BYTE PTR [rbx],cl
     5cb:	18 04 00             	sbb    BYTE PTR [rax+rax*1],al
     5ce:	00 02                	add    BYTE PTR [rdx],al
     5d0:	26 e8 00 00 00 02    	es call 20005d6 <kernel_end+0xfe45de>
     5d6:	91                   	xchg   ecx,eax
     5d7:	50                   	push   rax
     5d8:	0d 70 02 00 00       	or     eax,0x270
     5dd:	02 28                	add    ch,BYTE PTR [rax]
     5df:	e8 00 00 00 02       	call   20005e4 <kernel_end+0xfe45ec>
     5e4:	91                   	xchg   ecx,eax
     5e5:	60                   	(bad)  
     5e6:	00 0c 49             	add    BYTE PTR [rcx+rcx*2],cl
     5e9:	03 00                	add    eax,DWORD PTR [rax]
     5eb:	00 02                	add    BYTE PTR [rdx],al
     5ed:	37                   	(bad)  
     5ee:	e8 00 00 00 ab       	call   ffffffffab0005f3 <MULTIBOOT_CHECK_SUM+0x93525721>
     5f3:	64 00 01             	add    BYTE PTR fs:[rcx],al
     5f6:	00 00                	add    BYTE PTR [rax],al
     5f8:	00 00                	add    BYTE PTR [rax],al
     5fa:	cd 00                	int    0x0
     5fc:	00 00                	add    BYTE PTR [rax],al
     5fe:	00 00                	add    BYTE PTR [rax],al
     600:	00 00                	add    BYTE PTR [rax],al
     602:	01 9c 90 02 00 00 0b 	add    DWORD PTR [rax+rdx*4+0xb000002],ebx
     609:	74 06                	je     611 <MULTIBOOT_HEADER_SIZE+0x5b9>
     60b:	00 00                	add    BYTE PTR [rax],al
     60d:	02 37                	add    dh,BYTE PTR [rdi]
     60f:	e8 00 00 00 02       	call   2000614 <kernel_end+0xfe461c>
     614:	91                   	xchg   ecx,eax
     615:	58                   	pop    rax
     616:	0e                   	(bad)  
     617:	62                   	(bad)  
     618:	66 00 02             	data16 add BYTE PTR [rdx],al
     61b:	39 90 02 00 00 02    	cmp    DWORD PTR [rax+0x2000002],edx
     621:	91                   	xchg   ecx,eax
     622:	6c                   	ins    BYTE PTR es:[rdi],dx
     623:	0f cc                	bswap  esp
     625:	64 00 01             	add    BYTE PTR fs:[rcx],al
     628:	00 00                	add    BYTE PTR [rax],al
     62a:	00 00                	add    BYTE PTR [rax],al
     62c:	50                   	push   rax
     62d:	00 00                	add    BYTE PTR [rax],al
     62f:	00 00                	add    BYTE PTR [rax],al
     631:	00 00                	add    BYTE PTR [rax],al
     633:	00 6f 02             	add    BYTE PTR [rdi+0x2],ch
     636:	00 00                	add    BYTE PTR [rax],al
     638:	0d 9a 03 00 00       	or     eax,0x39a
     63d:	02 3d 90 02 00 00    	add    bh,BYTE PTR [rip+0x290]        # 8d3 <MULTIBOOT_HEADER_SIZE+0x87b>
     643:	02 91 68 00 10 22    	add    dl,BYTE PTR [rcx+0x22100068]
     649:	65 00 01             	add    BYTE PTR gs:[rcx],al
     64c:	00 00                	add    BYTE PTR [rax],al
     64e:	00 00                	add    BYTE PTR [rax],al
     650:	50                   	push   rax
     651:	00 00                	add    BYTE PTR [rax],al
     653:	00 00                	add    BYTE PTR [rax],al
     655:	00 00                	add    BYTE PTR [rax],al
     657:	00 0d 40 03 00 00    	add    BYTE PTR [rip+0x340],cl        # 99d <MULTIBOOT_HEADER_SIZE+0x945>
     65d:	02 4a 90             	add    cl,BYTE PTR [rdx-0x70]
     660:	02 00                	add    al,BYTE PTR [rax]
     662:	00 02                	add    BYTE PTR [rdx],al
     664:	91                   	xchg   ecx,eax
     665:	64 00 00             	add    BYTE PTR fs:[rax],al
     668:	11 6c 00 00          	adc    DWORD PTR [rax+rax*1+0x0],ebp
     66c:	00 0c 60             	add    BYTE PTR [rax+riz*2],cl
     66f:	03 00                	add    eax,DWORD PTR [rax]
     671:	00 02                	add    BYTE PTR [rdx],al
     673:	5c                   	pop    rsp
     674:	e8 00 00 00 78       	call   78000679 <MULTIBOOT_LOADED_MAGIC+0x4128a3f0>
     679:	65 00 01             	add    BYTE PTR gs:[rcx],al
     67c:	00 00                	add    BYTE PTR [rax],al
     67e:	00 00                	add    BYTE PTR [rax],al
     680:	0a 01                	or     al,BYTE PTR [rcx]
     682:	00 00                	add    BYTE PTR [rax],al
     684:	00 00                	add    BYTE PTR [rax],al
     686:	00 00                	add    BYTE PTR [rax],al
     688:	01 9c ff 02 00 00 0b 	add    DWORD PTR [rdi+rdi*8+0xb000002],ebx
     68f:	18 04 00             	sbb    BYTE PTR [rax+rax*1],al
     692:	00 02                	add    BYTE PTR [rdx],al
     694:	5c                   	pop    rsp
     695:	e8 00 00 00 02       	call   200069a <kernel_end+0xfe46a2>
     69a:	91                   	xchg   ecx,eax
     69b:	48 0b 74 06 00       	or     rsi,QWORD PTR [rsi+rax*1+0x0]
     6a0:	00 02                	add    BYTE PTR [rdx],al
     6a2:	5c                   	pop    rsp
     6a3:	e8 00 00 00 02       	call   20006a8 <kernel_end+0xfe46b0>
     6a8:	91                   	xchg   ecx,eax
     6a9:	40 0b a2 03 00 00 02 	rex or esp,DWORD PTR [rdx+0x2000003]
     6b0:	5c                   	pop    rsp
     6b1:	13 03                	adc    eax,DWORD PTR [rbx]
     6b3:	00 00                	add    BYTE PTR [rax],al
     6b5:	03 91 b8 7f 0b 8f    	add    edx,DWORD PTR [rcx-0x70f48048]
     6bb:	02 00                	add    al,BYTE PTR [rax]
     6bd:	00 02                	add    BYTE PTR [rdx],al
     6bf:	5c                   	pop    rsp
     6c0:	e8 00 00 00 03       	call   30006c5 <kernel_end+0x1fe46cd>
     6c5:	91                   	xchg   ecx,eax
     6c6:	b0 7f                	mov    al,0x7f
     6c8:	0d b3 01 00 00       	or     eax,0x1b3
     6cd:	02 66 90             	add    ah,BYTE PTR [rsi-0x70]
     6d0:	02 00                	add    al,BYTE PTR [rax]
     6d2:	00 02                	add    BYTE PTR [rdx],al
     6d4:	91                   	xchg   ecx,eax
     6d5:	5c                   	pop    rsp
     6d6:	00 12                	add    BYTE PTR [rdx],dl
     6d8:	6c                   	ins    BYTE PTR es:[rdi],dx
     6d9:	00 00                	add    BYTE PTR [rax],al
     6db:	00 13                	add    BYTE PTR [rbx],dl
     6dd:	03 00                	add    eax,DWORD PTR [rax]
     6df:	00 13                	add    BYTE PTR [rbx],dl
     6e1:	e8 00 00 00 13       	call   130006e6 <kernel_end+0x11fe46ee>
     6e6:	e8 00 00 00 00       	call   6eb <MULTIBOOT_HEADER_SIZE+0x693>
     6eb:	07                   	(bad)  
     6ec:	08 ff                	or     bh,bh
     6ee:	02 00                	add    al,BYTE PTR [rax]
     6f0:	00 14 01             	add    BYTE PTR [rcx+rax*1],dl
     6f3:	02 00                	add    al,BYTE PTR [rax]
     6f5:	00 02                	add    BYTE PTR [rdx],al
     6f7:	73 82                	jae    67b <MULTIBOOT_HEADER_SIZE+0x623>
     6f9:	66 00 01             	data16 add BYTE PTR [rcx],al
     6fc:	00 00                	add    BYTE PTR [rax],al
     6fe:	00 00                	add    BYTE PTR [rax],al
     700:	b4 03                	mov    ah,0x3
     702:	00 00                	add    BYTE PTR [rax],al
     704:	00 00                	add    BYTE PTR [rax],al
     706:	00 00                	add    BYTE PTR [rax],al
     708:	01 9c 8b 03 00 00 0b 	add    DWORD PTR [rbx+rcx*4+0xb000003],ebx
     70f:	12 04 00             	adc    al,BYTE PTR [rax+rax*1]
     712:	00 02                	add    BYTE PTR [rdx],al
     714:	73 e8                	jae    6fe <MULTIBOOT_HEADER_SIZE+0x6a6>
     716:	00 00                	add    BYTE PTR [rax],al
     718:	00 02                	add    BYTE PTR [rdx],al
     71a:	91                   	xchg   ecx,eax
     71b:	48 0b db             	or     rbx,rbx
     71e:	02 00                	add    al,BYTE PTR [rax]
     720:	00 02                	add    BYTE PTR [rdx],al
     722:	73 e8                	jae    70c <MULTIBOOT_HEADER_SIZE+0x6b4>
     724:	00 00                	add    BYTE PTR [rax],al
     726:	00 02                	add    BYTE PTR [rdx],al
     728:	91                   	xchg   ecx,eax
     729:	40 0d 8f 02 00 00    	rex or eax,0x28f
     72f:	02 77 e8             	add    dh,BYTE PTR [rdi-0x18]
     732:	00 00                	add    BYTE PTR [rax],al
     734:	00 02                	add    BYTE PTR [rdx],al
     736:	91                   	xchg   ecx,eax
     737:	68 0d 1b 02 00       	push   0x21b0d
     73c:	00 02                	add    BYTE PTR [rdx],al
     73e:	78 e8                	js     728 <MULTIBOOT_HEADER_SIZE+0x6d0>
     740:	00 00                	add    BYTE PTR [rax],al
     742:	00 02                	add    BYTE PTR [rdx],al
     744:	91                   	xchg   ecx,eax
     745:	60                   	(bad)  
     746:	0d 16 02 00 00       	or     eax,0x216
     74b:	02 79 e8             	add    bh,BYTE PTR [rcx-0x18]
     74e:	00 00                	add    BYTE PTR [rax],al
     750:	00 02                	add    BYTE PTR [rdx],al
     752:	91                   	xchg   ecx,eax
     753:	58                   	pop    rax
     754:	0d fa 01 00 00       	or     eax,0x1fa
     759:	02 e7                	add    ah,bh
     75b:	6c                   	ins    BYTE PTR es:[rdi],dx
     75c:	00 00                	add    BYTE PTR [rax],al
     75e:	00 02                	add    BYTE PTR [rdx],al
     760:	91                   	xchg   ecx,eax
     761:	54                   	push   rsp
     762:	00 0c 84             	add    BYTE PTR [rsp+rax*4],cl
     765:	03 00                	add    eax,DWORD PTR [rax]
     767:	00 02                	add    BYTE PTR [rdx],al
     769:	ed                   	in     eax,dx
     76a:	e8 00 00 00 36       	call   3600076f <kernel_end+0x34fe4777>
     76f:	6a 00                	push   0x0
     771:	01 00                	add    DWORD PTR [rax],eax
     773:	00 00                	add    BYTE PTR [rax],al
     775:	00 bc 01 00 00 00 00 	add    BYTE PTR [rcx+rax*1+0x0],bh
     77c:	00 00                	add    BYTE PTR [rax],al
     77e:	01 9c 21 04 00 00 0b 	add    DWORD PTR [rcx+riz*1+0xb000004],ebx
     785:	18 04 00             	sbb    BYTE PTR [rax+rax*1],al
     788:	00 02                	add    BYTE PTR [rdx],al
     78a:	ed                   	in     eax,dx
     78b:	e8 00 00 00 03       	call   3000790 <kernel_end+0x1fe4798>
     790:	91                   	xchg   ecx,eax
     791:	b8 7f 0b 74 06       	mov    eax,0x6740b7f
     796:	00 00                	add    BYTE PTR [rax],al
     798:	02 ed                	add    ch,ch
     79a:	e8 00 00 00 03       	call   300079f <kernel_end+0x1fe47a7>
     79f:	91                   	xchg   ecx,eax
     7a0:	b0 7f                	mov    al,0x7f
     7a2:	0b a2 03 00 00 02    	or     esp,DWORD PTR [rdx+0x2000003]
     7a8:	ee                   	out    dx,al
     7a9:	13 03                	adc    eax,DWORD PTR [rbx]
     7ab:	00 00                	add    BYTE PTR [rax],al
     7ad:	03 91 a8 7f 0d b3    	add    edx,DWORD PTR [rcx-0x4cf28058]
     7b3:	01 00                	add    DWORD PTR [rax],eax
     7b5:	00 02                	add    BYTE PTR [rdx],al
     7b7:	f2 90                	repnz nop
     7b9:	02 00                	add    al,BYTE PTR [rax]
     7bb:	00 02                	add    BYTE PTR [rdx],al
     7bd:	91                   	xchg   ecx,eax
     7be:	5c                   	pop    rsp
     7bf:	15 00 00 00 00       	adc    eax,0x0
     7c4:	ff 03                	inc    DWORD PTR [rbx]
     7c6:	00 00                	add    BYTE PTR [rax],al
     7c8:	0d 1b 02 00 00       	or     eax,0x21b
     7cd:	02 fc                	add    bh,ah
     7cf:	e8 00 00 00 02       	call   20007d4 <kernel_end+0xfe47dc>
     7d4:	91                   	xchg   ecx,eax
     7d5:	48 00 10             	rex.W add BYTE PTR [rax],dl
     7d8:	45 6b 00 01          	imul   r8d,DWORD PTR [r8],0x1
     7dc:	00 00                	add    BYTE PTR [rax],al
     7de:	00 00                	add    BYTE PTR [rax],al
     7e0:	51                   	push   rcx
     7e1:	00 00                	add    BYTE PTR [rax],al
     7e3:	00 00                	add    BYTE PTR [rax],al
     7e5:	00 00                	add    BYTE PTR [rax],al
     7e7:	00 16                	add    BYTE PTR [rsi],dl
     7e9:	2f                   	(bad)  
     7ea:	04 00                	add    al,0x0
     7ec:	00 02                	add    BYTE PTR [rdx],al
     7ee:	0c 01                	or     al,0x1
     7f0:	e8 00 00 00 02       	call   20007f5 <kernel_end+0xfe47fd>
     7f5:	91                   	xchg   ecx,eax
     7f6:	50                   	push   rax
     7f7:	00 00                	add    BYTE PTR [rax],al
     7f9:	17                   	(bad)  
     7fa:	aa                   	stos   BYTE PTR es:[rdi],al
     7fb:	03 00                	add    eax,DWORD PTR [rax]
     7fd:	00 02                	add    BYTE PTR [rdx],al
     7ff:	1d 01 e8 00 00       	sbb    eax,0xe801
     804:	00 f2                	add    dl,dh
     806:	6b 00 01             	imul   eax,DWORD PTR [rax],0x1
     809:	00 00                	add    BYTE PTR [rax],al
     80b:	00 00                	add    BYTE PTR [rax],al
     80d:	8b 00                	mov    eax,DWORD PTR [rax]
     80f:	00 00                	add    BYTE PTR [rax],al
     811:	00 00                	add    BYTE PTR [rax],al
     813:	00 00                	add    BYTE PTR [rax],al
     815:	01 9c 80 04 00 00 18 	add    DWORD PTR [rax+rax*4+0x18000004],ebx
     81c:	18 04 00             	sbb    BYTE PTR [rax+rax*1],al
     81f:	00 02                	add    BYTE PTR [rdx],al
     821:	1d 01 e8 00 00       	sbb    eax,0xe801
     826:	00 02                	add    BYTE PTR [rdx],al
     828:	91                   	xchg   ecx,eax
     829:	58                   	pop    rax
     82a:	18 74 06 00          	sbb    BYTE PTR [rsi+rax*1+0x0],dh
     82e:	00 02                	add    BYTE PTR [rdx],al
     830:	1d 01 e8 00 00       	sbb    eax,0xe801
     835:	00 02                	add    BYTE PTR [rdx],al
     837:	91                   	xchg   ecx,eax
     838:	50                   	push   rax
     839:	18 a2 03 00 00 02    	sbb    BYTE PTR [rdx+0x2000003],ah
     83f:	1e                   	(bad)  
     840:	01 13                	add    DWORD PTR [rbx],edx
     842:	03 00                	add    eax,DWORD PTR [rax]
     844:	00 02                	add    BYTE PTR [rdx],al
     846:	91                   	xchg   ecx,eax
     847:	48 16                	rex.W (bad) 
     849:	b3 01                	mov    bl,0x1
     84b:	00 00                	add    BYTE PTR [rax],al
     84d:	02 22                	add    ah,BYTE PTR [rdx]
     84f:	01 90 02 00 00 02    	add    DWORD PTR [rax+0x2000002],edx
     855:	91                   	xchg   ecx,eax
     856:	6c                   	ins    BYTE PTR es:[rdi],dx
     857:	00 19                	add    BYTE PTR [rcx],bl
     859:	d1 03                	rol    DWORD PTR [rbx],1
     85b:	00 00                	add    BYTE PTR [rax],al
     85d:	02 2b                	add    ch,BYTE PTR [rbx]
     85f:	01 7d 6c             	add    DWORD PTR [rbp+0x6c],edi
     862:	00 01                	add    BYTE PTR [rcx],al
     864:	00 00                	add    BYTE PTR [rax],al
     866:	00 00                	add    BYTE PTR [rax],al
     868:	45 00 00             	add    BYTE PTR [r8],r8b
     86b:	00 00                	add    BYTE PTR [rax],al
     86d:	00 00                	add    BYTE PTR [rax],al
     86f:	00 01                	add    BYTE PTR [rcx],al
     871:	9c                   	pushf  
     872:	ad                   	lods   eax,DWORD PTR ds:[rsi]
     873:	04 00                	add    al,0x0
     875:	00 1a                	add    BYTE PTR [rdx],bl
     877:	69 74 00 02 2b 01 e8 	imul   esi,DWORD PTR [rax+rax*1+0x2],0xe8012b
     87e:	00 
     87f:	00 00                	add    BYTE PTR [rax],al
     881:	02 91 68 00 1b 1d    	add    dl,BYTE PTR [rcx+0x1d1b0068]
     887:	04 00                	add    al,0x0
     889:	00 02                	add    BYTE PTR [rdx],al
     88b:	38 01                	cmp    BYTE PTR [rcx],al
     88d:	e8 00 00 00 c2       	call   ffffffffc2000892 <MULTIBOOT_CHECK_SUM+0xaa5259c0>
     892:	6c                   	ins    BYTE PTR es:[rdi],dx
     893:	00 01                	add    BYTE PTR [rcx],al
     895:	00 00                	add    BYTE PTR [rax],al
     897:	00 00                	add    BYTE PTR [rax],al
     899:	50                   	push   rax
     89a:	00 00                	add    BYTE PTR [rax],al
     89c:	00 00                	add    BYTE PTR [rax],al
     89e:	00 00                	add    BYTE PTR [rax],al
     8a0:	00 01                	add    BYTE PTR [rcx],al
     8a2:	9c                   	pushf  
     8a3:	ee                   	out    dx,al
     8a4:	04 00                	add    al,0x0
     8a6:	00 18                	add    BYTE PTR [rax],bl
     8a8:	e1 02                	loope  8ac <MULTIBOOT_HEADER_SIZE+0x854>
     8aa:	00 00                	add    BYTE PTR [rax],al
     8ac:	02 38                	add    bh,BYTE PTR [rax]
     8ae:	01 ee                	add    esi,ebp
     8b0:	04 00                	add    al,0x0
     8b2:	00 02                	add    BYTE PTR [rdx],al
     8b4:	91                   	xchg   ecx,eax
     8b5:	58                   	pop    rax
     8b6:	16                   	(bad)  
     8b7:	03 10                	add    edx,DWORD PTR [rax]
     8b9:	00 00                	add    BYTE PTR [rax],al
     8bb:	02 3c 01             	add    bh,BYTE PTR [rcx+rax*1]
     8be:	e8 00 00 00 02       	call   20008c3 <kernel_end+0xfe48cb>
     8c3:	91                   	xchg   ecx,eax
     8c4:	68 00 07 08 ee       	push   0xffffffffee080700
     8c9:	00 00                	add    BYTE PTR [rax],al
     8cb:	00 1b                	add    BYTE PTR [rbx],bl
     8cd:	e6 02                	out    0x2,al
     8cf:	00 00                	add    BYTE PTR [rax],al
     8d1:	02 44 01 e8          	add    al,BYTE PTR [rcx+rax*1-0x18]
     8d5:	00 00                	add    BYTE PTR [rax],al
     8d7:	00 12                	add    BYTE PTR [rdx],dl
     8d9:	6d                   	ins    DWORD PTR es:[rdi],dx
     8da:	00 01                	add    BYTE PTR [rcx],al
     8dc:	00 00                	add    BYTE PTR [rax],al
     8de:	00 00                	add    BYTE PTR [rax],al
     8e0:	52                   	push   rdx
     8e1:	00 00                	add    BYTE PTR [rax],al
     8e3:	00 00                	add    BYTE PTR [rax],al
     8e5:	00 00                	add    BYTE PTR [rax],al
     8e7:	00 01                	add    BYTE PTR [rcx],al
     8e9:	9c                   	pushf  
     8ea:	35 05 00 00 18       	xor    eax,0x18000005
     8ef:	e1 02                	loope  8f3 <MULTIBOOT_HEADER_SIZE+0x89b>
     8f1:	00 00                	add    BYTE PTR [rax],al
     8f3:	02 44 01 ee          	add    al,BYTE PTR [rcx+rax*1-0x12]
     8f7:	04 00                	add    al,0x0
     8f9:	00 02                	add    BYTE PTR [rdx],al
     8fb:	91                   	xchg   ecx,eax
     8fc:	58                   	pop    rax
     8fd:	16                   	(bad)  
     8fe:	03 10                	add    edx,DWORD PTR [rax]
     900:	00 00                	add    BYTE PTR [rax],al
     902:	02 48 01             	add    cl,BYTE PTR [rax+0x1]
     905:	e8 00 00 00 02       	call   200090a <kernel_end+0xfe4912>
     90a:	91                   	xchg   ecx,eax
     90b:	68 00 1b 33 02       	push   0x2331b00
     910:	00 00                	add    BYTE PTR [rax],al
     912:	02 51 01             	add    dl,BYTE PTR [rcx+0x1]
     915:	e8 00 00 00 64       	call   6400091a <MULTIBOOT_LOADED_MAGIC+0x2d28a691>
     91a:	6d                   	ins    DWORD PTR es:[rdi],dx
     91b:	00 01                	add    BYTE PTR [rcx],al
     91d:	00 00                	add    BYTE PTR [rax],al
     91f:	00 00                	add    BYTE PTR [rax],al
     921:	95                   	xchg   ebp,eax
     922:	00 00                	add    BYTE PTR [rax],al
     924:	00 00                	add    BYTE PTR [rax],al
     926:	00 00                	add    BYTE PTR [rax],al
     928:	00 01                	add    BYTE PTR [rcx],al
     92a:	9c                   	pushf  
     92b:	75 05                	jne    932 <MULTIBOOT_HEADER_SIZE+0x8da>
     92d:	00 00                	add    BYTE PTR [rax],al
     92f:	1a 69 74             	sbb    ch,BYTE PTR [rcx+0x74]
     932:	00 02                	add    BYTE PTR [rdx],al
     934:	51                   	push   rcx
     935:	01 e8                	add    eax,ebp
     937:	00 00                	add    BYTE PTR [rax],al
     939:	00 02                	add    BYTE PTR [rdx],al
     93b:	91                   	xchg   ecx,eax
     93c:	58                   	pop    rax
     93d:	16                   	(bad)  
     93e:	18 04 00             	sbb    BYTE PTR [rax+rax*1],al
     941:	00 02                	add    BYTE PTR [rdx],al
     943:	55                   	push   rbp
     944:	01 e8                	add    eax,ebp
     946:	00 00                	add    BYTE PTR [rax],al
     948:	00 02                	add    BYTE PTR [rdx],al
     94a:	91                   	xchg   ecx,eax
     94b:	68 00 1b c0 03       	push   0x3c01b00
     950:	00 00                	add    BYTE PTR [rax],al
     952:	02 69 01             	add    ch,BYTE PTR [rcx+0x1]
     955:	e8 00 00 00 f9       	call   fffffffff900095a <MULTIBOOT_CHECK_SUM+0xe1525a88>
     95a:	6d                   	ins    DWORD PTR es:[rdi],dx
     95b:	00 01                	add    BYTE PTR [rcx],al
     95d:	00 00                	add    BYTE PTR [rax],al
     95f:	00 00                	add    BYTE PTR [rax],al
     961:	96                   	xchg   esi,eax
     962:	00 00                	add    BYTE PTR [rax],al
     964:	00 00                	add    BYTE PTR [rax],al
     966:	00 00                	add    BYTE PTR [rax],al
     968:	00 01                	add    BYTE PTR [rcx],al
     96a:	9c                   	pushf  
     96b:	b5 05                	mov    ch,0x5
     96d:	00 00                	add    BYTE PTR [rax],al
     96f:	1a 69 74             	sbb    ch,BYTE PTR [rcx+0x74]
     972:	00 02                	add    BYTE PTR [rdx],al
     974:	69 01 e8 00 00 00    	imul   eax,DWORD PTR [rcx],0xe8
     97a:	02 91 58 16 18 04    	add    dl,BYTE PTR [rcx+0x4181658]
     980:	00 00                	add    BYTE PTR [rax],al
     982:	02 6d 01             	add    ch,BYTE PTR [rbp+0x1]
     985:	e8 00 00 00 02       	call   200098a <kernel_end+0xfe4992>
     98a:	91                   	xchg   ecx,eax
     98b:	68 00 1c f7 02       	push   0x2f71c00
     990:	00 00                	add    BYTE PTR [rax],al
     992:	02 81 01 e8 00 00    	add    al,BYTE PTR [rcx+0xe801]
     998:	00 8f 6e 00 01 00    	add    BYTE PTR [rdi+0x1006e],cl
     99e:	00 00                	add    BYTE PTR [rax],al
     9a0:	00 30                	add    BYTE PTR [rax],dh
     9a2:	00 00                	add    BYTE PTR [rax],al
     9a4:	00 00                	add    BYTE PTR [rax],al
     9a6:	00 00                	add    BYTE PTR [rax],al
     9a8:	00 01                	add    BYTE PTR [rcx],al
     9aa:	9c                   	pushf  
     9ab:	05 06 00 00 18       	add    eax,0x18000006
     9b0:	e1 02                	loope  9b4 <MULTIBOOT_HEADER_SIZE+0x95c>
     9b2:	00 00                	add    BYTE PTR [rax],al
     9b4:	02 81 01 ee 04 00    	add    al,BYTE PTR [rcx+0x4ee01]
     9ba:	00 02                	add    BYTE PTR [rdx],al
     9bc:	91                   	xchg   ecx,eax
     9bd:	68 18 74 06 00       	push   0x67418
     9c2:	00 02                	add    BYTE PTR [rdx],al
     9c4:	81 01 e8 00 00 00    	add    DWORD PTR [rcx],0xe8
     9ca:	02 91 60 18 a2 03    	add    dl,BYTE PTR [rcx+0x3a21860]
     9d0:	00 00                	add    BYTE PTR [rax],al
     9d2:	02 81 01 13 03 00    	add    al,BYTE PTR [rcx+0x31301]
     9d8:	00 02                	add    BYTE PTR [rdx],al
     9da:	91                   	xchg   ecx,eax
     9db:	58                   	pop    rax
     9dc:	00 1d 7f 02 00 00    	add    BYTE PTR [rip+0x27f],bl        # c61 <MULTIBOOT_HEADER_SIZE+0xc09>
     9e2:	02 87 01 bf 6e 00    	add    al,BYTE PTR [rdi+0x6ebf01]
     9e8:	01 00                	add    DWORD PTR [rax],eax
     9ea:	00 00                	add    BYTE PTR [rax],al
     9ec:	00 58 00             	add    BYTE PTR [rax+0x0],bl
     9ef:	00 00                	add    BYTE PTR [rax],al
     9f1:	00 00                	add    BYTE PTR [rax],al
     9f3:	00 00                	add    BYTE PTR [rax],al
     9f5:	01 9c 51 06 00 00 18 	add    DWORD PTR [rcx+rdx*2+0x18000006],ebx
     9fc:	e1 02                	loope  a00 <MULTIBOOT_HEADER_SIZE+0x9a8>
     9fe:	00 00                	add    BYTE PTR [rax],al
     a00:	02 87 01 ee 04 00    	add    al,BYTE PTR [rdi+0x4ee01]
     a06:	00 02                	add    BYTE PTR [rdx],al
     a08:	91                   	xchg   ecx,eax
     a09:	68 18 3b 03 00       	push   0x33b18
     a0e:	00 02                	add    BYTE PTR [rdx],al
     a10:	87 01                	xchg   DWORD PTR [rcx],eax
     a12:	e8 00 00 00 02       	call   2000a17 <kernel_end+0xfe4a1f>
     a17:	91                   	xchg   ecx,eax
     a18:	60                   	(bad)  
     a19:	18 a2 03 00 00 02    	sbb    BYTE PTR [rdx+0x2000003],ah
     a1f:	87 01                	xchg   DWORD PTR [rcx],eax
     a21:	13 03                	adc    eax,DWORD PTR [rbx]
     a23:	00 00                	add    BYTE PTR [rax],al
     a25:	02 91 58 00 1d 96    	add    dl,BYTE PTR [rcx-0x69e2ffa8]
     a2b:	02 00                	add    al,BYTE PTR [rax]
     a2d:	00 02                	add    BYTE PTR [rdx],al
     a2f:	91                   	xchg   ecx,eax
     a30:	01 17                	add    DWORD PTR [rdi],edx
     a32:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     a33:	00 01                	add    BYTE PTR [rcx],al
     a35:	00 00                	add    BYTE PTR [rax],al
     a37:	00 00                	add    BYTE PTR [rax],al
     a39:	4a 00 00             	rex.WX add BYTE PTR [rax],al
     a3c:	00 00                	add    BYTE PTR [rax],al
     a3e:	00 00                	add    BYTE PTR [rax],al
     a40:	00 01                	add    BYTE PTR [rcx],al
     a42:	9c                   	pushf  
     a43:	9d                   	popf   
     a44:	06                   	(bad)  
     a45:	00 00                	add    BYTE PTR [rax],al
     a47:	18 e1                	sbb    cl,ah
     a49:	02 00                	add    al,BYTE PTR [rax]
     a4b:	00 02                	add    BYTE PTR [rdx],al
     a4d:	91                   	xchg   ecx,eax
     a4e:	01 ee                	add    esi,ebp
     a50:	04 00                	add    al,0x0
     a52:	00 02                	add    BYTE PTR [rdx],al
     a54:	91                   	xchg   ecx,eax
     a55:	68 18 3b 03 00       	push   0x33b18
     a5a:	00 02                	add    BYTE PTR [rdx],al
     a5c:	91                   	xchg   ecx,eax
     a5d:	01 e8                	add    eax,ebp
     a5f:	00 00                	add    BYTE PTR [rax],al
     a61:	00 02                	add    BYTE PTR [rdx],al
     a63:	91                   	xchg   ecx,eax
     a64:	60                   	(bad)  
     a65:	18 a2 03 00 00 02    	sbb    BYTE PTR [rdx+0x2000003],ah
     a6b:	91                   	xchg   ecx,eax
     a6c:	01 13                	add    DWORD PTR [rbx],edx
     a6e:	03 00                	add    eax,DWORD PTR [rax]
     a70:	00 02                	add    BYTE PTR [rdx],al
     a72:	91                   	xchg   ecx,eax
     a73:	58                   	pop    rax
     a74:	00 1c 27             	add    BYTE PTR [rdi+riz*1],bl
     a77:	03 00                	add    eax,DWORD PTR [rax]
     a79:	00 02                	add    BYTE PTR [rdx],al
     a7b:	9a                   	(bad)  
     a7c:	01 6c 00 00          	add    DWORD PTR [rax+rax*1+0x0],ebp
     a80:	00 61 6f             	add    BYTE PTR [rcx+0x6f],ah
     a83:	00 01                	add    BYTE PTR [rcx],al
     a85:	00 00                	add    BYTE PTR [rax],al
     a87:	00 00                	add    BYTE PTR [rax],al
     a89:	66 00 00             	data16 add BYTE PTR [rax],al
     a8c:	00 00                	add    BYTE PTR [rax],al
     a8e:	00 00                	add    BYTE PTR [rax],al
     a90:	00 01                	add    BYTE PTR [rcx],al
     a92:	9c                   	pushf  
     a93:	ed                   	in     eax,dx
     a94:	06                   	(bad)  
     a95:	00 00                	add    BYTE PTR [rax],al
     a97:	18 e1                	sbb    cl,ah
     a99:	02 00                	add    al,BYTE PTR [rax]
     a9b:	00 02                	add    BYTE PTR [rdx],al
     a9d:	9a                   	(bad)  
     a9e:	01 ee                	add    esi,ebp
     aa0:	04 00                	add    al,0x0
     aa2:	00 02                	add    BYTE PTR [rdx],al
     aa4:	91                   	xchg   ecx,eax
     aa5:	58                   	pop    rax
     aa6:	16                   	(bad)  
     aa7:	30 03                	xor    BYTE PTR [rbx],al
     aa9:	00 00                	add    BYTE PTR [rax],al
     aab:	02 a0 01 6c 00 00    	add    ah,BYTE PTR [rax+0x6c01]
     ab1:	00 02                	add    BYTE PTR [rdx],al
     ab3:	91                   	xchg   ecx,eax
     ab4:	6c                   	ins    BYTE PTR es:[rdi],dx
     ab5:	16                   	(bad)  
     ab6:	03 10                	add    edx,DWORD PTR [rax]
     ab8:	00 00                	add    BYTE PTR [rax],al
     aba:	02 a1 01 e8 00 00    	add    ah,BYTE PTR [rcx+0xe801]
     ac0:	00 02                	add    BYTE PTR [rdx],al
     ac2:	91                   	xchg   ecx,eax
     ac3:	60                   	(bad)  
     ac4:	00 1e                	add    BYTE PTR [rsi],bl
     ac6:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
     ac7:	01 00                	add    DWORD PTR [rax],eax
     ac9:	00 02                	add    BYTE PTR [rdx],al
     acb:	aa                   	stos   BYTE PTR es:[rdi],al
     acc:	01 c7                	add    edi,eax
     ace:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     acf:	00 01                	add    BYTE PTR [rcx],al
     ad1:	00 00                	add    BYTE PTR [rax],al
     ad3:	00 00                	add    BYTE PTR [rax],al
     ad5:	22 00                	and    al,BYTE PTR [rax]
     ad7:	00 00                	add    BYTE PTR [rax],al
     ad9:	00 00                	add    BYTE PTR [rax],al
     adb:	00 00                	add    BYTE PTR [rax],al
     add:	01 9c 1b 07 00 00 18 	add    DWORD PTR [rbx+rbx*1+0x18000007],ebx
     ae4:	e1 02                	loope  ae8 <MULTIBOOT_HEADER_SIZE+0xa90>
     ae6:	00 00                	add    BYTE PTR [rax],al
     ae8:	02 aa 01 ee 04 00    	add    ch,BYTE PTR [rdx+0x4ee01]
     aee:	00 02                	add    BYTE PTR [rdx],al
     af0:	91                   	xchg   ecx,eax
     af1:	68 00 17 e1 01       	push   0x1e11700
     af6:	00 00                	add    BYTE PTR [rax],al
     af8:	02 b7 01 6c 00 00    	add    dh,BYTE PTR [rdi+0x6c01]
     afe:	00 e9                	add    cl,ch
     b00:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     b01:	00 01                	add    BYTE PTR [rcx],al
     b03:	00 00                	add    BYTE PTR [rax],al
     b05:	00 00                	add    BYTE PTR [rax],al
     b07:	4f 00 00             	rex.WRXB add BYTE PTR [r8],r8b
     b0a:	00 00                	add    BYTE PTR [rax],al
     b0c:	00 00                	add    BYTE PTR [rax],al
     b0e:	00 01                	add    BYTE PTR [rcx],al
     b10:	9c                   	pushf  
     b11:	4d 07                	rex.WRB (bad) 
     b13:	00 00                	add    BYTE PTR [rax],al
     b15:	18 e1                	sbb    cl,ah
     b17:	02 00                	add    al,BYTE PTR [rax]
     b19:	00 02                	add    BYTE PTR [rdx],al
     b1b:	b7 01                	mov    bh,0x1
     b1d:	e8 00 00 00 02       	call   2000b22 <kernel_end+0xfe4b2a>
     b22:	91                   	xchg   ecx,eax
     b23:	58                   	pop    rax
     b24:	00 17                	add    BYTE PTR [rdi],dl
     b26:	07                   	(bad)  
     b27:	03 00                	add    eax,DWORD PTR [rax]
     b29:	00 02                	add    BYTE PTR [rdx],al
     b2b:	be 01 8e 07 00       	mov    esi,0x78e01
     b30:	00 38                	add    BYTE PTR [rax],bh
     b32:	70 00                	jo     b34 <MULTIBOOT_HEADER_SIZE+0xadc>
     b34:	01 00                	add    DWORD PTR [rax],eax
     b36:	00 00                	add    BYTE PTR [rax],al
     b38:	00 5a 01             	add    BYTE PTR [rdx+0x1],bl
     b3b:	00 00                	add    BYTE PTR [rax],al
     b3d:	00 00                	add    BYTE PTR [rax],al
     b3f:	00 00                	add    BYTE PTR [rax],al
     b41:	01 9c 8e 07 00 00 18 	add    DWORD PTR [rsi+rcx*4+0x18000007],ebx
     b48:	e1 02                	loope  b4c <MULTIBOOT_HEADER_SIZE+0xaf4>
     b4a:	00 00                	add    BYTE PTR [rax],al
     b4c:	02 be 01 e8 00 00    	add    bh,BYTE PTR [rsi+0xe801]
     b52:	00 02                	add    BYTE PTR [rdx],al
     b54:	91                   	xchg   ecx,eax
     b55:	68 18 a2 03 00       	push   0x3a218
     b5a:	00 02                	add    BYTE PTR [rdx],al
     b5c:	be 01 13 03 00       	mov    esi,0x31301
     b61:	00 02                	add    BYTE PTR [rdx],al
     b63:	91                   	xchg   ecx,eax
     b64:	60                   	(bad)  
     b65:	00 02                	add    BYTE PTR [rdx],al
     b67:	01 02                	add    DWORD PTR [rdx],eax
     b69:	35 03 00 00 1f       	xor    eax,0x1f000003
     b6e:	21 02                	and    DWORD PTR [rdx],eax
     b70:	00 00                	add    BYTE PTR [rax],al
     b72:	02 d6                	add    dl,dh
     b74:	01 8e 07 00 00 92    	add    DWORD PTR [rsi-0x6dfffff9],ecx
     b7a:	71 00                	jno    b7c <MULTIBOOT_HEADER_SIZE+0xb24>
     b7c:	01 00                	add    DWORD PTR [rax],eax
     b7e:	00 00                	add    BYTE PTR [rax],al
     b80:	00 36                	add    BYTE PTR [rsi],dh
     b82:	00 00                	add    BYTE PTR [rax],al
     b84:	00 00                	add    BYTE PTR [rax],al
     b86:	00 00                	add    BYTE PTR [rax],al
     b88:	00 01                	add    BYTE PTR [rcx],al
     b8a:	9c                   	pushf  
     b8b:	18 e1                	sbb    cl,ah
     b8d:	02 00                	add    al,BYTE PTR [rax]
     b8f:	00 02                	add    BYTE PTR [rdx],al
     b91:	d6                   	(bad)  
     b92:	01 ee                	add    esi,ebp
     b94:	04 00                	add    al,0x0
     b96:	00 02                	add    BYTE PTR [rdx],al
     b98:	91                   	xchg   ecx,eax
     b99:	68 18 a2 03 00       	push   0x3a218
     b9e:	00 02                	add    BYTE PTR [rdx],al
     ba0:	d6                   	(bad)  
     ba1:	01 13                	add    DWORD PTR [rbx],edx
     ba3:	03 00                	add    eax,DWORD PTR [rax]
     ba5:	00 02                	add    BYTE PTR [rdx],al
     ba7:	91                   	xchg   ecx,eax
     ba8:	60                   	(bad)  
     ba9:	00 00                	add    BYTE PTR [rax],al
     bab:	35 05 00 00 04       	xor    eax,0x4000005
     bb0:	00 fd                	add    ch,bh
     bb2:	03 00                	add    eax,DWORD PTR [rax]
     bb4:	00 08                	add    BYTE PTR [rax],cl
     bb6:	01 27                	add    DWORD PTR [rdi],esp
     bb8:	00 00                	add    BYTE PTR [rax],al
     bba:	00 0c 0f             	add    BYTE PTR [rdi+rcx*1],cl
     bbd:	05 00 00 e5 00       	add    eax,0xe50000
     bc2:	00 00                	add    BYTE PTR [rax],al
     bc4:	c8 71 00 01          	enter  0x71,0x1
     bc8:	00 00                	add    BYTE PTR [rax],al
     bca:	00 00                	add    BYTE PTR [rax],al
     bcc:	88 05 00 00 00 00    	mov    BYTE PTR [rip+0x0],al        # bd2 <MULTIBOOT_HEADER_SIZE+0xb7a>
     bd2:	00 00                	add    BYTE PTR [rax],al
     bd4:	86 04 00             	xchg   BYTE PTR [rax+rax*1],al
     bd7:	00 02                	add    BYTE PTR [rdx],al
     bd9:	08 05 13 01 00 00    	or     BYTE PTR [rip+0x113],al        # cf2 <MULTIBOOT_HEADER_SIZE+0xc9a>
     bdf:	02 08                	add    cl,BYTE PTR [rax]
     be1:	07                   	(bad)  
     be2:	65 10 00             	adc    BYTE PTR gs:[rax],al
     be5:	00 03                	add    BYTE PTR [rbx],al
     be7:	04 05                	add    al,0x5
     be9:	69 6e 74 00 02 08 05 	imul   ebp,DWORD PTR [rsi+0x74],0x5080200
     bf0:	0e                   	(bad)  
     bf1:	01 00                	add    DWORD PTR [rax],eax
     bf3:	00 02                	add    BYTE PTR [rdx],al
     bf5:	10 04 2e             	adc    BYTE PTR [rsi+rbp*1],al
     bf8:	01 00                	add    DWORD PTR [rax],eax
     bfa:	00 02                	add    BYTE PTR [rdx],al
     bfc:	08 07                	or     BYTE PTR [rdi],al
     bfe:	05 01 00 00 02       	add    eax,0x2000001
     c03:	04 07                	add    al,0x7
     c05:	6a 10                	push   0x10
     c07:	00 00                	add    BYTE PTR [rax],al
     c09:	04 08                	add    al,0x8
     c0b:	02 01                	add    al,BYTE PTR [rcx]
     c0d:	06                   	(bad)  
     c0e:	c6 00 00             	mov    BYTE PTR [rax],0x0
     c11:	00 02                	add    BYTE PTR [rdx],al
     c13:	02 05 1c 01 00 00    	add    al,BYTE PTR [rip+0x11c]        # d35 <MULTIBOOT_HEADER_SIZE+0xcdd>
     c19:	02 01                	add    al,BYTE PTR [rcx]
     c1b:	08 c4                	or     ah,al
     c1d:	00 00                	add    BYTE PTR [rax],al
     c1f:	00 02                	add    BYTE PTR [rdx],al
     c21:	02 07                	add    al,BYTE PTR [rdi]
     c23:	d2 00                	rol    BYTE PTR [rax],cl
     c25:	00 00                	add    BYTE PTR [rax],al
     c27:	05 2f 11 00 00       	add    eax,0x112f
     c2c:	03 33                	add    esi,DWORD PTR [rbx]
     c2e:	57                   	push   rdi
     c2f:	00 00                	add    BYTE PTR [rax],al
     c31:	00 06                	add    BYTE PTR [rsi],al
     c33:	04 02                	add    al,0x2
     c35:	09 a6 00 00 00 07    	or     DWORD PTR [rsi+0x7000000],esp
     c3b:	30 03                	xor    BYTE PTR [rbx],al
     c3d:	00 00                	add    BYTE PTR [rax],al
     c3f:	02 0b                	add    cl,BYTE PTR [rbx]
     c41:	7c 00                	jl     c43 <MULTIBOOT_HEADER_SIZE+0xbeb>
     c43:	00 00                	add    BYTE PTR [rax],al
     c45:	07                   	(bad)  
     c46:	bd 0e 00 00 02       	mov    ebp,0x200000e
     c4b:	0c 7c                	or     al,0x7c
     c4d:	00 00                	add    BYTE PTR [rax],al
     c4f:	00 00                	add    BYTE PTR [rax],al
     c51:	05 9e 05 00 00       	add    eax,0x59e
     c56:	02 0d 87 00 00 00    	add    cl,BYTE PTR [rip+0x87]        # ce3 <MULTIBOOT_HEADER_SIZE+0xc8b>
     c5c:	08 47 05             	or     BYTE PTR [rdi+0x5],al
     c5f:	00 00                	add    BYTE PTR [rax],al
     c61:	01 11                	add    DWORD PTR [rcx],edx
     c63:	7c 00                	jl     c65 <MULTIBOOT_HEADER_SIZE+0xc0d>
     c65:	00 00                	add    BYTE PTR [rax],al
     c67:	c8 71 00 01          	enter  0x71,0x1
     c6b:	00 00                	add    BYTE PTR [rax],al
     c6d:	00 00                	add    BYTE PTR [rax],al
     c6f:	1b 00                	sbb    eax,DWORD PTR [rax]
     c71:	00 00                	add    BYTE PTR [rax],al
     c73:	00 00                	add    BYTE PTR [rax],al
     c75:	00 00                	add    BYTE PTR [rax],al
     c77:	01 9c e1 00 00 00 09 	add    DWORD PTR [rcx+riz*8+0x9000000],ebx
     c7e:	62                   	(bad)  
     c7f:	69 74 00 01 11 7c 00 	imul   esi,DWORD PTR [rax+rax*1+0x1],0x7c11
     c86:	00 
     c87:	00 02                	add    BYTE PTR [rdx],al
     c89:	91                   	xchg   ecx,eax
     c8a:	6c                   	ins    BYTE PTR es:[rdi],dx
     c8b:	00 08                	add    BYTE PTR [rax],cl
     c8d:	8f 04 00             	pop    QWORD PTR [rax+rax*1]
     c90:	00 01                	add    BYTE PTR [rcx],al
     c92:	1b 7c 00 00          	sbb    edi,DWORD PTR [rax+rax*1+0x0]
     c96:	00 e3                	add    bl,ah
     c98:	71 00                	jno    c9a <MULTIBOOT_HEADER_SIZE+0xc42>
     c9a:	01 00                	add    DWORD PTR [rax],eax
     c9c:	00 00                	add    BYTE PTR [rax],al
     c9e:	00 2d 00 00 00 00    	add    BYTE PTR [rip+0x0],ch        # ca4 <MULTIBOOT_HEADER_SIZE+0xc4c>
     ca4:	00 00                	add    BYTE PTR [rax],al
     ca6:	00 01                	add    BYTE PTR [rcx],al
     ca8:	9c                   	pushf  
     ca9:	1f                   	(bad)  
     caa:	01 00                	add    DWORD PTR [rax],eax
     cac:	00 09                	add    BYTE PTR [rcx],cl
     cae:	6c                   	ins    BYTE PTR es:[rdi],dx
     caf:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     cb0:	77 00                	ja     cb2 <MULTIBOOT_HEADER_SIZE+0xc5a>
     cb2:	01 1b                	add    DWORD PTR [rbx],ebx
     cb4:	7c 00                	jl     cb6 <MULTIBOOT_HEADER_SIZE+0xc5e>
     cb6:	00 00                	add    BYTE PTR [rax],al
     cb8:	02 91 6c 0a f2 04    	add    dl,BYTE PTR [rcx+0x4f20a6c]
     cbe:	00 00                	add    BYTE PTR [rax],al
     cc0:	01 1b                	add    DWORD PTR [rbx],ebx
     cc2:	7c 00                	jl     cc4 <MULTIBOOT_HEADER_SIZE+0xc6c>
     cc4:	00 00                	add    BYTE PTR [rax],al
     cc6:	02 91 68 00 0b f7    	add    dl,BYTE PTR [rcx-0x8f4ff98]
     ccc:	04 00                	add    al,0x0
     cce:	00 02                	add    BYTE PTR [rdx],al
     cd0:	13 10                	adc    edx,DWORD PTR [rax]
     cd2:	72 00                	jb     cd4 <MULTIBOOT_HEADER_SIZE+0xc7c>
     cd4:	01 00                	add    DWORD PTR [rax],eax
     cd6:	00 00                	add    BYTE PTR [rax],al
     cd8:	00 48 00             	add    BYTE PTR [rax+0x0],cl
     cdb:	00 00                	add    BYTE PTR [rax],al
     cdd:	00 00                	add    BYTE PTR [rax],al
     cdf:	00 00                	add    BYTE PTR [rax],al
     ce1:	01 9c 59 01 00 00 0a 	add    DWORD PTR [rcx+rbx*2+0xa000001],ebx
     ce8:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
     ce9:	05 00 00 02 13       	add    eax,0x13020000
     cee:	59                   	pop    rcx
     cef:	01 00                	add    DWORD PTR [rax],eax
     cf1:	00 02                	add    BYTE PTR [rdx],al
     cf3:	91                   	xchg   ecx,eax
     cf4:	68 0a 30 03 00       	push   0x3300a
     cf9:	00 02                	add    BYTE PTR [rdx],al
     cfb:	13 7c 00 00          	adc    edi,DWORD PTR [rax+rax*1+0x0]
     cff:	00 02                	add    BYTE PTR [rdx],al
     d01:	91                   	xchg   ecx,eax
     d02:	64 00 0c 08          	add    BYTE PTR fs:[rax+rcx*1],cl
     d06:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
     d07:	00 00                	add    BYTE PTR [rax],al
     d09:	00 08                	add    BYTE PTR [rax],cl
     d0b:	2e 05 00 00 02 1f    	cs add eax,0x1f020000
     d11:	7c 00                	jl     d13 <MULTIBOOT_HEADER_SIZE+0xcbb>
     d13:	00 00                	add    BYTE PTR [rax],al
     d15:	58                   	pop    rax
     d16:	72 00                	jb     d18 <MULTIBOOT_HEADER_SIZE+0xcc0>
     d18:	01 00                	add    DWORD PTR [rax],eax
     d1a:	00 00                	add    BYTE PTR [rax],al
     d1c:	00 17                	add    BYTE PTR [rdi],dl
     d1e:	00 00                	add    BYTE PTR [rax],al
     d20:	00 00                	add    BYTE PTR [rax],al
     d22:	00 00                	add    BYTE PTR [rax],al
     d24:	00 01                	add    BYTE PTR [rcx],al
     d26:	9c                   	pushf  
     d27:	8f 01                	pop    QWORD PTR [rcx]
     d29:	00 00                	add    BYTE PTR [rax],al
     d2b:	0a a6 05 00 00 02    	or     ah,BYTE PTR [rsi+0x2000005]
     d31:	1f                   	(bad)  
     d32:	59                   	pop    rcx
     d33:	01 00                	add    DWORD PTR [rax],eax
     d35:	00 02                	add    BYTE PTR [rdx],al
     d37:	91                   	xchg   ecx,eax
     d38:	68 00 0d b2 04       	push   0x4b20d00
     d3d:	00 00                	add    BYTE PTR [rax],al
     d3f:	02 24 7c             	add    ah,BYTE PTR [rsp+rdi*2]
     d42:	00 00                	add    BYTE PTR [rax],al
     d44:	00 6f 72             	add    BYTE PTR [rdi+0x72],ch
     d47:	00 01                	add    BYTE PTR [rcx],al
     d49:	00 00                	add    BYTE PTR [rax],al
     d4b:	00 00                	add    BYTE PTR [rax],al
     d4d:	31 00                	xor    DWORD PTR [rax],eax
     d4f:	00 00                	add    BYTE PTR [rax],al
     d51:	00 00                	add    BYTE PTR [rax],al
     d53:	00 00                	add    BYTE PTR [rax],al
     d55:	01 9c cd 01 00 00 0a 	add    DWORD PTR [rbp+rcx*8+0xa000001],ebx
     d5c:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
     d5d:	05 00 00 02 24       	add    eax,0x24020000
     d62:	59                   	pop    rcx
     d63:	01 00                	add    DWORD PTR [rax],eax
     d65:	00 02                	add    BYTE PTR [rdx],al
     d67:	91                   	xchg   ecx,eax
     d68:	60                   	(bad)  
     d69:	09 62 69             	or     DWORD PTR [rdx+0x69],esp
     d6c:	74 00                	je     d6e <MULTIBOOT_HEADER_SIZE+0xd16>
     d6e:	02 24 7c             	add    ah,BYTE PTR [rsp+rdi*2]
     d71:	00 00                	add    BYTE PTR [rax],al
     d73:	00 02                	add    BYTE PTR [rdx],al
     d75:	91                   	xchg   ecx,eax
     d76:	5c                   	pop    rsp
     d77:	00 0b                	add    BYTE PTR [rbx],cl
     d79:	6c                   	ins    BYTE PTR es:[rdi],dx
     d7a:	04 00                	add    al,0x0
     d7c:	00 02                	add    BYTE PTR [rdx],al
     d7e:	29 a0 72 00 01 00    	sub    DWORD PTR [rax+0x10072],esp
     d84:	00 00                	add    BYTE PTR [rax],al
     d86:	00 60 00             	add    BYTE PTR [rax+0x0],ah
     d89:	00 00                	add    BYTE PTR [rax],al
     d8b:	00 00                	add    BYTE PTR [rax],al
     d8d:	00 00                	add    BYTE PTR [rax],al
     d8f:	01 9c 15 02 00 00 0a 	add    DWORD PTR [rbp+rdx*1+0xa000002],ebx
     d96:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
     d97:	05 00 00 02 29       	add    eax,0x29020000
     d9c:	59                   	pop    rcx
     d9d:	01 00                	add    DWORD PTR [rax],eax
     d9f:	00 02                	add    BYTE PTR [rdx],al
     da1:	91                   	xchg   ecx,eax
     da2:	68 09 62 69 74       	push   0x74696209
     da7:	00 02                	add    BYTE PTR [rdx],al
     da9:	29 7c 00 00          	sub    DWORD PTR [rax+rax*1+0x0],edi
     dad:	00 02                	add    BYTE PTR [rdx],al
     daf:	91                   	xchg   ecx,eax
     db0:	64 0a ac 04 00 00 02 	or     ch,BYTE PTR fs:[rsp+rax*1+0x29020000]
     db7:	29 
     db8:	7c 00                	jl     dba <MULTIBOOT_HEADER_SIZE+0xd62>
     dba:	00 00                	add    BYTE PTR [rax],al
     dbc:	02 91 60 00 0b 75    	add    dl,BYTE PTR [rcx+0x750b0060]
     dc2:	05 00 00 02 37       	add    eax,0x37020000
     dc7:	00 73 00             	add    BYTE PTR [rbx+0x0],dh
     dca:	01 00                	add    DWORD PTR [rax],eax
     dcc:	00 00                	add    BYTE PTR [rax],al
     dce:	00 fd                	add    ch,bh
     dd0:	00 00                	add    BYTE PTR [rax],al
     dd2:	00 00                	add    BYTE PTR [rax],al
     dd4:	00 00                	add    BYTE PTR [rax],al
     dd6:	00 01                	add    BYTE PTR [rcx],al
     dd8:	9c                   	pushf  
     dd9:	dc 02                	fadd   QWORD PTR [rdx]
     ddb:	00 00                	add    BYTE PTR [rax],al
     ddd:	0a b7 0e 00 00 02    	or     dh,BYTE PTR [rdi+0x200000e]
     de3:	37                   	(bad)  
     de4:	5e                   	pop    rsi
     de5:	00 00                	add    BYTE PTR [rax],al
     de7:	00 03                	add    BYTE PTR [rbx],al
     de9:	91                   	xchg   ecx,eax
     dea:	b8 7f 0e 17 73       	mov    eax,0x73170e7f
     def:	00 01                	add    BYTE PTR [rcx],al
     df1:	00 00                	add    BYTE PTR [rax],al
     df3:	00 00                	add    BYTE PTR [rax],al
     df5:	e3 00                	jrcxz  df7 <MULTIBOOT_HEADER_SIZE+0xd9f>
     df7:	00 00                	add    BYTE PTR [rax],al
     df9:	00 00                	add    BYTE PTR [rax],al
     dfb:	00 00                	add    BYTE PTR [rax],al
     dfd:	0f 53 05 00 00 02 3b 	rcpps  xmm0,XMMWORD PTR [rip+0x3b020000]        # 3b020e04 <MULTIBOOT_LOADED_MAGIC+0x42aab7b>
     e04:	dc 02                	fadd   QWORD PTR [rdx]
     e06:	00 00                	add    BYTE PTR [rax],al
     e08:	02 91 68 10 30 00    	add    dl,BYTE PTR [rcx+0x301068]
     e0e:	00 00                	add    BYTE PTR [rax],al
     e10:	0f 82 05 00 00 02    	jb     2000e1b <kernel_end+0xfe4e23>
     e16:	3e 7c 00             	ds jl  e19 <MULTIBOOT_HEADER_SIZE+0xdc1>
     e19:	00 00                	add    BYTE PTR [rax],al
     e1b:	02 91 64 0f a1 04    	add    dl,BYTE PTR [rcx+0x4a10f64]
     e21:	00 00                	add    BYTE PTR [rax],al
     e23:	02 3f                	add    bh,BYTE PTR [rdi]
     e25:	7c 00                	jl     e27 <MULTIBOOT_HEADER_SIZE+0xdcf>
     e27:	00 00                	add    BYTE PTR [rax],al
     e29:	02 91 60 0f 8d 05    	add    dl,BYTE PTR [rcx+0x58d0f60]
     e2f:	00 00                	add    BYTE PTR [rax],al
     e31:	02 40 7c             	add    al,BYTE PTR [rax+0x7c]
     e34:	00 00                	add    BYTE PTR [rax],al
     e36:	00 02                	add    BYTE PTR [rdx],al
     e38:	91                   	xchg   ecx,eax
     e39:	5c                   	pop    rsp
     e3a:	0f 59 05 00 00 02 41 	mulps  xmm0,XMMWORD PTR [rip+0x41020000]        # 41020e41 <MULTIBOOT_LOADED_MAGIC+0xa2aabb8>
     e41:	dc 02                	fadd   QWORD PTR [rdx]
     e43:	00 00                	add    BYTE PTR [rax],al
     e45:	02 91 50 0e 7e 73    	add    dl,BYTE PTR [rcx+0x737e0e50]
     e4b:	00 01                	add    BYTE PTR [rcx],al
     e4d:	00 00                	add    BYTE PTR [rax],al
     e4f:	00 00                	add    BYTE PTR [rax],al
     e51:	69 00 00 00 00 00    	imul   eax,DWORD PTR [rax],0x0
     e57:	00 00                	add    BYTE PTR [rax],al
     e59:	0f 5f 05 00 00 02 45 	maxps  xmm0,XMMWORD PTR [rip+0x45020000]        # 45020e60 <MULTIBOOT_LOADED_MAGIC+0xe2aabd7>
     e60:	7c 00                	jl     e62 <MULTIBOOT_HEADER_SIZE+0xe0a>
     e62:	00 00                	add    BYTE PTR [rax],al
     e64:	02 91 4c 0f 84 04    	add    dl,BYTE PTR [rcx+0x4840f4c]
     e6a:	00 00                	add    BYTE PTR [rax],al
     e6c:	02 46 7c             	add    al,BYTE PTR [rsi+0x7c]
     e6f:	00 00                	add    BYTE PTR [rax],al
     e71:	00 02                	add    BYTE PTR [rdx],al
     e73:	91                   	xchg   ecx,eax
     e74:	48 0f 6a 05 00 00 02 	rex.W punpckhdq mm0,QWORD PTR [rip+0x47020000]        # 47020e7c <MULTIBOOT_LOADED_MAGIC+0x102aabf3>
     e7b:	47 
     e7c:	7c 00                	jl     e7e <MULTIBOOT_HEADER_SIZE+0xe26>
     e7e:	00 00                	add    BYTE PTR [rax],al
     e80:	02 91 44 00 00 00    	add    dl,BYTE PTR [rcx+0x44]
     e86:	00 0c 08             	add    BYTE PTR [rax+rcx*1],cl
     e89:	e2 02                	loop   e8d <MULTIBOOT_HEADER_SIZE+0xe35>
     e8b:	00 00                	add    BYTE PTR [rax],al
     e8d:	02 01                	add    al,BYTE PTR [rcx]
     e8f:	06                   	(bad)  
     e90:	cd 00                	int    0x0
     e92:	00 00                	add    BYTE PTR [rax],al
     e94:	11 cb                	adc    ebx,ecx
     e96:	04 00                	add    al,0x0
     e98:	00 02                	add    BYTE PTR [rdx],al
     e9a:	5e                   	pop    rsi
     e9b:	9b                   	fwait
     e9c:	03 00                	add    eax,DWORD PTR [rax]
     e9e:	00 fd                	add    ch,bh
     ea0:	73 00                	jae    ea2 <MULTIBOOT_HEADER_SIZE+0xe4a>
     ea2:	01 00                	add    DWORD PTR [rax],eax
     ea4:	00 00                	add    BYTE PTR [rax],al
     ea6:	00 cd                	add    ch,cl
     ea8:	00 00                	add    BYTE PTR [rax],al
     eaa:	00 00                	add    BYTE PTR [rax],al
     eac:	00 00                	add    BYTE PTR [rax],al
     eae:	00 01                	add    BYTE PTR [rcx],al
     eb0:	9c                   	pushf  
     eb1:	9b                   	fwait
     eb2:	03 00                	add    eax,DWORD PTR [rax]
     eb4:	00 0a                	add    BYTE PTR [rdx],cl
     eb6:	b7 0e                	mov    bh,0xe
     eb8:	00 00                	add    BYTE PTR [rax],al
     eba:	02 5e 5e             	add    bl,BYTE PTR [rsi+0x5e]
     ebd:	00 00                	add    BYTE PTR [rax],al
     ebf:	00 02                	add    BYTE PTR [rdx],al
     ec1:	91                   	xchg   ecx,eax
     ec2:	48 0a 8f 05 00 00 02 	rex.W or cl,BYTE PTR [rdi+0x2000005]
     ec9:	5e                   	pop    rsi
     eca:	a2 03 00 00 02 91 40 	movabs ds:0x840a409102000003,al
     ed1:	0a 84 
     ed3:	05 00 00 02 5e       	add    eax,0x5e020000
     ed8:	a8 03                	test   al,0x3
     eda:	00 00                	add    BYTE PTR [rax],al
     edc:	03 91 b8 7f 0a 30    	add    edx,DWORD PTR [rcx+0x300a7fb8]
     ee2:	03 00                	add    eax,DWORD PTR [rax]
     ee4:	00 02                	add    BYTE PTR [rdx],al
     ee6:	5e                   	pop    rsi
     ee7:	7c 00                	jl     ee9 <MULTIBOOT_HEADER_SIZE+0xe91>
     ee9:	00 00                	add    BYTE PTR [rax],al
     eeb:	03 91 b4 7f 12 69    	add    edx,DWORD PTR [rcx+0x69127fb4]
     ef1:	00 02                	add    BYTE PTR [rdx],al
     ef3:	62                   	(bad)  
     ef4:	7c 00                	jl     ef6 <MULTIBOOT_HEADER_SIZE+0xe9e>
     ef6:	00 00                	add    BYTE PTR [rax],al
     ef8:	02 91 6c 0f 53 05    	add    dl,BYTE PTR [rcx+0x5530f6c]
     efe:	00 00                	add    BYTE PTR [rax],al
     f00:	02 63 dc             	add    ah,BYTE PTR [rbx-0x24]
     f03:	02 00                	add    al,BYTE PTR [rax]
     f05:	00 02                	add    BYTE PTR [rdx],al
     f07:	91                   	xchg   ecx,eax
     f08:	60                   	(bad)  
     f09:	0e                   	(bad)  
     f0a:	42 74 00             	rex.X je f0d <MULTIBOOT_HEADER_SIZE+0xeb5>
     f0d:	01 00                	add    DWORD PTR [rax],eax
     f0f:	00 00                	add    BYTE PTR [rax],al
     f11:	00 86 00 00 00 00    	add    BYTE PTR [rsi+0x0],al
     f17:	00 00                	add    BYTE PTR [rax],al
     f19:	00 0f                	add    BYTE PTR [rdi],cl
     f1b:	4b 04 00             	rex.WXB add al,0x0
     f1e:	00 02                	add    BYTE PTR [rdx],al
     f20:	66 7c 00             	data16 jl f23 <MULTIBOOT_HEADER_SIZE+0xecb>
     f23:	00 00                	add    BYTE PTR [rax],al
     f25:	02 91 5c 0f e5 04    	add    dl,BYTE PTR [rcx+0x4e50f5c]
     f2b:	00 00                	add    BYTE PTR [rax],al
     f2d:	02 67 7c             	add    ah,BYTE PTR [rdi+0x7c]
     f30:	00 00                	add    BYTE PTR [rax],al
     f32:	00 02                	add    BYTE PTR [rdx],al
     f34:	91                   	xchg   ecx,eax
     f35:	58                   	pop    rax
     f36:	0f 58 04 00          	addps  xmm0,XMMWORD PTR [rax+rax*1]
     f3a:	00 02                	add    BYTE PTR [rdx],al
     f3c:	68 7c 00 00 00       	push   0x7c
     f41:	02 91 54 00 00 02    	add    dl,BYTE PTR [rcx+0x2000054]
     f47:	01 02                	add    DWORD PTR [rdx],eax
     f49:	35 03 00 00 0c       	xor    eax,0xc000003
     f4e:	08 7c 00 00          	or     BYTE PTR [rax+rax*1+0x0],bh
     f52:	00 0c 08             	add    BYTE PTR [rax+rcx*1],cl
     f55:	9b                   	fwait
     f56:	03 00                	add    eax,DWORD PTR [rax]
     f58:	00 13                	add    BYTE PTR [rbx],dl
     f5a:	d9 04 00             	fld    DWORD PTR [rax+rax*1]
     f5d:	00 02                	add    BYTE PTR [rdx],al
     f5f:	79 ca                	jns    f2b <MULTIBOOT_HEADER_SIZE+0xed3>
     f61:	74 00                	je     f63 <MULTIBOOT_HEADER_SIZE+0xf0b>
     f63:	01 00                	add    DWORD PTR [rax],eax
     f65:	00 00                	add    BYTE PTR [rax],al
     f67:	00 65 00             	add    BYTE PTR [rbp+0x0],ah
     f6a:	00 00                	add    BYTE PTR [rax],al
     f6c:	00 00                	add    BYTE PTR [rax],al
     f6e:	00 00                	add    BYTE PTR [rax],al
     f70:	01 9c 08 04 00 00 0a 	add    DWORD PTR [rax+rcx*1+0xa000004],ebx
     f77:	b7 0e                	mov    bh,0xe
     f79:	00 00                	add    BYTE PTR [rax],al
     f7b:	02 79 5e             	add    bh,BYTE PTR [rcx+0x5e]
     f7e:	00 00                	add    BYTE PTR [rax],al
     f80:	00 02                	add    BYTE PTR [rdx],al
     f82:	91                   	xchg   ecx,eax
     f83:	58                   	pop    rax
     f84:	0a 30                	or     dh,BYTE PTR [rax]
     f86:	03 00                	add    eax,DWORD PTR [rax]
     f88:	00 02                	add    BYTE PTR [rdx],al
     f8a:	79 7c                	jns    1008 <MULTIBOOT_HEADER_SIZE+0xfb0>
     f8c:	00 00                	add    BYTE PTR [rax],al
     f8e:	00 02                	add    BYTE PTR [rdx],al
     f90:	91                   	xchg   ecx,eax
     f91:	54                   	push   rsp
     f92:	0e                   	(bad)  
     f93:	e6 74                	out    0x74,al
     f95:	00 01                	add    BYTE PTR [rcx],al
     f97:	00 00                	add    BYTE PTR [rax],al
     f99:	00 00                	add    BYTE PTR [rax],al
     f9b:	45 00 00             	add    BYTE PTR [r8],r8b
     f9e:	00 00                	add    BYTE PTR [rax],al
     fa0:	00 00                	add    BYTE PTR [rax],al
     fa2:	00 12                	add    BYTE PTR [rdx],dl
     fa4:	70 74                	jo     101a <MULTIBOOT_HEADER_SIZE+0xfc2>
     fa6:	72 00                	jb     fa8 <MULTIBOOT_HEADER_SIZE+0xf50>
     fa8:	02 7d 59             	add    bh,BYTE PTR [rbp+0x59]
     fab:	01 00                	add    DWORD PTR [rax],eax
     fad:	00 02                	add    BYTE PTR [rdx],al
     faf:	91                   	xchg   ecx,eax
     fb0:	68 00 00 11 65       	push   0x65110000
     fb5:	04 00                	add    al,0x0
     fb7:	00 02                	add    BYTE PTR [rdx],al
     fb9:	85 5e 00             	test   DWORD PTR [rsi+0x0],ebx
     fbc:	00 00                	add    BYTE PTR [rax],al
     fbe:	2f                   	(bad)  
     fbf:	75 00                	jne    fc1 <MULTIBOOT_HEADER_SIZE+0xf69>
     fc1:	01 00                	add    DWORD PTR [rax],eax
     fc3:	00 00                	add    BYTE PTR [rax],al
     fc5:	00 70 01             	add    BYTE PTR [rax+0x1],dh
     fc8:	00 00                	add    BYTE PTR [rax],al
     fca:	00 00                	add    BYTE PTR [rax],al
     fcc:	00 00                	add    BYTE PTR [rax],al
     fce:	01 9c b2 04 00 00 0a 	add    DWORD PTR [rdx+rsi*4+0xa000004],ebx
     fd5:	b7 0e                	mov    bh,0xe
     fd7:	00 00                	add    BYTE PTR [rax],al
     fd9:	02 85 5e 00 00 00    	add    al,BYTE PTR [rbp+0x5e]
     fdf:	02 91 48 0a 30 03    	add    dl,BYTE PTR [rcx+0x3300a48]
     fe5:	00 00                	add    BYTE PTR [rax],al
     fe7:	02 85 7c 00 00 00    	add    al,BYTE PTR [rbp+0x7c]
     fed:	02 91 44 0f 44 04    	add    dl,BYTE PTR [rcx+0x4440f44]
     ff3:	00 00                	add    BYTE PTR [rax],al
     ff5:	02 87 5e 00 00 00    	add    al,BYTE PTR [rdi+0x5e]
     ffb:	02 91 68 0e 5b 75    	add    dl,BYTE PTR [rcx+0x755b0e68]
    1001:	00 01                	add    BYTE PTR [rcx],al
    1003:	00 00                	add    BYTE PTR [rax],al
    1005:	00 00                	add    BYTE PTR [rax],al
    1007:	3e 01 00             	add    DWORD PTR ds:[rax],eax
    100a:	00 00                	add    BYTE PTR [rax],al
    100c:	00 00                	add    BYTE PTR [rax],al
    100e:	00 0f                	add    BYTE PTR [rdi],cl
    1010:	39 04 00             	cmp    DWORD PTR [rax+rax*1],eax
    1013:	00 02                	add    BYTE PTR [rdx],al
    1015:	8a 7c 00 00          	mov    bh,BYTE PTR [rax+rax*1+0x0]
    1019:	00 02                	add    BYTE PTR [rdx],al
    101b:	91                   	xchg   ecx,eax
    101c:	5c                   	pop    rsp
    101d:	0f 53 05 00 00 02 8b 	rcpps  xmm0,XMMWORD PTR [rip+0xffffffff8b020000]        # ffffffff8b021024 <MULTIBOOT_CHECK_SUM+0x73546152>
    1024:	dc 02                	fadd   QWORD PTR [rdx]
    1026:	00 00                	add    BYTE PTR [rax],al
    1028:	02 91 60 10 60 00    	add    dl,BYTE PTR [rcx+0x601060]
    102e:	00 00                	add    BYTE PTR [rax],al
    1030:	0f 4b 04 00          	cmovnp eax,DWORD PTR [rax+rax*1]
    1034:	00 02                	add    BYTE PTR [rdx],al
    1036:	8e 7c 00 00          	mov    ?,WORD PTR [rax+rax*1+0x0]
    103a:	00 02                	add    BYTE PTR [rdx],al
    103c:	91                   	xchg   ecx,eax
    103d:	58                   	pop    rax
    103e:	0f 58 04 00          	addps  xmm0,XMMWORD PTR [rax+rax*1]
    1042:	00 02                	add    BYTE PTR [rdx],al
    1044:	8f                   	(bad)  
    1045:	7c 00                	jl     1047 <MULTIBOOT_HEADER_SIZE+0xfef>
    1047:	00 00                	add    BYTE PTR [rax],al
    1049:	02 91 54 0f e5 04    	add    dl,BYTE PTR [rcx+0x4e50f54]
    104f:	00 00                	add    BYTE PTR [rax],al
    1051:	02 90 7c 00 00 00    	add    dl,BYTE PTR [rax+0x7c]
    1057:	02 91 50 00 00 00    	add    dl,BYTE PTR [rcx+0x50]
    105d:	14 98                	adc    al,0x98
    105f:	05 00 00 02 bc       	add    eax,0xbc020000
    1064:	9f                   	lahf   
    1065:	76 00                	jbe    1067 <MULTIBOOT_HEADER_SIZE+0x100f>
    1067:	01 00                	add    DWORD PTR [rax],eax
    1069:	00 00                	add    BYTE PTR [rax],al
    106b:	00 b1 00 00 00 00    	add    BYTE PTR [rcx+0x0],dh
    1071:	00 00                	add    BYTE PTR [rax],al
    1073:	00 01                	add    BYTE PTR [rcx],al
    1075:	9c                   	pushf  
    1076:	0a b7 0e 00 00 02    	or     dh,BYTE PTR [rdi+0x200000e]
    107c:	bc 5e 00 00 00       	mov    esp,0x5e
    1081:	02 91 48 09 70 74    	add    dl,BYTE PTR [rcx+0x74700948]
    1087:	72 00                	jb     1089 <MULTIBOOT_HEADER_SIZE+0x1031>
    1089:	02 bc 5e 00 00 00 02 	add    bh,BYTE PTR [rsi+rbx*2+0x2000000]
    1090:	91                   	xchg   ecx,eax
    1091:	40 0e                	rex (bad) 
    1093:	c5 76 00             	(bad)  
    1096:	01 00                	add    DWORD PTR [rax],eax
    1098:	00 00                	add    BYTE PTR [rax],al
    109a:	00 87 00 00 00 00    	add    BYTE PTR [rdi+0x0],al
    10a0:	00 00                	add    BYTE PTR [rax],al
    10a2:	00 0f                	add    BYTE PTR [rdi],cl
    10a4:	53                   	push   rbx
    10a5:	05 00 00 02 c0       	add    eax,0xc0020000
    10aa:	dc 02                	fadd   QWORD PTR [rdx]
    10ac:	00 00                	add    BYTE PTR [rax],al
    10ae:	02 91 68 10 90 00    	add    dl,BYTE PTR [rcx+0x901068]
    10b4:	00 00                	add    BYTE PTR [rax],al
    10b6:	0f 4b 04 00          	cmovnp eax,DWORD PTR [rax+rax*1]
    10ba:	00 02                	add    BYTE PTR [rdx],al
    10bc:	c3                   	ret    
    10bd:	7c 00                	jl     10bf <MULTIBOOT_HEADER_SIZE+0x1067>
    10bf:	00 00                	add    BYTE PTR [rax],al
    10c1:	02 91 64 0f e5 04    	add    dl,BYTE PTR [rcx+0x4e50f64]
    10c7:	00 00                	add    BYTE PTR [rax],al
    10c9:	02 c4                	add    al,ah
    10cb:	7c 00                	jl     10cd <MULTIBOOT_HEADER_SIZE+0x1075>
    10cd:	00 00                	add    BYTE PTR [rax],al
    10cf:	02 91 60 0f 58 04    	add    dl,BYTE PTR [rcx+0x4580f60]
    10d5:	00 00                	add    BYTE PTR [rax],al
    10d7:	02 c5                	add    al,ch
    10d9:	7c 00                	jl     10db <MULTIBOOT_HEADER_SIZE+0x1083>
    10db:	00 00                	add    BYTE PTR [rax],al
    10dd:	02 91 5c 00 00 00    	add    dl,BYTE PTR [rcx+0x5c]
    10e3:	00 1d 06 00 00 04    	add    BYTE PTR [rip+0x4000006],bl        # 40010ef <kernel_end+0x2fe50f7>
    10e9:	00 44 05 00          	add    BYTE PTR [rbp+rax*1+0x0],al
    10ed:	00 08                	add    BYTE PTR [rax],cl
    10ef:	01 27                	add    DWORD PTR [rdi],esp
    10f1:	00 00                	add    BYTE PTR [rax],al
    10f3:	00 0c e0             	add    BYTE PTR [rax+riz*8],cl
    10f6:	05 00 00 e5 00       	add    eax,0xe50000
    10fb:	00 00                	add    BYTE PTR [rax],al
    10fd:	50                   	push   rax
    10fe:	77 00                	ja     1100 <MULTIBOOT_HEADER_SIZE+0x10a8>
    1100:	01 00                	add    DWORD PTR [rax],eax
    1102:	00 00                	add    BYTE PTR [rax],al
    1104:	00 ac 06 00 00 00 00 	add    BYTE PTR [rsi+rax*1+0x0],ch
    110b:	00 00                	add    BYTE PTR [rax],al
    110d:	13 06                	adc    eax,DWORD PTR [rsi]
    110f:	00 00                	add    BYTE PTR [rax],al
    1111:	02 08                	add    cl,BYTE PTR [rax]
    1113:	05 13 01 00 00       	add    eax,0x113
    1118:	02 08                	add    cl,BYTE PTR [rax]
    111a:	07                   	(bad)  
    111b:	65 10 00             	adc    BYTE PTR gs:[rax],al
    111e:	00 03                	add    BYTE PTR [rbx],al
    1120:	04 05                	add    al,0x5
    1122:	69 6e 74 00 02 08 05 	imul   ebp,DWORD PTR [rsi+0x74],0x5080200
    1129:	0e                   	(bad)  
    112a:	01 00                	add    DWORD PTR [rax],eax
    112c:	00 02                	add    BYTE PTR [rdx],al
    112e:	10 04 2e             	adc    BYTE PTR [rsi+rbp*1],al
    1131:	01 00                	add    DWORD PTR [rax],eax
    1133:	00 02                	add    BYTE PTR [rdx],al
    1135:	08 07                	or     BYTE PTR [rdi],al
    1137:	05 01 00 00 02       	add    eax,0x2000001
    113c:	04 07                	add    al,0x7
    113e:	6a 10                	push   0x10
    1140:	00 00                	add    BYTE PTR [rax],al
    1142:	02 01                	add    al,BYTE PTR [rcx]
    1144:	06                   	(bad)  
    1145:	c6 00 00             	mov    BYTE PTR [rax],0x0
    1148:	00 02                	add    BYTE PTR [rdx],al
    114a:	02 05 1c 01 00 00    	add    al,BYTE PTR [rip+0x11c]        # 126c <MULTIBOOT_HEADER_SIZE+0x1214>
    1150:	04 30                	add    al,0x30
    1152:	11 00                	adc    DWORD PTR [rax],eax
    1154:	00 03                	add    BYTE PTR [rbx],al
    1156:	26 3b 00             	cmp    eax,DWORD PTR es:[rax]
    1159:	00 00                	add    BYTE PTR [rax],al
    115b:	02 01                	add    al,BYTE PTR [rcx]
    115d:	08 c4                	or     ah,al
    115f:	00 00                	add    BYTE PTR [rax],al
    1161:	00 02                	add    BYTE PTR [rdx],al
    1163:	02 07                	add    al,BYTE PTR [rdi]
    1165:	d2 00                	rol    BYTE PTR [rax],cl
    1167:	00 00                	add    BYTE PTR [rax],al
    1169:	05 cc 05 00 00       	add    eax,0x5cc
    116e:	10 02                	adc    BYTE PTR [rdx],al
    1170:	0b aa 00 00 00 06    	or     ebp,DWORD PTR [rdx+0x6000000]
    1176:	d1 06                	rol    DWORD PTR [rsi],1
    1178:	00 00                	add    BYTE PTR [rax],al
    117a:	02 0d aa 00 00 00    	add    cl,BYTE PTR [rip+0xaa]        # 122a <MULTIBOOT_HEADER_SIZE+0x11d2>
    1180:	00 06                	add    BYTE PTR [rsi],al
    1182:	10 07                	adc    BYTE PTR [rdi],al
    1184:	00 00                	add    BYTE PTR [rax],al
    1186:	02 0e                	add    cl,BYTE PTR [rsi]
    1188:	aa                   	stos   BYTE PTR es:[rdi],al
    1189:	00 00                	add    BYTE PTR [rax],al
    118b:	00 08                	add    BYTE PTR [rax],cl
    118d:	00 07                	add    BYTE PTR [rdi],al
    118f:	08 85 00 00 00 04    	or     BYTE PTR [rbp+0x4000000],al
    1195:	cd 05                	int    0x5
    1197:	00 00                	add    BYTE PTR [rax],al
    1199:	02 0f                	add    cl,BYTE PTR [rdi]
    119b:	85 00                	test   DWORD PTR [rax],eax
    119d:	00 00                	add    BYTE PTR [rax],al
    119f:	05 90 06 00 00       	add    eax,0x690
    11a4:	10 02                	adc    BYTE PTR [rdx],al
    11a6:	11 e0                	adc    eax,esp
    11a8:	00 00                	add    BYTE PTR [rax],al
    11aa:	00 06                	add    BYTE PTR [rsi],al
    11ac:	dd 07                	fld    QWORD PTR [rdi]
    11ae:	00 00                	add    BYTE PTR [rax],al
    11b0:	02 13                	add    dl,BYTE PTR [rbx]
    11b2:	e0 00                	loopne 11b4 <MULTIBOOT_HEADER_SIZE+0x115c>
    11b4:	00 00                	add    BYTE PTR [rax],al
    11b6:	00 06                	add    BYTE PTR [rsi],al
    11b8:	50                   	push   rax
    11b9:	08 00                	or     BYTE PTR [rax],al
    11bb:	00 02                	add    BYTE PTR [rdx],al
    11bd:	14 e0                	adc    al,0xe0
    11bf:	00 00                	add    BYTE PTR [rax],al
    11c1:	00 08                	add    BYTE PTR [rax],cl
    11c3:	00 07                	add    BYTE PTR [rdi],al
    11c5:	08 b0 00 00 00 04    	or     BYTE PTR [rax+0x4000000],dh
    11cb:	91                   	xchg   ecx,eax
    11cc:	06                   	(bad)  
    11cd:	00 00                	add    BYTE PTR [rax],al
    11cf:	02 15 bb 00 00 00    	add    dl,BYTE PTR [rip+0xbb]        # 1290 <MULTIBOOT_HEADER_SIZE+0x1238>
    11d5:	08 d6                	or     dh,dl
    11d7:	06                   	(bad)  
    11d8:	00 00                	add    BYTE PTR [rax],al
    11da:	01 08                	add    DWORD PTR [rax],ecx
    11dc:	50                   	push   rax
    11dd:	77 00                	ja     11df <MULTIBOOT_HEADER_SIZE+0x1187>
    11df:	01 00                	add    DWORD PTR [rax],eax
    11e1:	00 00                	add    BYTE PTR [rax],al
    11e3:	00 2e                	add    BYTE PTR [rsi],ch
    11e5:	00 00                	add    BYTE PTR [rax],al
    11e7:	00 00                	add    BYTE PTR [rax],al
    11e9:	00 00                	add    BYTE PTR [rax],al
    11eb:	00 01                	add    BYTE PTR [rcx],al
    11ed:	9c                   	pushf  
    11ee:	1d 01 00 00 09       	sbb    eax,0x9000001
    11f3:	74 06                	je     11fb <MULTIBOOT_HEADER_SIZE+0x11a3>
    11f5:	00 00                	add    BYTE PTR [rax],al
    11f7:	01 08                	add    DWORD PTR [rax],ecx
    11f9:	e0 00                	loopne 11fb <MULTIBOOT_HEADER_SIZE+0x11a3>
    11fb:	00 00                	add    BYTE PTR [rax],al
    11fd:	02 91 68 00 08 ad    	add    dl,BYTE PTR [rcx-0x52f7ff98]
    1203:	05 00 00 01 12       	add    eax,0x12010000
    1208:	7e 77                	jle    1281 <MULTIBOOT_HEADER_SIZE+0x1229>
    120a:	00 01                	add    BYTE PTR [rcx],al
    120c:	00 00                	add    BYTE PTR [rax],al
    120e:	00 00                	add    BYTE PTR [rax],al
    1210:	65 00 00             	add    BYTE PTR gs:[rax],al
    1213:	00 00                	add    BYTE PTR [rax],al
    1215:	00 00                	add    BYTE PTR [rax],al
    1217:	00 01                	add    BYTE PTR [rcx],al
    1219:	9c                   	pushf  
    121a:	65 01 00             	add    DWORD PTR gs:[rax],eax
    121d:	00 09                	add    BYTE PTR [rcx],cl
    121f:	ed                   	in     eax,dx
    1220:	06                   	(bad)  
    1221:	00 00                	add    BYTE PTR [rax],al
    1223:	01 12                	add    DWORD PTR [rdx],edx
    1225:	e0 00                	loopne 1227 <MULTIBOOT_HEADER_SIZE+0x11cf>
    1227:	00 00                	add    BYTE PTR [rax],al
    1229:	02 91 58 09 74 06    	add    dl,BYTE PTR [rcx+0x6740958]
    122f:	00 00                	add    BYTE PTR [rax],al
    1231:	01 12                	add    DWORD PTR [rdx],edx
    1233:	e0 00                	loopne 1235 <MULTIBOOT_HEADER_SIZE+0x11dd>
    1235:	00 00                	add    BYTE PTR [rax],al
    1237:	02 91 50 0a 10 07    	add    dl,BYTE PTR [rcx+0x7100a50]
    123d:	00 00                	add    BYTE PTR [rax],al
    123f:	01 17                	add    DWORD PTR [rdi],edx
    1241:	e0 00                	loopne 1243 <MULTIBOOT_HEADER_SIZE+0x11eb>
    1243:	00 00                	add    BYTE PTR [rax],al
    1245:	02 91 68 00 08 6b    	add    dl,BYTE PTR [rcx+0x6b080068]
    124b:	06                   	(bad)  
    124c:	00 00                	add    BYTE PTR [rax],al
    124e:	01 29                	add    DWORD PTR [rcx],ebp
    1250:	e3 77                	jrcxz  12c9 <MULTIBOOT_HEADER_SIZE+0x1271>
    1252:	00 01                	add    BYTE PTR [rcx],al
    1254:	00 00                	add    BYTE PTR [rax],al
    1256:	00 00                	add    BYTE PTR [rax],al
    1258:	64 00 00             	add    BYTE PTR fs:[rax],al
    125b:	00 00                	add    BYTE PTR [rax],al
    125d:	00 00                	add    BYTE PTR [rax],al
    125f:	00 01                	add    BYTE PTR [rcx],al
    1261:	9c                   	pushf  
    1262:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    1263:	01 00                	add    DWORD PTR [rax],eax
    1265:	00 09                	add    BYTE PTR [rcx],cl
    1267:	ed                   	in     eax,dx
    1268:	06                   	(bad)  
    1269:	00 00                	add    BYTE PTR [rax],al
    126b:	01 29                	add    DWORD PTR [rcx],ebp
    126d:	e0 00                	loopne 126f <MULTIBOOT_HEADER_SIZE+0x1217>
    126f:	00 00                	add    BYTE PTR [rax],al
    1271:	02 91 58 09 74 06    	add    dl,BYTE PTR [rcx+0x6740958]
    1277:	00 00                	add    BYTE PTR [rax],al
    1279:	01 29                	add    DWORD PTR [rcx],ebp
    127b:	e0 00                	loopne 127d <MULTIBOOT_HEADER_SIZE+0x1225>
    127d:	00 00                	add    BYTE PTR [rax],al
    127f:	02 91 50 0a d1 06    	add    dl,BYTE PTR [rcx+0x6d10a50]
    1285:	00 00                	add    BYTE PTR [rax],al
    1287:	01 2e                	add    DWORD PTR [rsi],ebp
    1289:	e0 00                	loopne 128b <MULTIBOOT_HEADER_SIZE+0x1233>
    128b:	00 00                	add    BYTE PTR [rax],al
    128d:	02 91 68 00 08 90    	add    dl,BYTE PTR [rcx-0x6ff7ff98]
    1293:	07                   	(bad)  
    1294:	00 00                	add    BYTE PTR [rax],al
    1296:	01 3f                	add    DWORD PTR [rdi],edi
    1298:	47 78 00             	rex.RXB js 129b <MULTIBOOT_HEADER_SIZE+0x1243>
    129b:	01 00                	add    DWORD PTR [rax],eax
    129d:	00 00                	add    BYTE PTR [rax],al
    129f:	00 5a 00             	add    BYTE PTR [rdx+0x0],bl
    12a2:	00 00                	add    BYTE PTR [rax],al
    12a4:	00 00                	add    BYTE PTR [rax],al
    12a6:	00 00                	add    BYTE PTR [rax],al
    12a8:	01 9c d9 01 00 00 09 	add    DWORD PTR [rcx+rbx*8+0x9000001],ebx
    12af:	74 06                	je     12b7 <MULTIBOOT_HEADER_SIZE+0x125f>
    12b1:	00 00                	add    BYTE PTR [rax],al
    12b3:	01 3f                	add    DWORD PTR [rdi],edi
    12b5:	e0 00                	loopne 12b7 <MULTIBOOT_HEADER_SIZE+0x125f>
    12b7:	00 00                	add    BYTE PTR [rax],al
    12b9:	02 91 68 00 0b 51    	add    dl,BYTE PTR [rcx+0x510b0068]
    12bf:	07                   	(bad)  
    12c0:	00 00                	add    BYTE PTR [rax],al
    12c2:	01 51 a1             	add    DWORD PTR [rcx-0x5f],edx
    12c5:	78 00                	js     12c7 <MULTIBOOT_HEADER_SIZE+0x126f>
    12c7:	01 00                	add    DWORD PTR [rax],eax
    12c9:	00 00                	add    BYTE PTR [rax],al
    12cb:	00 2e                	add    BYTE PTR [rsi],ch
    12cd:	00 00                	add    BYTE PTR [rax],al
    12cf:	00 00                	add    BYTE PTR [rax],al
    12d1:	00 00                	add    BYTE PTR [rax],al
    12d3:	00 01                	add    BYTE PTR [rcx],al
    12d5:	9c                   	pushf  
    12d6:	05 02 00 00 09       	add    eax,0x9000002
    12db:	67 12 00             	adc    al,BYTE PTR [eax]
    12de:	00 01                	add    BYTE PTR [rcx],al
    12e0:	51                   	push   rcx
    12e1:	05 02 00 00 02       	add    eax,0x2000002
    12e6:	91                   	xchg   ecx,eax
    12e7:	68 00 07 08 e6       	push   0xffffffffe6080700
    12ec:	00 00                	add    BYTE PTR [rax],al
    12ee:	00 0c 7f             	add    BYTE PTR [rdi+rdi*2],cl
    12f1:	07                   	(bad)  
    12f2:	00 00                	add    BYTE PTR [rax],al
    12f4:	01 5b 6c             	add    DWORD PTR [rbx+0x6c],ebx
    12f7:	00 00                	add    BYTE PTR [rax],al
    12f9:	00 cf                	add    bh,cl
    12fb:	78 00                	js     12fd <MULTIBOOT_HEADER_SIZE+0x12a5>
    12fd:	01 00                	add    DWORD PTR [rax],eax
    12ff:	00 00                	add    BYTE PTR [rax],al
    1301:	00 73 00             	add    BYTE PTR [rbx+0x0],dh
    1304:	00 00                	add    BYTE PTR [rax],al
    1306:	00 00                	add    BYTE PTR [rax],al
    1308:	00 00                	add    BYTE PTR [rax],al
    130a:	01 9c 65 02 00 00 09 	add    DWORD PTR [rbp+riz*2+0x9000002],ebx
    1311:	67 12 00             	adc    al,BYTE PTR [eax]
    1314:	00 01                	add    BYTE PTR [rcx],al
    1316:	5b                   	pop    rbx
    1317:	05 02 00 00 02       	add    eax,0x2000002
    131c:	91                   	xchg   ecx,eax
    131d:	48 0a 30             	rex.W or sil,BYTE PTR [rax]
    1320:	03 00                	add    eax,DWORD PTR [rax]
    1322:	00 01                	add    BYTE PTR [rcx],al
    1324:	62                   	(bad)  
    1325:	6c                   	ins    BYTE PTR es:[rdi],dx
    1326:	00 00                	add    BYTE PTR [rax],al
    1328:	00 02                	add    BYTE PTR [rdx],al
    132a:	91                   	xchg   ecx,eax
    132b:	6c                   	ins    BYTE PTR es:[rdi],dx
    132c:	0a 2c 07             	or     ch,BYTE PTR [rdi+rax*1]
    132f:	00 00                	add    BYTE PTR [rax],al
    1331:	01 63 e0             	add    DWORD PTR [rbx-0x20],esp
    1334:	00 00                	add    BYTE PTR [rax],al
    1336:	00 02                	add    BYTE PTR [rdx],al
    1338:	91                   	xchg   ecx,eax
    1339:	60                   	(bad)  
    133a:	0a 50 08             	or     dl,BYTE PTR [rax+0x8]
    133d:	00 00                	add    BYTE PTR [rax],al
    133f:	01 64 e0 00          	add    DWORD PTR [rax+riz*8+0x0],esp
    1343:	00 00                	add    BYTE PTR [rax],al
    1345:	02 91 58 00 0d 09    	add    dl,BYTE PTR [rcx+0x90d0058]
    134b:	06                   	(bad)  
    134c:	00 00                	add    BYTE PTR [rax],al
    134e:	01 6c 42 79          	add    DWORD PTR [rdx+rax*2+0x79],ebp
    1352:	00 01                	add    BYTE PTR [rcx],al
    1354:	00 00                	add    BYTE PTR [rax],al
    1356:	00 00                	add    BYTE PTR [rax],al
    1358:	45 00 00             	add    BYTE PTR [r8],r8b
    135b:	00 00                	add    BYTE PTR [rax],al
    135d:	00 00                	add    BYTE PTR [rax],al
    135f:	00 01                	add    BYTE PTR [rcx],al
    1361:	9c                   	pushf  
    1362:	9f                   	lahf   
    1363:	02 00                	add    al,BYTE PTR [rax]
    1365:	00 09                	add    BYTE PTR [rcx],cl
    1367:	67 12 00             	adc    al,BYTE PTR [eax]
    136a:	00 01                	add    BYTE PTR [rcx],al
    136c:	6c                   	ins    BYTE PTR es:[rdi],dx
    136d:	05 02 00 00 02       	add    eax,0x2000002
    1372:	91                   	xchg   ecx,eax
    1373:	68 09 74 06 00       	push   0x67409
    1378:	00 01                	add    BYTE PTR [rcx],al
    137a:	6c                   	ins    BYTE PTR es:[rdi],dx
    137b:	e0 00                	loopne 137d <MULTIBOOT_HEADER_SIZE+0x1325>
    137d:	00 00                	add    BYTE PTR [rax],al
    137f:	02 91 60 00 0d 62    	add    dl,BYTE PTR [rcx+0x620d0060]
    1385:	07                   	(bad)  
    1386:	00 00                	add    BYTE PTR [rax],al
    1388:	01 78 87             	add    DWORD PTR [rax-0x79],edi
    138b:	79 00                	jns    138d <MULTIBOOT_HEADER_SIZE+0x1335>
    138d:	01 00                	add    DWORD PTR [rax],eax
    138f:	00 00                	add    BYTE PTR [rax],al
    1391:	00 4b 00             	add    BYTE PTR [rbx+0x0],cl
    1394:	00 00                	add    BYTE PTR [rax],al
    1396:	00 00                	add    BYTE PTR [rax],al
    1398:	00 00                	add    BYTE PTR [rax],al
    139a:	01 9c d9 02 00 00 09 	add    DWORD PTR [rcx+rbx*8+0x9000002],ebx
    13a1:	67 12 00             	adc    al,BYTE PTR [eax]
    13a4:	00 01                	add    BYTE PTR [rcx],al
    13a6:	78 05                	js     13ad <MULTIBOOT_HEADER_SIZE+0x1355>
    13a8:	02 00                	add    al,BYTE PTR [rax]
    13aa:	00 02                	add    BYTE PTR [rdx],al
    13ac:	91                   	xchg   ecx,eax
    13ad:	68 09 74 06 00       	push   0x67409
    13b2:	00 01                	add    BYTE PTR [rcx],al
    13b4:	78 e0                	js     1396 <MULTIBOOT_HEADER_SIZE+0x133e>
    13b6:	00 00                	add    BYTE PTR [rax],al
    13b8:	00 02                	add    BYTE PTR [rdx],al
    13ba:	91                   	xchg   ecx,eax
    13bb:	60                   	(bad)  
    13bc:	00 0e                	add    BYTE PTR [rsi],cl
    13be:	3b 07                	cmp    eax,DWORD PTR [rdi]
    13c0:	00 00                	add    BYTE PTR [rax],al
    13c2:	01 84 e0 00 00 00 d2 	add    DWORD PTR [rax+riz*8-0x2e000000],eax
    13c9:	79 00                	jns    13cb <MULTIBOOT_HEADER_SIZE+0x1373>
    13cb:	01 00                	add    DWORD PTR [rax],eax
    13cd:	00 00                	add    BYTE PTR [rax],al
    13cf:	00 32                	add    BYTE PTR [rdx],dh
    13d1:	00 00                	add    BYTE PTR [rax],al
    13d3:	00 00                	add    BYTE PTR [rax],al
    13d5:	00 00                	add    BYTE PTR [rax],al
    13d7:	00 01                	add    BYTE PTR [rcx],al
    13d9:	9c                   	pushf  
    13da:	09 03                	or     DWORD PTR [rbx],eax
    13dc:	00 00                	add    BYTE PTR [rax],al
    13de:	09 67 12             	or     DWORD PTR [rdi+0x12],esp
    13e1:	00 00                	add    BYTE PTR [rax],al
    13e3:	01 84 05 02 00 00 02 	add    DWORD PTR [rbp+rax*1+0x2000002],eax
    13ea:	91                   	xchg   ecx,eax
    13eb:	68 00 0e b0 06       	push   0x6b00e00
    13f0:	00 00                	add    BYTE PTR [rax],al
    13f2:	01 8b e0 00 00 00    	add    DWORD PTR [rbx+0xe0],ecx
    13f8:	04 7a                	add    al,0x7a
    13fa:	00 01                	add    BYTE PTR [rcx],al
    13fc:	00 00                	add    BYTE PTR [rax],al
    13fe:	00 00                	add    BYTE PTR [rax],al
    1400:	33 00                	xor    eax,DWORD PTR [rax]
    1402:	00 00                	add    BYTE PTR [rax],al
    1404:	00 00                	add    BYTE PTR [rax],al
    1406:	00 00                	add    BYTE PTR [rax],al
    1408:	01 9c 39 03 00 00 09 	add    DWORD PTR [rcx+rdi*1+0x9000003],ebx
    140f:	67 12 00             	adc    al,BYTE PTR [eax]
    1412:	00 01                	add    BYTE PTR [rcx],al
    1414:	8b 05 02 00 00 02    	mov    eax,DWORD PTR [rip+0x2000002]        # 200141c <kernel_end+0xfe5424>
    141a:	91                   	xchg   ecx,eax
    141b:	68 00 0d 79 06       	push   0x6790d00
    1420:	00 00                	add    BYTE PTR [rax],al
    1422:	01 94 37 7a 00 01 00 	add    DWORD PTR [rdi+rsi*1+0x1007a],edx
    1429:	00 00                	add    BYTE PTR [rax],al
    142b:	00 a6 00 00 00 00    	add    BYTE PTR [rsi+0x0],ah
    1431:	00 00                	add    BYTE PTR [rax],al
    1433:	00 01                	add    BYTE PTR [rcx],al
    1435:	9c                   	pushf  
    1436:	81 03 00 00 09 67    	add    DWORD PTR [rbx],0x67090000
    143c:	12 00                	adc    al,BYTE PTR [rax]
    143e:	00 01                	add    BYTE PTR [rcx],al
    1440:	94                   	xchg   esp,eax
    1441:	05 02 00 00 02       	add    eax,0x2000002
    1446:	91                   	xchg   ecx,eax
    1447:	68 09 61 06 00       	push   0x66109
    144c:	00 01                	add    BYTE PTR [rcx],al
    144e:	94                   	xchg   esp,eax
    144f:	e0 00                	loopne 1451 <MULTIBOOT_HEADER_SIZE+0x13f9>
    1451:	00 00                	add    BYTE PTR [rax],al
    1453:	02 91 60 09 74 06    	add    dl,BYTE PTR [rcx+0x6740960]
    1459:	00 00                	add    BYTE PTR [rax],al
    145b:	01 94 e0 00 00 00 02 	add    DWORD PTR [rax+riz*8+0x2000000],edx
    1462:	91                   	xchg   ecx,eax
    1463:	58                   	pop    rax
    1464:	00 0d 4a 06 00 00    	add    BYTE PTR [rip+0x64a],cl        # 1ab4 <MULTIBOOT_HEADER_SIZE+0x1a5c>
    146a:	01 b7 dd 7a 00 01    	add    DWORD PTR [rdi+0x1007add],esi
    1470:	00 00                	add    BYTE PTR [rax],al
    1472:	00 00                	add    BYTE PTR [rax],al
    1474:	8f 00                	pop    QWORD PTR [rax]
    1476:	00 00                	add    BYTE PTR [rax],al
    1478:	00 00                	add    BYTE PTR [rax],al
    147a:	00 00                	add    BYTE PTR [rax],al
    147c:	01 9c d7 03 00 00 09 	add    DWORD PTR [rdi+rdx*8+0x9000003],ebx
    1483:	67 12 00             	adc    al,BYTE PTR [eax]
    1486:	00 01                	add    BYTE PTR [rcx],al
    1488:	b7 05                	mov    bh,0x5
    148a:	02 00                	add    al,BYTE PTR [rax]
    148c:	00 02                	add    BYTE PTR [rdx],al
    148e:	91                   	xchg   ecx,eax
    148f:	58                   	pop    rax
    1490:	09 35 07 00 00 01    	or     DWORD PTR [rip+0x1000007],esi        # 100149d <PML4_BASE+0x49d>
    1496:	b7 6c                	mov    bh,0x6c
    1498:	00 00                	add    BYTE PTR [rax],al
    149a:	00 02                	add    BYTE PTR [rdx],al
    149c:	91                   	xchg   ecx,eax
    149d:	54                   	push   rsp
    149e:	09 74 06 00          	or     DWORD PTR [rsi+rax*1+0x0],esi
    14a2:	00 01                	add    BYTE PTR [rcx],al
    14a4:	b7 e0                	mov    bh,0xe0
    14a6:	00 00                	add    BYTE PTR [rax],al
    14a8:	00 02                	add    BYTE PTR [rdx],al
    14aa:	91                   	xchg   ecx,eax
    14ab:	48 0a 61 06          	rex.W or spl,BYTE PTR [rcx+0x6]
    14af:	00 00                	add    BYTE PTR [rax],al
    14b1:	01 bb e0 00 00 00    	add    DWORD PTR [rbx+0xe0],edi
    14b7:	02 91 68 00 0e 15    	add    dl,BYTE PTR [rcx+0x150e0068]
    14bd:	07                   	(bad)  
    14be:	00 00                	add    BYTE PTR [rax],al
    14c0:	01 cd                	add    ebp,ecx
    14c2:	e0 00                	loopne 14c4 <MULTIBOOT_HEADER_SIZE+0x146c>
    14c4:	00 00                	add    BYTE PTR [rax],al
    14c6:	6c                   	ins    BYTE PTR es:[rdi],dx
    14c7:	7b 00                	jnp    14c9 <MULTIBOOT_HEADER_SIZE+0x1471>
    14c9:	01 00                	add    DWORD PTR [rax],eax
    14cb:	00 00                	add    BYTE PTR [rax],al
    14cd:	00 5b 00             	add    BYTE PTR [rbx+0x0],bl
    14d0:	00 00                	add    BYTE PTR [rax],al
    14d2:	00 00                	add    BYTE PTR [rax],al
    14d4:	00 00                	add    BYTE PTR [rax],al
    14d6:	01 9c 23 04 00 00 09 	add    DWORD PTR [rbx+riz*1+0x9000004],ebx
    14dd:	67 12 00             	adc    al,BYTE PTR [eax]
    14e0:	00 01                	add    BYTE PTR [rcx],al
    14e2:	cd 05                	int    0x5
    14e4:	02 00                	add    al,BYTE PTR [rax]
    14e6:	00 02                	add    BYTE PTR [rdx],al
    14e8:	91                   	xchg   ecx,eax
    14e9:	58                   	pop    rax
    14ea:	09 35 07 00 00 01    	or     DWORD PTR [rip+0x1000007],esi        # 10014f7 <PML4_BASE+0x4f7>
    14f0:	cd 6c                	int    0x6c
    14f2:	00 00                	add    BYTE PTR [rax],al
    14f4:	00 02                	add    BYTE PTR [rdx],al
    14f6:	91                   	xchg   ecx,eax
    14f7:	54                   	push   rsp
    14f8:	0a 2c 07             	or     ch,BYTE PTR [rdi+rax*1]
    14fb:	00 00                	add    BYTE PTR [rax],al
    14fd:	01 d1                	add    ecx,edx
    14ff:	e0 00                	loopne 1501 <MULTIBOOT_HEADER_SIZE+0x14a9>
    1501:	00 00                	add    BYTE PTR [rax],al
    1503:	02 91 68 00 0e 33    	add    dl,BYTE PTR [rcx+0x330e0068]
    1509:	06                   	(bad)  
    150a:	00 00                	add    BYTE PTR [rax],al
    150c:	01 d9                	add    ecx,ebx
    150e:	e0 00                	loopne 1510 <MULTIBOOT_HEADER_SIZE+0x14b8>
    1510:	00 00                	add    BYTE PTR [rax],al
    1512:	c7                   	(bad)  
    1513:	7b 00                	jnp    1515 <MULTIBOOT_HEADER_SIZE+0x14bd>
    1515:	01 00                	add    DWORD PTR [rax],eax
    1517:	00 00                	add    BYTE PTR [rax],al
    1519:	00 7a 00             	add    BYTE PTR [rdx+0x0],bh
    151c:	00 00                	add    BYTE PTR [rax],al
    151e:	00 00                	add    BYTE PTR [rax],al
    1520:	00 00                	add    BYTE PTR [rax],al
    1522:	01 9c 61 04 00 00 09 	add    DWORD PTR [rcx+riz*2+0x9000004],ebx
    1529:	67 12 00             	adc    al,BYTE PTR [eax]
    152c:	00 01                	add    BYTE PTR [rcx],al
    152e:	d9 05 02 00 00 02    	fld    DWORD PTR [rip+0x2000002]        # 2001536 <kernel_end+0xfe553e>
    1534:	91                   	xchg   ecx,eax
    1535:	68 09 74 06 00       	push   0x67409
    153a:	00 01                	add    BYTE PTR [rcx],al
    153c:	d9 e0                	fchs   
    153e:	00 00                	add    BYTE PTR [rax],al
    1540:	00 02                	add    BYTE PTR [rdx],al
    1542:	91                   	xchg   ecx,eax
    1543:	60                   	(bad)  
    1544:	00 0c f4             	add    BYTE PTR [rsp+rsi*8],cl
    1547:	06                   	(bad)  
    1548:	00 00                	add    BYTE PTR [rax],al
    154a:	01 ef                	add    edi,ebp
    154c:	e0 00                	loopne 154e <MULTIBOOT_HEADER_SIZE+0x14f6>
    154e:	00 00                	add    BYTE PTR [rax],al
    1550:	41 7c 00             	rex.B jl 1553 <MULTIBOOT_HEADER_SIZE+0x14fb>
    1553:	01 00                	add    DWORD PTR [rax],eax
    1555:	00 00                	add    BYTE PTR [rax],al
    1557:	00 61 00             	add    BYTE PTR [rcx+0x0],ah
    155a:	00 00                	add    BYTE PTR [rax],al
    155c:	00 00                	add    BYTE PTR [rax],al
    155e:	00 00                	add    BYTE PTR [rax],al
    1560:	01 9c ad 04 00 00 09 	add    DWORD PTR [rbp+rbp*4+0x9000004],ebx
    1567:	67 12 00             	adc    al,BYTE PTR [eax]
    156a:	00 01                	add    BYTE PTR [rcx],al
    156c:	ef                   	out    dx,eax
    156d:	05 02 00 00 02       	add    eax,0x2000002
    1572:	91                   	xchg   ecx,eax
    1573:	58                   	pop    rax
    1574:	09 35 07 00 00 01    	or     DWORD PTR [rip+0x1000007],esi        # 1001581 <PML4_BASE+0x581>
    157a:	ef                   	out    dx,eax
    157b:	6c                   	ins    BYTE PTR es:[rdi],dx
    157c:	00 00                	add    BYTE PTR [rax],al
    157e:	00 02                	add    BYTE PTR [rdx],al
    1580:	91                   	xchg   ecx,eax
    1581:	54                   	push   rsp
    1582:	0a 2c 07             	or     ch,BYTE PTR [rdi+rax*1]
    1585:	00 00                	add    BYTE PTR [rax],al
    1587:	01 f3                	add    ebx,esi
    1589:	e0 00                	loopne 158b <MULTIBOOT_HEADER_SIZE+0x1533>
    158b:	00 00                	add    BYTE PTR [rax],al
    158d:	02 91 68 00 0c 04    	add    dl,BYTE PTR [rcx+0x40c0068]
    1593:	07                   	(bad)  
    1594:	00 00                	add    BYTE PTR [rax],al
    1596:	01 f8                	add    eax,edi
    1598:	e0 00                	loopne 159a <MULTIBOOT_HEADER_SIZE+0x1542>
    159a:	00 00                	add    BYTE PTR [rax],al
    159c:	a2 7c 00 01 00 00 00 	movabs ds:0x250000000001007c,al
    15a3:	00 25 
    15a5:	00 00                	add    BYTE PTR [rax],al
    15a7:	00 00                	add    BYTE PTR [rax],al
    15a9:	00 00                	add    BYTE PTR [rax],al
    15ab:	00 01                	add    BYTE PTR [rcx],al
    15ad:	9c                   	pushf  
    15ae:	dd 04 00             	fld    QWORD PTR [rax+rax*1]
    15b1:	00 09                	add    BYTE PTR [rcx],cl
    15b3:	74 06                	je     15bb <MULTIBOOT_HEADER_SIZE+0x1563>
    15b5:	00 00                	add    BYTE PTR [rax],al
    15b7:	01 f8                	add    eax,edi
    15b9:	e0 00                	loopne 15bb <MULTIBOOT_HEADER_SIZE+0x1563>
    15bb:	00 00                	add    BYTE PTR [rax],al
    15bd:	02 91 68 00 0f c5    	add    dl,BYTE PTR [rcx-0x3af0ff98]
    15c3:	06                   	(bad)  
    15c4:	00 00                	add    BYTE PTR [rax],al
    15c6:	01 01                	add    DWORD PTR [rcx],eax
    15c8:	01 e0                	add    eax,esp
    15ca:	00 00                	add    BYTE PTR [rax],al
    15cc:	00 c7                	add    bh,al
    15ce:	7c 00                	jl     15d0 <MULTIBOOT_HEADER_SIZE+0x1578>
    15d0:	01 00                	add    DWORD PTR [rax],eax
    15d2:	00 00                	add    BYTE PTR [rax],al
    15d4:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
    15d7:	00 00                	add    BYTE PTR [rax],al
    15d9:	00 00                	add    BYTE PTR [rax],al
    15db:	00 00                	add    BYTE PTR [rax],al
    15dd:	01 9c 0f 05 00 00 10 	add    DWORD PTR [rdi+rcx*1+0x10000005],ebx
    15e4:	74 06                	je     15ec <MULTIBOOT_HEADER_SIZE+0x1594>
    15e6:	00 00                	add    BYTE PTR [rax],al
    15e8:	01 01                	add    DWORD PTR [rcx],eax
    15ea:	01 e0                	add    eax,esp
    15ec:	00 00                	add    BYTE PTR [rax],al
    15ee:	00 02                	add    BYTE PTR [rdx],al
    15f0:	91                   	xchg   ecx,eax
    15f1:	68 00 0f ba 05       	push   0x5ba0f00
    15f6:	00 00                	add    BYTE PTR [rax],al
    15f8:	01 0a                	add    DWORD PTR [rdx],ecx
    15fa:	01 e0                	add    eax,esp
    15fc:	00 00                	add    BYTE PTR [rax],al
    15fe:	00 eb                	add    bl,ch
    1600:	7c 00                	jl     1602 <MULTIBOOT_HEADER_SIZE+0x15aa>
    1602:	01 00                	add    DWORD PTR [rax],eax
    1604:	00 00                	add    BYTE PTR [rax],al
    1606:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
    1609:	00 00                	add    BYTE PTR [rax],al
    160b:	00 00                	add    BYTE PTR [rax],al
    160d:	00 00                	add    BYTE PTR [rax],al
    160f:	01 9c 50 05 00 00 10 	add    DWORD PTR [rax+rdx*2+0x10000005],ebx
    1616:	67 12 00             	adc    al,BYTE PTR [eax]
    1619:	00 01                	add    BYTE PTR [rcx],al
    161b:	0a 01                	or     al,BYTE PTR [rcx]
    161d:	05 02 00 00 02       	add    eax,0x2000002
    1622:	91                   	xchg   ecx,eax
    1623:	58                   	pop    rax
    1624:	11 44 04 00          	adc    DWORD PTR [rsp+rax*1+0x0],eax
    1628:	00 01                	add    BYTE PTR [rcx],al
    162a:	0c 01                	or     al,0x1
    162c:	e0 00                	loopne 162e <MULTIBOOT_HEADER_SIZE+0x15d6>
    162e:	00 00                	add    BYTE PTR [rax],al
    1630:	02 91 68 00 0f 9f    	add    dl,BYTE PTR [rcx-0x60f0ff98]
    1636:	06                   	(bad)  
    1637:	00 00                	add    BYTE PTR [rax],al
    1639:	01 14 01             	add    DWORD PTR [rcx+rax*1],edx
    163c:	e0 00                	loopne 163e <MULTIBOOT_HEADER_SIZE+0x15e6>
    163e:	00 00                	add    BYTE PTR [rax],al
    1640:	17                   	(bad)  
    1641:	7d 00                	jge    1643 <MULTIBOOT_HEADER_SIZE+0x15eb>
    1643:	01 00                	add    DWORD PTR [rax],eax
    1645:	00 00                	add    BYTE PTR [rax],al
    1647:	00 2d 00 00 00 00    	add    BYTE PTR [rip+0x0],ch        # 164d <MULTIBOOT_HEADER_SIZE+0x15f5>
    164d:	00 00                	add    BYTE PTR [rax],al
    164f:	00 01                	add    BYTE PTR [rcx],al
    1651:	9c                   	pushf  
    1652:	91                   	xchg   ecx,eax
    1653:	05 00 00 10 67       	add    eax,0x67100000
    1658:	12 00                	adc    al,BYTE PTR [rax]
    165a:	00 01                	add    BYTE PTR [rcx],al
    165c:	14 01                	adc    al,0x1
    165e:	05 02 00 00 02       	add    eax,0x2000002
    1663:	91                   	xchg   ecx,eax
    1664:	58                   	pop    rax
    1665:	11 44 04 00          	adc    DWORD PTR [rsp+rax*1+0x0],eax
    1669:	00 01                	add    BYTE PTR [rcx],al
    166b:	16                   	(bad)  
    166c:	01 e0                	add    eax,esp
    166e:	00 00                	add    BYTE PTR [rax],al
    1670:	00 02                	add    BYTE PTR [rdx],al
    1672:	91                   	xchg   ecx,eax
    1673:	68 00 12 20 06       	push   0x6201200
    1678:	00 00                	add    BYTE PTR [rax],al
    167a:	01 1e                	add    DWORD PTR [rsi],ebx
    167c:	01 6c 00 00          	add    DWORD PTR [rax+rax*1+0x0],ebp
    1680:	00 44 7d 00          	add    BYTE PTR [rbp+rdi*2+0x0],al
    1684:	01 00                	add    DWORD PTR [rax],eax
    1686:	00 00                	add    BYTE PTR [rax],al
    1688:	00 b8 00 00 00 00    	add    BYTE PTR [rax+0x0],bh
    168e:	00 00                	add    BYTE PTR [rax],al
    1690:	00 01                	add    BYTE PTR [rcx],al
    1692:	9c                   	pushf  
    1693:	ff 05 00 00 10 67    	inc    DWORD PTR [rip+0x67100000]        # 67101699 <MULTIBOOT_LOADED_MAGIC+0x3038b410>
    1699:	12 00                	adc    al,BYTE PTR [rax]
    169b:	00 01                	add    BYTE PTR [rcx],al
    169d:	1e                   	(bad)  
    169e:	01 05 02 00 00 02    	add    DWORD PTR [rip+0x2000002],eax        # 20016a6 <kernel_end+0xfe56ae>
    16a4:	91                   	xchg   ecx,eax
    16a5:	58                   	pop    rax
    16a6:	10 ed                	adc    ch,ch
    16a8:	06                   	(bad)  
    16a9:	00 00                	add    BYTE PTR [rax],al
    16ab:	01 1e                	add    DWORD PTR [rsi],ebx
    16ad:	01 e0                	add    eax,esp
    16af:	00 00                	add    BYTE PTR [rax],al
    16b1:	00 02                	add    BYTE PTR [rdx],al
    16b3:	91                   	xchg   ecx,eax
    16b4:	50                   	push   rax
    16b5:	10 78 07             	adc    BYTE PTR [rax+0x7],bh
    16b8:	00 00                	add    BYTE PTR [rax],al
    16ba:	01 1e                	add    DWORD PTR [rsi],ebx
    16bc:	01 1a                	add    DWORD PTR [rdx],ebx
    16be:	06                   	(bad)  
    16bf:	00 00                	add    BYTE PTR [rax],al
    16c1:	02 91 48 11 44 04    	add    dl,BYTE PTR [rcx+0x4441148]
    16c7:	00 00                	add    BYTE PTR [rax],al
    16c9:	01 22                	add    DWORD PTR [rdx],esp
    16cb:	01 6c 00 00          	add    DWORD PTR [rax+rax*1+0x0],ebp
    16cf:	00 02                	add    BYTE PTR [rdx],al
    16d1:	91                   	xchg   ecx,eax
    16d2:	6c                   	ins    BYTE PTR es:[rdi],dx
    16d3:	11 74 06 00          	adc    DWORD PTR [rsi+rax*1+0x0],esi
    16d7:	00 01                	add    BYTE PTR [rcx],al
    16d9:	23 01                	and    eax,DWORD PTR [rcx]
    16db:	e0 00                	loopne 16dd <MULTIBOOT_HEADER_SIZE+0x1685>
    16dd:	00 00                	add    BYTE PTR [rax],al
    16df:	02 91 60 00 13 13    	add    dl,BYTE PTR [rcx+0x13130060]
    16e5:	06                   	(bad)  
    16e6:	00 00                	add    BYTE PTR [rax],al
    16e8:	13 06                	adc    eax,DWORD PTR [rsi]
    16ea:	00 00                	add    BYTE PTR [rax],al
    16ec:	14 e0                	adc    al,0xe0
    16ee:	00 00                	add    BYTE PTR [rax],al
    16f0:	00 14 e0             	add    BYTE PTR [rax+riz*8],dl
    16f3:	00 00                	add    BYTE PTR [rax],al
    16f5:	00 00                	add    BYTE PTR [rax],al
    16f7:	02 01                	add    al,BYTE PTR [rcx]
    16f9:	02 35 03 00 00 07    	add    dh,BYTE PTR [rip+0x7000003]        # 7001702 <kernel_end+0x5fe570a>
    16ff:	08 ff                	or     bh,bh
    1701:	05 00 00 00 56       	add    eax,0x56000000
    1706:	07                   	(bad)  
    1707:	00 00                	add    BYTE PTR [rax],al
    1709:	04 00                	add    al,0x0
    170b:	ac                   	lods   al,BYTE PTR ds:[rsi]
    170c:	06                   	(bad)  
    170d:	00 00                	add    BYTE PTR [rax],al
    170f:	08 01                	or     BYTE PTR [rcx],al
    1711:	27                   	(bad)  
    1712:	00 00                	add    BYTE PTR [rax],al
    1714:	00 0c e2             	add    BYTE PTR [rdx+riz*8],cl
    1717:	07                   	(bad)  
    1718:	00 00                	add    BYTE PTR [rax],al
    171a:	e5 00                	in     eax,0x0
    171c:	00 00                	add    BYTE PTR [rax],al
    171e:	fc                   	cld    
    171f:	7d 00                	jge    1721 <MULTIBOOT_HEADER_SIZE+0x16c9>
    1721:	01 00                	add    DWORD PTR [rax],eax
    1723:	00 00                	add    BYTE PTR [rax],al
    1725:	00 1c 0f             	add    BYTE PTR [rdi+rcx*1],bl
    1728:	00 00                	add    BYTE PTR [rax],al
    172a:	00 00                	add    BYTE PTR [rax],al
    172c:	00 00                	add    BYTE PTR [rax],al
    172e:	fb                   	sti    
    172f:	07                   	(bad)  
    1730:	00 00                	add    BYTE PTR [rax],al
    1732:	02 01                	add    al,BYTE PTR [rcx]
    1734:	06                   	(bad)  
    1735:	c6 00 00             	mov    BYTE PTR [rax],0x0
    1738:	00 02                	add    BYTE PTR [rdx],al
    173a:	02 05 1c 01 00 00    	add    al,BYTE PTR [rip+0x11c]        # 185c <MULTIBOOT_HEADER_SIZE+0x1804>
    1740:	03 04 05 69 6e 74 00 	add    eax,DWORD PTR [rax*1+0x746e69]
    1747:	02 08                	add    cl,BYTE PTR [rax]
    1749:	05 13 01 00 00       	add    eax,0x113
    174e:	02 01                	add    al,BYTE PTR [rcx]
    1750:	08 c4                	or     ah,al
    1752:	00 00                	add    BYTE PTR [rax],al
    1754:	00 02                	add    BYTE PTR [rdx],al
    1756:	02 07                	add    al,BYTE PTR [rdi]
    1758:	d2 00                	rol    BYTE PTR [rax],cl
    175a:	00 00                	add    BYTE PTR [rax],al
    175c:	04 2f                	add    al,0x2f
    175e:	11 00                	adc    DWORD PTR [rax],eax
    1760:	00 02                	add    BYTE PTR [rdx],al
    1762:	33 62 00             	xor    esp,DWORD PTR [rdx+0x0]
    1765:	00 00                	add    BYTE PTR [rax],al
    1767:	02 04 07             	add    al,BYTE PTR [rdi+rax*1]
    176a:	6a 10                	push   0x10
    176c:	00 00                	add    BYTE PTR [rax],al
    176e:	02 08                	add    cl,BYTE PTR [rax]
    1770:	07                   	(bad)  
    1771:	65 10 00             	adc    BYTE PTR gs:[rax],al
    1774:	00 02                	add    BYTE PTR [rdx],al
    1776:	08 05 0e 01 00 00    	or     BYTE PTR [rip+0x10e],al        # 188a <MULTIBOOT_HEADER_SIZE+0x1832>
    177c:	02 10                	add    dl,BYTE PTR [rax]
    177e:	04 2e                	add    al,0x2e
    1780:	01 00                	add    DWORD PTR [rax],eax
    1782:	00 02                	add    BYTE PTR [rdx],al
    1784:	08 07                	or     BYTE PTR [rdi],al
    1786:	05 01 00 00 05       	add    eax,0x5000001
    178b:	08 06                	or     BYTE PTR [rsi],al
    178d:	83 08 00             	or     DWORD PTR [rax],0x0
    1790:	00 01                	add    BYTE PTR [rcx],al
    1792:	0e                   	(bad)  
    1793:	c5 00 00             	(bad)  
    1796:	00 fc                	add    ah,bh
    1798:	7d 00                	jge    179a <MULTIBOOT_HEADER_SIZE+0x1742>
    179a:	01 00                	add    DWORD PTR [rax],eax
    179c:	00 00                	add    BYTE PTR [rax],al
    179e:	00 3e                	add    BYTE PTR [rsi],bh
    17a0:	00 00                	add    BYTE PTR [rax],al
    17a2:	00 00                	add    BYTE PTR [rax],al
    17a4:	00 00                	add    BYTE PTR [rax],al
    17a6:	00 01                	add    BYTE PTR [rcx],al
    17a8:	9c                   	pushf  
    17a9:	c5 00 00             	(bad)  
    17ac:	00 07                	add    BYTE PTR [rdi],al
    17ae:	8f 05 00 00 01 11    	pop    QWORD PTR [rip+0x11010000]        # 110117b4 <kernel_end+0xfff57bc>
    17b4:	cc                   	int3   
    17b5:	00 00                	add    BYTE PTR [rax],al
    17b7:	00 02                	add    BYTE PTR [rdx],al
    17b9:	91                   	xchg   ecx,eax
    17ba:	6c                   	ins    BYTE PTR es:[rdi],dx
    17bb:	07                   	(bad)  
    17bc:	84 05 00 00 01 12    	test   BYTE PTR [rip+0x12010000],al        # 120117c2 <kernel_end+0x10ff57ca>
    17c2:	dc 00                	fadd   QWORD PTR [rax]
    17c4:	00 00                	add    BYTE PTR [rax],al
    17c6:	02 91 6b 00 02 01    	add    dl,BYTE PTR [rcx+0x102006b]
    17cc:	02 35 03 00 00 08    	add    dh,BYTE PTR [rip+0x8000003]        # 80017d5 <kernel_end+0x6fe57dd>
    17d2:	57                   	push   rdi
    17d3:	00 00                	add    BYTE PTR [rax],al
    17d5:	00 dc                	add    ah,bl
    17d7:	00 00                	add    BYTE PTR [rax],al
    17d9:	00 09                	add    BYTE PTR [rcx],cl
    17db:	7e 00                	jle    17dd <MULTIBOOT_HEADER_SIZE+0x1785>
    17dd:	00 00                	add    BYTE PTR [rax],al
    17df:	00 00                	add    BYTE PTR [rax],al
    17e1:	08 c5                	or     ch,al
    17e3:	00 00                	add    BYTE PTR [rax],al
    17e5:	00 ec                	add    ah,ch
    17e7:	00 00                	add    BYTE PTR [rax],al
    17e9:	00 09                	add    BYTE PTR [rcx],cl
    17eb:	7e 00                	jle    17ed <MULTIBOOT_HEADER_SIZE+0x1795>
    17ed:	00 00                	add    BYTE PTR [rax],al
    17ef:	00 00                	add    BYTE PTR [rax],al
    17f1:	06                   	(bad)  
    17f2:	94                   	xchg   esp,eax
    17f3:	08 00                	or     BYTE PTR [rax],al
    17f5:	00 01                	add    BYTE PTR [rcx],al
    17f7:	16                   	(bad)  
    17f8:	c5 00 00             	(bad)  
    17fb:	00 3a                	add    BYTE PTR [rdx],bh
    17fd:	7e 00                	jle    17ff <MULTIBOOT_HEADER_SIZE+0x17a7>
    17ff:	01 00                	add    DWORD PTR [rax],eax
    1801:	00 00                	add    BYTE PTR [rax],al
    1803:	00 a9 00 00 00 00    	add    BYTE PTR [rcx+0x0],ch
    1809:	00 00                	add    BYTE PTR [rax],al
    180b:	00 01                	add    BYTE PTR [rcx],al
    180d:	9c                   	pushf  
    180e:	38 01                	cmp    BYTE PTR [rcx],al
    1810:	00 00                	add    BYTE PTR [rax],al
    1812:	07                   	(bad)  
    1813:	44 04 00             	rex.R add al,0x0
    1816:	00 01                	add    BYTE PTR [rcx],al
    1818:	18 c5                	sbb    ch,al
    181a:	00 00                	add    BYTE PTR [rax],al
    181c:	00 02                	add    BYTE PTR [rdx],al
    181e:	91                   	xchg   ecx,eax
    181f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1820:	07                   	(bad)  
    1821:	8f 05 00 00 01 1b    	pop    QWORD PTR [rip+0x1b010000]        # 1b011827 <kernel_end+0x19ff582f>
    1827:	38 01                	cmp    BYTE PTR [rcx],al
    1829:	00 00                	add    BYTE PTR [rax],al
    182b:	02 91 64 07 84 05    	add    dl,BYTE PTR [rcx+0x5840764]
    1831:	00 00                	add    BYTE PTR [rax],al
    1833:	01 1c 48             	add    DWORD PTR [rax+rcx*2],ebx
    1836:	01 00                	add    DWORD PTR [rax],eax
    1838:	00 02                	add    BYTE PTR [rdx],al
    183a:	91                   	xchg   ecx,eax
    183b:	62                   	(bad)  
    183c:	00 08                	add    BYTE PTR [rax],cl
    183e:	57                   	push   rdi
    183f:	00 00                	add    BYTE PTR [rax],al
    1841:	00 48 01             	add    BYTE PTR [rax+0x1],cl
    1844:	00 00                	add    BYTE PTR [rax],al
    1846:	09 7e 00             	or     DWORD PTR [rsi+0x0],edi
    1849:	00 00                	add    BYTE PTR [rax],al
    184b:	01 00                	add    DWORD PTR [rax],eax
    184d:	08 c5                	or     ch,al
    184f:	00 00                	add    BYTE PTR [rax],al
    1851:	00 58 01             	add    BYTE PTR [rax+0x1],bl
    1854:	00 00                	add    BYTE PTR [rax],al
    1856:	09 7e 00             	or     DWORD PTR [rsi+0x0],edi
    1859:	00 00                	add    BYTE PTR [rax],al
    185b:	01 00                	add    DWORD PTR [rax],eax
    185d:	06                   	(bad)  
    185e:	04 09                	add    al,0x9
    1860:	00 00                	add    BYTE PTR [rax],al
    1862:	01 21                	add    DWORD PTR [rcx],esp
    1864:	c5 00 00             	(bad)  
    1867:	00 e3                	add    bl,ah
    1869:	7e 00                	jle    186b <MULTIBOOT_HEADER_SIZE+0x1813>
    186b:	01 00                	add    DWORD PTR [rax],eax
    186d:	00 00                	add    BYTE PTR [rax],al
    186f:	00 9b 00 00 00 00    	add    BYTE PTR [rbx+0x0],bl
    1875:	00 00                	add    BYTE PTR [rax],al
    1877:	00 01                	add    BYTE PTR [rcx],al
    1879:	9c                   	pushf  
    187a:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    187b:	01 00                	add    DWORD PTR [rax],eax
    187d:	00 07                	add    BYTE PTR [rdi],al
    187f:	44 04 00             	rex.R add al,0x0
    1882:	00 01                	add    BYTE PTR [rcx],al
    1884:	23 c5                	and    eax,ebp
    1886:	00 00                	add    BYTE PTR [rax],al
    1888:	00 02                	add    BYTE PTR [rdx],al
    188a:	91                   	xchg   ecx,eax
    188b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    188c:	07                   	(bad)  
    188d:	8f 05 00 00 01 26    	pop    QWORD PTR [rip+0x26010000]        # 26011893 <kernel_end+0x24ff589b>
    1893:	cc                   	int3   
    1894:	00 00                	add    BYTE PTR [rax],al
    1896:	00 02                	add    BYTE PTR [rdx],al
    1898:	91                   	xchg   ecx,eax
    1899:	68 07 84 05 00       	push   0x58407
    189e:	00 01                	add    BYTE PTR [rcx],al
    18a0:	27                   	(bad)  
    18a1:	dc 00                	fadd   QWORD PTR [rax]
    18a3:	00 00                	add    BYTE PTR [rax],al
    18a5:	02 91 67 00 06 9d    	add    dl,BYTE PTR [rcx-0x62f9ff99]
    18ab:	07                   	(bad)  
    18ac:	00 00                	add    BYTE PTR [rax],al
    18ae:	01 2c c5 00 00 00 7e 	add    DWORD PTR [rax*8+0x7e000000],ebp
    18b5:	7f 00                	jg     18b7 <MULTIBOOT_HEADER_SIZE+0x185f>
    18b7:	01 00                	add    DWORD PTR [rax],eax
    18b9:	00 00                	add    BYTE PTR [rax],al
    18bb:	00 9b 00 00 00 00    	add    BYTE PTR [rbx+0x0],bl
    18c1:	00 00                	add    BYTE PTR [rax],al
    18c3:	00 01                	add    BYTE PTR [rcx],al
    18c5:	9c                   	pushf  
    18c6:	f0 01 00             	lock add DWORD PTR [rax],eax
    18c9:	00 07                	add    BYTE PTR [rdi],al
    18cb:	44 04 00             	rex.R add al,0x0
    18ce:	00 01                	add    BYTE PTR [rcx],al
    18d0:	2e c5 00 00          	cs (bad) 
    18d4:	00 02                	add    BYTE PTR [rdx],al
    18d6:	91                   	xchg   ecx,eax
    18d7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    18d8:	07                   	(bad)  
    18d9:	8f 05 00 00 01 31    	pop    QWORD PTR [rip+0x31010000]        # 310118df <kernel_end+0x2fff58e7>
    18df:	cc                   	int3   
    18e0:	00 00                	add    BYTE PTR [rax],al
    18e2:	00 02                	add    BYTE PTR [rdx],al
    18e4:	91                   	xchg   ecx,eax
    18e5:	68 07 84 05 00       	push   0x58407
    18ea:	00 01                	add    BYTE PTR [rcx],al
    18ec:	32 dc                	xor    bl,ah
    18ee:	00 00                	add    BYTE PTR [rax],al
    18f0:	00 02                	add    BYTE PTR [rdx],al
    18f2:	91                   	xchg   ecx,eax
    18f3:	67 00 06             	add    BYTE PTR [esi],al
    18f6:	e4 08                	in     al,0x8
    18f8:	00 00                	add    BYTE PTR [rax],al
    18fa:	01 37                	add    DWORD PTR [rdi],esi
    18fc:	c5 00 00             	(bad)  
    18ff:	00 19                	add    BYTE PTR [rcx],bl
    1901:	80 00 01             	add    BYTE PTR [rax],0x1
    1904:	00 00                	add    BYTE PTR [rax],al
    1906:	00 00                	add    BYTE PTR [rax],al
    1908:	27                   	(bad)  
    1909:	01 00                	add    DWORD PTR [rax],eax
    190b:	00 00                	add    BYTE PTR [rax],al
    190d:	00 00                	add    BYTE PTR [rax],al
    190f:	00 01                	add    BYTE PTR [rcx],al
    1911:	9c                   	pushf  
    1912:	3c 02                	cmp    al,0x2
    1914:	00 00                	add    BYTE PTR [rax],al
    1916:	07                   	(bad)  
    1917:	44 04 00             	rex.R add al,0x0
    191a:	00 01                	add    BYTE PTR [rcx],al
    191c:	39 c5                	cmp    ebp,eax
    191e:	00 00                	add    BYTE PTR [rax],al
    1920:	00 02                	add    BYTE PTR [rdx],al
    1922:	91                   	xchg   ecx,eax
    1923:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1924:	07                   	(bad)  
    1925:	8f 05 00 00 01 3e    	pop    QWORD PTR [rip+0x3e010000]        # 3e01192b <MULTIBOOT_LOADED_MAGIC+0x729b6a2>
    192b:	3c 02                	cmp    al,0x2
    192d:	00 00                	add    BYTE PTR [rax],al
    192f:	02 91 5c 07 84 05    	add    dl,BYTE PTR [rcx+0x584075c]
    1935:	00 00                	add    BYTE PTR [rax],al
    1937:	01 42 4c             	add    DWORD PTR [rdx+0x4c],eax
    193a:	02 00                	add    al,BYTE PTR [rax]
    193c:	00 02                	add    BYTE PTR [rdx],al
    193e:	91                   	xchg   ecx,eax
    193f:	58                   	pop    rax
    1940:	00 08                	add    BYTE PTR [rax],cl
    1942:	57                   	push   rdi
    1943:	00 00                	add    BYTE PTR [rax],al
    1945:	00 4c 02 00          	add    BYTE PTR [rdx+rax*1+0x0],cl
    1949:	00 09                	add    BYTE PTR [rcx],cl
    194b:	7e 00                	jle    194d <MULTIBOOT_HEADER_SIZE+0x18f5>
    194d:	00 00                	add    BYTE PTR [rax],al
    194f:	03 00                	add    eax,DWORD PTR [rax]
    1951:	08 c5                	or     ch,al
    1953:	00 00                	add    BYTE PTR [rax],al
    1955:	00 5c 02 00          	add    BYTE PTR [rdx+rax*1+0x0],bl
    1959:	00 09                	add    BYTE PTR [rcx],cl
    195b:	7e 00                	jle    195d <MULTIBOOT_HEADER_SIZE+0x1905>
    195d:	00 00                	add    BYTE PTR [rax],al
    195f:	03 00                	add    eax,DWORD PTR [rax]
    1961:	06                   	(bad)  
    1962:	bc 08 00 00 01       	mov    esp,0x1000008
    1967:	47 c5 00 00          	rex.RXB (bad) 
    196b:	00 40 81             	add    BYTE PTR [rax-0x7f],al
    196e:	00 01                	add    BYTE PTR [rcx],al
    1970:	00 00                	add    BYTE PTR [rax],al
    1972:	00 00                	add    BYTE PTR [rax],al
    1974:	bd 00 00 00 00       	mov    ebp,0x0
    1979:	00 00                	add    BYTE PTR [rax],al
    197b:	00 01                	add    BYTE PTR [rcx],al
    197d:	9c                   	pushf  
    197e:	b6 02                	mov    dh,0x2
    1980:	00 00                	add    BYTE PTR [rax],al
    1982:	0a 70 74             	or     dh,BYTE PTR [rax+0x74]
    1985:	72 00                	jb     1987 <MULTIBOOT_HEADER_SIZE+0x192f>
    1987:	01 49 85             	add    DWORD PTR [rcx-0x7b],ecx
    198a:	00 00                	add    BYTE PTR [rax],al
    198c:	00 02                	add    BYTE PTR [rdx],al
    198e:	91                   	xchg   ecx,eax
    198f:	60                   	(bad)  
    1990:	07                   	(bad)  
    1991:	44 04 00             	rex.R add al,0x0
    1994:	00 01                	add    BYTE PTR [rcx],al
    1996:	4a c5 00 00          	rex.WX (bad) 
    199a:	00 02                	add    BYTE PTR [rdx],al
    199c:	91                   	xchg   ecx,eax
    199d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    199e:	07                   	(bad)  
    199f:	8f 05 00 00 01 4e    	pop    QWORD PTR [rip+0x4e010000]        # 4e0119a5 <MULTIBOOT_LOADED_MAGIC+0x1729b71c>
    19a5:	cc                   	int3   
    19a6:	00 00                	add    BYTE PTR [rax],al
    19a8:	00 02                	add    BYTE PTR [rdx],al
    19aa:	91                   	xchg   ecx,eax
    19ab:	5c                   	pop    rsp
    19ac:	07                   	(bad)  
    19ad:	84 05 00 00 01 4f    	test   BYTE PTR [rip+0x4f010000],al        # 4f0119b3 <MULTIBOOT_LOADED_MAGIC+0x1829b72a>
    19b3:	dc 00                	fadd   QWORD PTR [rax]
    19b5:	00 00                	add    BYTE PTR [rax],al
    19b7:	02 91 5b 00 06 1c    	add    dl,BYTE PTR [rcx+0x1c06005b]
    19bd:	08 00                	or     BYTE PTR [rax],al
    19bf:	00 01                	add    BYTE PTR [rcx],al
    19c1:	55                   	push   rbp
    19c2:	c5 00 00             	(bad)  
    19c5:	00 fd                	add    ch,bh
    19c7:	81 00 01 00 00 00    	add    DWORD PTR [rax],0x1
    19cd:	00 a7 00 00 00 00    	add    BYTE PTR [rdi+0x0],ah
    19d3:	00 00                	add    BYTE PTR [rax],al
    19d5:	00 01                	add    BYTE PTR [rcx],al
    19d7:	9c                   	pushf  
    19d8:	10 03                	adc    BYTE PTR [rbx],al
    19da:	00 00                	add    BYTE PTR [rax],al
    19dc:	0a 70 74             	or     dh,BYTE PTR [rax+0x74]
    19df:	72 00                	jb     19e1 <MULTIBOOT_HEADER_SIZE+0x1989>
    19e1:	01 57 85             	add    DWORD PTR [rdi-0x7b],edx
    19e4:	00 00                	add    BYTE PTR [rax],al
    19e6:	00 02                	add    BYTE PTR [rdx],al
    19e8:	91                   	xchg   ecx,eax
    19e9:	60                   	(bad)  
    19ea:	07                   	(bad)  
    19eb:	44 04 00             	rex.R add al,0x0
    19ee:	00 01                	add    BYTE PTR [rcx],al
    19f0:	58                   	pop    rax
    19f1:	c5 00 00             	(bad)  
    19f4:	00 02                	add    BYTE PTR [rdx],al
    19f6:	91                   	xchg   ecx,eax
    19f7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    19f8:	07                   	(bad)  
    19f9:	8f 05 00 00 01 5e    	pop    QWORD PTR [rip+0x5e010000]        # 5e0119ff <MULTIBOOT_LOADED_MAGIC+0x2729b776>
    19ff:	cc                   	int3   
    1a00:	00 00                	add    BYTE PTR [rax],al
    1a02:	00 02                	add    BYTE PTR [rdx],al
    1a04:	91                   	xchg   ecx,eax
    1a05:	5c                   	pop    rsp
    1a06:	07                   	(bad)  
    1a07:	84 05 00 00 01 5f    	test   BYTE PTR [rip+0x5f010000],al        # 5f011a0d <MULTIBOOT_LOADED_MAGIC+0x2829b784>
    1a0d:	dc 00                	fadd   QWORD PTR [rax]
    1a0f:	00 00                	add    BYTE PTR [rax],al
    1a11:	02 91 5b 00 06 2e    	add    dl,BYTE PTR [rcx+0x2e06005b]
    1a17:	08 00                	or     BYTE PTR [rax],al
    1a19:	00 01                	add    BYTE PTR [rcx],al
    1a1b:	64 c5 00 00          	fs (bad) 
    1a1f:	00 a4 82 00 01 00 00 	add    BYTE PTR [rdx+rax*4+0x100],ah
    1a26:	00 00                	add    BYTE PTR [rax],al
    1a28:	b2 00                	mov    dl,0x0
    1a2a:	00 00                	add    BYTE PTR [rax],al
    1a2c:	00 00                	add    BYTE PTR [rax],al
    1a2e:	00 00                	add    BYTE PTR [rax],al
    1a30:	01 9c 6a 03 00 00 0a 	add    DWORD PTR [rdx+rbp*2+0xa000003],ebx
    1a37:	70 74                	jo     1aad <MULTIBOOT_HEADER_SIZE+0x1a55>
    1a39:	72 00                	jb     1a3b <MULTIBOOT_HEADER_SIZE+0x19e3>
    1a3b:	01 66 85             	add    DWORD PTR [rsi-0x7b],esp
    1a3e:	00 00                	add    BYTE PTR [rax],al
    1a40:	00 02                	add    BYTE PTR [rdx],al
    1a42:	91                   	xchg   ecx,eax
    1a43:	60                   	(bad)  
    1a44:	07                   	(bad)  
    1a45:	44 04 00             	rex.R add al,0x0
    1a48:	00 01                	add    BYTE PTR [rcx],al
    1a4a:	67 c5 00 00          	addr32 (bad) 
    1a4e:	00 02                	add    BYTE PTR [rdx],al
    1a50:	91                   	xchg   ecx,eax
    1a51:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1a52:	07                   	(bad)  
    1a53:	8f 05 00 00 01 6d    	pop    QWORD PTR [rip+0x6d010000]        # 6d011a59 <MULTIBOOT_LOADED_MAGIC+0x3629b7d0>
    1a59:	cc                   	int3   
    1a5a:	00 00                	add    BYTE PTR [rax],al
    1a5c:	00 02                	add    BYTE PTR [rdx],al
    1a5e:	91                   	xchg   ecx,eax
    1a5f:	5c                   	pop    rsp
    1a60:	07                   	(bad)  
    1a61:	84 05 00 00 01 6e    	test   BYTE PTR [rip+0x6e010000],al        # 6e011a67 <MULTIBOOT_LOADED_MAGIC+0x3729b7de>
    1a67:	dc 00                	fadd   QWORD PTR [rax]
    1a69:	00 00                	add    BYTE PTR [rax],al
    1a6b:	02 91 5b 00 06 07    	add    dl,BYTE PTR [rcx+0x706005b]
    1a71:	08 00                	or     BYTE PTR [rax],al
    1a73:	00 01                	add    BYTE PTR [rcx],al
    1a75:	73 c5                	jae    1a3c <MULTIBOOT_HEADER_SIZE+0x19e4>
    1a77:	00 00                	add    BYTE PTR [rax],al
    1a79:	00 56 83             	add    BYTE PTR [rsi-0x7d],dl
    1a7c:	00 01                	add    BYTE PTR [rcx],al
    1a7e:	00 00                	add    BYTE PTR [rax],al
    1a80:	00 00                	add    BYTE PTR [rax],al
    1a82:	52                   	push   rdx
    1a83:	01 00                	add    DWORD PTR [rax],eax
    1a85:	00 00                	add    BYTE PTR [rax],al
    1a87:	00 00                	add    BYTE PTR [rax],al
    1a89:	00 01                	add    BYTE PTR [rcx],al
    1a8b:	9c                   	pushf  
    1a8c:	f0 03 00             	lock add eax,DWORD PTR [rax]
    1a8f:	00 07                	add    BYTE PTR [rdi],al
    1a91:	fa                   	cli    
    1a92:	08 00                	or     BYTE PTR [rax],al
    1a94:	00 01                	add    BYTE PTR [rcx],al
    1a96:	75 85                	jne    1a1d <MULTIBOOT_HEADER_SIZE+0x19c5>
    1a98:	00 00                	add    BYTE PTR [rax],al
    1a9a:	00 02                	add    BYTE PTR [rdx],al
    1a9c:	91                   	xchg   ecx,eax
    1a9d:	60                   	(bad)  
    1a9e:	07                   	(bad)  
    1a9f:	ff 08                	dec    DWORD PTR [rax]
    1aa1:	00 00                	add    BYTE PTR [rax],al
    1aa3:	01 75 85             	add    DWORD PTR [rbp-0x7b],esi
    1aa6:	00 00                	add    BYTE PTR [rax],al
    1aa8:	00 02                	add    BYTE PTR [rdx],al
    1aaa:	91                   	xchg   ecx,eax
    1aab:	58                   	pop    rax
    1aac:	07                   	(bad)  
    1aad:	b8 07 00 00 01       	mov    eax,0x1000007
    1ab2:	75 85                	jne    1a39 <MULTIBOOT_HEADER_SIZE+0x19e1>
    1ab4:	00 00                	add    BYTE PTR [rax],al
    1ab6:	00 02                	add    BYTE PTR [rdx],al
    1ab8:	91                   	xchg   ecx,eax
    1ab9:	50                   	push   rax
    1aba:	07                   	(bad)  
    1abb:	bd 07 00 00 01       	mov    ebp,0x1000007
    1ac0:	75 85                	jne    1a47 <MULTIBOOT_HEADER_SIZE+0x19ef>
    1ac2:	00 00                	add    BYTE PTR [rax],al
    1ac4:	00 02                	add    BYTE PTR [rdx],al
    1ac6:	91                   	xchg   ecx,eax
    1ac7:	48 07                	rex.W (bad) 
    1ac9:	44 04 00             	rex.R add al,0x0
    1acc:	00 01                	add    BYTE PTR [rcx],al
    1ace:	76 c5                	jbe    1a95 <MULTIBOOT_HEADER_SIZE+0x1a3d>
    1ad0:	00 00                	add    BYTE PTR [rax],al
    1ad2:	00 02                	add    BYTE PTR [rdx],al
    1ad4:	91                   	xchg   ecx,eax
    1ad5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1ad6:	07                   	(bad)  
    1ad7:	8f 05 00 00 01 80    	pop    QWORD PTR [rip+0xffffffff80010000]        # ffffffff80011add <MULTIBOOT_CHECK_SUM+0x68536c0b>
    1add:	f0 03 00             	lock add eax,DWORD PTR [rax]
    1ae0:	00 03                	add    BYTE PTR [rbx],al
    1ae2:	91                   	xchg   ecx,eax
    1ae3:	b4 7f                	mov    ah,0x7f
    1ae5:	07                   	(bad)  
    1ae6:	84 05 00 00 01 85    	test   BYTE PTR [rip+0xffffffff85010000],al        # ffffffff85011aec <MULTIBOOT_CHECK_SUM+0x6d536c1a>
    1aec:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    1aef:	00 03                	add    BYTE PTR [rbx],al
    1af1:	91                   	xchg   ecx,eax
    1af2:	af                   	scas   eax,DWORD PTR es:[rdi]
    1af3:	7f 00                	jg     1af5 <MULTIBOOT_HEADER_SIZE+0x1a9d>
    1af5:	08 57 00             	or     BYTE PTR [rdi+0x0],dl
    1af8:	00 00                	add    BYTE PTR [rax],al
    1afa:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    1afd:	00 09                	add    BYTE PTR [rcx],cl
    1aff:	7e 00                	jle    1b01 <MULTIBOOT_HEADER_SIZE+0x1aa9>
    1b01:	00 00                	add    BYTE PTR [rax],al
    1b03:	04 00                	add    al,0x0
    1b05:	08 c5                	or     ch,al
    1b07:	00 00                	add    BYTE PTR [rax],al
    1b09:	00 10                	add    BYTE PTR [rax],dl
    1b0b:	04 00                	add    al,0x0
    1b0d:	00 09                	add    BYTE PTR [rcx],cl
    1b0f:	7e 00                	jle    1b11 <MULTIBOOT_HEADER_SIZE+0x1ab9>
    1b11:	00 00                	add    BYTE PTR [rax],al
    1b13:	04 00                	add    al,0x0
    1b15:	06                   	(bad)  
    1b16:	3f                   	(bad)  
    1b17:	08 00                	or     BYTE PTR [rax],al
    1b19:	00 01                	add    BYTE PTR [rcx],al
    1b1b:	8a c5                	mov    al,ch
    1b1d:	00 00                	add    BYTE PTR [rax],al
    1b1f:	00 a8 84 00 01 00    	add    BYTE PTR [rax+0x10084],ch
    1b25:	00 00                	add    BYTE PTR [rax],al
    1b27:	00 32                	add    BYTE PTR [rdx],dh
    1b29:	01 00                	add    DWORD PTR [rax],eax
    1b2b:	00 00                	add    BYTE PTR [rax],al
    1b2d:	00 00                	add    BYTE PTR [rax],al
    1b2f:	00 01                	add    BYTE PTR [rcx],al
    1b31:	9c                   	pushf  
    1b32:	96                   	xchg   esi,eax
    1b33:	04 00                	add    al,0x0
    1b35:	00 07                	add    BYTE PTR [rdi],al
    1b37:	fa                   	cli    
    1b38:	08 00                	or     BYTE PTR [rax],al
    1b3a:	00 01                	add    BYTE PTR [rcx],al
    1b3c:	8c 85 00 00 00 02    	mov    WORD PTR [rbp+0x2000000],es
    1b42:	91                   	xchg   ecx,eax
    1b43:	60                   	(bad)  
    1b44:	07                   	(bad)  
    1b45:	ff 08                	dec    DWORD PTR [rax]
    1b47:	00 00                	add    BYTE PTR [rax],al
    1b49:	01 8c 85 00 00 00 02 	add    DWORD PTR [rbp+rax*4+0x2000000],ecx
    1b50:	91                   	xchg   ecx,eax
    1b51:	58                   	pop    rax
    1b52:	07                   	(bad)  
    1b53:	b8 07 00 00 01       	mov    eax,0x1000007
    1b58:	8c 85 00 00 00 02    	mov    WORD PTR [rbp+0x2000000],es
    1b5e:	91                   	xchg   ecx,eax
    1b5f:	50                   	push   rax
    1b60:	07                   	(bad)  
    1b61:	bd 07 00 00 01       	mov    ebp,0x1000007
    1b66:	8c 85 00 00 00 02    	mov    WORD PTR [rbp+0x2000000],es
    1b6c:	91                   	xchg   ecx,eax
    1b6d:	48 07                	rex.W (bad) 
    1b6f:	44 04 00             	rex.R add al,0x0
    1b72:	00 01                	add    BYTE PTR [rcx],al
    1b74:	8d                   	(bad)  
    1b75:	c5 00 00             	(bad)  
    1b78:	00 02                	add    BYTE PTR [rdx],al
    1b7a:	91                   	xchg   ecx,eax
    1b7b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1b7c:	07                   	(bad)  
    1b7d:	8f 05 00 00 01 96    	pop    QWORD PTR [rip+0xffffffff96010000]        # ffffffff96011b83 <MULTIBOOT_CHECK_SUM+0x7e536cb1>
    1b83:	3c 02                	cmp    al,0x2
    1b85:	00 00                	add    BYTE PTR [rax],al
    1b87:	03 91 b8 7f 07 84    	add    edx,DWORD PTR [rcx-0x7bf88048]
    1b8d:	05 00 00 01 9a       	add    eax,0x9a010000
    1b92:	4c 02 00             	rex.WR add r8b,BYTE PTR [rax]
    1b95:	00 03                	add    BYTE PTR [rbx],al
    1b97:	91                   	xchg   ecx,eax
    1b98:	b4 7f                	mov    ah,0x7f
    1b9a:	00 06                	add    BYTE PTR [rsi],al
    1b9c:	cc                   	int3   
    1b9d:	07                   	(bad)  
    1b9e:	00 00                	add    BYTE PTR [rax],al
    1ba0:	01 9f c5 00 00 00    	add    DWORD PTR [rdi+0xc5],ebx
    1ba6:	da 85 00 01 00 00    	fiadd  DWORD PTR [rbp+0x100]
    1bac:	00 00                	add    BYTE PTR [rax],al
    1bae:	45 01 00             	add    DWORD PTR [r8],r8d
    1bb1:	00 00                	add    BYTE PTR [rax],al
    1bb3:	00 00                	add    BYTE PTR [rax],al
    1bb5:	00 01                	add    BYTE PTR [rcx],al
    1bb7:	9c                   	pushf  
    1bb8:	1c 05                	sbb    al,0x5
    1bba:	00 00                	add    BYTE PTR [rax],al
    1bbc:	07                   	(bad)  
    1bbd:	fa                   	cli    
    1bbe:	08 00                	or     BYTE PTR [rax],al
    1bc0:	00 01                	add    BYTE PTR [rcx],al
    1bc2:	a1 85 00 00 00 02 91 	movabs eax,ds:0x760910200000085
    1bc9:	60 07 
    1bcb:	ff 08                	dec    DWORD PTR [rax]
    1bcd:	00 00                	add    BYTE PTR [rax],al
    1bcf:	01 a1 85 00 00 00    	add    DWORD PTR [rcx+0x85],esp
    1bd5:	02 91 58 07 b8 07    	add    dl,BYTE PTR [rcx+0x7b80758]
    1bdb:	00 00                	add    BYTE PTR [rax],al
    1bdd:	01 a1 85 00 00 00    	add    DWORD PTR [rcx+0x85],esp
    1be3:	02 91 50 07 bd 07    	add    dl,BYTE PTR [rcx+0x7bd0750]
    1be9:	00 00                	add    BYTE PTR [rax],al
    1beb:	01 a1 85 00 00 00    	add    DWORD PTR [rcx+0x85],esp
    1bf1:	02 91 48 07 44 04    	add    dl,BYTE PTR [rcx+0x4440748]
    1bf7:	00 00                	add    BYTE PTR [rax],al
    1bf9:	01 a2 c5 00 00 00    	add    DWORD PTR [rdx+0xc5],esp
    1bff:	02 91 6f 07 8f 05    	add    dl,BYTE PTR [rcx+0x58f076f]
    1c05:	00 00                	add    BYTE PTR [rax],al
    1c07:	01 ac 3c 02 00 00 03 	add    DWORD PTR [rsp+rdi*1+0x3000002],ebp
    1c0e:	91                   	xchg   ecx,eax
    1c0f:	b8 7f 07 84 05       	mov    eax,0x584077f
    1c14:	00 00                	add    BYTE PTR [rax],al
    1c16:	01 b0 4c 02 00 00    	add    DWORD PTR [rax+0x24c],esi
    1c1c:	03 91 b4 7f 00 06    	add    edx,DWORD PTR [rcx+0x6007fb4]
    1c22:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    1c23:	08 00                	or     BYTE PTR [rax],al
    1c25:	00 01                	add    BYTE PTR [rcx],al
    1c27:	b5 c5                	mov    ch,0xc5
    1c29:	00 00                	add    BYTE PTR [rax],al
    1c2b:	00 1f                	add    BYTE PTR [rdi],bl
    1c2d:	87 00                	xchg   DWORD PTR [rax],eax
    1c2f:	01 00                	add    DWORD PTR [rax],eax
    1c31:	00 00                	add    BYTE PTR [rax],al
    1c33:	00 45 01             	add    BYTE PTR [rbp+0x1],al
    1c36:	00 00                	add    BYTE PTR [rax],al
    1c38:	00 00                	add    BYTE PTR [rax],al
    1c3a:	00 00                	add    BYTE PTR [rax],al
    1c3c:	01 9c a2 05 00 00 07 	add    DWORD PTR [rdx+riz*4+0x7000005],ebx
    1c43:	fa                   	cli    
    1c44:	08 00                	or     BYTE PTR [rax],al
    1c46:	00 01                	add    BYTE PTR [rcx],al
    1c48:	b7 85                	mov    bh,0x85
    1c4a:	00 00                	add    BYTE PTR [rax],al
    1c4c:	00 02                	add    BYTE PTR [rdx],al
    1c4e:	91                   	xchg   ecx,eax
    1c4f:	60                   	(bad)  
    1c50:	07                   	(bad)  
    1c51:	ff 08                	dec    DWORD PTR [rax]
    1c53:	00 00                	add    BYTE PTR [rax],al
    1c55:	01 b7 85 00 00 00    	add    DWORD PTR [rdi+0x85],esi
    1c5b:	02 91 58 07 b8 07    	add    dl,BYTE PTR [rcx+0x7b80758]
    1c61:	00 00                	add    BYTE PTR [rax],al
    1c63:	01 b7 85 00 00 00    	add    DWORD PTR [rdi+0x85],esi
    1c69:	02 91 50 07 bd 07    	add    dl,BYTE PTR [rcx+0x7bd0750]
    1c6f:	00 00                	add    BYTE PTR [rax],al
    1c71:	01 b7 85 00 00 00    	add    DWORD PTR [rdi+0x85],esi
    1c77:	02 91 48 07 44 04    	add    dl,BYTE PTR [rcx+0x4440748]
    1c7d:	00 00                	add    BYTE PTR [rax],al
    1c7f:	01 b8 c5 00 00 00    	add    DWORD PTR [rax+0xc5],edi
    1c85:	02 91 6f 07 8f 05    	add    dl,BYTE PTR [rcx+0x58f076f]
    1c8b:	00 00                	add    BYTE PTR [rax],al
    1c8d:	01 c2                	add    edx,eax
    1c8f:	3c 02                	cmp    al,0x2
    1c91:	00 00                	add    BYTE PTR [rax],al
    1c93:	03 91 b8 7f 07 84    	add    edx,DWORD PTR [rcx-0x7bf88048]
    1c99:	05 00 00 01 c6       	add    eax,0xc6010000
    1c9e:	4c 02 00             	rex.WR add r8b,BYTE PTR [rax]
    1ca1:	00 03                	add    BYTE PTR [rbx],al
    1ca3:	91                   	xchg   ecx,eax
    1ca4:	b4 7f                	mov    ah,0x7f
    1ca6:	00 06                	add    BYTE PTR [rsi],al
    1ca8:	5f                   	pop    rdi
    1ca9:	08 00                	or     BYTE PTR [rax],al
    1cab:	00 01                	add    BYTE PTR [rcx],al
    1cad:	cb                   	retf   
    1cae:	c5 00 00             	(bad)  
    1cb1:	00 64 88 00          	add    BYTE PTR [rax+rcx*4+0x0],ah
    1cb5:	01 00                	add    DWORD PTR [rax],eax
    1cb7:	00 00                	add    BYTE PTR [rax],al
    1cb9:	00 13                	add    BYTE PTR [rbx],dl
    1cbb:	02 00                	add    al,BYTE PTR [rax]
    1cbd:	00 00                	add    BYTE PTR [rax],al
    1cbf:	00 00                	add    BYTE PTR [rax],al
    1cc1:	00 01                	add    BYTE PTR [rcx],al
    1cc3:	9c                   	pushf  
    1cc4:	54                   	push   rsp
    1cc5:	06                   	(bad)  
    1cc6:	00 00                	add    BYTE PTR [rax],al
    1cc8:	07                   	(bad)  
    1cc9:	fa                   	cli    
    1cca:	08 00                	or     BYTE PTR [rax],al
    1ccc:	00 01                	add    BYTE PTR [rcx],al
    1cce:	cd 85                	int    0x85
    1cd0:	00 00                	add    BYTE PTR [rax],al
    1cd2:	00 02                	add    BYTE PTR [rdx],al
    1cd4:	91                   	xchg   ecx,eax
    1cd5:	60                   	(bad)  
    1cd6:	07                   	(bad)  
    1cd7:	ff 08                	dec    DWORD PTR [rax]
    1cd9:	00 00                	add    BYTE PTR [rax],al
    1cdb:	01 cd                	add    ebp,ecx
    1cdd:	85 00                	test   DWORD PTR [rax],eax
    1cdf:	00 00                	add    BYTE PTR [rax],al
    1ce1:	02 91 58 07 b8 07    	add    dl,BYTE PTR [rcx+0x7b80758]
    1ce7:	00 00                	add    BYTE PTR [rax],al
    1ce9:	01 cd                	add    ebp,ecx
    1ceb:	85 00                	test   DWORD PTR [rax],eax
    1ced:	00 00                	add    BYTE PTR [rax],al
    1cef:	02 91 50 07 bd 07    	add    dl,BYTE PTR [rcx+0x7bd0750]
    1cf5:	00 00                	add    BYTE PTR [rax],al
    1cf7:	01 cd                	add    ebp,ecx
    1cf9:	85 00                	test   DWORD PTR [rax],eax
    1cfb:	00 00                	add    BYTE PTR [rax],al
    1cfd:	02 91 48 07 b3 07    	add    dl,BYTE PTR [rcx+0x7b30748]
    1d03:	00 00                	add    BYTE PTR [rax],al
    1d05:	01 cd                	add    ebp,ecx
    1d07:	85 00                	test   DWORD PTR [rax],eax
    1d09:	00 00                	add    BYTE PTR [rax],al
    1d0b:	02 91 40 07 44 04    	add    dl,BYTE PTR [rcx+0x4440740]
    1d11:	00 00                	add    BYTE PTR [rax],al
    1d13:	01 ce                	add    esi,ecx
    1d15:	c5 00 00             	(bad)  
    1d18:	00 02                	add    BYTE PTR [rdx],al
    1d1a:	91                   	xchg   ecx,eax
    1d1b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1d1c:	07                   	(bad)  
    1d1d:	8f 05 00 00 01 d9    	pop    QWORD PTR [rip+0xffffffffd9010000]        # ffffffffd9011d23 <MULTIBOOT_CHECK_SUM+0xc1536e51>
    1d23:	54                   	push   rsp
    1d24:	06                   	(bad)  
    1d25:	00 00                	add    BYTE PTR [rax],al
    1d27:	03 91 a8 7f 07 84    	add    edx,DWORD PTR [rcx-0x7bf88058]
    1d2d:	05 00 00 01 df       	add    eax,0xdf010000
    1d32:	64 06                	fs (bad) 
    1d34:	00 00                	add    BYTE PTR [rax],al
    1d36:	03 91 a2 7f 07 c2    	add    edx,DWORD PTR [rcx-0x3df8805e]
    1d3c:	07                   	(bad)  
    1d3d:	00 00                	add    BYTE PTR [rax],al
    1d3f:	01 e4                	add    esp,esp
    1d41:	3c 02                	cmp    al,0x2
    1d43:	00 00                	add    BYTE PTR [rax],al
    1d45:	03 91 90 7f 07 55    	add    edx,DWORD PTR [rcx+0x55077f90]
    1d4b:	08 00                	or     BYTE PTR [rax],al
    1d4d:	00 01                	add    BYTE PTR [rcx],al
    1d4f:	e8 4c 02 00 00       	call   1fa0 <MULTIBOOT_HEADER_SIZE+0x1f48>
    1d54:	03 91 8c 7f 00 08    	add    edx,DWORD PTR [rcx+0x8007f8c]
    1d5a:	57                   	push   rdi
    1d5b:	00 00                	add    BYTE PTR [rax],al
    1d5d:	00 64 06 00          	add    BYTE PTR [rsi+rax*1+0x0],ah
    1d61:	00 09                	add    BYTE PTR [rcx],cl
    1d63:	7e 00                	jle    1d65 <MULTIBOOT_HEADER_SIZE+0x1d0d>
    1d65:	00 00                	add    BYTE PTR [rax],al
    1d67:	05 00 08 c5 00       	add    eax,0xc50800
    1d6c:	00 00                	add    BYTE PTR [rax],al
    1d6e:	74 06                	je     1d76 <MULTIBOOT_HEADER_SIZE+0x1d1e>
    1d70:	00 00                	add    BYTE PTR [rax],al
    1d72:	09 7e 00             	or     DWORD PTR [rsi+0x0],edi
    1d75:	00 00                	add    BYTE PTR [rax],al
    1d77:	05 00 06 d4 08       	add    eax,0x8d40600
    1d7c:	00 00                	add    BYTE PTR [rax],al
    1d7e:	01 ed                	add    ebp,ebp
    1d80:	c5 00 00             	(bad)  
    1d83:	00 77 8a             	add    BYTE PTR [rdi-0x76],dh
    1d86:	00 01                	add    BYTE PTR [rcx],al
    1d88:	00 00                	add    BYTE PTR [rax],al
    1d8a:	00 00                	add    BYTE PTR [rax],al
    1d8c:	28 01                	sub    BYTE PTR [rcx],al
    1d8e:	00 00                	add    BYTE PTR [rax],al
    1d90:	00 00                	add    BYTE PTR [rax],al
    1d92:	00 00                	add    BYTE PTR [rax],al
    1d94:	01 9c f8 06 00 00 07 	add    DWORD PTR [rax+rdi*8+0x7000006],ebx
    1d9b:	fa                   	cli    
    1d9c:	08 00                	or     BYTE PTR [rax],al
    1d9e:	00 01                	add    BYTE PTR [rcx],al
    1da0:	ef                   	out    dx,eax
    1da1:	85 00                	test   DWORD PTR [rax],eax
    1da3:	00 00                	add    BYTE PTR [rax],al
    1da5:	02 91 60 07 ff 08    	add    dl,BYTE PTR [rcx+0x8ff0760]
    1dab:	00 00                	add    BYTE PTR [rax],al
    1dad:	01 ef                	add    edi,ebp
    1daf:	85 00                	test   DWORD PTR [rax],eax
    1db1:	00 00                	add    BYTE PTR [rax],al
    1db3:	02 91 58 07 b8 07    	add    dl,BYTE PTR [rcx+0x7b80758]
    1db9:	00 00                	add    BYTE PTR [rax],al
    1dbb:	01 ef                	add    edi,ebp
    1dbd:	85 00                	test   DWORD PTR [rax],eax
    1dbf:	00 00                	add    BYTE PTR [rax],al
    1dc1:	02 91 50 07 bd 07    	add    dl,BYTE PTR [rcx+0x7bd0750]
    1dc7:	00 00                	add    BYTE PTR [rax],al
    1dc9:	01 ef                	add    edi,ebp
    1dcb:	85 00                	test   DWORD PTR [rax],eax
    1dcd:	00 00                	add    BYTE PTR [rax],al
    1dcf:	02 91 48 07 44 04    	add    dl,BYTE PTR [rcx+0x4440748]
    1dd5:	00 00                	add    BYTE PTR [rax],al
    1dd7:	01 f0                	add    eax,esi
    1dd9:	c5 00 00             	(bad)  
    1ddc:	00 02                	add    BYTE PTR [rdx],al
    1dde:	91                   	xchg   ecx,eax
    1ddf:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1de0:	07                   	(bad)  
    1de1:	8f 05 00 00 01 fc    	pop    QWORD PTR [rip+0xfffffffffc010000]        # fffffffffc011de7 <MULTIBOOT_CHECK_SUM+0xe4536f15>
    1de7:	cc                   	int3   
    1de8:	00 00                	add    BYTE PTR [rax],al
    1dea:	00 02                	add    BYTE PTR [rdx],al
    1dec:	91                   	xchg   ecx,eax
    1ded:	44 07                	rex.R (bad) 
    1def:	84 05 00 00 01 fd    	test   BYTE PTR [rip+0xfffffffffd010000],al        # fffffffffd011df5 <MULTIBOOT_CHECK_SUM+0xe5536f23>
    1df5:	dc 00                	fadd   QWORD PTR [rax]
    1df7:	00 00                	add    BYTE PTR [rax],al
    1df9:	02 91 43 00 0b fb    	add    dl,BYTE PTR [rcx-0x4f4ffbd]
    1dff:	07                   	(bad)  
    1e00:	00 00                	add    BYTE PTR [rax],al
    1e02:	01 03                	add    DWORD PTR [rbx],eax
    1e04:	01 9f 8b 00 01 00    	add    DWORD PTR [rdi+0x1008b],ebx
    1e0a:	00 00                	add    BYTE PTR [rax],al
    1e0c:	00 79 01             	add    BYTE PTR [rcx+0x1],bh
    1e0f:	00 00                	add    BYTE PTR [rax],al
    1e11:	00 00                	add    BYTE PTR [rax],al
    1e13:	00 00                	add    BYTE PTR [rax],al
    1e15:	01 9c 08 23 07 00 00 	add    DWORD PTR [rax+rcx*1+0x723],ebx
    1e1c:	23 07                	and    eax,DWORD PTR [rdi]
    1e1e:	00 00                	add    BYTE PTR [rax],al
    1e20:	0c 7e                	or     al,0x7e
    1e22:	00 00                	add    BYTE PTR [rax],al
    1e24:	00 ff                	add    bh,bh
    1e26:	03 00                	add    eax,DWORD PTR [rax]
    1e28:	02 01                	add    al,BYTE PTR [rcx]
    1e2a:	06                   	(bad)  
    1e2b:	cd 00                	int    0x0
    1e2d:	00 00                	add    BYTE PTR [rax],al
    1e2f:	07                   	(bad)  
    1e30:	7c 08                	jl     1e3a <MULTIBOOT_HEADER_SIZE+0x1de2>
    1e32:	00 00                	add    BYTE PTR [rax],al
    1e34:	01 0c 12             	add    DWORD PTR [rdx+rdx*1],ecx
    1e37:	07                   	(bad)  
    1e38:	00 00                	add    BYTE PTR [rax],al
    1e3a:	09 03                	or     DWORD PTR [rbx],eax
    1e3c:	00 40 01             	add    BYTE PTR [rax+0x1],al
    1e3f:	01 00                	add    DWORD PTR [rax],eax
    1e41:	00 00                	add    BYTE PTR [rax],al
    1e43:	00 0d 34 05 00 00    	add    BYTE PTR [rip+0x534],cl        # 237d <MULTIBOOT_HEADER_SIZE+0x2325>
    1e49:	01 0a                	add    DWORD PTR [rdx],ecx
    1e4b:	54                   	push   rsp
    1e4c:	07                   	(bad)  
    1e4d:	00 00                	add    BYTE PTR [rax],al
    1e4f:	09 03                	or     DWORD PTR [rbx],eax
    1e51:	08 30                	or     BYTE PTR [rax],dh
    1e53:	01 01                	add    DWORD PTR [rcx],eax
    1e55:	00 00                	add    BYTE PTR [rax],al
    1e57:	00 00                	add    BYTE PTR [rax],al
    1e59:	0e                   	(bad)  
    1e5a:	57                   	push   rdi
    1e5b:	00 00                	add    BYTE PTR [rax],al
    1e5d:	00 00                	add    BYTE PTR [rax],al
    1e5f:	43 07                	rex.XB (bad) 
    1e61:	00 00                	add    BYTE PTR [rax],al
    1e63:	04 00                	add    al,0x0
    1e65:	69 07 00 00 08 01    	imul   eax,DWORD PTR [rdi],0x1080000
    1e6b:	27                   	(bad)  
    1e6c:	00 00                	add    BYTE PTR [rax],al
    1e6e:	00 0c 97             	add    BYTE PTR [rdi+rdx*4],cl
    1e71:	09 00                	or     DWORD PTR [rax],eax
    1e73:	00 e5                	add    ch,ah
    1e75:	00 00                	add    BYTE PTR [rax],al
    1e77:	00 18                	add    BYTE PTR [rax],bl
    1e79:	8d 00                	lea    eax,[rax]
    1e7b:	01 00                	add    DWORD PTR [rax],eax
    1e7d:	00 00                	add    BYTE PTR [rax],al
    1e7f:	00 15 14 00 00 00    	add    BYTE PTR [rip+0x14],dl        # 1e99 <MULTIBOOT_HEADER_SIZE+0x1e41>
    1e85:	00 00                	add    BYTE PTR [rax],al
    1e87:	00 9e 0e 00 00 02    	add    BYTE PTR [rsi+0x200000e],bl
    1e8d:	01 06                	add    DWORD PTR [rsi],eax
    1e8f:	c6 00 00             	mov    BYTE PTR [rax],0x0
    1e92:	00 02                	add    BYTE PTR [rdx],al
    1e94:	02 05 1c 01 00 00    	add    al,BYTE PTR [rip+0x11c]        # 1fb6 <MULTIBOOT_HEADER_SIZE+0x1f5e>
    1e9a:	03 04 05 69 6e 74 00 	add    eax,DWORD PTR [rax*1+0x746e69]
    1ea1:	04 7c                	add    al,0x7c
    1ea3:	11 00                	adc    DWORD PTR [rax],eax
    1ea5:	00 03                	add    BYTE PTR [rbx],al
    1ea7:	28 4d 00             	sub    BYTE PTR [rbp+0x0],cl
    1eaa:	00 00                	add    BYTE PTR [rax],al
    1eac:	02 08                	add    cl,BYTE PTR [rax]
    1eae:	05 13 01 00 00       	add    eax,0x113
    1eb3:	02 01                	add    al,BYTE PTR [rcx]
    1eb5:	08 c4                	or     ah,al
    1eb7:	00 00                	add    BYTE PTR [rax],al
    1eb9:	00 02                	add    BYTE PTR [rdx],al
    1ebb:	02 07                	add    al,BYTE PTR [rdi]
    1ebd:	d2 00                	rol    BYTE PTR [rax],cl
    1ebf:	00 00                	add    BYTE PTR [rax],al
    1ec1:	02 04 07             	add    al,BYTE PTR [rdi+rax*1]
    1ec4:	6a 10                	push   0x10
    1ec6:	00 00                	add    BYTE PTR [rax],al
    1ec8:	02 08                	add    cl,BYTE PTR [rax]
    1eca:	07                   	(bad)  
    1ecb:	65 10 00             	adc    BYTE PTR gs:[rax],al
    1ece:	00 02                	add    BYTE PTR [rdx],al
    1ed0:	08 05 0e 01 00 00    	or     BYTE PTR [rip+0x10e],al        # 1fe4 <MULTIBOOT_HEADER_SIZE+0x1f8c>
    1ed6:	02 10                	add    dl,BYTE PTR [rax]
    1ed8:	04 2e                	add    al,0x2e
    1eda:	01 00                	add    DWORD PTR [rax],eax
    1edc:	00 02                	add    BYTE PTR [rdx],al
    1ede:	08 07                	or     BYTE PTR [rdi],al
    1ee0:	05 01 00 00 05       	add    eax,0x5000001
    1ee5:	cc                   	int3   
    1ee6:	05 00 00 10 02       	add    eax,0x2100000
    1eeb:	0b aa 00 00 00 06    	or     ebp,DWORD PTR [rdx+0x6000000]
    1ef1:	d1 06                	rol    DWORD PTR [rsi],1
    1ef3:	00 00                	add    BYTE PTR [rax],al
    1ef5:	02 0d aa 00 00 00    	add    cl,BYTE PTR [rip+0xaa]        # 1fa5 <MULTIBOOT_HEADER_SIZE+0x1f4d>
    1efb:	00 06                	add    BYTE PTR [rsi],al
    1efd:	10 07                	adc    BYTE PTR [rdi],al
    1eff:	00 00                	add    BYTE PTR [rax],al
    1f01:	02 0e                	add    cl,BYTE PTR [rsi]
    1f03:	aa                   	stos   BYTE PTR es:[rdi],al
    1f04:	00 00                	add    BYTE PTR [rax],al
    1f06:	00 08                	add    BYTE PTR [rax],cl
    1f08:	00 07                	add    BYTE PTR [rdi],al
    1f0a:	08 85 00 00 00 04    	or     BYTE PTR [rbp+0x4000000],al
    1f10:	cd 05                	int    0x5
    1f12:	00 00                	add    BYTE PTR [rax],al
    1f14:	02 0f                	add    cl,BYTE PTR [rdi]
    1f16:	85 00                	test   DWORD PTR [rax],eax
    1f18:	00 00                	add    BYTE PTR [rax],al
    1f1a:	05 90 06 00 00       	add    eax,0x690
    1f1f:	10 02                	adc    BYTE PTR [rdx],al
    1f21:	11 e0                	adc    eax,esp
    1f23:	00 00                	add    BYTE PTR [rax],al
    1f25:	00 06                	add    BYTE PTR [rsi],al
    1f27:	dd 07                	fld    QWORD PTR [rdi]
    1f29:	00 00                	add    BYTE PTR [rax],al
    1f2b:	02 13                	add    dl,BYTE PTR [rbx]
    1f2d:	e0 00                	loopne 1f2f <MULTIBOOT_HEADER_SIZE+0x1ed7>
    1f2f:	00 00                	add    BYTE PTR [rax],al
    1f31:	00 06                	add    BYTE PTR [rsi],al
    1f33:	50                   	push   rax
    1f34:	08 00                	or     BYTE PTR [rax],al
    1f36:	00 02                	add    BYTE PTR [rdx],al
    1f38:	14 e0                	adc    al,0xe0
    1f3a:	00 00                	add    BYTE PTR [rax],al
    1f3c:	00 08                	add    BYTE PTR [rax],cl
    1f3e:	00 07                	add    BYTE PTR [rdi],al
    1f40:	08 b0 00 00 00 04    	or     BYTE PTR [rax+0x4000000],dh
    1f46:	91                   	xchg   ecx,eax
    1f47:	06                   	(bad)  
    1f48:	00 00                	add    BYTE PTR [rax],al
    1f4a:	02 15 bb 00 00 00    	add    dl,BYTE PTR [rip+0xbb]        # 200b <MULTIBOOT_HEADER_SIZE+0x1fb3>
    1f50:	08 18                	or     BYTE PTR [rax],bl
    1f52:	01 06                	add    DWORD PTR [rsi],eax
    1f54:	12 01                	adc    al,BYTE PTR [rcx]
    1f56:	00 00                	add    BYTE PTR [rax],al
    1f58:	06                   	(bad)  
    1f59:	42 0a 00             	rex.X or al,BYTE PTR [rax]
    1f5c:	00 01                	add    BYTE PTR [rcx],al
    1f5e:	08 b0 00 00 00 00    	or     BYTE PTR [rax+0x0],dh
    1f64:	09 76 61             	or     DWORD PTR [rsi+0x61],esi
    1f67:	6c                   	ins    BYTE PTR es:[rdi],dx
    1f68:	00 01                	add    BYTE PTR [rcx],al
    1f6a:	09 3b                	or     DWORD PTR [rbx],edi
    1f6c:	00 00                	add    BYTE PTR [rax],al
    1f6e:	00 10                	add    BYTE PTR [rax],dl
    1f70:	00 04 20             	add    BYTE PTR [rax+riz*1],al
    1f73:	09 00                	or     DWORD PTR [rax],eax
    1f75:	00 01                	add    BYTE PTR [rcx],al
    1f77:	0a f1                	or     dh,cl
    1f79:	00 00                	add    BYTE PTR [rax],al
    1f7b:	00 0a                	add    BYTE PTR [rdx],cl
    1f7d:	34 0a                	xor    al,0xa
    1f7f:	00 00                	add    BYTE PTR [rax],al
    1f81:	01 0c 5b             	add    DWORD PTR [rbx+rbx*2],ecx
    1f84:	01 00                	add    DWORD PTR [rax],eax
    1f86:	00 18                	add    BYTE PTR [rax],bl
    1f88:	8d 00                	lea    eax,[rax]
    1f8a:	01 00                	add    DWORD PTR [rax],eax
    1f8c:	00 00                	add    BYTE PTR [rax],al
    1f8e:	00 d0                	add    al,dl
    1f90:	00 00                	add    BYTE PTR [rax],al
    1f92:	00 00                	add    BYTE PTR [rax],al
    1f94:	00 00                	add    BYTE PTR [rax],al
    1f96:	00 01                	add    BYTE PTR [rcx],al
    1f98:	9c                   	pushf  
    1f99:	5b                   	pop    rbx
    1f9a:	01 00                	add    DWORD PTR [rax],eax
    1f9c:	00 0b                	add    BYTE PTR [rbx],cl
    1f9e:	67 12 00             	adc    al,BYTE PTR [eax]
    1fa1:	00 01                	add    BYTE PTR [rcx],al
    1fa3:	0c 62                	or     al,0x62
    1fa5:	01 00                	add    DWORD PTR [rax],eax
    1fa7:	00 02                	add    BYTE PTR [rdx],al
    1fa9:	91                   	xchg   ecx,eax
    1faa:	58                   	pop    rax
    1fab:	0c 44                	or     al,0x44
    1fad:	04 00                	add    al,0x0
    1faf:	00 01                	add    BYTE PTR [rcx],al
    1fb1:	0e                   	(bad)  
    1fb2:	5b                   	pop    rbx
    1fb3:	01 00                	add    DWORD PTR [rax],eax
    1fb5:	00 02                	add    BYTE PTR [rdx],al
    1fb7:	91                   	xchg   ecx,eax
    1fb8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1fb9:	00 02                	add    BYTE PTR [rdx],al
    1fbb:	01 02                	add    DWORD PTR [rdx],eax
    1fbd:	35 03 00 00 07       	xor    eax,0x7000003
    1fc2:	08 e6                	or     dh,ah
    1fc4:	00 00                	add    BYTE PTR [rax],al
    1fc6:	00 0d 4c 09 00 00    	add    BYTE PTR [rip+0x94c],cl        # 2918 <MULTIBOOT_HEADER_SIZE+0x28c0>
    1fcc:	01 26                	add    DWORD PTR [rsi],esp
    1fce:	5b                   	pop    rbx
    1fcf:	01 00                	add    DWORD PTR [rax],eax
    1fd1:	00 e8                	add    al,ch
    1fd3:	8d 00                	lea    eax,[rax]
    1fd5:	01 00                	add    DWORD PTR [rax],eax
    1fd7:	00 00                	add    BYTE PTR [rax],al
    1fd9:	00 18                	add    BYTE PTR [rax],bl
    1fdb:	01 00                	add    DWORD PTR [rax],eax
    1fdd:	00 00                	add    BYTE PTR [rax],al
    1fdf:	00 00                	add    BYTE PTR [rax],al
    1fe1:	00 01                	add    BYTE PTR [rcx],al
    1fe3:	9c                   	pushf  
    1fe4:	13 02                	adc    eax,DWORD PTR [rdx]
    1fe6:	00 00                	add    BYTE PTR [rax],al
    1fe8:	0b 67 12             	or     esp,DWORD PTR [rdi+0x12]
    1feb:	00 00                	add    BYTE PTR [rax],al
    1fed:	01 26                	add    DWORD PTR [rsi],esp
    1fef:	62 01                	(bad)  
    1ff1:	00 00                	add    BYTE PTR [rax],al
    1ff3:	02 91 48 0e 76 61    	add    dl,BYTE PTR [rcx+0x61760e48]
    1ff9:	6c                   	ins    BYTE PTR es:[rdi],dx
    1ffa:	00 01                	add    BYTE PTR [rcx],al
    1ffc:	26 13 02             	adc    eax,DWORD PTR es:[rdx]
    1fff:	00 00                	add    BYTE PTR [rax],al
    2001:	02 91 40 0b 30 03    	add    dl,BYTE PTR [rcx+0x3300b40]
    2007:	00 00                	add    BYTE PTR [rax],al
    2009:	01 26                	add    DWORD PTR [rsi],esp
    200b:	3b 00                	cmp    eax,DWORD PTR [rax]
    200d:	00 00                	add    BYTE PTR [rax],al
    200f:	03 91 bc 7f 0c 74    	add    edx,DWORD PTR [rcx+0x740c7fbc]
    2015:	06                   	(bad)  
    2016:	00 00                	add    BYTE PTR [rax],al
    2018:	01 28                	add    DWORD PTR [rax],ebp
    201a:	e0 00                	loopne 201c <MULTIBOOT_HEADER_SIZE+0x1fc4>
    201c:	00 00                	add    BYTE PTR [rax],al
    201e:	02 91 68 0f 69 00    	add    dl,BYTE PTR [rcx+0x690f68]
    2024:	01 29                	add    DWORD PTR [rcx],ebp
    2026:	3b 00                	cmp    eax,DWORD PTR [rax]
    2028:	00 00                	add    BYTE PTR [rax],al
    202a:	02 91 64 10 2f 8e    	add    dl,BYTE PTR [rcx-0x71d0ef9c]
    2030:	00 01                	add    BYTE PTR [rcx],al
    2032:	00 00                	add    BYTE PTR [rax],al
    2034:	00 00                	add    BYTE PTR [rax],al
    2036:	47 00 00             	rex.RXB add BYTE PTR [r8],r8b
    2039:	00 00                	add    BYTE PTR [rax],al
    203b:	00 00                	add    BYTE PTR [rax],al
    203d:	00 f2                	add    dl,dh
    203f:	01 00                	add    DWORD PTR [rax],eax
    2041:	00 0c 81             	add    BYTE PTR [rcx+rax*4],cl
    2044:	09 00                	or     DWORD PTR [rax],eax
    2046:	00 01                	add    BYTE PTR [rcx],al
    2048:	30 19                	xor    BYTE PTR [rcx],bl
    204a:	02 00                	add    al,BYTE PTR [rax]
    204c:	00 02                	add    BYTE PTR [rdx],al
    204e:	91                   	xchg   ecx,eax
    204f:	58                   	pop    rax
    2050:	00 11                	add    BYTE PTR [rcx],dl
    2052:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    2053:	8e 00                	mov    es,WORD PTR [rax]
    2055:	01 00                	add    DWORD PTR [rax],eax
    2057:	00 00                	add    BYTE PTR [rax],al
    2059:	00 44 00 00          	add    BYTE PTR [rax+rax*1+0x0],al
    205d:	00 00                	add    BYTE PTR [rax],al
    205f:	00 00                	add    BYTE PTR [rax],al
    2061:	00 0c 81             	add    BYTE PTR [rcx+rax*4],cl
    2064:	09 00                	or     DWORD PTR [rax],eax
    2066:	00 01                	add    BYTE PTR [rcx],al
    2068:	41 19 02             	sbb    DWORD PTR [r10],eax
    206b:	00 00                	add    BYTE PTR [rax],al
    206d:	02 91 50 00 00 07    	add    dl,BYTE PTR [rcx+0x7000050]
    2073:	08 3b                	or     BYTE PTR [rbx],bh
    2075:	00 00                	add    BYTE PTR [rax],al
    2077:	00 07                	add    BYTE PTR [rdi],al
    2079:	08 12                	or     BYTE PTR [rdx],dl
    207b:	01 00                	add    DWORD PTR [rax],eax
    207d:	00 12                	add    BYTE PTR [rdx],dl
    207f:	86 0a                	xchg   BYTE PTR [rdx],cl
    2081:	00 00                	add    BYTE PTR [rax],al
    2083:	01 63 00             	add    DWORD PTR [rbx+0x0],esp
    2086:	8f 00                	pop    QWORD PTR [rax]
    2088:	01 00                	add    DWORD PTR [rax],eax
    208a:	00 00                	add    BYTE PTR [rax],al
    208c:	00 42 00             	add    BYTE PTR [rdx+0x0],al
    208f:	00 00                	add    BYTE PTR [rax],al
    2091:	00 00                	add    BYTE PTR [rax],al
    2093:	00 00                	add    BYTE PTR [rax],al
    2095:	01 9c 73 02 00 00 0b 	add    DWORD PTR [rbx+rsi*2+0xb000002],ebx
    209c:	67 12 00             	adc    al,BYTE PTR [eax]
    209f:	00 01                	add    BYTE PTR [rcx],al
    20a1:	63 62 01             	movsxd esp,DWORD PTR [rdx+0x1]
    20a4:	00 00                	add    BYTE PTR [rax],al
    20a6:	02 91 58 0b 35 07    	add    dl,BYTE PTR [rcx+0x7350b58]
    20ac:	00 00                	add    BYTE PTR [rax],al
    20ae:	01 63 3b             	add    DWORD PTR [rbx+0x3b],esp
    20b1:	00 00                	add    BYTE PTR [rax],al
    20b3:	00 02                	add    BYTE PTR [rdx],al
    20b5:	91                   	xchg   ecx,eax
    20b6:	54                   	push   rsp
    20b7:	0e                   	(bad)  
    20b8:	76 61                	jbe    211b <MULTIBOOT_HEADER_SIZE+0x20c3>
    20ba:	6c                   	ins    BYTE PTR es:[rdi],dx
    20bb:	00 01                	add    BYTE PTR [rcx],al
    20bd:	63 3b                	movsxd edi,DWORD PTR [rbx]
    20bf:	00 00                	add    BYTE PTR [rax],al
    20c1:	00 02                	add    BYTE PTR [rdx],al
    20c3:	91                   	xchg   ecx,eax
    20c4:	50                   	push   rax
    20c5:	0f 61 00             	punpcklwd mm0,DWORD PTR [rax]
    20c8:	01 65 19             	add    DWORD PTR [rbp+0x19],esp
    20cb:	02 00                	add    al,BYTE PTR [rax]
    20cd:	00 02                	add    BYTE PTR [rdx],al
    20cf:	91                   	xchg   ecx,eax
    20d0:	68 00 12 09 0a       	push   0xa091200
    20d5:	00 00                	add    BYTE PTR [rax],al
    20d7:	01 6a 42             	add    DWORD PTR [rdx+0x42],ebp
    20da:	8f 00                	pop    QWORD PTR [rax]
    20dc:	01 00                	add    DWORD PTR [rax],eax
    20de:	00 00                	add    BYTE PTR [rax],al
    20e0:	00 3d 00 00 00 00    	add    BYTE PTR [rip+0x0],bh        # 20e6 <MULTIBOOT_HEADER_SIZE+0x208e>
    20e6:	00 00                	add    BYTE PTR [rax],al
    20e8:	00 01                	add    BYTE PTR [rcx],al
    20ea:	9c                   	pushf  
    20eb:	b9 02 00 00 0b       	mov    ecx,0xb000002
    20f0:	67 12 00             	adc    al,BYTE PTR [eax]
    20f3:	00 01                	add    BYTE PTR [rcx],al
    20f5:	6a 62                	push   0x62
    20f7:	01 00                	add    DWORD PTR [rax],eax
    20f9:	00 02                	add    BYTE PTR [rdx],al
    20fb:	91                   	xchg   ecx,eax
    20fc:	58                   	pop    rax
    20fd:	0e                   	(bad)  
    20fe:	76 61                	jbe    2161 <MULTIBOOT_HEADER_SIZE+0x2109>
    2100:	6c                   	ins    BYTE PTR es:[rdi],dx
    2101:	00 01                	add    BYTE PTR [rcx],al
    2103:	6a 3b                	push   0x3b
    2105:	00 00                	add    BYTE PTR [rax],al
    2107:	00 02                	add    BYTE PTR [rdx],al
    2109:	91                   	xchg   ecx,eax
    210a:	54                   	push   rsp
    210b:	0f 61 00             	punpcklwd mm0,DWORD PTR [rax]
    210e:	01 6c 19 02          	add    DWORD PTR [rcx+rbx*1+0x2],ebp
    2112:	00 00                	add    BYTE PTR [rax],al
    2114:	02 91 68 00 12 b5    	add    dl,BYTE PTR [rcx-0x4aedff98]
    211a:	09 00                	or     DWORD PTR [rax],eax
    211c:	00 01                	add    BYTE PTR [rcx],al
    211e:	71 7f                	jno    219f <MULTIBOOT_HEADER_SIZE+0x2147>
    2120:	8f 00                	pop    QWORD PTR [rax]
    2122:	01 00                	add    DWORD PTR [rax],eax
    2124:	00 00                	add    BYTE PTR [rax],al
    2126:	00 3d 00 00 00 00    	add    BYTE PTR [rip+0x0],bh        # 212c <MULTIBOOT_HEADER_SIZE+0x20d4>
    212c:	00 00                	add    BYTE PTR [rax],al
    212e:	00 01                	add    BYTE PTR [rcx],al
    2130:	9c                   	pushf  
    2131:	ff 02                	inc    DWORD PTR [rdx]
    2133:	00 00                	add    BYTE PTR [rax],al
    2135:	0b 67 12             	or     esp,DWORD PTR [rdi+0x12]
    2138:	00 00                	add    BYTE PTR [rax],al
    213a:	01 71 62             	add    DWORD PTR [rcx+0x62],esi
    213d:	01 00                	add    DWORD PTR [rax],eax
    213f:	00 02                	add    BYTE PTR [rdx],al
    2141:	91                   	xchg   ecx,eax
    2142:	58                   	pop    rax
    2143:	0e                   	(bad)  
    2144:	76 61                	jbe    21a7 <MULTIBOOT_HEADER_SIZE+0x214f>
    2146:	6c                   	ins    BYTE PTR es:[rdi],dx
    2147:	00 01                	add    BYTE PTR [rcx],al
    2149:	71 3b                	jno    2186 <MULTIBOOT_HEADER_SIZE+0x212e>
    214b:	00 00                	add    BYTE PTR [rax],al
    214d:	00 02                	add    BYTE PTR [rdx],al
    214f:	91                   	xchg   ecx,eax
    2150:	54                   	push   rsp
    2151:	0f 61 00             	punpcklwd mm0,DWORD PTR [rax]
    2154:	01 73 19             	add    DWORD PTR [rbx+0x19],esi
    2157:	02 00                	add    al,BYTE PTR [rax]
    2159:	00 02                	add    BYTE PTR [rdx],al
    215b:	91                   	xchg   ecx,eax
    215c:	68 00 13 6b 09       	push   0x96b1300
    2161:	00 00                	add    BYTE PTR [rax],al
    2163:	01 79 5b             	add    DWORD PTR [rcx+0x5b],edi
    2166:	01 00                	add    DWORD PTR [rax],eax
    2168:	00 bc 8f 00 01 00 00 	add    BYTE PTR [rdi+rcx*4+0x100],bh
    216f:	00 00                	add    BYTE PTR [rax],al
    2171:	a2 00 00 00 00 00 00 	movabs ds:0x100000000000000,al
    2178:	00 01 
    217a:	9c                   	pushf  
    217b:	3d 03 00 00 0c       	cmp    eax,0xc000003
    2180:	67 12 00             	adc    al,BYTE PTR [eax]
    2183:	00 01                	add    BYTE PTR [rcx],al
    2185:	7b e6                	jnp    216d <MULTIBOOT_HEADER_SIZE+0x2115>
    2187:	00 00                	add    BYTE PTR [rax],al
    2189:	00 02                	add    BYTE PTR [rdx],al
    218b:	91                   	xchg   ecx,eax
    218c:	60                   	(bad)  
    218d:	0f 76 61 6c          	pcmpeqd mm4,QWORD PTR [rcx+0x6c]
    2191:	00 01                	add    BYTE PTR [rcx],al
    2193:	83 3d 03 00 00 02 91 	cmp    DWORD PTR [rip+0x2000003],0xffffff91        # 200219d <kernel_end+0xfe61a5>
    219a:	50                   	push   rax
    219b:	00 14 3b             	add    BYTE PTR [rbx+rdi*1],dl
    219e:	00 00                	add    BYTE PTR [rax],al
    21a0:	00 4d 03             	add    BYTE PTR [rbp+0x3],cl
    21a3:	00 00                	add    BYTE PTR [rax],al
    21a5:	15 7e 00 00 00       	adc    eax,0x7e
    21aa:	03 00                	add    eax,DWORD PTR [rax]
    21ac:	13 39                	adc    edi,DWORD PTR [rcx]
    21ae:	09 00                	or     DWORD PTR [rax],eax
    21b0:	00 01                	add    BYTE PTR [rcx],al
    21b2:	87 5b 01             	xchg   DWORD PTR [rbx+0x1],ebx
    21b5:	00 00                	add    BYTE PTR [rax],al
    21b7:	5e                   	pop    rsi
    21b8:	90                   	nop
    21b9:	00 01                	add    BYTE PTR [rcx],al
    21bb:	00 00                	add    BYTE PTR [rax],al
    21bd:	00 00                	add    BYTE PTR [rax],al
    21bf:	dc 00                	fadd   QWORD PTR [rax]
    21c1:	00 00                	add    BYTE PTR [rax],al
    21c3:	00 00                	add    BYTE PTR [rax],al
    21c5:	00 00                	add    BYTE PTR [rax],al
    21c7:	01 9c 8b 03 00 00 0c 	add    DWORD PTR [rbx+rcx*4+0xc000003],ebx
    21ce:	67 12 00             	adc    al,BYTE PTR [eax]
    21d1:	00 01                	add    BYTE PTR [rcx],al
    21d3:	89 e6                	mov    esi,esp
    21d5:	00 00                	add    BYTE PTR [rax],al
    21d7:	00 02                	add    BYTE PTR [rdx],al
    21d9:	91                   	xchg   ecx,eax
    21da:	60                   	(bad)  
    21db:	0f 76 61 6c          	pcmpeqd mm4,QWORD PTR [rcx+0x6c]
    21df:	00 01                	add    BYTE PTR [rcx],al
    21e1:	94                   	xchg   esp,eax
    21e2:	8b 03                	mov    eax,DWORD PTR [rbx]
    21e4:	00 00                	add    BYTE PTR [rax],al
    21e6:	02 91 48 00 14 3b    	add    dl,BYTE PTR [rcx+0x3b140048]
    21ec:	00 00                	add    BYTE PTR [rax],al
    21ee:	00 9b 03 00 00 15    	add    BYTE PTR [rbx+0x15000003],bl
    21f4:	7e 00                	jle    21f6 <MULTIBOOT_HEADER_SIZE+0x219e>
    21f6:	00 00                	add    BYTE PTR [rax],al
    21f8:	05 00 13 d4 09       	add    eax,0x9d41300
    21fd:	00 00                	add    BYTE PTR [rax],al
    21ff:	01 98 5b 01 00 00    	add    DWORD PTR [rax+0x15b],ebx
    2205:	3a 91 00 01 00 00    	cmp    dl,BYTE PTR [rcx+0x100]
    220b:	00 00                	add    BYTE PTR [rax],al
    220d:	a2 00 00 00 00 00 00 	movabs ds:0x100000000000000,al
    2214:	00 01 
    2216:	9c                   	pushf  
    2217:	d9 03                	fld    DWORD PTR [rbx]
    2219:	00 00                	add    BYTE PTR [rax],al
    221b:	0c 67                	or     al,0x67
    221d:	12 00                	adc    al,BYTE PTR [rax]
    221f:	00 01                	add    BYTE PTR [rcx],al
    2221:	9a                   	(bad)  
    2222:	e6 00                	out    0x0,al
    2224:	00 00                	add    BYTE PTR [rax],al
    2226:	02 91 60 0f 76 61    	add    dl,BYTE PTR [rcx+0x61760f60]
    222c:	6c                   	ins    BYTE PTR es:[rdi],dx
    222d:	00 01                	add    BYTE PTR [rcx],al
    222f:	a2 3d 03 00 00 02 91 	movabs ds:0x5091020000033d,al
    2236:	50 00 
    2238:	13 e4                	adc    esp,esp
    223a:	09 00                	or     DWORD PTR [rax],eax
    223c:	00 01                	add    BYTE PTR [rcx],al
    223e:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    223f:	5b                   	pop    rbx
    2240:	01 00                	add    DWORD PTR [rax],eax
    2242:	00 dc                	add    ah,bl
    2244:	91                   	xchg   ecx,eax
    2245:	00 01                	add    BYTE PTR [rcx],al
    2247:	00 00                	add    BYTE PTR [rax],al
    2249:	00 00                	add    BYTE PTR [rax],al
    224b:	67 01 00             	add    DWORD PTR [eax],eax
    224e:	00 00                	add    BYTE PTR [rax],al
    2250:	00 00                	add    BYTE PTR [rax],al
    2252:	00 01                	add    BYTE PTR [rcx],al
    2254:	9c                   	pushf  
    2255:	17                   	(bad)  
    2256:	04 00                	add    al,0x0
    2258:	00 0c 67             	add    BYTE PTR [rdi+riz*2],cl
    225b:	12 00                	adc    al,BYTE PTR [rax]
    225d:	00 01                	add    BYTE PTR [rcx],al
    225f:	a8 e6                	test   al,0xe6
    2261:	00 00                	add    BYTE PTR [rax],al
    2263:	00 02                	add    BYTE PTR [rdx],al
    2265:	91                   	xchg   ecx,eax
    2266:	60                   	(bad)  
    2267:	0f 76 61 6c          	pcmpeqd mm4,QWORD PTR [rcx+0x6c]
    226b:	00 01                	add    BYTE PTR [rcx],al
    226d:	bf 3d 03 00 00       	mov    edi,0x33d
    2272:	02 91 50 00 13 48    	add    dl,BYTE PTR [rcx+0x48130050]
    2278:	0a 00                	or     al,BYTE PTR [rax]
    227a:	00 01                	add    BYTE PTR [rcx],al
    227c:	c4                   	(bad)  
    227d:	5b                   	pop    rbx
    227e:	01 00                	add    DWORD PTR [rax],eax
    2280:	00 43 93             	add    BYTE PTR [rbx-0x6d],al
    2283:	00 01                	add    BYTE PTR [rcx],al
    2285:	00 00                	add    BYTE PTR [rax],al
    2287:	00 00                	add    BYTE PTR [rax],al
    2289:	b6 00                	mov    dh,0x0
    228b:	00 00                	add    BYTE PTR [rax],al
    228d:	00 00                	add    BYTE PTR [rax],al
    228f:	00 00                	add    BYTE PTR [rax],al
    2291:	01 9c 55 04 00 00 0c 	add    DWORD PTR [rbp+rdx*2+0xc000004],ebx
    2298:	67 12 00             	adc    al,BYTE PTR [eax]
    229b:	00 01                	add    BYTE PTR [rcx],al
    229d:	c6                   	(bad)  
    229e:	e6 00                	out    0x0,al
    22a0:	00 00                	add    BYTE PTR [rax],al
    22a2:	02 91 60 0f 76 61    	add    dl,BYTE PTR [rcx+0x61760f60]
    22a8:	6c                   	ins    BYTE PTR es:[rdi],dx
    22a9:	00 01                	add    BYTE PTR [rcx],al
    22ab:	d1 55 04             	rcl    DWORD PTR [rbp+0x4],1
    22ae:	00 00                	add    BYTE PTR [rax],al
    22b0:	02 91 58 00 14 3b    	add    dl,BYTE PTR [rcx+0x3b140058]
    22b6:	00 00                	add    BYTE PTR [rax],al
    22b8:	00 65 04             	add    BYTE PTR [rbp+0x4],ah
    22bb:	00 00                	add    BYTE PTR [rax],al
    22bd:	15 7e 00 00 00       	adc    eax,0x7e
    22c2:	01 00                	add    DWORD PTR [rax],eax
    22c4:	13 58 09             	adc    ebx,DWORD PTR [rax+0x9]
    22c7:	00 00                	add    BYTE PTR [rax],al
    22c9:	01 d5                	add    ebp,edx
    22cb:	5b                   	pop    rbx
    22cc:	01 00                	add    DWORD PTR [rax],eax
    22ce:	00 f9                	add    cl,bh
    22d0:	93                   	xchg   ebx,eax
    22d1:	00 01                	add    BYTE PTR [rcx],al
    22d3:	00 00                	add    BYTE PTR [rax],al
    22d5:	00 00                	add    BYTE PTR [rax],al
    22d7:	f0 00 00             	lock add BYTE PTR [rax],al
    22da:	00 00                	add    BYTE PTR [rax],al
    22dc:	00 00                	add    BYTE PTR [rax],al
    22de:	00 01                	add    BYTE PTR [rcx],al
    22e0:	9c                   	pushf  
    22e1:	a3 04 00 00 0c 67 12 	movabs ds:0x12670c000004,eax
    22e8:	00 00 
    22ea:	01 d7                	add    edi,edx
    22ec:	e6 00                	out    0x0,al
    22ee:	00 00                	add    BYTE PTR [rax],al
    22f0:	02 91 60 0f 76 61    	add    dl,BYTE PTR [rcx+0x61760f60]
    22f6:	6c                   	ins    BYTE PTR es:[rdi],dx
    22f7:	00 01                	add    BYTE PTR [rcx],al
    22f9:	e6 3d                	out    0x3d,al
    22fb:	03 00                	add    eax,DWORD PTR [rax]
    22fd:	00 02                	add    BYTE PTR [rdx],al
    22ff:	91                   	xchg   ecx,eax
    2300:	50                   	push   rax
    2301:	00 13                	add    BYTE PTR [rbx],dl
    2303:	c4                   	(bad)  
    2304:	09 00                	or     DWORD PTR [rax],eax
    2306:	00 01                	add    BYTE PTR [rcx],al
    2308:	ea                   	(bad)  
    2309:	5b                   	pop    rbx
    230a:	01 00                	add    DWORD PTR [rax],eax
    230c:	00 e9                	add    cl,ch
    230e:	94                   	xchg   esp,eax
    230f:	00 01                	add    BYTE PTR [rcx],al
    2311:	00 00                	add    BYTE PTR [rax],al
    2313:	00 00                	add    BYTE PTR [rax],al
    2315:	b6 00                	mov    dh,0x0
    2317:	00 00                	add    BYTE PTR [rax],al
    2319:	00 00                	add    BYTE PTR [rax],al
    231b:	00 00                	add    BYTE PTR [rax],al
    231d:	01 9c e1 04 00 00 0c 	add    DWORD PTR [rcx+riz*8+0xc000004],ebx
    2324:	67 12 00             	adc    al,BYTE PTR [eax]
    2327:	00 01                	add    BYTE PTR [rcx],al
    2329:	ec                   	in     al,dx
    232a:	e6 00                	out    0x0,al
    232c:	00 00                	add    BYTE PTR [rax],al
    232e:	02 91 60 0f 76 61    	add    dl,BYTE PTR [rcx+0x61760f60]
    2334:	6c                   	ins    BYTE PTR es:[rdi],dx
    2335:	00 01                	add    BYTE PTR [rcx],al
    2337:	f7 55 04             	not    DWORD PTR [rbp+0x4]
    233a:	00 00                	add    BYTE PTR [rax],al
    233c:	02 91 58 00 13 87    	add    dl,BYTE PTR [rcx-0x78ecffa8]
    2342:	09 00                	or     DWORD PTR [rax],eax
    2344:	00 01                	add    BYTE PTR [rcx],al
    2346:	fb                   	sti    
    2347:	5b                   	pop    rbx
    2348:	01 00                	add    DWORD PTR [rax],eax
    234a:	00 9f 95 00 01 00    	add    BYTE PTR [rdi+0x10095],bl
    2350:	00 00                	add    BYTE PTR [rax],al
    2352:	00 8b 02 00 00 00    	add    BYTE PTR [rbx+0x2],cl
    2358:	00 00                	add    BYTE PTR [rax],al
    235a:	00 01                	add    BYTE PTR [rcx],al
    235c:	9c                   	pushf  
    235d:	1f                   	(bad)  
    235e:	05 00 00 0c 44       	add    eax,0x440c0000
    2363:	04 00                	add    al,0x0
    2365:	00 01                	add    BYTE PTR [rcx],al
    2367:	fd                   	std    
    2368:	5b                   	pop    rbx
    2369:	01 00                	add    DWORD PTR [rax],eax
    236b:	00 02                	add    BYTE PTR [rdx],al
    236d:	91                   	xchg   ecx,eax
    236e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    236f:	0c 67                	or     al,0x67
    2371:	12 00                	adc    al,BYTE PTR [rax]
    2373:	00 01                	add    BYTE PTR [rcx],al
    2375:	fe                   	(bad)  
    2376:	e6 00                	out    0x0,al
    2378:	00 00                	add    BYTE PTR [rax],al
    237a:	02 91 58 00 16 5e    	add    dl,BYTE PTR [rcx+0x5e160058]
    2380:	0a 00                	or     al,BYTE PTR [rax]
    2382:	00 01                	add    BYTE PTR [rcx],al
    2384:	28 01                	sub    BYTE PTR [rcx],al
    2386:	5b                   	pop    rbx
    2387:	01 00                	add    DWORD PTR [rax],eax
    2389:	00 2a                	add    BYTE PTR [rdx],ch
    238b:	98                   	cwde   
    238c:	00 01                	add    BYTE PTR [rcx],al
    238e:	00 00                	add    BYTE PTR [rax],al
    2390:	00 00                	add    BYTE PTR [rax],al
    2392:	39 01                	cmp    DWORD PTR [rcx],eax
    2394:	00 00                	add    BYTE PTR [rax],al
    2396:	00 00                	add    BYTE PTR [rax],al
    2398:	00 00                	add    BYTE PTR [rax],al
    239a:	01 9c 60 05 00 00 17 	add    DWORD PTR [rax+riz*2+0x17000005],ebx
    23a1:	67 12 00             	adc    al,BYTE PTR [eax]
    23a4:	00 01                	add    BYTE PTR [rcx],al
    23a6:	2a 01                	sub    al,BYTE PTR [rcx]
    23a8:	e6 00                	out    0x0,al
    23aa:	00 00                	add    BYTE PTR [rax],al
    23ac:	02 91 60 18 76 61    	add    dl,BYTE PTR [rcx+0x61761860]
    23b2:	6c                   	ins    BYTE PTR es:[rdi],dx
    23b3:	00 01                	add    BYTE PTR [rcx],al
    23b5:	42 01 3d 03 00 00 02 	rex.X add DWORD PTR [rip+0x2000003],edi        # 20023bf <kernel_end+0xfe63c7>
    23bc:	91                   	xchg   ecx,eax
    23bd:	50                   	push   rax
    23be:	00 16                	add    BYTE PTR [rsi],dl
    23c0:	16                   	(bad)  
    23c1:	09 00                	or     DWORD PTR [rax],eax
    23c3:	00 01                	add    BYTE PTR [rcx],al
    23c5:	46 01 5b 01          	rex.RX add DWORD PTR [rbx+0x1],r11d
    23c9:	00 00                	add    BYTE PTR [rax],al
    23cb:	63 99 00 01 00 00    	movsxd ebx,DWORD PTR [rcx+0x100]
    23d1:	00 00                	add    BYTE PTR [rax],al
    23d3:	1c 01                	sbb    al,0x1
    23d5:	00 00                	add    BYTE PTR [rax],al
    23d7:	00 00                	add    BYTE PTR [rax],al
    23d9:	00 00                	add    BYTE PTR [rax],al
    23db:	01 9c c0 05 00 00 17 	add    DWORD PTR [rax+rax*8+0x17000005],ebx
    23e2:	44 04 00             	rex.R add al,0x0
    23e5:	00 01                	add    BYTE PTR [rcx],al
    23e7:	48 01 5b 01          	add    QWORD PTR [rbx+0x1],rbx
    23eb:	00 00                	add    BYTE PTR [rax],al
    23ed:	02 91 6f 17 67 12    	add    dl,BYTE PTR [rcx+0x1267176f]
    23f3:	00 00                	add    BYTE PTR [rax],al
    23f5:	01 49 01             	add    DWORD PTR [rcx+0x1],ecx
    23f8:	e6 00                	out    0x0,al
    23fa:	00 00                	add    BYTE PTR [rax],al
    23fc:	02 91 58 17 91 0a    	add    dl,BYTE PTR [rcx+0xa911758]
    2402:	00 00                	add    BYTE PTR [rax],al
    2404:	01 4b 01             	add    DWORD PTR [rbx+0x1],ecx
    2407:	e6 00                	out    0x0,al
    2409:	00 00                	add    BYTE PTR [rax],al
    240b:	02 91 48 18 76 61    	add    dl,BYTE PTR [rcx+0x61761848]
    2411:	6c                   	ins    BYTE PTR es:[rdi],dx
    2412:	00 01                	add    BYTE PTR [rcx],al
    2414:	54                   	push   rsp
    2415:	01 3d 03 00 00 03    	add    DWORD PTR [rip+0x3000003],edi        # 300241e <kernel_end+0x1fe6426>
    241b:	91                   	xchg   ecx,eax
    241c:	b8 7f 00 16 72       	mov    eax,0x7216007f
    2421:	0a 00                	or     al,BYTE PTR [rax]
    2423:	00 01                	add    BYTE PTR [rcx],al
    2425:	59                   	pop    rcx
    2426:	01 5b 01             	add    DWORD PTR [rbx+0x1],ebx
    2429:	00 00                	add    BYTE PTR [rax],al
    242b:	7f 9a                	jg     23c7 <MULTIBOOT_HEADER_SIZE+0x236f>
    242d:	00 01                	add    BYTE PTR [rcx],al
    242f:	00 00                	add    BYTE PTR [rax],al
    2431:	00 00                	add    BYTE PTR [rax],al
    2433:	60                   	(bad)  
    2434:	01 00                	add    DWORD PTR [rax],eax
    2436:	00 00                	add    BYTE PTR [rax],al
    2438:	00 00                	add    BYTE PTR [rax],al
    243a:	00 01                	add    BYTE PTR [rcx],al
    243c:	9c                   	pushf  
    243d:	20 06                	and    BYTE PTR [rsi],al
    243f:	00 00                	add    BYTE PTR [rax],al
    2441:	17                   	(bad)  
    2442:	44 04 00             	rex.R add al,0x0
    2445:	00 01                	add    BYTE PTR [rcx],al
    2447:	5b                   	pop    rbx
    2448:	01 5b 01             	add    DWORD PTR [rbx+0x1],ebx
    244b:	00 00                	add    BYTE PTR [rax],al
    244d:	02 91 6f 17 67 12    	add    dl,BYTE PTR [rcx+0x1267176f]
    2453:	00 00                	add    BYTE PTR [rax],al
    2455:	01 5c 01 e6          	add    DWORD PTR [rcx+rax*1-0x1a],ebx
    2459:	00 00                	add    BYTE PTR [rax],al
    245b:	00 02                	add    BYTE PTR [rdx],al
    245d:	91                   	xchg   ecx,eax
    245e:	58                   	pop    rax
    245f:	17                   	(bad)  
    2460:	17                   	(bad)  
    2461:	0a 00                	or     al,BYTE PTR [rax]
    2463:	00 01                	add    BYTE PTR [rcx],al
    2465:	65 01 3d 03 00 00 02 	add    DWORD PTR gs:[rip+0x2000003],edi        # 200246f <kernel_end+0xfe6477>
    246c:	91                   	xchg   ecx,eax
    246d:	48 17                	rex.W (bad) 
    246f:	1c 0a                	sbb    al,0xa
    2471:	00 00                	add    BYTE PTR [rax],al
    2473:	01 6a 01             	add    DWORD PTR [rdx+0x1],ebp
    2476:	20 06                	and    BYTE PTR [rsi],al
    2478:	00 00                	add    BYTE PTR [rax],al
    247a:	03 91 bc 7f 00 14    	add    edx,DWORD PTR [rcx+0x14007fbc]
    2480:	3b 00                	cmp    eax,DWORD PTR [rax]
    2482:	00 00                	add    BYTE PTR [rax],al
    2484:	30 06                	xor    BYTE PTR [rsi],al
    2486:	00 00                	add    BYTE PTR [rax],al
    2488:	15 7e 00 00 00       	adc    eax,0x7e
    248d:	02 00                	add    al,BYTE PTR [rax]
    248f:	16                   	(bad)  
    2490:	21 0a                	and    DWORD PTR [rdx],ecx
    2492:	00 00                	add    BYTE PTR [rax],al
    2494:	01 75 01             	add    DWORD PTR [rbp+0x1],esi
    2497:	5b                   	pop    rbx
    2498:	01 00                	add    DWORD PTR [rax],eax
    249a:	00 df                	add    bh,bl
    249c:	9b                   	fwait
    249d:	00 01                	add    BYTE PTR [rcx],al
    249f:	00 00                	add    BYTE PTR [rax],al
    24a1:	00 00                	add    BYTE PTR [rax],al
    24a3:	60                   	(bad)  
    24a4:	01 00                	add    DWORD PTR [rax],eax
    24a6:	00 00                	add    BYTE PTR [rax],al
    24a8:	00 00                	add    BYTE PTR [rax],al
    24aa:	00 01                	add    BYTE PTR [rcx],al
    24ac:	9c                   	pushf  
    24ad:	90                   	nop
    24ae:	06                   	(bad)  
    24af:	00 00                	add    BYTE PTR [rax],al
    24b1:	17                   	(bad)  
    24b2:	44 04 00             	rex.R add al,0x0
    24b5:	00 01                	add    BYTE PTR [rcx],al
    24b7:	77 01                	ja     24ba <MULTIBOOT_HEADER_SIZE+0x2462>
    24b9:	5b                   	pop    rbx
    24ba:	01 00                	add    DWORD PTR [rax],eax
    24bc:	00 02                	add    BYTE PTR [rdx],al
    24be:	91                   	xchg   ecx,eax
    24bf:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    24c0:	17                   	(bad)  
    24c1:	67 12 00             	adc    al,BYTE PTR [eax]
    24c4:	00 01                	add    BYTE PTR [rcx],al
    24c6:	78 01                	js     24c9 <MULTIBOOT_HEADER_SIZE+0x2471>
    24c8:	e6 00                	out    0x0,al
    24ca:	00 00                	add    BYTE PTR [rax],al
    24cc:	02 91 58 17 17 0a    	add    dl,BYTE PTR [rcx+0xa171758]
    24d2:	00 00                	add    BYTE PTR [rax],al
    24d4:	01 81 01 3d 03 00    	add    DWORD PTR [rcx+0x33d01],eax
    24da:	00 02                	add    BYTE PTR [rdx],al
    24dc:	91                   	xchg   ecx,eax
    24dd:	48 17                	rex.W (bad) 
    24df:	1c 0a                	sbb    al,0xa
    24e1:	00 00                	add    BYTE PTR [rax],al
    24e3:	01 86 01 20 06 00    	add    DWORD PTR [rsi+0x62001],eax
    24e9:	00 03                	add    BYTE PTR [rbx],al
    24eb:	91                   	xchg   ecx,eax
    24ec:	bc 7f 00 19 78       	mov    esp,0x7819007f
    24f1:	07                   	(bad)  
    24f2:	00 00                	add    BYTE PTR [rax],al
    24f4:	01 91 01 5b 01 00    	add    DWORD PTR [rcx+0x15b01],edx
    24fa:	00 3f                	add    BYTE PTR [rdi],bh
    24fc:	9d                   	popf   
    24fd:	00 01                	add    BYTE PTR [rcx],al
    24ff:	00 00                	add    BYTE PTR [rax],al
    2501:	00 00                	add    BYTE PTR [rax],al
    2503:	26 00 00             	add    BYTE PTR es:[rax],al
    2506:	00 00                	add    BYTE PTR [rax],al
    2508:	00 00                	add    BYTE PTR [rax],al
    250a:	00 01                	add    BYTE PTR [rcx],al
    250c:	9c                   	pushf  
    250d:	cd 06                	int    0x6
    250f:	00 00                	add    BYTE PTR [rax],al
    2511:	1a 61 00             	sbb    ah,BYTE PTR [rcx+0x0]
    2514:	01 91 01 e0 00 00    	add    DWORD PTR [rcx+0xe001],edx
    251a:	00 02                	add    BYTE PTR [rdx],al
    251c:	91                   	xchg   ecx,eax
    251d:	68 1a 62 00 01       	push   0x100621a
    2522:	91                   	xchg   ecx,eax
    2523:	01 e0                	add    eax,esp
    2525:	00 00                	add    BYTE PTR [rax],al
    2527:	00 02                	add    BYTE PTR [rdx],al
    2529:	91                   	xchg   ecx,eax
    252a:	60                   	(bad)  
    252b:	00 16                	add    BYTE PTR [rsi],dl
    252d:	2d 09 00 00 01       	sub    eax,0x1000009
    2532:	96                   	xchg   esi,eax
    2533:	01 5b 01             	add    DWORD PTR [rbx+0x1],ebx
    2536:	00 00                	add    BYTE PTR [rax],al
    2538:	65 9d                	gs popf 
    253a:	00 01                	add    BYTE PTR [rcx],al
    253c:	00 00                	add    BYTE PTR [rax],al
    253e:	00 00                	add    BYTE PTR [rax],al
    2540:	68 02 00 00 00       	push   0x2
    2545:	00 00                	add    BYTE PTR [rax],al
    2547:	00 01                	add    BYTE PTR [rcx],al
    2549:	9c                   	pushf  
    254a:	2c 07                	sub    al,0x7
    254c:	00 00                	add    BYTE PTR [rax],al
    254e:	17                   	(bad)  
    254f:	44 04 00             	rex.R add al,0x0
    2552:	00 01                	add    BYTE PTR [rcx],al
    2554:	98                   	cwde   
    2555:	01 5b 01             	add    DWORD PTR [rbx+0x1],ebx
    2558:	00 00                	add    BYTE PTR [rax],al
    255a:	02 91 6f 17 67 12    	add    dl,BYTE PTR [rcx+0x1267176f]
    2560:	00 00                	add    BYTE PTR [rax],al
    2562:	01 99 01 e6 00 00    	add    DWORD PTR [rcx+0xe601],ebx
    2568:	00 02                	add    BYTE PTR [rdx],al
    256a:	91                   	xchg   ecx,eax
    256b:	50                   	push   rax
    256c:	17                   	(bad)  
    256d:	17                   	(bad)  
    256e:	0a 00                	or     al,BYTE PTR [rax]
    2570:	00 01                	add    BYTE PTR [rcx],al
    2572:	a1 01 3d 03 00 00 02 	movabs eax,ds:0x4091020000033d01
    2579:	91 40 
    257b:	17                   	(bad)  
    257c:	74 06                	je     2584 <MULTIBOOT_HEADER_SIZE+0x252c>
    257e:	00 00                	add    BYTE PTR [rax],al
    2580:	01 ac 01 e0 00 00 00 	add    DWORD PTR [rcx+rax*1+0xe0],ebp
    2587:	02 91 60 00 1b f8    	add    dl,BYTE PTR [rcx-0x7e4ffa0]
    258d:	09 00                	or     DWORD PTR [rax],eax
    258f:	00 01                	add    BYTE PTR [rcx],al
    2591:	b6 01                	mov    dh,0x1
    2593:	cd 9f                	int    0x9f
    2595:	00 01                	add    BYTE PTR [rcx],al
    2597:	00 00                	add    BYTE PTR [rax],al
    2599:	00 00                	add    BYTE PTR [rax],al
    259b:	60                   	(bad)  
    259c:	01 00                	add    DWORD PTR [rax],eax
    259e:	00 00                	add    BYTE PTR [rax],al
    25a0:	00 00                	add    BYTE PTR [rax],al
    25a2:	00 01                	add    BYTE PTR [rcx],al
    25a4:	9c                   	pushf  
    25a5:	00 ea                	add    dl,ch
    25a7:	0c 00                	or     al,0x0
    25a9:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    25ac:	20 09                	and    BYTE PTR [rcx],cl
    25ae:	00 00                	add    BYTE PTR [rax],al
    25b0:	08 01                	or     BYTE PTR [rcx],al
    25b2:	27                   	(bad)  
    25b3:	00 00                	add    BYTE PTR [rax],al
    25b5:	00 0c 97             	add    BYTE PTR [rdi+rdx*4],cl
    25b8:	0a 00                	or     al,BYTE PTR [rax]
    25ba:	00 e5                	add    ch,ah
    25bc:	00 00                	add    BYTE PTR [rax],al
    25be:	00 2d a1 00 01 00    	add    BYTE PTR [rip+0x100a1],ch        # 12665 <MULTIBOOT_HEADER_SIZE+0x1260d>
    25c4:	00 00                	add    BYTE PTR [rax],al
    25c6:	00 b2 2f 00 00 00    	add    BYTE PTR [rdx+0x2f],dh
    25cc:	00 00                	add    BYTE PTR [rax],al
    25ce:	00 ee                	add    dh,ch
    25d0:	13 00                	adc    eax,DWORD PTR [rax]
    25d2:	00 02                	add    BYTE PTR [rdx],al
    25d4:	01 06                	add    DWORD PTR [rsi],eax
    25d6:	c6 00 00             	mov    BYTE PTR [rax],0x0
    25d9:	00 02                	add    BYTE PTR [rdx],al
    25db:	02 05 1c 01 00 00    	add    al,BYTE PTR [rip+0x11c]        # 26fd <MULTIBOOT_HEADER_SIZE+0x26a5>
    25e1:	03 30                	add    esi,DWORD PTR [rax]
    25e3:	11 00                	adc    DWORD PTR [rax],eax
    25e5:	00 02                	add    BYTE PTR [rdx],al
    25e7:	26 46 00 00          	rex.RX add BYTE PTR es:[rax],r8b
    25eb:	00 04 04             	add    BYTE PTR [rsp+rax*1],al
    25ee:	05 69 6e 74 00       	add    eax,0x746e69
    25f3:	02 08                	add    cl,BYTE PTR [rax]
    25f5:	05 13 01 00 00       	add    eax,0x113
    25fa:	02 01                	add    al,BYTE PTR [rcx]
    25fc:	08 c4                	or     ah,al
    25fe:	00 00                	add    BYTE PTR [rax],al
    2600:	00 02                	add    BYTE PTR [rdx],al
    2602:	02 07                	add    al,BYTE PTR [rdi]
    2604:	d2 00                	rol    BYTE PTR [rax],cl
    2606:	00 00                	add    BYTE PTR [rax],al
    2608:	03 2f                	add    ebp,DWORD PTR [rdi]
    260a:	11 00                	adc    DWORD PTR [rax],eax
    260c:	00 02                	add    BYTE PTR [rdx],al
    260e:	33 6d 00             	xor    ebp,DWORD PTR [rbp+0x0]
    2611:	00 00                	add    BYTE PTR [rax],al
    2613:	02 04 07             	add    al,BYTE PTR [rdi+rax*1]
    2616:	6a 10                	push   0x10
    2618:	00 00                	add    BYTE PTR [rax],al
    261a:	02 08                	add    cl,BYTE PTR [rax]
    261c:	07                   	(bad)  
    261d:	65 10 00             	adc    BYTE PTR gs:[rax],al
    2620:	00 02                	add    BYTE PTR [rdx],al
    2622:	08 05 0e 01 00 00    	or     BYTE PTR [rip+0x10e],al        # 2736 <MULTIBOOT_HEADER_SIZE+0x26de>
    2628:	02 10                	add    dl,BYTE PTR [rax]
    262a:	04 2e                	add    al,0x2e
    262c:	01 00                	add    DWORD PTR [rax],eax
    262e:	00 02                	add    BYTE PTR [rdx],al
    2630:	08 07                	or     BYTE PTR [rdi],al
    2632:	05 01 00 00 05       	add    eax,0x5000001
    2637:	01 04 00             	add    DWORD PTR [rax+rax*1],eax
    263a:	00 20                	add    BYTE PTR [rax],ah
    263c:	03 0b                	add    ecx,DWORD PTR [rbx]
    263e:	cd 00                	int    0x0
    2640:	00 00                	add    BYTE PTR [rax],al
    2642:	06                   	(bad)  
    2643:	22 03                	and    al,BYTE PTR [rbx]
    2645:	00 00                	add    BYTE PTR [rax],al
    2647:	03 0d cd 00 00 00    	add    ecx,DWORD PTR [rip+0xcd]        # 271a <MULTIBOOT_HEADER_SIZE+0x26c2>
    264d:	00 06                	add    BYTE PTR [rsi],al
    264f:	db 01                	fild   DWORD PTR [rcx]
    2651:	00 00                	add    BYTE PTR [rax],al
    2653:	03 0e                	add    ecx,DWORD PTR [rsi]
    2655:	cd 00                	int    0x0
    2657:	00 00                	add    BYTE PTR [rax],al
    2659:	08 06                	or     BYTE PTR [rsi],al
    265b:	8f 02                	pop    QWORD PTR [rdx]
    265d:	00 00                	add    BYTE PTR [rax],al
    265f:	03 0f                	add    ecx,DWORD PTR [rdi]
    2661:	cd 00                	int    0x0
    2663:	00 00                	add    BYTE PTR [rax],al
    2665:	10 06                	adc    BYTE PTR [rsi],al
    2667:	fa                   	cli    
    2668:	01 00                	add    DWORD PTR [rax],eax
    266a:	00 03                	add    BYTE PTR [rbx],al
    266c:	10 3b                	adc    BYTE PTR [rbx],bh
    266e:	00 00                	add    BYTE PTR [rax],al
    2670:	00 18                	add    BYTE PTR [rax],bl
    2672:	00 07                	add    BYTE PTR [rdi],al
    2674:	08 90 00 00 00 03    	or     BYTE PTR [rax+0x3000000],dl
    267a:	02 04 00             	add    al,BYTE PTR [rax+rax*1]
    267d:	00 03                	add    BYTE PTR [rbx],al
    267f:	11 90 00 00 00 08    	adc    DWORD PTR [rax+0x8000000],edx
    2685:	08 03                	or     BYTE PTR [rbx],al
    2687:	13 f3                	adc    esi,ebx
    2689:	00 00                	add    BYTE PTR [rax],al
    268b:	00 06                	add    BYTE PTR [rsi],al
    268d:	18 04 00             	sbb    BYTE PTR [rax+rax*1],al
    2690:	00 03                	add    BYTE PTR [rbx],al
    2692:	15 f3 00 00 00       	adc    eax,0xf3
    2697:	00 00                	add    BYTE PTR [rax],al
    2699:	07                   	(bad)  
    269a:	08 d3                	or     bl,dl
    269c:	00 00                	add    BYTE PTR [rax],al
    269e:	00 03                	add    BYTE PTR [rbx],al
    26a0:	65 02 00             	add    al,BYTE PTR gs:[rax]
    26a3:	00 03                	add    BYTE PTR [rbx],al
    26a5:	16                   	(bad)  
    26a6:	de 00                	fiadd  WORD PTR [rax]
    26a8:	00 00                	add    BYTE PTR [rax],al
    26aa:	08 28                	or     BYTE PTR [rax],ch
    26ac:	01 04 25 01 00 00 06 	add    DWORD PTR ds:0x6000001,eax
    26b3:	ee                   	out    dx,al
    26b4:	0a 00                	or     al,BYTE PTR [rax]
    26b6:	00 01                	add    BYTE PTR [rcx],al
    26b8:	06                   	(bad)  
    26b9:	d3 00                	rol    DWORD PTR [rax],cl
    26bb:	00 00                	add    BYTE PTR [rax],al
    26bd:	00 09                	add    BYTE PTR [rcx],cl
    26bf:	76 61                	jbe    2722 <MULTIBOOT_HEADER_SIZE+0x26ca>
    26c1:	6c                   	ins    BYTE PTR es:[rdi],dx
    26c2:	00 01                	add    BYTE PTR [rcx],al
    26c4:	07                   	(bad)  
    26c5:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    26c8:	00 20                	add    BYTE PTR [rax],ah
    26ca:	00 03                	add    BYTE PTR [rbx],al
    26cc:	a0 0b 00 00 01 08 04 	movabs al,ds:0x104080100000b
    26d3:	01 00 
    26d5:	00 0a                	add    BYTE PTR [rdx],cl
    26d7:	43 0c 00             	rex.XB or al,0x0
    26da:	00 01                	add    BYTE PTR [rcx],al
    26dc:	0a 6d 01             	or     ch,BYTE PTR [rbp+0x1]
    26df:	00 00                	add    BYTE PTR [rax],al
    26e1:	2d a1 00 01 00       	sub    eax,0x100a1
    26e6:	00 00                	add    BYTE PTR [rax],al
    26e8:	00 29                	add    BYTE PTR [rcx],ch
    26ea:	00 00                	add    BYTE PTR [rax],al
    26ec:	00 00                	add    BYTE PTR [rax],al
    26ee:	00 00                	add    BYTE PTR [rax],al
    26f0:	00 01                	add    BYTE PTR [rcx],al
    26f2:	9c                   	pushf  
    26f3:	6d                   	ins    DWORD PTR es:[rdi],dx
    26f4:	01 00                	add    DWORD PTR [rax],eax
    26f6:	00 0b                	add    BYTE PTR [rbx],cl
    26f8:	76 61                	jbe    275b <MULTIBOOT_HEADER_SIZE+0x2703>
    26fa:	6c                   	ins    BYTE PTR es:[rdi],dx
    26fb:	00 01                	add    BYTE PTR [rcx],al
    26fd:	0a 46 00             	or     al,BYTE PTR [rsi+0x0]
    2700:	00 00                	add    BYTE PTR [rax],al
    2702:	02 91 5c 0c 72 73    	add    dl,BYTE PTR [rcx+0x73720c5c]
    2708:	00 01                	add    BYTE PTR [rcx],al
    270a:	0c 6d                	or     al,0x6d
    270c:	01 00                	add    DWORD PTR [rax],eax
    270e:	00 02                	add    BYTE PTR [rdx],al
    2710:	91                   	xchg   ecx,eax
    2711:	68 00 07 08 25       	push   0x25080700
    2716:	01 00                	add    DWORD PTR [rax],eax
    2718:	00 0d a2 03 00 00    	add    BYTE PTR [rip+0x3a2],cl        # 2ac0 <MULTIBOOT_HEADER_SIZE+0x2a68>
    271e:	01 11                	add    DWORD PTR [rcx],edx
    2720:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    2723:	00 56 a1             	add    BYTE PTR [rsi-0x5f],dl
    2726:	00 01                	add    BYTE PTR [rcx],al
    2728:	00 00                	add    BYTE PTR [rax],al
    272a:	00 00                	add    BYTE PTR [rax],al
    272c:	34 00                	xor    al,0x0
    272e:	00 00                	add    BYTE PTR [rax],al
    2730:	00 00                	add    BYTE PTR [rax],al
    2732:	00 00                	add    BYTE PTR [rax],al
    2734:	01 9c cd 01 00 00 0e 	add    DWORD PTR [rbp+rcx*8+0xe000001],ebx
    273b:	18 04 00             	sbb    BYTE PTR [rax+rax*1],al
    273e:	00 01                	add    BYTE PTR [rcx],al
    2740:	11 f3                	adc    ebx,esi
    2742:	00 00                	add    BYTE PTR [rax],al
    2744:	00 02                	add    BYTE PTR [rdx],al
    2746:	91                   	xchg   ecx,eax
    2747:	58                   	pop    rax
    2748:	0e                   	(bad)  
    2749:	74 06                	je     2751 <MULTIBOOT_HEADER_SIZE+0x26f9>
    274b:	00 00                	add    BYTE PTR [rax],al
    274d:	01 11                	add    DWORD PTR [rcx],edx
    274f:	f3 00 00             	repz add BYTE PTR [rax],al
    2752:	00 02                	add    BYTE PTR [rdx],al
    2754:	91                   	xchg   ecx,eax
    2755:	50                   	push   rax
    2756:	0f c9                	bswap  ecx
    2758:	0c 00                	or     al,0x0
    275a:	00 01                	add    BYTE PTR [rcx],al
    275c:	13 6d 01             	adc    ebp,DWORD PTR [rbp+0x1]
    275f:	00 00                	add    BYTE PTR [rax],al
    2761:	02 91 68 0f cf 0c    	add    dl,BYTE PTR [rcx+0xccf0f68]
    2767:	00 00                	add    BYTE PTR [rax],al
    2769:	01 14 6d 01 00 00 02 	add    DWORD PTR [rbp*2+0x2000001],edx
    2770:	91                   	xchg   ecx,eax
    2771:	60                   	(bad)  
    2772:	00 0a                	add    BYTE PTR [rdx],cl
    2774:	28 0c 00             	sub    BYTE PTR [rax+rax*1],cl
    2777:	00 01                	add    BYTE PTR [rcx],al
    2779:	2b 35 02 00 00 8a    	sub    esi,DWORD PTR [rip+0xffffffff8a000002]        # ffffffff8a002781 <MULTIBOOT_CHECK_SUM+0x725278af>
    277f:	a1 00 01 00 00 00 00 	movabs eax,ds:0xef000000000100
    2786:	ef 00 
    2788:	00 00                	add    BYTE PTR [rax],al
    278a:	00 00                	add    BYTE PTR [rax],al
    278c:	00 00                	add    BYTE PTR [rax],al
    278e:	01 9c 35 02 00 00 0e 	add    DWORD PTR [rbp+rsi*1+0xe000002],ebx
    2795:	74 06                	je     279d <MULTIBOOT_HEADER_SIZE+0x2745>
    2797:	00 00                	add    BYTE PTR [rax],al
    2799:	01 2b                	add    DWORD PTR [rbx],ebp
    279b:	f3 00 00             	repz add BYTE PTR [rax],al
    279e:	00 02                	add    BYTE PTR [rdx],al
    27a0:	91                   	xchg   ecx,eax
    27a1:	58                   	pop    rax
    27a2:	0e                   	(bad)  
    27a3:	9a                   	(bad)  
    27a4:	0b 00                	or     eax,DWORD PTR [rax]
    27a6:	00 01                	add    BYTE PTR [rcx],al
    27a8:	2b 3c 02             	sub    edi,DWORD PTR [rdx+rax*1]
    27ab:	00 00                	add    BYTE PTR [rax],al
    27ad:	02 91 50 0e 30 03    	add    dl,BYTE PTR [rcx+0x3300e50]
    27b3:	00 00                	add    BYTE PTR [rax],al
    27b5:	01 2b                	add    DWORD PTR [rbx],ebp
    27b7:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    27ba:	00 02                	add    BYTE PTR [rdx],al
    27bc:	91                   	xchg   ecx,eax
    27bd:	4c 0f 44 04 00       	cmove  r8,QWORD PTR [rax+rax*1]
    27c2:	00 01                	add    BYTE PTR [rcx],al
    27c4:	32 35 02 00 00 02    	xor    dh,BYTE PTR [rip+0x2000002]        # 20027cc <kernel_end+0xfe67d4>
    27ca:	91                   	xchg   ecx,eax
    27cb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    27cc:	0f ae 0b             	fxrstor [rbx]
    27cf:	00 00                	add    BYTE PTR [rax],al
    27d1:	01 33                	add    DWORD PTR [rbx],esi
    27d3:	6d                   	ins    DWORD PTR es:[rdi],dx
    27d4:	01 00                	add    DWORD PTR [rax],eax
    27d6:	00 02                	add    BYTE PTR [rdx],al
    27d8:	91                   	xchg   ecx,eax
    27d9:	60                   	(bad)  
    27da:	00 02                	add    BYTE PTR [rdx],al
    27dc:	01 02                	add    DWORD PTR [rdx],eax
    27de:	35 03 00 00 07       	xor    eax,0x7000003
    27e3:	08 46 00             	or     BYTE PTR [rsi+0x0],al
    27e6:	00 00                	add    BYTE PTR [rax],al
    27e8:	0a 29                	or     ch,BYTE PTR [rcx]
    27ea:	0c 00                	or     al,0x0
    27ec:	00 01                	add    BYTE PTR [rcx],al
    27ee:	3e 35 02 00 00 79    	ds xor eax,0x79000002
    27f4:	a2 00 01 00 00 00 00 	movabs ds:0x38000000000100,al
    27fb:	38 00 
    27fd:	00 00                	add    BYTE PTR [rax],al
    27ff:	00 00                	add    BYTE PTR [rax],al
    2801:	00 00                	add    BYTE PTR [rax],al
    2803:	01 9c 8e 02 00 00 0e 	add    DWORD PTR [rsi+rcx*4+0xe000002],ebx
    280a:	74 06                	je     2812 <MULTIBOOT_HEADER_SIZE+0x27ba>
    280c:	00 00                	add    BYTE PTR [rax],al
    280e:	01 3e                	add    DWORD PTR [rsi],edi
    2810:	8e 02                	mov    es,WORD PTR [rdx]
    2812:	00 00                	add    BYTE PTR [rax],al
    2814:	02 91 68 0e 9a 0b    	add    dl,BYTE PTR [rcx+0xb9a0e68]
    281a:	00 00                	add    BYTE PTR [rax],al
    281c:	01 3e                	add    DWORD PTR [rsi],edi
    281e:	3c 02                	cmp    al,0x2
    2820:	00 00                	add    BYTE PTR [rax],al
    2822:	02 91 60 0e 30 03    	add    dl,BYTE PTR [rcx+0x3300e60]
    2828:	00 00                	add    BYTE PTR [rax],al
    282a:	01 3e                	add    DWORD PTR [rsi],edi
    282c:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    282f:	00 02                	add    BYTE PTR [rdx],al
    2831:	91                   	xchg   ecx,eax
    2832:	5c                   	pop    rsp
    2833:	00 07                	add    BYTE PTR [rdi],al
    2835:	08 f9                	or     cl,bh
    2837:	00 00                	add    BYTE PTR [rax],al
    2839:	00 10                	add    BYTE PTR [rax],dl
    283b:	98                   	cwde   
    283c:	0c 00                	or     al,0x0
    283e:	00 01                	add    BYTE PTR [rcx],al
    2840:	46 35 02 00 00 b1    	rex.RX xor eax,0xb1000002
    2846:	a2 00 01 00 00 00 00 	movabs ds:0x134000000000100,al
    284d:	34 01 
    284f:	00 00                	add    BYTE PTR [rax],al
    2851:	00 00                	add    BYTE PTR [rax],al
    2853:	00 00                	add    BYTE PTR [rax],al
    2855:	01 9c ee 02 00 00 0f 	add    DWORD PTR [rsi+rbp*8+0xf000002],ebx
    285c:	44 04 00             	rex.R add al,0x0
    285f:	00 01                	add    BYTE PTR [rcx],al
    2861:	4e 35 02 00 00 02    	rex.WRX xor rax,0x2000002
    2867:	91                   	xchg   ecx,eax
    2868:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2869:	0f e1 02             	psraw  mm0,QWORD PTR [rdx]
    286c:	00 00                	add    BYTE PTR [rax],al
    286e:	01 4f f9             	add    DWORD PTR [rdi-0x7],ecx
    2871:	00 00                	add    BYTE PTR [rax],al
    2873:	00 02                	add    BYTE PTR [rdx],al
    2875:	91                   	xchg   ecx,eax
    2876:	60                   	(bad)  
    2877:	0f 17 0a             	movhps QWORD PTR [rdx],xmm1
    287a:	00 00                	add    BYTE PTR [rax],al
    287c:	01 54 ee 02          	add    DWORD PTR [rsi+rbp*8+0x2],edx
    2880:	00 00                	add    BYTE PTR [rax],al
    2882:	02 91 58 0f 1c 0a    	add    dl,BYTE PTR [rcx+0xa1c0f58]
    2888:	00 00                	add    BYTE PTR [rax],al
    288a:	01 59 fe             	add    DWORD PTR [rcx-0x2],ebx
    288d:	02 00                	add    al,BYTE PTR [rax]
    288f:	00 02                	add    BYTE PTR [rdx],al
    2891:	91                   	xchg   ecx,eax
    2892:	4c 00 11             	rex.WR add BYTE PTR [rcx],r10b
    2895:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    2898:	00 fe                	add    dh,bh
    289a:	02 00                	add    al,BYTE PTR [rax]
    289c:	00 12                	add    BYTE PTR [rdx],dl
    289e:	89 00                	mov    DWORD PTR [rax],eax
    28a0:	00 00                	add    BYTE PTR [rax],al
    28a2:	01 00                	add    DWORD PTR [rax],eax
    28a4:	11 46 00             	adc    DWORD PTR [rsi+0x0],eax
    28a7:	00 00                	add    BYTE PTR [rax],al
    28a9:	0e                   	(bad)  
    28aa:	03 00                	add    eax,DWORD PTR [rax]
    28ac:	00 12                	add    BYTE PTR [rdx],dl
    28ae:	89 00                	mov    DWORD PTR [rax],eax
    28b0:	00 00                	add    BYTE PTR [rax],al
    28b2:	02 00                	add    al,BYTE PTR [rax]
    28b4:	10 a8 0c 00 00 01    	adc    BYTE PTR [rax+0x100000c],ch
    28ba:	5e                   	pop    rsi
    28bb:	35 02 00 00 e5       	xor    eax,0xe5000002
    28c0:	a3 00 01 00 00 00 00 	movabs ds:0x134000000000100,eax
    28c7:	34 01 
    28c9:	00 00                	add    BYTE PTR [rax],al
    28cb:	00 00                	add    BYTE PTR [rax],al
    28cd:	00 00                	add    BYTE PTR [rax],al
    28cf:	01 9c 68 03 00 00 0f 	add    DWORD PTR [rax+rbp*2+0xf000003],ebx
    28d6:	44 04 00             	rex.R add al,0x0
    28d9:	00 01                	add    BYTE PTR [rcx],al
    28db:	66 35 02 00          	xor    ax,0x2
    28df:	00 02                	add    BYTE PTR [rdx],al
    28e1:	91                   	xchg   ecx,eax
    28e2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    28e3:	0f e1 02             	psraw  mm0,QWORD PTR [rdx]
    28e6:	00 00                	add    BYTE PTR [rax],al
    28e8:	01 67 f9             	add    DWORD PTR [rdi-0x7],esp
    28eb:	00 00                	add    BYTE PTR [rax],al
    28ed:	00 02                	add    BYTE PTR [rdx],al
    28ef:	91                   	xchg   ecx,eax
    28f0:	60                   	(bad)  
    28f1:	0f 17 0a             	movhps QWORD PTR [rdx],xmm1
    28f4:	00 00                	add    BYTE PTR [rax],al
    28f6:	01 6c ee 02          	add    DWORD PTR [rsi+rbp*8+0x2],ebp
    28fa:	00 00                	add    BYTE PTR [rax],al
    28fc:	02 91 58 0f 1c 0a    	add    dl,BYTE PTR [rcx+0xa1c0f58]
    2902:	00 00                	add    BYTE PTR [rax],al
    2904:	01 71 fe             	add    DWORD PTR [rcx-0x2],esi
    2907:	02 00                	add    al,BYTE PTR [rax]
    2909:	00 02                	add    BYTE PTR [rdx],al
    290b:	91                   	xchg   ecx,eax
    290c:	4c 00 10             	rex.WR add BYTE PTR [rax],r10b
    290f:	17                   	(bad)  
    2910:	0c 00                	or     al,0x0
    2912:	00 01                	add    BYTE PTR [rcx],al
    2914:	76 35                	jbe    294b <MULTIBOOT_HEADER_SIZE+0x28f3>
    2916:	02 00                	add    al,BYTE PTR [rax]
    2918:	00 19                	add    BYTE PTR [rcx],bl
    291a:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    291b:	00 01                	add    BYTE PTR [rcx],al
    291d:	00 00                	add    BYTE PTR [rax],al
    291f:	00 00                	add    BYTE PTR [rax],al
    2921:	34 01                	xor    al,0x1
    2923:	00 00                	add    BYTE PTR [rax],al
    2925:	00 00                	add    BYTE PTR [rax],al
    2927:	00 00                	add    BYTE PTR [rax],al
    2929:	01 9c c2 03 00 00 0f 	add    DWORD PTR [rdx+rax*8+0xf000003],ebx
    2930:	44 04 00             	rex.R add al,0x0
    2933:	00 01                	add    BYTE PTR [rcx],al
    2935:	7d 35                	jge    296c <MULTIBOOT_HEADER_SIZE+0x2914>
    2937:	02 00                	add    al,BYTE PTR [rax]
    2939:	00 02                	add    BYTE PTR [rdx],al
    293b:	91                   	xchg   ecx,eax
    293c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    293d:	0f e1 02             	psraw  mm0,QWORD PTR [rdx]
    2940:	00 00                	add    BYTE PTR [rax],al
    2942:	01 7e f9             	add    DWORD PTR [rsi-0x7],edi
    2945:	00 00                	add    BYTE PTR [rax],al
    2947:	00 02                	add    BYTE PTR [rdx],al
    2949:	91                   	xchg   ecx,eax
    294a:	60                   	(bad)  
    294b:	0f 17 0a             	movhps QWORD PTR [rdx],xmm1
    294e:	00 00                	add    BYTE PTR [rax],al
    2950:	01 83 ee 02 00 00    	add    DWORD PTR [rbx+0x2ee],eax
    2956:	02 91 58 0f 1c 0a    	add    dl,BYTE PTR [rcx+0xa1c0f58]
    295c:	00 00                	add    BYTE PTR [rax],al
    295e:	01 88 fe 02 00 00    	add    DWORD PTR [rax+0x2fe],ecx
    2964:	02 91 4c 00 10 75    	add    dl,BYTE PTR [rcx+0x7510004c]
    296a:	0c 00                	or     al,0x0
    296c:	00 01                	add    BYTE PTR [rcx],al
    296e:	8d 35 02 00 00 4d    	lea    esi,[rip+0x4d000002]        # 4d002976 <MULTIBOOT_LOADED_MAGIC+0x1628c6ed>
    2974:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    2975:	00 01                	add    BYTE PTR [rcx],al
    2977:	00 00                	add    BYTE PTR [rax],al
    2979:	00 00                	add    BYTE PTR [rax],al
    297b:	34 01                	xor    al,0x1
    297d:	00 00                	add    BYTE PTR [rax],al
    297f:	00 00                	add    BYTE PTR [rax],al
    2981:	00 00                	add    BYTE PTR [rax],al
    2983:	01 9c 1c 04 00 00 0f 	add    DWORD PTR [rsp+rbx*1+0xf000004],ebx
    298a:	44 04 00             	rex.R add al,0x0
    298d:	00 01                	add    BYTE PTR [rcx],al
    298f:	94                   	xchg   esp,eax
    2990:	35 02 00 00 02       	xor    eax,0x2000002
    2995:	91                   	xchg   ecx,eax
    2996:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2997:	0f e1 02             	psraw  mm0,QWORD PTR [rdx]
    299a:	00 00                	add    BYTE PTR [rax],al
    299c:	01 95 f9 00 00 00    	add    DWORD PTR [rbp+0xf9],edx
    29a2:	02 91 60 0f 17 0a    	add    dl,BYTE PTR [rcx+0xa170f60]
    29a8:	00 00                	add    BYTE PTR [rax],al
    29aa:	01 9a ee 02 00 00    	add    DWORD PTR [rdx+0x2ee],ebx
    29b0:	02 91 58 0f 1c 0a    	add    dl,BYTE PTR [rcx+0xa1c0f58]
    29b6:	00 00                	add    BYTE PTR [rax],al
    29b8:	01 9f fe 02 00 00    	add    DWORD PTR [rdi+0x2fe],ebx
    29be:	02 91 4c 00 10 c1    	add    dl,BYTE PTR [rcx-0x3eefffb4]
    29c4:	0b 00                	or     eax,DWORD PTR [rax]
    29c6:	00 01                	add    BYTE PTR [rcx],al
    29c8:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    29c9:	35 02 00 00 81       	xor    eax,0x81000002
    29ce:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    29cf:	00 01                	add    BYTE PTR [rcx],al
    29d1:	00 00                	add    BYTE PTR [rax],al
    29d3:	00 00                	add    BYTE PTR [rax],al
    29d5:	c1 01 00             	rol    DWORD PTR [rcx],0x0
    29d8:	00 00                	add    BYTE PTR [rax],al
    29da:	00 00                	add    BYTE PTR [rax],al
    29dc:	00 01                	add    BYTE PTR [rcx],al
    29de:	9c                   	pushf  
    29df:	77 04                	ja     29e5 <MULTIBOOT_HEADER_SIZE+0x298d>
    29e1:	00 00                	add    BYTE PTR [rax],al
    29e3:	0f 44 04 00          	cmove  eax,DWORD PTR [rax+rax*1]
    29e7:	00 01                	add    BYTE PTR [rcx],al
    29e9:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    29ea:	35 02 00 00 02       	xor    eax,0x2000002
    29ef:	91                   	xchg   ecx,eax
    29f0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    29f1:	0f e1 02             	psraw  mm0,QWORD PTR [rdx]
    29f4:	00 00                	add    BYTE PTR [rax],al
    29f6:	01 ae f9 00 00 00    	add    DWORD PTR [rsi+0xf9],ebp
    29fc:	02 91 60 0f 17 0a    	add    dl,BYTE PTR [rcx+0xa170f60]
    2a02:	00 00                	add    BYTE PTR [rax],al
    2a04:	01 b6 77 04 00 00    	add    DWORD PTR [rsi+0x477],esi
    2a0a:	02 91 4c 0f 1c 0a    	add    dl,BYTE PTR [rcx+0xa1c0f4c]
    2a10:	00 00                	add    BYTE PTR [rax],al
    2a12:	01 bb 87 04 00 00    	add    DWORD PTR [rbx+0x487],edi
    2a18:	03 91 b4 7f 00 11    	add    edx,DWORD PTR [rcx+0x11007fb4]
    2a1e:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    2a21:	00 87 04 00 00 12    	add    BYTE PTR [rdi+0x12000004],al
    2a27:	89 00                	mov    DWORD PTR [rax],eax
    2a29:	00 00                	add    BYTE PTR [rax],al
    2a2b:	04 00                	add    al,0x0
    2a2d:	11 46 00             	adc    DWORD PTR [rsi+0x0],eax
    2a30:	00 00                	add    BYTE PTR [rax],al
    2a32:	97                   	xchg   edi,eax
    2a33:	04 00                	add    al,0x0
    2a35:	00 12                	add    BYTE PTR [rdx],dl
    2a37:	89 00                	mov    DWORD PTR [rax],eax
    2a39:	00 00                	add    BYTE PTR [rax],al
    2a3b:	05 00 10 d2 0b       	add    eax,0xbd21000
    2a40:	00 00                	add    BYTE PTR [rax],al
    2a42:	01 c0                	add    eax,eax
    2a44:	35 02 00 00 42       	xor    eax,0x42000002
    2a49:	a9 00 01 00 00       	test   eax,0x100
    2a4e:	00 00                	add    BYTE PTR [rax],al
    2a50:	c1 01 00             	rol    DWORD PTR [rcx],0x0
    2a53:	00 00                	add    BYTE PTR [rax],al
    2a55:	00 00                	add    BYTE PTR [rax],al
    2a57:	00 01                	add    BYTE PTR [rcx],al
    2a59:	9c                   	pushf  
    2a5a:	f2 04 00             	repnz add al,0x0
    2a5d:	00 0f                	add    BYTE PTR [rdi],cl
    2a5f:	44 04 00             	rex.R add al,0x0
    2a62:	00 01                	add    BYTE PTR [rcx],al
    2a64:	c9                   	leave  
    2a65:	35 02 00 00 02       	xor    eax,0x2000002
    2a6a:	91                   	xchg   ecx,eax
    2a6b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2a6c:	0f e1 02             	psraw  mm0,QWORD PTR [rdx]
    2a6f:	00 00                	add    BYTE PTR [rax],al
    2a71:	01 ca                	add    edx,ecx
    2a73:	f9                   	stc    
    2a74:	00 00                	add    BYTE PTR [rax],al
    2a76:	00 02                	add    BYTE PTR [rdx],al
    2a78:	91                   	xchg   ecx,eax
    2a79:	60                   	(bad)  
    2a7a:	0f 17 0a             	movhps QWORD PTR [rdx],xmm1
    2a7d:	00 00                	add    BYTE PTR [rax],al
    2a7f:	01 d2                	add    edx,edx
    2a81:	77 04                	ja     2a87 <MULTIBOOT_HEADER_SIZE+0x2a2f>
    2a83:	00 00                	add    BYTE PTR [rax],al
    2a85:	02 91 4c 0f 1c 0a    	add    dl,BYTE PTR [rcx+0xa1c0f4c]
    2a8b:	00 00                	add    BYTE PTR [rax],al
    2a8d:	01 d7                	add    edi,edx
    2a8f:	87 04 00             	xchg   DWORD PTR [rax+rax*1],eax
    2a92:	00 03                	add    BYTE PTR [rbx],al
    2a94:	91                   	xchg   ecx,eax
    2a95:	b4 7f                	mov    ah,0x7f
    2a97:	00 10                	add    BYTE PTR [rax],dl
    2a99:	e3 0b                	jrcxz  2aa6 <MULTIBOOT_HEADER_SIZE+0x2a4e>
    2a9b:	00 00                	add    BYTE PTR [rax],al
    2a9d:	01 dc                	add    esp,ebx
    2a9f:	35 02 00 00 03       	xor    eax,0x3000002
    2aa4:	ab                   	stos   DWORD PTR es:[rdi],eax
    2aa5:	00 01                	add    BYTE PTR [rcx],al
    2aa7:	00 00                	add    BYTE PTR [rax],al
    2aa9:	00 00                	add    BYTE PTR [rax],al
    2aab:	ac                   	lods   al,BYTE PTR ds:[rsi]
    2aac:	02 00                	add    al,BYTE PTR [rax]
    2aae:	00 00                	add    BYTE PTR [rax],al
    2ab0:	00 00                	add    BYTE PTR [rax],al
    2ab2:	00 01                	add    BYTE PTR [rcx],al
    2ab4:	9c                   	pushf  
    2ab5:	4e 05 00 00 0f 44    	rex.WRX add rax,0x440f0000
    2abb:	04 00                	add    al,0x0
    2abd:	00 01                	add    BYTE PTR [rcx],al
    2abf:	e7 35                	out    0x35,eax
    2ac1:	02 00                	add    al,BYTE PTR [rax]
    2ac3:	00 02                	add    BYTE PTR [rdx],al
    2ac5:	91                   	xchg   ecx,eax
    2ac6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2ac7:	0f e1 02             	psraw  mm0,QWORD PTR [rdx]
    2aca:	00 00                	add    BYTE PTR [rax],al
    2acc:	01 e8                	add    eax,ebp
    2ace:	f9                   	stc    
    2acf:	00 00                	add    BYTE PTR [rax],al
    2ad1:	00 02                	add    BYTE PTR [rdx],al
    2ad3:	91                   	xchg   ecx,eax
    2ad4:	60                   	(bad)  
    2ad5:	0f 17 0a             	movhps QWORD PTR [rdx],xmm1
    2ad8:	00 00                	add    BYTE PTR [rax],al
    2ada:	01 f5                	add    ebp,esi
    2adc:	4e 05 00 00 03 91    	rex.WRX add rax,0xffffffff91030000
    2ae2:	b8 7f 0f 1c 0a       	mov    eax,0xa1c0f7f
    2ae7:	00 00                	add    BYTE PTR [rax],al
    2ae9:	01 fa                	add    edx,edi
    2aeb:	5e                   	pop    rsi
    2aec:	05 00 00 03 91       	add    eax,0x91030000
    2af1:	8c 7f 00             	mov    WORD PTR [rdi+0x0],?
    2af4:	11 46 00             	adc    DWORD PTR [rsi+0x0],eax
    2af7:	00 00                	add    BYTE PTR [rax],al
    2af9:	5e                   	pop    rsi
    2afa:	05 00 00 12 89       	add    eax,0x89120000
    2aff:	00 00                	add    BYTE PTR [rax],al
    2b01:	00 09                	add    BYTE PTR [rcx],cl
    2b03:	00 11                	add    BYTE PTR [rcx],dl
    2b05:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    2b08:	00 6e 05             	add    BYTE PTR [rsi+0x5],ch
    2b0b:	00 00                	add    BYTE PTR [rax],al
    2b0d:	12 89 00 00 00 0a    	adc    cl,BYTE PTR [rcx+0xa000000]
    2b13:	00 10                	add    BYTE PTR [rax],dl
    2b15:	f4                   	hlt    
    2b16:	0b 00                	or     eax,DWORD PTR [rax]
    2b18:	00 01                	add    BYTE PTR [rcx],al
    2b1a:	ff 35 02 00 00 af    	push   QWORD PTR [rip+0xffffffffaf000002]        # ffffffffaf002b22 <MULTIBOOT_CHECK_SUM+0x97527c50>
    2b20:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    2b21:	00 01                	add    BYTE PTR [rcx],al
    2b23:	00 00                	add    BYTE PTR [rax],al
    2b25:	00 00                	add    BYTE PTR [rax],al
    2b27:	ac                   	lods   al,BYTE PTR ds:[rsi]
    2b28:	02 00                	add    al,BYTE PTR [rax]
    2b2a:	00 00                	add    BYTE PTR [rax],al
    2b2c:	00 00                	add    BYTE PTR [rax],al
    2b2e:	00 01                	add    BYTE PTR [rcx],al
    2b30:	9c                   	pushf  
    2b31:	ce                   	(bad)  
    2b32:	05 00 00 13 44       	add    eax,0x44130000
    2b37:	04 00                	add    al,0x0
    2b39:	00 01                	add    BYTE PTR [rcx],al
    2b3b:	0a 01                	or     al,BYTE PTR [rcx]
    2b3d:	35 02 00 00 02       	xor    eax,0x2000002
    2b42:	91                   	xchg   ecx,eax
    2b43:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2b44:	13 e1                	adc    esp,ecx
    2b46:	02 00                	add    al,BYTE PTR [rax]
    2b48:	00 01                	add    BYTE PTR [rcx],al
    2b4a:	0b 01                	or     eax,DWORD PTR [rcx]
    2b4c:	f9                   	stc    
    2b4d:	00 00                	add    BYTE PTR [rax],al
    2b4f:	00 02                	add    BYTE PTR [rdx],al
    2b51:	91                   	xchg   ecx,eax
    2b52:	60                   	(bad)  
    2b53:	13 17                	adc    edx,DWORD PTR [rdi]
    2b55:	0a 00                	or     al,BYTE PTR [rax]
    2b57:	00 01                	add    BYTE PTR [rcx],al
    2b59:	18 01                	sbb    BYTE PTR [rcx],al
    2b5b:	4e 05 00 00 03 91    	rex.WRX add rax,0xffffffff91030000
    2b61:	b8 7f 13 1c 0a       	mov    eax,0xa1c137f
    2b66:	00 00                	add    BYTE PTR [rax],al
    2b68:	01 1d 01 5e 05 00    	add    DWORD PTR [rip+0x55e01],ebx        # 5896f <MULTIBOOT_HEADER_SIZE+0x58917>
    2b6e:	00 03                	add    BYTE PTR [rbx],al
    2b70:	91                   	xchg   ecx,eax
    2b71:	8c 7f 00             	mov    WORD PTR [rdi+0x0],?
    2b74:	14 d4                	adc    al,0xd4
    2b76:	0a 00                	or     al,BYTE PTR [rax]
    2b78:	00 01                	add    BYTE PTR [rcx],al
    2b7a:	22 01                	and    al,BYTE PTR [rcx]
    2b7c:	35 02 00 00 5b       	xor    eax,0x5b000002
    2b81:	b0 00                	mov    al,0x0
    2b83:	01 00                	add    DWORD PTR [rax],eax
    2b85:	00 00                	add    BYTE PTR [rax],al
    2b87:	00 c2                	add    dl,al
    2b89:	02 00                	add    al,BYTE PTR [rax]
    2b8b:	00 00                	add    BYTE PTR [rax],al
    2b8d:	00 00                	add    BYTE PTR [rax],al
    2b8f:	00 01                	add    BYTE PTR [rcx],al
    2b91:	9c                   	pushf  
    2b92:	1f                   	(bad)  
    2b93:	06                   	(bad)  
    2b94:	00 00                	add    BYTE PTR [rax],al
    2b96:	13 44 04 00          	adc    eax,DWORD PTR [rsp+rax*1+0x0]
    2b9a:	00 01                	add    BYTE PTR [rcx],al
    2b9c:	2d 01 35 02 00       	sub    eax,0x23501
    2ba1:	00 02                	add    BYTE PTR [rdx],al
    2ba3:	91                   	xchg   ecx,eax
    2ba4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2ba5:	13 e1                	adc    esp,ecx
    2ba7:	02 00                	add    al,BYTE PTR [rax]
    2ba9:	00 01                	add    BYTE PTR [rcx],al
    2bab:	2e 01 f9             	cs add ecx,edi
    2bae:	00 00                	add    BYTE PTR [rax],al
    2bb0:	00 02                	add    BYTE PTR [rdx],al
    2bb2:	91                   	xchg   ecx,eax
    2bb3:	60                   	(bad)  
    2bb4:	13 17                	adc    edx,DWORD PTR [rdi]
    2bb6:	0a 00                	or     al,BYTE PTR [rax]
    2bb8:	00 01                	add    BYTE PTR [rcx],al
    2bba:	3b 01                	cmp    eax,DWORD PTR [rcx]
    2bbc:	4e 05 00 00 03 91    	rex.WRX add rax,0xffffffff91030000
    2bc2:	b8 7f 00 14 58       	mov    eax,0x5814007f
    2bc7:	0b 00                	or     eax,DWORD PTR [rax]
    2bc9:	00 01                	add    BYTE PTR [rcx],al
    2bcb:	48 01 35 02 00 00 1d 	add    QWORD PTR [rip+0x1d000002],rsi        # 1d002bd4 <kernel_end+0x1bfe6bdc>
    2bd2:	b3 00                	mov    bl,0x0
    2bd4:	01 00                	add    DWORD PTR [rax],eax
    2bd6:	00 00                	add    BYTE PTR [rax],al
    2bd8:	00 80 01 00 00 00    	add    BYTE PTR [rax+0x1],al
    2bde:	00 00                	add    BYTE PTR [rax],al
    2be0:	00 01                	add    BYTE PTR [rcx],al
    2be2:	9c                   	pushf  
    2be3:	8e 06                	mov    es,WORD PTR [rsi]
    2be5:	00 00                	add    BYTE PTR [rax],al
    2be7:	13 44 04 00          	adc    eax,DWORD PTR [rsp+rax*1+0x0]
    2beb:	00 01                	add    BYTE PTR [rcx],al
    2bed:	50                   	push   rax
    2bee:	01 35 02 00 00 02    	add    DWORD PTR [rip+0x2000002],esi        # 2002bf6 <kernel_end+0xfe6bfe>
    2bf4:	91                   	xchg   ecx,eax
    2bf5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2bf6:	13 e1                	adc    esp,ecx
    2bf8:	02 00                	add    al,BYTE PTR [rax]
    2bfa:	00 01                	add    BYTE PTR [rcx],al
    2bfc:	51                   	push   rcx
    2bfd:	01 f9                	add    ecx,edi
    2bff:	00 00                	add    BYTE PTR [rax],al
    2c01:	00 02                	add    BYTE PTR [rdx],al
    2c03:	91                   	xchg   ecx,eax
    2c04:	58                   	pop    rax
    2c05:	13 b2 0a 00 00 01    	adc    esi,DWORD PTR [rdx+0x100000a]
    2c0b:	54                   	push   rsp
    2c0c:	01 6d 01             	add    DWORD PTR [rbp+0x1],ebp
    2c0f:	00 00                	add    BYTE PTR [rax],al
    2c11:	02 91 60 13 17 0a    	add    dl,BYTE PTR [rcx+0xa171360]
    2c17:	00 00                	add    BYTE PTR [rax],al
    2c19:	01 5a 01             	add    DWORD PTR [rdx+0x1],ebx
    2c1c:	8e 06                	mov    es,WORD PTR [rsi]
    2c1e:	00 00                	add    BYTE PTR [rax],al
    2c20:	02 91 48 13 1c 0a    	add    dl,BYTE PTR [rcx+0xa1c1348]
    2c26:	00 00                	add    BYTE PTR [rax],al
    2c28:	01 5f 01             	add    DWORD PTR [rdi+0x1],ebx
    2c2b:	fe 02                	inc    BYTE PTR [rdx]
    2c2d:	00 00                	add    BYTE PTR [rax],al
    2c2f:	03 91 bc 7f 00 11    	add    edx,DWORD PTR [rcx+0x11007fbc]
    2c35:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    2c38:	00 9e 06 00 00 12    	add    BYTE PTR [rsi+0x12000006],bl
    2c3e:	89 00                	mov    DWORD PTR [rax],eax
    2c40:	00 00                	add    BYTE PTR [rax],al
    2c42:	03 00                	add    eax,DWORD PTR [rax]
    2c44:	14 79                	adc    al,0x79
    2c46:	0b 00                	or     eax,DWORD PTR [rax]
    2c48:	00 01                	add    BYTE PTR [rcx],al
    2c4a:	64 01 35 02 00 00 9d 	add    DWORD PTR fs:[rip+0xffffffff9d000002],esi        # ffffffff9d002c53 <MULTIBOOT_CHECK_SUM+0x85527d81>
    2c51:	b4 00                	mov    ah,0x0
    2c53:	01 00                	add    DWORD PTR [rax],eax
    2c55:	00 00                	add    BYTE PTR [rax],al
    2c57:	00 80 01 00 00 00    	add    BYTE PTR [rax+0x1],al
    2c5d:	00 00                	add    BYTE PTR [rax],al
    2c5f:	00 01                	add    BYTE PTR [rcx],al
    2c61:	9c                   	pushf  
    2c62:	0d 07 00 00 13       	or     eax,0x13000007
    2c67:	44 04 00             	rex.R add al,0x0
    2c6a:	00 01                	add    BYTE PTR [rcx],al
    2c6c:	6c                   	ins    BYTE PTR es:[rdi],dx
    2c6d:	01 35 02 00 00 02    	add    DWORD PTR [rip+0x2000002],esi        # 2002c75 <kernel_end+0xfe6c7d>
    2c73:	91                   	xchg   ecx,eax
    2c74:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2c75:	13 e1                	adc    esp,ecx
    2c77:	02 00                	add    al,BYTE PTR [rax]
    2c79:	00 01                	add    BYTE PTR [rcx],al
    2c7b:	6d                   	ins    DWORD PTR es:[rdi],dx
    2c7c:	01 f9                	add    ecx,edi
    2c7e:	00 00                	add    BYTE PTR [rax],al
    2c80:	00 02                	add    BYTE PTR [rdx],al
    2c82:	91                   	xchg   ecx,eax
    2c83:	58                   	pop    rax
    2c84:	13 b2 0a 00 00 01    	adc    esi,DWORD PTR [rdx+0x100000a]
    2c8a:	70 01                	jo     2c8d <MULTIBOOT_HEADER_SIZE+0x2c35>
    2c8c:	6d                   	ins    DWORD PTR es:[rdi],dx
    2c8d:	01 00                	add    DWORD PTR [rax],eax
    2c8f:	00 02                	add    BYTE PTR [rdx],al
    2c91:	91                   	xchg   ecx,eax
    2c92:	60                   	(bad)  
    2c93:	13 17                	adc    edx,DWORD PTR [rdi]
    2c95:	0a 00                	or     al,BYTE PTR [rax]
    2c97:	00 01                	add    BYTE PTR [rcx],al
    2c99:	76 01                	jbe    2c9c <MULTIBOOT_HEADER_SIZE+0x2c44>
    2c9b:	8e 06                	mov    es,WORD PTR [rsi]
    2c9d:	00 00                	add    BYTE PTR [rax],al
    2c9f:	02 91 48 13 1c 0a    	add    dl,BYTE PTR [rcx+0xa1c1348]
    2ca5:	00 00                	add    BYTE PTR [rax],al
    2ca7:	01 7b 01             	add    DWORD PTR [rbx+0x1],edi
    2caa:	fe 02                	inc    BYTE PTR [rdx]
    2cac:	00 00                	add    BYTE PTR [rax],al
    2cae:	03 91 bc 7f 00 14    	add    edx,DWORD PTR [rcx+0x14007fbc]
    2cb4:	b8 0c 00 00 01       	mov    eax,0x100000c
    2cb9:	80 01 35             	add    BYTE PTR [rcx],0x35
    2cbc:	02 00                	add    al,BYTE PTR [rax]
    2cbe:	00 1d b6 00 01 00    	add    BYTE PTR [rip+0x100b6],bl        # 12d7a <MULTIBOOT_HEADER_SIZE+0x12d22>
    2cc4:	00 00                	add    BYTE PTR [rax],al
    2cc6:	00 80 01 00 00 00    	add    BYTE PTR [rax+0x1],al
    2ccc:	00 00                	add    BYTE PTR [rax],al
    2cce:	00 01                	add    BYTE PTR [rcx],al
    2cd0:	9c                   	pushf  
    2cd1:	7c 07                	jl     2cda <MULTIBOOT_HEADER_SIZE+0x2c82>
    2cd3:	00 00                	add    BYTE PTR [rax],al
    2cd5:	13 44 04 00          	adc    eax,DWORD PTR [rsp+rax*1+0x0]
    2cd9:	00 01                	add    BYTE PTR [rcx],al
    2cdb:	87 01                	xchg   DWORD PTR [rcx],eax
    2cdd:	35 02 00 00 02       	xor    eax,0x2000002
    2ce2:	91                   	xchg   ecx,eax
    2ce3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2ce4:	13 e1                	adc    esp,ecx
    2ce6:	02 00                	add    al,BYTE PTR [rax]
    2ce8:	00 01                	add    BYTE PTR [rcx],al
    2cea:	88 01                	mov    BYTE PTR [rcx],al
    2cec:	f9                   	stc    
    2ced:	00 00                	add    BYTE PTR [rax],al
    2cef:	00 02                	add    BYTE PTR [rdx],al
    2cf1:	91                   	xchg   ecx,eax
    2cf2:	58                   	pop    rax
    2cf3:	13 b2 0a 00 00 01    	adc    esi,DWORD PTR [rdx+0x100000a]
    2cf9:	8b 01                	mov    eax,DWORD PTR [rcx]
    2cfb:	6d                   	ins    DWORD PTR es:[rdi],dx
    2cfc:	01 00                	add    DWORD PTR [rax],eax
    2cfe:	00 02                	add    BYTE PTR [rdx],al
    2d00:	91                   	xchg   ecx,eax
    2d01:	60                   	(bad)  
    2d02:	13 17                	adc    edx,DWORD PTR [rdi]
    2d04:	0a 00                	or     al,BYTE PTR [rax]
    2d06:	00 01                	add    BYTE PTR [rcx],al
    2d08:	91                   	xchg   ecx,eax
    2d09:	01 8e 06 00 00 02    	add    DWORD PTR [rsi+0x2000006],ecx
    2d0f:	91                   	xchg   ecx,eax
    2d10:	48 13 1c 0a          	adc    rbx,QWORD PTR [rdx+rcx*1]
    2d14:	00 00                	add    BYTE PTR [rax],al
    2d16:	01 96 01 fe 02 00    	add    DWORD PTR [rsi+0x2fe01],edx
    2d1c:	00 03                	add    BYTE PTR [rbx],al
    2d1e:	91                   	xchg   ecx,eax
    2d1f:	bc 7f 00 14 ba       	mov    esp,0xba14007f
    2d24:	0a 00                	or     al,BYTE PTR [rax]
    2d26:	00 01                	add    BYTE PTR [rcx],al
    2d28:	9b                   	fwait
    2d29:	01 35 02 00 00 9d    	add    DWORD PTR [rip+0xffffffff9d000002],esi        # ffffffff9d002d31 <MULTIBOOT_CHECK_SUM+0x85527e5f>
    2d2f:	b7 00                	mov    bh,0x0
    2d31:	01 00                	add    DWORD PTR [rax],eax
    2d33:	00 00                	add    BYTE PTR [rax],al
    2d35:	00 80 01 00 00 00    	add    BYTE PTR [rax+0x1],al
    2d3b:	00 00                	add    BYTE PTR [rax],al
    2d3d:	00 01                	add    BYTE PTR [rcx],al
    2d3f:	9c                   	pushf  
    2d40:	eb 07                	jmp    2d49 <MULTIBOOT_HEADER_SIZE+0x2cf1>
    2d42:	00 00                	add    BYTE PTR [rax],al
    2d44:	13 44 04 00          	adc    eax,DWORD PTR [rsp+rax*1+0x0]
    2d48:	00 01                	add    BYTE PTR [rcx],al
    2d4a:	a2 01 35 02 00 00 02 	movabs ds:0x6f91020000023501,al
    2d51:	91 6f 
    2d53:	13 e1                	adc    esp,ecx
    2d55:	02 00                	add    al,BYTE PTR [rax]
    2d57:	00 01                	add    BYTE PTR [rcx],al
    2d59:	a3 01 f9 00 00 00 02 	movabs ds:0x589102000000f901,eax
    2d60:	91 58 
    2d62:	13 b2 0a 00 00 01    	adc    esi,DWORD PTR [rdx+0x100000a]
    2d68:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    2d69:	01 6d 01             	add    DWORD PTR [rbp+0x1],ebp
    2d6c:	00 00                	add    BYTE PTR [rax],al
    2d6e:	02 91 60 13 17 0a    	add    dl,BYTE PTR [rcx+0xa171360]
    2d74:	00 00                	add    BYTE PTR [rax],al
    2d76:	01 ac 01 8e 06 00 00 	add    DWORD PTR [rcx+rax*1+0x68e],ebp
    2d7d:	02 91 48 13 1c 0a    	add    dl,BYTE PTR [rcx+0xa1c1348]
    2d83:	00 00                	add    BYTE PTR [rax],al
    2d85:	01 b1 01 fe 02 00    	add    DWORD PTR [rcx+0x2fe01],esi
    2d8b:	00 03                	add    BYTE PTR [rbx],al
    2d8d:	91                   	xchg   ecx,eax
    2d8e:	bc 7f 00 14 68       	mov    esp,0x6814007f
    2d93:	0b 00                	or     eax,DWORD PTR [rax]
    2d95:	00 01                	add    BYTE PTR [rcx],al
    2d97:	b6 01                	mov    dh,0x1
    2d99:	35 02 00 00 1d       	xor    eax,0x1d000002
    2d9e:	b9 00 01 00 00       	mov    ecx,0x100
    2da3:	00 00                	add    BYTE PTR [rax],al
    2da5:	f3 00 00             	repz add BYTE PTR [rax],al
    2da8:	00 00                	add    BYTE PTR [rax],al
    2daa:	00 00                	add    BYTE PTR [rax],al
    2dac:	00 01                	add    BYTE PTR [rcx],al
    2dae:	9c                   	pushf  
    2daf:	4a 08 00             	rex.WX or BYTE PTR [rax],al
    2db2:	00 13                	add    BYTE PTR [rbx],dl
    2db4:	44 04 00             	rex.R add al,0x0
    2db7:	00 01                	add    BYTE PTR [rcx],al
    2db9:	c1 01 35             	rol    DWORD PTR [rcx],0x35
    2dbc:	02 00                	add    al,BYTE PTR [rax]
    2dbe:	00 02                	add    BYTE PTR [rdx],al
    2dc0:	91                   	xchg   ecx,eax
    2dc1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2dc2:	13 e1                	adc    esp,ecx
    2dc4:	02 00                	add    al,BYTE PTR [rax]
    2dc6:	00 01                	add    BYTE PTR [rcx],al
    2dc8:	c2 01 f9             	ret    0xf901
    2dcb:	00 00                	add    BYTE PTR [rax],al
    2dcd:	00 02                	add    BYTE PTR [rdx],al
    2dcf:	91                   	xchg   ecx,eax
    2dd0:	58                   	pop    rax
    2dd1:	13 b2 0a 00 00 01    	adc    esi,DWORD PTR [rdx+0x100000a]
    2dd7:	c5 01 6d 01          	vpunpckhqdq xmm8,xmm15,XMMWORD PTR [rcx]
    2ddb:	00 00                	add    BYTE PTR [rax],al
    2ddd:	02 91 60 13 17 0a    	add    dl,BYTE PTR [rcx+0xa171360]
    2de3:	00 00                	add    BYTE PTR [rax],al
    2de5:	01 c8                	add    eax,ecx
    2de7:	01 4a 08             	add    DWORD PTR [rdx+0x8],ecx
    2dea:	00 00                	add    BYTE PTR [rax],al
    2dec:	02 91 54 00 11 46    	add    dl,BYTE PTR [rcx+0x46110054]
    2df2:	00 00                	add    BYTE PTR [rax],al
    2df4:	00 5a 08             	add    BYTE PTR [rdx+0x8],bl
    2df7:	00 00                	add    BYTE PTR [rax],al
    2df9:	12 89 00 00 00 00    	adc    cl,BYTE PTR [rcx+0x0]
    2dff:	00 14 eb             	add    BYTE PTR [rbx+rbp*8],dl
    2e02:	0c 00                	or     al,0x0
    2e04:	00 01                	add    BYTE PTR [rcx],al
    2e06:	d1 01                	rol    DWORD PTR [rcx],1
    2e08:	35 02 00 00 10       	xor    eax,0x10000002
    2e0d:	ba 00 01 00 00       	mov    edx,0x100
    2e12:	00 00                	add    BYTE PTR [rax],al
    2e14:	af                   	scas   eax,DWORD PTR es:[rdi]
    2e15:	01 00                	add    DWORD PTR [rax],eax
    2e17:	00 00                	add    BYTE PTR [rax],al
    2e19:	00 00                	add    BYTE PTR [rax],al
    2e1b:	00 01                	add    BYTE PTR [rcx],al
    2e1d:	9c                   	pushf  
    2e1e:	c9                   	leave  
    2e1f:	08 00                	or     BYTE PTR [rax],al
    2e21:	00 13                	add    BYTE PTR [rbx],dl
    2e23:	44 04 00             	rex.R add al,0x0
    2e26:	00 01                	add    BYTE PTR [rcx],al
    2e28:	e7 01                	out    0x1,eax
    2e2a:	35 02 00 00 02       	xor    eax,0x2000002
    2e2f:	91                   	xchg   ecx,eax
    2e30:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2e31:	13 e1                	adc    esp,ecx
    2e33:	02 00                	add    al,BYTE PTR [rax]
    2e35:	00 01                	add    BYTE PTR [rcx],al
    2e37:	e8 01 f9 00 00       	call   1273d <MULTIBOOT_HEADER_SIZE+0x126e5>
    2e3c:	00 02                	add    BYTE PTR [rdx],al
    2e3e:	91                   	xchg   ecx,eax
    2e3f:	58                   	pop    rax
    2e40:	13 b2 0a 00 00 01    	adc    esi,DWORD PTR [rdx+0x100000a]
    2e46:	eb 01                	jmp    2e49 <MULTIBOOT_HEADER_SIZE+0x2df1>
    2e48:	6d                   	ins    DWORD PTR es:[rdi],dx
    2e49:	01 00                	add    DWORD PTR [rax],eax
    2e4b:	00 02                	add    BYTE PTR [rdx],al
    2e4d:	91                   	xchg   ecx,eax
    2e4e:	60                   	(bad)  
    2e4f:	13 17                	adc    edx,DWORD PTR [rdi]
    2e51:	0a 00                	or     al,BYTE PTR [rax]
    2e53:	00 01                	add    BYTE PTR [rcx],al
    2e55:	f2 01 77 04          	repnz add DWORD PTR [rdi+0x4],esi
    2e59:	00 00                	add    BYTE PTR [rax],al
    2e5b:	02 91 44 13 1c 0a    	add    dl,BYTE PTR [rcx+0xa1c1344]
    2e61:	00 00                	add    BYTE PTR [rax],al
    2e63:	01 f7                	add    edi,esi
    2e65:	01 8e 06 00 00 03    	add    DWORD PTR [rsi+0x3000006],ecx
    2e6b:	91                   	xchg   ecx,eax
    2e6c:	b4 7f                	mov    ah,0x7f
    2e6e:	00 14 64             	add    BYTE PTR [rsp+riz*2],dl
    2e71:	0c 00                	or     al,0x0
    2e73:	00 01                	add    BYTE PTR [rcx],al
    2e75:	fc                   	cld    
    2e76:	01 35 02 00 00 bf    	add    DWORD PTR [rip+0xffffffffbf000002],esi        # ffffffffbf002e7e <MULTIBOOT_CHECK_SUM+0xa7527fac>
    2e7c:	bb 00 01 00 00       	mov    ebx,0x100
    2e81:	00 00                	add    BYTE PTR [rax],al
    2e83:	de 01                	fiadd  WORD PTR [rcx]
    2e85:	00 00                	add    BYTE PTR [rax],al
    2e87:	00 00                	add    BYTE PTR [rax],al
    2e89:	00 00                	add    BYTE PTR [rax],al
    2e8b:	01 9c 38 09 00 00 13 	add    DWORD PTR [rax+rdi*1+0x13000009],ebx
    2e92:	44 04 00             	rex.R add al,0x0
    2e95:	00 01                	add    BYTE PTR [rcx],al
    2e97:	0e                   	(bad)  
    2e98:	02 35 02 00 00 02    	add    dh,BYTE PTR [rip+0x2000002]        # 2002ea0 <kernel_end+0xfe6ea8>
    2e9e:	91                   	xchg   ecx,eax
    2e9f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2ea0:	13 e1                	adc    esp,ecx
    2ea2:	02 00                	add    al,BYTE PTR [rax]
    2ea4:	00 01                	add    BYTE PTR [rcx],al
    2ea6:	0f 02 f9             	lar    edi,cx
    2ea9:	00 00                	add    BYTE PTR [rax],al
    2eab:	00 02                	add    BYTE PTR [rdx],al
    2ead:	91                   	xchg   ecx,eax
    2eae:	58                   	pop    rax
    2eaf:	13 b2 0a 00 00 01    	adc    esi,DWORD PTR [rdx+0x100000a]
    2eb5:	12 02                	adc    al,BYTE PTR [rdx]
    2eb7:	6d                   	ins    DWORD PTR es:[rdi],dx
    2eb8:	01 00                	add    DWORD PTR [rax],eax
    2eba:	00 02                	add    BYTE PTR [rdx],al
    2ebc:	91                   	xchg   ecx,eax
    2ebd:	60                   	(bad)  
    2ebe:	13 17                	adc    edx,DWORD PTR [rdi]
    2ec0:	0a 00                	or     al,BYTE PTR [rax]
    2ec2:	00 01                	add    BYTE PTR [rcx],al
    2ec4:	1a 02                	sbb    al,BYTE PTR [rdx]
    2ec6:	87 04 00             	xchg   DWORD PTR [rax+rax*1],eax
    2ec9:	00 02                	add    BYTE PTR [rdx],al
    2ecb:	91                   	xchg   ecx,eax
    2ecc:	40 13 1c 0a          	rex adc ebx,DWORD PTR [rdx+rcx*1]
    2ed0:	00 00                	add    BYTE PTR [rax],al
    2ed2:	01 1f                	add    DWORD PTR [rdi],ebx
    2ed4:	02 77 04             	add    dh,BYTE PTR [rdi+0x4]
    2ed7:	00 00                	add    BYTE PTR [rax],al
    2ed9:	03 91 ac 7f 00 14    	add    edx,DWORD PTR [rcx+0x14007fac]
    2edf:	89 0b                	mov    DWORD PTR [rbx],ecx
    2ee1:	00 00                	add    BYTE PTR [rax],al
    2ee3:	01 24 02             	add    DWORD PTR [rdx+rax*1],esp
    2ee6:	35 02 00 00 9d       	xor    eax,0x9d000002
    2eeb:	bd 00 01 00 00       	mov    ebp,0x100
    2ef0:	00 00                	add    BYTE PTR [rax],al
    2ef2:	36 02 00             	add    al,BYTE PTR ss:[rax]
    2ef5:	00 00                	add    BYTE PTR [rax],al
    2ef7:	00 00                	add    BYTE PTR [rax],al
    2ef9:	00 01                	add    BYTE PTR [rcx],al
    2efb:	9c                   	pushf  
    2efc:	e5 09                	in     eax,0x9
    2efe:	00 00                	add    BYTE PTR [rax],al
    2f00:	13 44 04 00          	adc    eax,DWORD PTR [rsp+rax*1+0x0]
    2f04:	00 01                	add    BYTE PTR [rcx],al
    2f06:	35 02 35 02 00       	xor    eax,0x23502
    2f0b:	00 02                	add    BYTE PTR [rdx],al
    2f0d:	91                   	xchg   ecx,eax
    2f0e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2f0f:	13 e1                	adc    esp,ecx
    2f11:	02 00                	add    al,BYTE PTR [rax]
    2f13:	00 01                	add    BYTE PTR [rcx],al
    2f15:	36 02 f9             	ss add bh,cl
    2f18:	00 00                	add    BYTE PTR [rax],al
    2f1a:	00 03                	add    BYTE PTR [rbx],al
    2f1c:	91                   	xchg   ecx,eax
    2f1d:	b8 7f 13 e3 0c       	mov    eax,0xce3137f
    2f22:	00 00                	add    BYTE PTR [rax],al
    2f24:	01 39                	add    DWORD PTR [rcx],edi
    2f26:	02 6d 01             	add    ch,BYTE PTR [rbp+0x1]
    2f29:	00 00                	add    BYTE PTR [rax],al
    2f2b:	02 91 60 13 e5 0a    	add    dl,BYTE PTR [rcx+0xae51360]
    2f31:	00 00                	add    BYTE PTR [rax],al
    2f33:	01 3a                	add    DWORD PTR [rdx],edi
    2f35:	02 6d 01             	add    ch,BYTE PTR [rbp+0x1]
    2f38:	00 00                	add    BYTE PTR [rax],al
    2f3a:	02 91 58 13 3a 0c    	add    dl,BYTE PTR [rcx+0xc3a1358]
    2f40:	00 00                	add    BYTE PTR [rax],al
    2f42:	01 3b                	add    DWORD PTR [rbx],edi
    2f44:	02 6d 01             	add    ch,BYTE PTR [rbp+0x1]
    2f47:	00 00                	add    BYTE PTR [rax],al
    2f49:	02 91 50 13 8f 0c    	add    dl,BYTE PTR [rcx+0xc8f1350]
    2f4f:	00 00                	add    BYTE PTR [rax],al
    2f51:	01 3c 02             	add    DWORD PTR [rdx+rax*1],edi
    2f54:	6d                   	ins    DWORD PTR es:[rdi],dx
    2f55:	01 00                	add    DWORD PTR [rax],eax
    2f57:	00 02                	add    BYTE PTR [rdx],al
    2f59:	91                   	xchg   ecx,eax
    2f5a:	48 13 86 0c 00 00 01 	adc    rax,QWORD PTR [rsi+0x100000c]
    2f61:	3d 02 6d 01 00       	cmp    eax,0x16d02
    2f66:	00 02                	add    BYTE PTR [rdx],al
    2f68:	91                   	xchg   ecx,eax
    2f69:	40 13 17             	rex adc edx,DWORD PTR [rdi]
    2f6c:	0a 00                	or     al,BYTE PTR [rax]
    2f6e:	00 01                	add    BYTE PTR [rcx],al
    2f70:	47 02 87 04 00 00 03 	rex.RXB add r8b,BYTE PTR [r15+0x3000004]
    2f77:	91                   	xchg   ecx,eax
    2f78:	a0 7f 13 1c 0a 00 00 	movabs al,ds:0x500100000a1c137f
    2f7f:	01 50 
    2f81:	02 4a 08             	add    cl,BYTE PTR [rdx+0x8]
    2f84:	00 00                	add    BYTE PTR [rax],al
    2f86:	03 91 9c 7f 00 14    	add    edx,DWORD PTR [rcx+0x14007f9c]
    2f8c:	18 0b                	sbb    BYTE PTR [rbx],cl
    2f8e:	00 00                	add    BYTE PTR [rax],al
    2f90:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    2f93:	35 02 00 00 d3       	xor    eax,0xd3000002
    2f98:	bf 00 01 00 00       	mov    edi,0x100
    2f9d:	00 00                	add    BYTE PTR [rax],al
    2f9f:	f8                   	clc    
    2fa0:	02 00                	add    al,BYTE PTR [rax]
    2fa2:	00 00                	add    BYTE PTR [rax],al
    2fa4:	00 00                	add    BYTE PTR [rax],al
    2fa6:	00 01                	add    BYTE PTR [rcx],al
    2fa8:	9c                   	pushf  
    2fa9:	55                   	push   rbp
    2faa:	0a 00                	or     al,BYTE PTR [rax]
    2fac:	00 13                	add    BYTE PTR [rbx],dl
    2fae:	44 04 00             	rex.R add al,0x0
    2fb1:	00 01                	add    BYTE PTR [rcx],al
    2fb3:	70 02                	jo     2fb7 <MULTIBOOT_HEADER_SIZE+0x2f5f>
    2fb5:	35 02 00 00 02       	xor    eax,0x2000002
    2fba:	91                   	xchg   ecx,eax
    2fbb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2fbc:	13 e1                	adc    esp,ecx
    2fbe:	02 00                	add    al,BYTE PTR [rax]
    2fc0:	00 01                	add    BYTE PTR [rcx],al
    2fc2:	71 02                	jno    2fc6 <MULTIBOOT_HEADER_SIZE+0x2f6e>
    2fc4:	f9                   	stc    
    2fc5:	00 00                	add    BYTE PTR [rax],al
    2fc7:	00 02                	add    BYTE PTR [rdx],al
    2fc9:	91                   	xchg   ecx,eax
    2fca:	58                   	pop    rax
    2fcb:	13 b2 0a 00 00 01    	adc    esi,DWORD PTR [rdx+0x100000a]
    2fd1:	74 02                	je     2fd5 <MULTIBOOT_HEADER_SIZE+0x2f7d>
    2fd3:	6d                   	ins    DWORD PTR es:[rdi],dx
    2fd4:	01 00                	add    DWORD PTR [rax],eax
    2fd6:	00 02                	add    BYTE PTR [rdx],al
    2fd8:	91                   	xchg   ecx,eax
    2fd9:	60                   	(bad)  
    2fda:	13 17                	adc    edx,DWORD PTR [rdi]
    2fdc:	0a 00                	or     al,BYTE PTR [rax]
    2fde:	00 01                	add    BYTE PTR [rcx],al
    2fe0:	82                   	(bad)  
    2fe1:	02 55 0a             	add    dl,BYTE PTR [rbp+0xa]
    2fe4:	00 00                	add    BYTE PTR [rax],al
    2fe6:	03 91 a8 7f 13 1c    	add    edx,DWORD PTR [rcx+0x1c137fa8]
    2fec:	0a 00                	or     al,BYTE PTR [rax]
    2fee:	00 01                	add    BYTE PTR [rcx],al
    2ff0:	87 02                	xchg   DWORD PTR [rdx],eax
    2ff2:	5e                   	pop    rsi
    2ff3:	05 00 00 03 91       	add    eax,0x91030000
    2ff8:	fc                   	cld    
    2ff9:	7e 00                	jle    2ffb <MULTIBOOT_HEADER_SIZE+0x2fa3>
    2ffb:	11 46 00             	adc    DWORD PTR [rsi+0x0],eax
    2ffe:	00 00                	add    BYTE PTR [rax],al
    3000:	65 0a 00             	or     al,BYTE PTR gs:[rax]
    3003:	00 12                	add    BYTE PTR [rdx],dl
    3005:	89 00                	mov    DWORD PTR [rax],eax
    3007:	00 00                	add    BYTE PTR [rax],al
    3009:	0b 00                	or     eax,DWORD PTR [rax]
    300b:	14 f9                	adc    al,0xf9
    300d:	0a 00                	or     al,BYTE PTR [rax]
    300f:	00 01                	add    BYTE PTR [rcx],al
    3011:	8c 02                	mov    WORD PTR [rdx],es
    3013:	35 02 00 00 cb       	xor    eax,0xcb000002
    3018:	c2 00 01             	ret    0x100
    301b:	00 00                	add    BYTE PTR [rax],al
    301d:	00 00                	add    BYTE PTR [rax],al
    301f:	f8                   	clc    
    3020:	02 00                	add    al,BYTE PTR [rax]
    3022:	00 00                	add    BYTE PTR [rax],al
    3024:	00 00                	add    BYTE PTR [rax],al
    3026:	00 01                	add    BYTE PTR [rcx],al
    3028:	9c                   	pushf  
    3029:	d5                   	(bad)  
    302a:	0a 00                	or     al,BYTE PTR [rax]
    302c:	00 13                	add    BYTE PTR [rbx],dl
    302e:	44 04 00             	rex.R add al,0x0
    3031:	00 01                	add    BYTE PTR [rcx],al
    3033:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    3034:	02 35 02 00 00 02    	add    dh,BYTE PTR [rip+0x2000002]        # 200303c <kernel_end+0xfe7044>
    303a:	91                   	xchg   ecx,eax
    303b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    303c:	13 e1                	adc    esp,ecx
    303e:	02 00                	add    al,BYTE PTR [rax]
    3040:	00 01                	add    BYTE PTR [rcx],al
    3042:	a8 02                	test   al,0x2
    3044:	f9                   	stc    
    3045:	00 00                	add    BYTE PTR [rax],al
    3047:	00 02                	add    BYTE PTR [rdx],al
    3049:	91                   	xchg   ecx,eax
    304a:	58                   	pop    rax
    304b:	13 b2 0a 00 00 01    	adc    esi,DWORD PTR [rdx+0x100000a]
    3051:	ab                   	stos   DWORD PTR es:[rdi],eax
    3052:	02 6d 01             	add    ch,BYTE PTR [rbp+0x1]
    3055:	00 00                	add    BYTE PTR [rax],al
    3057:	02 91 60 13 17 0a    	add    dl,BYTE PTR [rcx+0xa171360]
    305d:	00 00                	add    BYTE PTR [rax],al
    305f:	01 b9 02 55 0a 00    	add    DWORD PTR [rcx+0xa5502],edi
    3065:	00 03                	add    BYTE PTR [rbx],al
    3067:	91                   	xchg   ecx,eax
    3068:	a8 7f                	test   al,0x7f
    306a:	13 1c 0a             	adc    ebx,DWORD PTR [rdx+rcx*1]
    306d:	00 00                	add    BYTE PTR [rax],al
    306f:	01 be 02 5e 05 00    	add    DWORD PTR [rsi+0x55e02],edi
    3075:	00 03                	add    BYTE PTR [rbx],al
    3077:	91                   	xchg   ecx,eax
    3078:	fc                   	cld    
    3079:	7e 00                	jle    307b <MULTIBOOT_HEADER_SIZE+0x3023>
    307b:	14 37                	adc    al,0x37
    307d:	0b 00                	or     eax,DWORD PTR [rax]
    307f:	00 01                	add    BYTE PTR [rcx],al
    3081:	c3                   	ret    
    3082:	02 35 02 00 00 c3    	add    dh,BYTE PTR [rip+0xffffffffc3000002]        # ffffffffc300308a <MULTIBOOT_CHECK_SUM+0xab5281b8>
    3088:	c5 00 01             	(bad)  
    308b:	00 00                	add    BYTE PTR [rax],al
    308d:	00 00                	add    BYTE PTR [rax],al
    308f:	f8                   	clc    
    3090:	02 00                	add    al,BYTE PTR [rax]
    3092:	00 00                	add    BYTE PTR [rax],al
    3094:	00 00                	add    BYTE PTR [rax],al
    3096:	00 01                	add    BYTE PTR [rcx],al
    3098:	9c                   	pushf  
    3099:	45 0b 00             	or     r8d,DWORD PTR [r8]
    309c:	00 13                	add    BYTE PTR [rbx],dl
    309e:	44 04 00             	rex.R add al,0x0
    30a1:	00 01                	add    BYTE PTR [rcx],al
    30a3:	de 02                	fiadd  WORD PTR [rdx]
    30a5:	35 02 00 00 02       	xor    eax,0x2000002
    30aa:	91                   	xchg   ecx,eax
    30ab:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    30ac:	13 e1                	adc    esp,ecx
    30ae:	02 00                	add    al,BYTE PTR [rax]
    30b0:	00 01                	add    BYTE PTR [rcx],al
    30b2:	df 02                	fild   WORD PTR [rdx]
    30b4:	f9                   	stc    
    30b5:	00 00                	add    BYTE PTR [rax],al
    30b7:	00 02                	add    BYTE PTR [rdx],al
    30b9:	91                   	xchg   ecx,eax
    30ba:	58                   	pop    rax
    30bb:	13 b2 0a 00 00 01    	adc    esi,DWORD PTR [rdx+0x100000a]
    30c1:	e2 02                	loop   30c5 <MULTIBOOT_HEADER_SIZE+0x306d>
    30c3:	6d                   	ins    DWORD PTR es:[rdi],dx
    30c4:	01 00                	add    DWORD PTR [rax],eax
    30c6:	00 02                	add    BYTE PTR [rdx],al
    30c8:	91                   	xchg   ecx,eax
    30c9:	60                   	(bad)  
    30ca:	13 17                	adc    edx,DWORD PTR [rdi]
    30cc:	0a 00                	or     al,BYTE PTR [rax]
    30ce:	00 01                	add    BYTE PTR [rcx],al
    30d0:	f0 02 55 0a          	lock add dl,BYTE PTR [rbp+0xa]
    30d4:	00 00                	add    BYTE PTR [rax],al
    30d6:	03 91 a8 7f 13 1c    	add    edx,DWORD PTR [rcx+0x1c137fa8]
    30dc:	0a 00                	or     al,BYTE PTR [rax]
    30de:	00 01                	add    BYTE PTR [rcx],al
    30e0:	f5                   	cmc    
    30e1:	02 5e 05             	add    bl,BYTE PTR [rsi+0x5]
    30e4:	00 00                	add    BYTE PTR [rax],al
    30e6:	03 91 fc 7e 00 14    	add    edx,DWORD PTR [rcx+0x14007efc]
    30ec:	b6 0b                	mov    dh,0xb
    30ee:	00 00                	add    BYTE PTR [rax],al
    30f0:	01 fa                	add    edx,edi
    30f2:	02 35 02 00 00 bb    	add    dh,BYTE PTR [rip+0xffffffffbb000002]        # ffffffffbb0030fa <MULTIBOOT_CHECK_SUM+0xa3528228>
    30f8:	c8 00 01 00          	enter  0x100,0x0
    30fc:	00 00                	add    BYTE PTR [rax],al
    30fe:	00 ea                	add    dl,ch
    3100:	01 00                	add    DWORD PTR [rax],eax
    3102:	00 00                	add    BYTE PTR [rax],al
    3104:	00 00                	add    BYTE PTR [rax],al
    3106:	00 01                	add    BYTE PTR [rcx],al
    3108:	9c                   	pushf  
    3109:	b4 0b                	mov    ah,0xb
    310b:	00 00                	add    BYTE PTR [rax],al
    310d:	13 44 04 00          	adc    eax,DWORD PTR [rsp+rax*1+0x0]
    3111:	00 01                	add    BYTE PTR [rcx],al
    3113:	0e                   	(bad)  
    3114:	03 35 02 00 00 02    	add    esi,DWORD PTR [rip+0x2000002]        # 200311c <kernel_end+0xfe7124>
    311a:	91                   	xchg   ecx,eax
    311b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    311c:	13 e1                	adc    esp,ecx
    311e:	02 00                	add    al,BYTE PTR [rax]
    3120:	00 01                	add    BYTE PTR [rcx],al
    3122:	0f 03 f9             	lsl    edi,cx
    3125:	00 00                	add    BYTE PTR [rax],al
    3127:	00 02                	add    BYTE PTR [rdx],al
    3129:	91                   	xchg   ecx,eax
    312a:	50                   	push   rax
    312b:	13 0d 0c 00 00 01    	adc    ecx,DWORD PTR [rip+0x100000c]        # 100313d <GDT64.GDT64_PTR+0x125>
    3131:	12 03                	adc    al,BYTE PTR [rbx]
    3133:	6d                   	ins    DWORD PTR es:[rdi],dx
    3134:	01 00                	add    DWORD PTR [rax],eax
    3136:	00 02                	add    BYTE PTR [rdx],al
    3138:	91                   	xchg   ecx,eax
    3139:	60                   	(bad)  
    313a:	13 cb                	adc    ecx,ebx
    313c:	0a 00                	or     al,BYTE PTR [rax]
    313e:	00 01                	add    BYTE PTR [rcx],al
    3140:	13 03                	adc    eax,DWORD PTR [rbx]
    3142:	6d                   	ins    DWORD PTR es:[rdi],dx
    3143:	01 00                	add    DWORD PTR [rax],eax
    3145:	00 02                	add    BYTE PTR [rdx],al
    3147:	91                   	xchg   ecx,eax
    3148:	58                   	pop    rax
    3149:	13 17                	adc    edx,DWORD PTR [rdi]
    314b:	0a 00                	or     al,BYTE PTR [rax]
    314d:	00 01                	add    BYTE PTR [rcx],al
    314f:	1c 03                	sbb    al,0x3
    3151:	87 04 00             	xchg   DWORD PTR [rax+rax*1],eax
    3154:	00 03                	add    BYTE PTR [rbx],al
    3156:	91                   	xchg   ecx,eax
    3157:	b8 7f 00 14 54       	mov    eax,0x5414007f
    315c:	0c 00                	or     al,0x0
    315e:	00 01                	add    BYTE PTR [rcx],al
    3160:	29 03                	sub    DWORD PTR [rbx],eax
    3162:	35 02 00 00 a5       	xor    eax,0xa5000002
    3167:	ca 00 01             	retf   0x100
    316a:	00 00                	add    BYTE PTR [rax],al
    316c:	00 00                	add    BYTE PTR [rax],al
    316e:	d8 03                	fadd   DWORD PTR [rbx]
    3170:	00 00                	add    BYTE PTR [rax],al
    3172:	00 00                	add    BYTE PTR [rax],al
    3174:	00 00                	add    BYTE PTR [rax],al
    3176:	01 9c 73 0c 00 00 13 	add    DWORD PTR [rbx+rsi*2+0x1300000c],ebx
    317d:	44 04 00             	rex.R add al,0x0
    3180:	00 01                	add    BYTE PTR [rcx],al
    3182:	2b 03                	sub    eax,DWORD PTR [rbx]
    3184:	35 02 00 00 02       	xor    eax,0x2000002
    3189:	91                   	xchg   ecx,eax
    318a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    318b:	13 e1                	adc    esp,ecx
    318d:	02 00                	add    al,BYTE PTR [rax]
    318f:	00 01                	add    BYTE PTR [rcx],al
    3191:	2c 03                	sub    al,0x3
    3193:	f9                   	stc    
    3194:	00 00                	add    BYTE PTR [rax],al
    3196:	00 02                	add    BYTE PTR [rdx],al
    3198:	91                   	xchg   ecx,eax
    3199:	48 13 03             	adc    rax,QWORD PTR [rbx]
    319c:	10 00                	adc    BYTE PTR [rax],al
    319e:	00 01                	add    BYTE PTR [rcx],al
    31a0:	3f                   	(bad)  
    31a1:	03 f3                	add    esi,ebx
    31a3:	00 00                	add    BYTE PTR [rax],al
    31a5:	00 02                	add    BYTE PTR [rdx],al
    31a7:	91                   	xchg   ecx,eax
    31a8:	60                   	(bad)  
    31a9:	13 30                	adc    esi,DWORD PTR [rax]
    31ab:	03 00                	add    eax,DWORD PTR [rax]
    31ad:	00 01                	add    BYTE PTR [rcx],al
    31af:	40 03 62 00          	rex add esp,DWORD PTR [rdx+0x0]
    31b3:	00 00                	add    BYTE PTR [rax],al
    31b5:	02 91 5c 13 d1 06    	add    dl,BYTE PTR [rcx+0x6d1135c]
    31bb:	00 00                	add    BYTE PTR [rax],al
    31bd:	01 41 03             	add    DWORD PTR [rcx+0x3],eax
    31c0:	3b 00                	cmp    eax,DWORD PTR [rax]
    31c2:	00 00                	add    BYTE PTR [rax],al
    31c4:	02 91 58 15 63 75    	add    dl,BYTE PTR [rcx+0x75631558]
    31ca:	72 00                	jb     31cc <MULTIBOOT_HEADER_SIZE+0x3174>
    31cc:	01 42 03             	add    DWORD PTR [rdx+0x3],eax
    31cf:	3b 00                	cmp    eax,DWORD PTR [rax]
    31d1:	00 00                	add    BYTE PTR [rax],al
    31d3:	02 91 54 16 bd ca    	add    dl,BYTE PTR [rcx-0x3542e9ac]
    31d9:	00 01                	add    BYTE PTR [rcx],al
    31db:	00 00                	add    BYTE PTR [rax],al
    31dd:	00 00                	add    BYTE PTR [rax],al
    31df:	0c 01                	or     al,0x1
    31e1:	00 00                	add    BYTE PTR [rax],al
    31e3:	00 00                	add    BYTE PTR [rax],al
    31e5:	00 00                	add    BYTE PTR [rax],al
    31e7:	53                   	push   rbx
    31e8:	0c 00                	or     al,0x0
    31ea:	00 15 69 00 01 30    	add    BYTE PTR [rip+0x30010069],dl        # 30013259 <kernel_end+0x2eff7261>
    31f0:	03 46 00             	add    eax,DWORD PTR [rsi+0x0]
    31f3:	00 00                	add    BYTE PTR [rax],al
    31f5:	02 91 68 00 17 3a    	add    dl,BYTE PTR [rcx+0x3a170068]
    31fb:	cd 00                	int    0x0
    31fd:	01 00                	add    DWORD PTR [rax],eax
    31ff:	00 00                	add    BYTE PTR [rax],al
    3201:	00 14 01             	add    BYTE PTR [rcx+rax*1],dl
    3204:	00 00                	add    BYTE PTR [rax],al
    3206:	00 00                	add    BYTE PTR [rax],al
    3208:	00 00                	add    BYTE PTR [rax],al
    320a:	15 69 00 01 6e       	adc    eax,0x6e010069
    320f:	03 46 00             	add    eax,DWORD PTR [rsi+0x0]
    3212:	00 00                	add    BYTE PTR [rax],al
    3214:	02 91 50 00 00 18    	add    dl,BYTE PTR [rcx+0x18000050]
    321a:	d5                   	(bad)  
    321b:	0c 00                	or     al,0x0
    321d:	00 01                	add    BYTE PTR [rcx],al
    321f:	7b 03                	jnp    3224 <MULTIBOOT_HEADER_SIZE+0x31cc>
    3221:	7d ce                	jge    31f1 <MULTIBOOT_HEADER_SIZE+0x3199>
    3223:	00 01                	add    BYTE PTR [rcx],al
    3225:	00 00                	add    BYTE PTR [rax],al
    3227:	00 00                	add    BYTE PTR [rax],al
    3229:	62 02                	(bad)  
    322b:	00 00                	add    BYTE PTR [rax],al
    322d:	00 00                	add    BYTE PTR [rax],al
    322f:	00 00                	add    BYTE PTR [rax],al
    3231:	01 9c b1 0c 00 00 17 	add    DWORD PTR [rcx+rsi*4+0x1700000c],ebx
    3238:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    3239:	d0 00                	rol    BYTE PTR [rax],1
    323b:	01 00                	add    DWORD PTR [rax],eax
    323d:	00 00                	add    BYTE PTR [rax],al
    323f:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
    3242:	00 00                	add    BYTE PTR [rax],al
    3244:	00 00                	add    BYTE PTR [rax],al
    3246:	00 00                	add    BYTE PTR [rax],al
    3248:	15 69 00 01 a2       	adc    eax,0xa2010069
    324d:	03 46 00             	add    eax,DWORD PTR [rsi+0x0]
    3250:	00 00                	add    BYTE PTR [rax],al
    3252:	02 91 6c 00 00 0f    	add    dl,BYTE PTR [rcx+0xf00006c]
    3258:	05 0c 00 00 01       	add    eax,0x100000c
    325d:	29 46 00             	sub    DWORD PTR [rsi+0x0],eax
    3260:	00 00                	add    BYTE PTR [rax],al
    3262:	09 03                	or     DWORD PTR [rbx],eax
    3264:	00 44 01 01          	add    BYTE PTR [rcx+rax*1+0x1],al
    3268:	00 00                	add    BYTE PTR [rax],al
    326a:	00 00                	add    BYTE PTR [rax],al
    326c:	11 25 01 00 00 d7    	adc    DWORD PTR [rip+0xffffffffd7000001],esp        # ffffffffd7003273 <MULTIBOOT_CHECK_SUM+0xbf5283a1>
    3272:	0c 00                	or     al,0x0
    3274:	00 19                	add    BYTE PTR [rcx],bl
    3276:	89 00                	mov    DWORD PTR [rax],eax
    3278:	00 00                	add    BYTE PTR [rax],al
    327a:	f3 01 00             	repz add DWORD PTR [rax],eax
    327d:	13 59 0c             	adc    ebx,DWORD PTR [rcx+0xc]
    3280:	00 00                	add    BYTE PTR [rax],al
    3282:	01 27                	add    DWORD PTR [rdi],esp
    3284:	03 c6                	add    eax,esi
    3286:	0c 00                	or     al,0x0
    3288:	00 09                	add    BYTE PTR [rcx],cl
    328a:	03 20                	add    esp,DWORD PTR [rax]
    328c:	44 01 01             	add    DWORD PTR [rcx],r8d
    328f:	00 00                	add    BYTE PTR [rax],al
    3291:	00 00                	add    BYTE PTR [rax],al
    3293:	00 51 04             	add    BYTE PTR [rcx+0x4],dl
    3296:	00 00                	add    BYTE PTR [rax],al
    3298:	04 00                	add    al,0x0
    329a:	a1 0a 00 00 08 01 27 	movabs eax,ds:0x27010800000a
    32a1:	00 00 
    32a3:	00 0c 6b             	add    BYTE PTR [rbx+rbp*2],cl
    32a6:	0d 00 00 e5 00       	or     eax,0xe50000
    32ab:	00 00                	add    BYTE PTR [rax],al
    32ad:	df d0                	fnop   
    32af:	00 01                	add    BYTE PTR [rcx],al
    32b1:	00 00                	add    BYTE PTR [rax],al
    32b3:	00 00                	add    BYTE PTR [rax],al
    32b5:	3c 04                	cmp    al,0x4
    32b7:	00 00                	add    BYTE PTR [rax],al
    32b9:	00 00                	add    BYTE PTR [rax],al
    32bb:	00 00                	add    BYTE PTR [rax],al
    32bd:	21 20                	and    DWORD PTR [rax],esp
    32bf:	00 00                	add    BYTE PTR [rax],al
    32c1:	02 08                	add    cl,BYTE PTR [rax]
    32c3:	05 13 01 00 00       	add    eax,0x113
    32c8:	02 08                	add    cl,BYTE PTR [rax]
    32ca:	07                   	(bad)  
    32cb:	65 10 00             	adc    BYTE PTR gs:[rax],al
    32ce:	00 03                	add    BYTE PTR [rbx],al
    32d0:	04 05                	add    al,0x5
    32d2:	69 6e 74 00 02 08 05 	imul   ebp,DWORD PTR [rsi+0x74],0x5080200
    32d9:	0e                   	(bad)  
    32da:	01 00                	add    DWORD PTR [rax],eax
    32dc:	00 02                	add    BYTE PTR [rdx],al
    32de:	10 04 2e             	adc    BYTE PTR [rsi+rbp*1],al
    32e1:	01 00                	add    DWORD PTR [rax],eax
    32e3:	00 02                	add    BYTE PTR [rdx],al
    32e5:	08 07                	or     BYTE PTR [rdi],al
    32e7:	05 01 00 00 02       	add    eax,0x2000001
    32ec:	04 07                	add    al,0x7
    32ee:	6a 10                	push   0x10
    32f0:	00 00                	add    BYTE PTR [rax],al
    32f2:	04 08                	add    al,0x8
    32f4:	02 01                	add    al,BYTE PTR [rcx]
    32f6:	06                   	(bad)  
    32f7:	c6 00 00             	mov    BYTE PTR [rax],0x0
    32fa:	00 02                	add    BYTE PTR [rdx],al
    32fc:	02 05 1c 01 00 00    	add    al,BYTE PTR [rip+0x11c]        # 341e <MULTIBOOT_HEADER_SIZE+0x33c6>
    3302:	05 30 11 00 00       	add    eax,0x1130
    3307:	02 26                	add    ah,BYTE PTR [rsi]
    3309:	3b 00                	cmp    eax,DWORD PTR [rax]
    330b:	00 00                	add    BYTE PTR [rax],al
    330d:	02 01                	add    al,BYTE PTR [rcx]
    330f:	08 c4                	or     ah,al
    3311:	00 00                	add    BYTE PTR [rax],al
    3313:	00 02                	add    BYTE PTR [rdx],al
    3315:	02 07                	add    al,BYTE PTR [rdi]
    3317:	d2 00                	rol    BYTE PTR [rax],cl
    3319:	00 00                	add    BYTE PTR [rax],al
    331b:	05 2f 11 00 00       	add    eax,0x112f
    3320:	02 33                	add    dh,BYTE PTR [rbx]
    3322:	57                   	push   rdi
    3323:	00 00                	add    BYTE PTR [rax],al
    3325:	00 06                	add    BYTE PTR [rsi],al
    3327:	10 01                	adc    BYTE PTR [rcx],al
    3329:	08 bf 00 00 00 07    	or     BYTE PTR [rdi+0x7000000],bh
    332f:	58                   	pop    rax
    3330:	0d 00 00 01 0a       	or     eax,0xa010000
    3335:	bf 00 00 00 00       	mov    edi,0x0
    333a:	07                   	(bad)  
    333b:	fc                   	cld    
    333c:	0c 00                	or     al,0x0
    333e:	00 01                	add    BYTE PTR [rcx],al
    3340:	0b cc                	or     ecx,esp
    3342:	00 00                	add    BYTE PTR [rax],al
    3344:	00 08                	add    BYTE PTR [rax],cl
    3346:	07                   	(bad)  
    3347:	26 0d 00 00 01 0c    	es or  eax,0xc010000
    334d:	cc                   	int3   
    334e:	00 00                	add    BYTE PTR [rax],al
    3350:	00 09                	add    BYTE PTR [rcx],cl
    3352:	00 08                	add    BYTE PTR [rax],cl
    3354:	08 c5                	or     ch,al
    3356:	00 00                	add    BYTE PTR [rax],al
    3358:	00 02                	add    BYTE PTR [rdx],al
    335a:	01 06                	add    DWORD PTR [rsi],eax
    335c:	cd 00                	int    0x0
    335e:	00 00                	add    BYTE PTR [rax],al
    3360:	02 01                	add    al,BYTE PTR [rcx]
    3362:	02 35 03 00 00 05    	add    dh,BYTE PTR [rip+0x5000003]        # 500336b <kernel_end+0x3fe7373>
    3368:	11 0d 00 00 01 0d    	adc    DWORD PTR [rip+0xd010000],ecx        # d01336e <kernel_end+0xbff7376>
    336e:	92                   	xchg   edx,eax
    336f:	00 00                	add    BYTE PTR [rax],al
    3371:	00 09                	add    BYTE PTR [rcx],cl
    3373:	84 0d 00 00 01 13    	test   BYTE PTR [rip+0x13010000],cl        # 13013379 <kernel_end+0x11ff7381>
    3379:	df d0                	fnop   
    337b:	00 01                	add    BYTE PTR [rcx],al
    337d:	00 00                	add    BYTE PTR [rax],al
    337f:	00 00                	add    BYTE PTR [rax],al
    3381:	20 00                	and    BYTE PTR [rax],al
    3383:	00 00                	add    BYTE PTR [rax],al
    3385:	00 00                	add    BYTE PTR [rax],al
    3387:	00 00                	add    BYTE PTR [rax],al
    3389:	01 9c 09 04 0d 00 00 	add    DWORD PTR [rcx+rcx*1+0xd04],ebx
    3390:	01 18                	add    DWORD PTR [rax],ebx
    3392:	ff d0                	call   rax
    3394:	00 01                	add    BYTE PTR [rcx],al
    3396:	00 00                	add    BYTE PTR [rax],al
    3398:	00 00                	add    BYTE PTR [rax],al
    339a:	20 00                	and    BYTE PTR [rax],al
    339c:	00 00                	add    BYTE PTR [rax],al
    339e:	00 00                	add    BYTE PTR [rax],al
    33a0:	00 00                	add    BYTE PTR [rax],al
    33a2:	01 9c 09 9d 0d 00 00 	add    DWORD PTR [rcx+rcx*1+0xd9d],ebx
    33a9:	01 1d 1f d1 00 01    	add    DWORD PTR [rip+0x100d11f],ebx        # 10104ce <entry+0x4ce>
    33af:	00 00                	add    BYTE PTR [rax],al
    33b1:	00 00                	add    BYTE PTR [rax],al
    33b3:	20 00                	and    BYTE PTR [rax],al
    33b5:	00 00                	add    BYTE PTR [rax],al
    33b7:	00 00                	add    BYTE PTR [rax],al
    33b9:	00 00                	add    BYTE PTR [rax],al
    33bb:	01 9c 0a 38 0d 00 00 	add    DWORD PTR [rdx+rcx*1+0xd38],ebx
    33c2:	01 22                	add    DWORD PTR [rdx],esp
    33c4:	3f                   	(bad)  
    33c5:	d1 00                	rol    DWORD PTR [rax],1
    33c7:	01 00                	add    DWORD PTR [rax],eax
    33c9:	00 00                	add    BYTE PTR [rax],al
    33cb:	00 49 00             	add    BYTE PTR [rcx+0x0],cl
    33ce:	00 00                	add    BYTE PTR [rax],al
    33d0:	00 00                	add    BYTE PTR [rax],al
    33d2:	00 00                	add    BYTE PTR [rax],al
    33d4:	01 9c 73 01 00 00 0b 	add    DWORD PTR [rbx+rsi*2+0xb000001],ebx
    33db:	70 74                	jo     3451 <MULTIBOOT_HEADER_SIZE+0x33f9>
    33dd:	72 00                	jb     33df <MULTIBOOT_HEADER_SIZE+0x3387>
    33df:	01 22                	add    DWORD PTR [rdx],esp
    33e1:	5e                   	pop    rsi
    33e2:	00 00                	add    BYTE PTR [rax],al
    33e4:	00 02                	add    BYTE PTR [rdx],al
    33e6:	91                   	xchg   ecx,eax
    33e7:	58                   	pop    rax
    33e8:	0c 4b                	or     al,0x4b
    33ea:	d1 00                	rol    DWORD PTR [rax],1
    33ec:	01 00                	add    DWORD PTR [rax],eax
    33ee:	00 00                	add    BYTE PTR [rax],al
    33f0:	00 3b                	add    BYTE PTR [rbx],bh
    33f2:	00 00                	add    BYTE PTR [rax],al
    33f4:	00 00                	add    BYTE PTR [rax],al
    33f6:	00 00                	add    BYTE PTR [rax],al
    33f8:	00 0d 69 00 01 24    	add    BYTE PTR [rip+0x24010069],cl        # 24013467 <kernel_end+0x22ff746f>
    33fe:	3b 00                	cmp    eax,DWORD PTR [rax]
    3400:	00 00                	add    BYTE PTR [rax],al
    3402:	02 91 6c 00 00 0e    	add    dl,BYTE PTR [rcx+0xe00006c]
    3408:	62                   	(bad)  
    3409:	0d 00 00 01 2e       	or     eax,0x2e010000
    340e:	cc                   	int3   
    340f:	00 00                	add    BYTE PTR [rax],al
    3411:	00 88 d1 00 01 00    	add    BYTE PTR [rax+0x100d1],cl
    3417:	00 00                	add    BYTE PTR [rax],al
    3419:	00 3e                	add    BYTE PTR [rsi],bh
    341b:	00 00                	add    BYTE PTR [rax],al
    341d:	00 00                	add    BYTE PTR [rax],al
    341f:	00 00                	add    BYTE PTR [rax],al
    3421:	00 01                	add    BYTE PTR [rcx],al
    3423:	9c                   	pushf  
    3424:	b3 01                	mov    bl,0x1
    3426:	00 00                	add    BYTE PTR [rax],al
    3428:	0c 90                	or     al,0x90
    342a:	d1 00                	rol    DWORD PTR [rax],1
    342c:	01 00                	add    DWORD PTR [rax],eax
    342e:	00 00                	add    BYTE PTR [rax],al
    3430:	00 2f                	add    BYTE PTR [rdi],ch
    3432:	00 00                	add    BYTE PTR [rax],al
    3434:	00 00                	add    BYTE PTR [rax],al
    3436:	00 00                	add    BYTE PTR [rax],al
    3438:	00 0d 69 00 01 30    	add    BYTE PTR [rip+0x30010069],cl        # 300134a7 <kernel_end+0x2eff74af>
    343e:	3b 00                	cmp    eax,DWORD PTR [rax]
    3440:	00 00                	add    BYTE PTR [rax],al
    3442:	02 91 6c 00 00 0f    	add    dl,BYTE PTR [rcx+0xf00006c]
    3448:	94                   	xchg   esp,eax
    3449:	0d 00 00 01 3a       	or     eax,0x3a010000
    344e:	c6                   	(bad)  
    344f:	d1 00                	rol    DWORD PTR [rax],1
    3451:	01 00                	add    DWORD PTR [rax],eax
    3453:	00 00                	add    BYTE PTR [rax],al
    3455:	00 59 00             	add    BYTE PTR [rcx+0x0],bl
    3458:	00 00                	add    BYTE PTR [rax],al
    345a:	00 00                	add    BYTE PTR [rax],al
    345c:	00 00                	add    BYTE PTR [rax],al
    345e:	01 9c ef 01 00 00 0c 	add    DWORD PTR [rdi+rbp*8+0xc000001],ebx
    3465:	ce                   	(bad)  
    3466:	d1 00                	rol    DWORD PTR [rax],1
    3468:	01 00                	add    DWORD PTR [rax],eax
    346a:	00 00                	add    BYTE PTR [rax],al
    346c:	00 4e 00             	add    BYTE PTR [rsi+0x0],cl
    346f:	00 00                	add    BYTE PTR [rax],al
    3471:	00 00                	add    BYTE PTR [rax],al
    3473:	00 00                	add    BYTE PTR [rax],al
    3475:	0d 69 00 01 3c       	or     eax,0x3c010069
    347a:	3b 00                	cmp    eax,DWORD PTR [rax]
    347c:	00 00                	add    BYTE PTR [rax],al
    347e:	02 91 6c 00 00 10    	add    dl,BYTE PTR [rcx+0x1000006c]
    3484:	1b 0d 00 00 01 46    	sbb    ecx,DWORD PTR [rip+0x46010000]        # 4601348a <MULTIBOOT_LOADED_MAGIC+0xf29d201>
    348a:	1f                   	(bad)  
    348b:	d2 00                	rol    BYTE PTR [rax],cl
    348d:	01 00                	add    DWORD PTR [rax],eax
    348f:	00 00                	add    BYTE PTR [rax],al
    3491:	00 b6 00 00 00 00    	add    BYTE PTR [rsi+0x0],dh
    3497:	00 00                	add    BYTE PTR [rax],al
    3499:	00 01                	add    BYTE PTR [rcx],al
    349b:	9c                   	pushf  
    349c:	55                   	push   rbp
    349d:	02 00                	add    al,BYTE PTR [rax]
    349f:	00 11                	add    BYTE PTR [rcx],dl
    34a1:	58                   	pop    rax
    34a2:	0d 00 00 01 46       	or     eax,0x46010000
    34a7:	bf 00 00 00 02       	mov    edi,0x2000000
    34ac:	91                   	xchg   ecx,eax
    34ad:	58                   	pop    rax
    34ae:	11 fc                	adc    esp,edi
    34b0:	0c 00                	or     al,0x0
    34b2:	00 01                	add    BYTE PTR [rcx],al
    34b4:	46 cc                	rex.RX int3 
    34b6:	00 00                	add    BYTE PTR [rax],al
    34b8:	00 02                	add    BYTE PTR [rdx],al
    34ba:	91                   	xchg   ecx,eax
    34bb:	54                   	push   rsp
    34bc:	12 56 0d             	adc    dl,BYTE PTR [rsi+0xd]
    34bf:	00 00                	add    BYTE PTR [rax],al
    34c1:	01 48 bf             	add    DWORD PTR [rax-0x41],ecx
    34c4:	00 00                	add    BYTE PTR [rax],al
    34c6:	00 02                	add    BYTE PTR [rdx],al
    34c8:	91                   	xchg   ecx,eax
    34c9:	60                   	(bad)  
    34ca:	0c 46                	or     al,0x46
    34cc:	d2 00                	rol    BYTE PTR [rax],cl
    34ce:	01 00                	add    DWORD PTR [rax],eax
    34d0:	00 00                	add    BYTE PTR [rax],al
    34d2:	00 6d 00             	add    BYTE PTR [rbp+0x0],ch
    34d5:	00 00                	add    BYTE PTR [rax],al
    34d7:	00 00                	add    BYTE PTR [rax],al
    34d9:	00 00                	add    BYTE PTR [rax],al
    34db:	0d 69 00 01 49       	or     eax,0x49010069
    34e0:	3b 00                	cmp    eax,DWORD PTR [rax]
    34e2:	00 00                	add    BYTE PTR [rax],al
    34e4:	02 91 6c 00 00 13    	add    dl,BYTE PTR [rcx+0x1300006c]
    34ea:	41 0d 00 00 01 57    	rex.B or eax,0x57010000
    34f0:	d5                   	(bad)  
    34f1:	d2 00                	rol    BYTE PTR [rax],cl
    34f3:	01 00                	add    DWORD PTR [rax],eax
    34f5:	00 00                	add    BYTE PTR [rax],al
    34f7:	00 74 00 00          	add    BYTE PTR [rax+rax*1+0x0],dh
    34fb:	00 00                	add    BYTE PTR [rax],al
    34fd:	00 00                	add    BYTE PTR [rax],al
    34ff:	00 01                	add    BYTE PTR [rcx],al
    3501:	9c                   	pushf  
    3502:	c1 02 00             	rol    DWORD PTR [rdx],0x0
    3505:	00 11                	add    BYTE PTR [rcx],dl
    3507:	5d                   	pop    rbp
    3508:	0d 00 00 01 57       	or     eax,0x57010000
    350d:	bf 00 00 00 02       	mov    edi,0x2000000
    3512:	91                   	xchg   ecx,eax
    3513:	58                   	pop    rax
    3514:	14 fa                	adc    al,0xfa
    3516:	d2 00                	rol    BYTE PTR [rax],cl
    3518:	01 00                	add    DWORD PTR [rax],eax
    351a:	00 00                	add    BYTE PTR [rax],al
    351c:	00 27                	add    BYTE PTR [rdi],ah
    351e:	00 00                	add    BYTE PTR [rax],al
    3520:	00 00                	add    BYTE PTR [rax],al
    3522:	00 00                	add    BYTE PTR [rax],al
    3524:	00 a2 02 00 00 0d    	add    BYTE PTR [rdx+0xd000002],ah
    352a:	69 00 01 5a 3b 00    	imul   eax,DWORD PTR [rax],0x3b5a01
    3530:	00 00                	add    BYTE PTR [rax],al
    3532:	02 91 6c 00 0c 21    	add    dl,BYTE PTR [rcx+0x210c006c]
    3538:	d3 00                	rol    DWORD PTR [rax],cl
    353a:	01 00                	add    DWORD PTR [rax],eax
    353c:	00 00                	add    BYTE PTR [rax],al
    353e:	00 25 00 00 00 00    	add    BYTE PTR [rip+0x0],ah        # 3544 <MULTIBOOT_HEADER_SIZE+0x34ec>
    3544:	00 00                	add    BYTE PTR [rax],al
    3546:	00 0d 69 00 01 5e    	add    BYTE PTR [rip+0x5e010069],cl        # 5e0135b5 <MULTIBOOT_LOADED_MAGIC+0x2729d32c>
    354c:	3b 00                	cmp    eax,DWORD PTR [rax]
    354e:	00 00                	add    BYTE PTR [rax],al
    3550:	02 91 68 00 00 15    	add    dl,BYTE PTR [rcx+0x15000068]
    3556:	cb                   	retf   
    3557:	09 00                	or     DWORD PTR [rax],eax
    3559:	00 01                	add    BYTE PTR [rcx],al
    355b:	64 49 d3 00          	rol    QWORD PTR fs:[r8],cl
    355f:	01 00                	add    DWORD PTR [rax],eax
    3561:	00 00                	add    BYTE PTR [rax],al
    3563:	00 50 01             	add    BYTE PTR [rax+0x1],dl
    3566:	00 00                	add    BYTE PTR [rax],al
    3568:	00 00                	add    BYTE PTR [rax],al
    356a:	00 00                	add    BYTE PTR [rax],al
    356c:	01 9c 6b 03 00 00 12 	add    DWORD PTR [rbx+rbp*2+0x12000003],ebx
    3573:	8e 0d 00 00 01 67    	mov    cs,WORD PTR [rip+0x67010000]        # 67013579 <MULTIBOOT_LOADED_MAGIC+0x3029d2f0>
    3579:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    357a:	00 00                	add    BYTE PTR [rax],al
    357c:	00 02                	add    BYTE PTR [rdx],al
    357e:	91                   	xchg   ecx,eax
    357f:	6c                   	ins    BYTE PTR es:[rdi],dx
    3580:	12 a8 0d 00 00 01    	adc    ch,BYTE PTR [rax+0x100000d]
    3586:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    3588:	00 00                	add    BYTE PTR [rax],al
    358a:	00 02                	add    BYTE PTR [rdx],al
    358c:	91                   	xchg   ecx,eax
    358d:	68 12 fc 0c 00       	push   0xcfc12
    3592:	00 01                	add    BYTE PTR [rcx],al
    3594:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    3596:	00 00                	add    BYTE PTR [rax],al
    3598:	00 02                	add    BYTE PTR [rdx],al
    359a:	91                   	xchg   ecx,eax
    359b:	64 14 70             	fs adc al,0x70
    359e:	d3 00                	rol    DWORD PTR [rax],cl
    35a0:	01 00                	add    DWORD PTR [rax],eax
    35a2:	00 00                	add    BYTE PTR [rax],al
    35a4:	00 4d 00             	add    BYTE PTR [rbp+0x0],cl
    35a7:	00 00                	add    BYTE PTR [rax],al
    35a9:	00 00                	add    BYTE PTR [rax],al
    35ab:	00 00                	add    BYTE PTR [rax],al
    35ad:	2a 03                	sub    al,BYTE PTR [rbx]
    35af:	00 00                	add    BYTE PTR [rax],al
    35b1:	0d 69 00 01 68       	or     eax,0x68010069
    35b6:	3b 00                	cmp    eax,DWORD PTR [rax]
    35b8:	00 00                	add    BYTE PTR [rax],al
    35ba:	02 91 60 00 14 0b    	add    dl,BYTE PTR [rcx+0xb140060]
    35c0:	d4                   	(bad)  
    35c1:	00 01                	add    BYTE PTR [rcx],al
    35c3:	00 00                	add    BYTE PTR [rax],al
    35c5:	00 00                	add    BYTE PTR [rax],al
    35c7:	66 00 00             	data16 add BYTE PTR [rax],al
    35ca:	00 00                	add    BYTE PTR [rax],al
    35cc:	00 00                	add    BYTE PTR [rax],al
    35ce:	00 4c 03 00          	add    BYTE PTR [rbx+rax*1+0x0],cl
    35d2:	00 0d 69 00 01 7c    	add    BYTE PTR [rip+0x7c010069],cl        # 7c013641 <MULTIBOOT_LOADED_MAGIC+0x4529d3b8>
    35d8:	3b 00                	cmp    eax,DWORD PTR [rax]
    35da:	00 00                	add    BYTE PTR [rax],al
    35dc:	02 91 5c 00 0c 71    	add    dl,BYTE PTR [rcx+0x710c005c]
    35e2:	d4                   	(bad)  
    35e3:	00 01                	add    BYTE PTR [rcx],al
    35e5:	00 00                	add    BYTE PTR [rax],al
    35e7:	00 00                	add    BYTE PTR [rax],al
    35e9:	25 00 00 00 00       	and    eax,0x0
    35ee:	00 00                	add    BYTE PTR [rax],al
    35f0:	00 0d 69 00 01 84    	add    BYTE PTR [rip+0xffffffff84010069],cl        # ffffffff8401365f <MULTIBOOT_CHECK_SUM+0x6c53878d>
    35f6:	3b 00                	cmp    eax,DWORD PTR [rax]
    35f8:	00 00                	add    BYTE PTR [rax],al
    35fa:	02 91 58 00 00 16    	add    dl,BYTE PTR [rcx+0x16000058]
    3600:	31 0d 00 00 01 8a    	xor    DWORD PTR [rip+0xffffffff8a010000],ecx        # ffffffff8a013606 <MULTIBOOT_CHECK_SUM+0x72538734>
    3606:	5e                   	pop    rsi
    3607:	00 00                	add    BYTE PTR [rax],al
    3609:	00 99 d4 00 01 00    	add    BYTE PTR [rcx+0x100d4],bl
    360f:	00 00                	add    BYTE PTR [rax],al
    3611:	00 5c 00 00          	add    BYTE PTR [rax+rax*1+0x0],bl
    3615:	00 00                	add    BYTE PTR [rax],al
    3617:	00 00                	add    BYTE PTR [rax],al
    3619:	00 01                	add    BYTE PTR [rcx],al
    361b:	9c                   	pushf  
    361c:	bb 03 00 00 11       	mov    ebx,0x11000003
    3621:	30 03                	xor    BYTE PTR [rbx],al
    3623:	00 00                	add    BYTE PTR [rax],al
    3625:	01 8a 87 00 00 00    	add    DWORD PTR [rdx+0x87],ecx
    362b:	02 91 5c 0c b5 d4    	add    dl,BYTE PTR [rcx-0x2b4af3a4]
    3631:	00 01                	add    BYTE PTR [rcx],al
    3633:	00 00                	add    BYTE PTR [rax],al
    3635:	00 00                	add    BYTE PTR [rax],al
    3637:	20 00                	and    BYTE PTR [rax],al
    3639:	00 00                	add    BYTE PTR [rax],al
    363b:	00 00                	add    BYTE PTR [rax],al
    363d:	00 00                	add    BYTE PTR [rax],al
    363f:	12 44 04 00          	adc    al,BYTE PTR [rsp+rax*1+0x0]
    3643:	00 01                	add    BYTE PTR [rcx],al
    3645:	8e 5e 00             	mov    ds,WORD PTR [rsi+0x0]
    3648:	00 00                	add    BYTE PTR [rax],al
    364a:	02 91 68 00 00 17    	add    dl,BYTE PTR [rcx+0x17000068]
    3650:	af                   	scas   eax,DWORD PTR es:[rdi]
    3651:	0d 00 00 01 9a       	or     eax,0x9a010000
    3656:	f5                   	cmc    
    3657:	d4                   	(bad)  
    3658:	00 01                	add    BYTE PTR [rcx],al
    365a:	00 00                	add    BYTE PTR [rax],al
    365c:	00 00                	add    BYTE PTR [rax],al
    365e:	26 00 00             	add    BYTE PTR es:[rax],al
    3661:	00 00                	add    BYTE PTR [rax],al
    3663:	00 00                	add    BYTE PTR [rax],al
    3665:	00 01                	add    BYTE PTR [rcx],al
    3667:	9c                   	pushf  
    3668:	f5                   	cmc    
    3669:	03 00                	add    eax,DWORD PTR [rax]
    366b:	00 11                	add    BYTE PTR [rcx],dl
    366d:	5d                   	pop    rbp
    366e:	0d 00 00 01 9a       	or     eax,0x9a010000
    3673:	bf 00 00 00 02       	mov    edi,0x2000000
    3678:	91                   	xchg   ecx,eax
    3679:	68 11 44 04 00       	push   0x44411
    367e:	00 01                	add    BYTE PTR [rcx],al
    3680:	9a                   	(bad)  
    3681:	cc                   	int3   
    3682:	00 00                	add    BYTE PTR [rax],al
    3684:	00 02                	add    BYTE PTR [rdx],al
    3686:	91                   	xchg   ecx,eax
    3687:	64 00 18             	add    BYTE PTR fs:[rax],bl
    368a:	d3 00                	rol    DWORD PTR [rax],cl
    368c:	00 00                	add    BYTE PTR [rax],al
    368e:	05 04 00 00 19       	add    eax,0x19000004
    3693:	50                   	push   rax
    3694:	00 00                	add    BYTE PTR [rax],al
    3696:	00 1f                	add    BYTE PTR [rdi],bl
    3698:	00 12                	add    BYTE PTR [rdx],dl
    369a:	2b 0d 00 00 01 0f    	sub    ecx,DWORD PTR [rip+0xf010000]        # f0136a0 <kernel_end+0xdff76a8>
    36a0:	f5                   	cmc    
    36a1:	03 00                	add    eax,DWORD PTR [rax]
    36a3:	00 09                	add    BYTE PTR [rcx],cl
    36a5:	03 40 92             	add    eax,DWORD PTR [rax-0x6e]
    36a8:	01 01                	add    DWORD PTR [rcx],eax
    36aa:	00 00                	add    BYTE PTR [rax],al
    36ac:	00 00                	add    BYTE PTR [rax],al
    36ae:	18 5e 00             	sbb    BYTE PTR [rsi+0x0],bl
    36b1:	00 00                	add    BYTE PTR [rax],al
    36b3:	2a 04 00             	sub    al,BYTE PTR [rax+rax*1]
    36b6:	00 19                	add    BYTE PTR [rcx],bl
    36b8:	50                   	push   rax
    36b9:	00 00                	add    BYTE PTR [rax],al
    36bb:	00 ff                	add    bh,bh
    36bd:	00 0d 67 61 74 00    	add    BYTE PTR [rip+0x746167],cl        # 74982a <MULTIBOOT_HEADER_SIZE+0x7497d2>
    36c3:	01 10                	add    DWORD PTR [rax],edx
    36c5:	1a 04 00             	sbb    al,BYTE PTR [rax+rax*1]
    36c8:	00 09                	add    BYTE PTR [rcx],cl
    36ca:	03 40 94             	add    eax,DWORD PTR [rax-0x6c]
    36cd:	01 01                	add    DWORD PTR [rcx],eax
    36cf:	00 00                	add    BYTE PTR [rax],al
    36d1:	00 00                	add    BYTE PTR [rax],al
    36d3:	12 4c 0d 00          	adc    cl,BYTE PTR [rbp+rcx*1+0x0]
    36d7:	00 01                	add    BYTE PTR [rcx],al
    36d9:	11 bf 00 00 00 09    	adc    DWORD PTR [rdi+0x9000000],edi
    36df:	03 40 9c             	add    eax,DWORD PTR [rax-0x64]
    36e2:	01 01                	add    DWORD PTR [rcx],eax
    36e4:	00 00                	add    BYTE PTR [rax],al
    36e6:	00 00                	add    BYTE PTR [rax],al
    36e8:	00 b8 04 00 00 04    	add    BYTE PTR [rax+0x4000004],bh
    36ee:	00 40 0c             	add    BYTE PTR [rax+0xc],al
    36f1:	00 00                	add    BYTE PTR [rax],al
    36f3:	08 01                	or     BYTE PTR [rcx],al
    36f5:	27                   	(bad)  
    36f6:	00 00                	add    BYTE PTR [rax],al
    36f8:	00 0c df             	add    BYTE PTR [rdi+rbx*8],cl
    36fb:	0d 00 00 e5 00       	or     eax,0xe50000
    3700:	00 00                	add    BYTE PTR [rax],al
    3702:	1b d5                	sbb    edx,ebp
    3704:	00 01                	add    BYTE PTR [rcx],al
    3706:	00 00                	add    BYTE PTR [rax],al
    3708:	00 00                	add    BYTE PTR [rax],al
    370a:	05 07 00 00 00       	add    eax,0x7
    370f:	00 00                	add    BYTE PTR [rax],al
    3711:	00 b7 21 00 00 02    	add    BYTE PTR [rdi+0x2000021],dh
    3717:	01 06                	add    DWORD PTR [rsi],eax
    3719:	c6 00 00             	mov    BYTE PTR [rax],0x0
    371c:	00 02                	add    BYTE PTR [rdx],al
    371e:	02 05 1c 01 00 00    	add    al,BYTE PTR [rip+0x11c]        # 3840 <MULTIBOOT_HEADER_SIZE+0x37e8>
    3724:	03 30                	add    esi,DWORD PTR [rax]
    3726:	11 00                	adc    DWORD PTR [rax],eax
    3728:	00 04 26             	add    BYTE PTR [rsi+riz*1],al
    372b:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    372e:	00 04 04             	add    BYTE PTR [rsp+rax*1],al
    3731:	05 69 6e 74 00       	add    eax,0x746e69
    3736:	03 7c 11 00          	add    edi,DWORD PTR [rcx+rdx*1+0x0]
    373a:	00 04 28             	add    BYTE PTR [rax+rbp*1],al
    373d:	58                   	pop    rax
    373e:	00 00                	add    BYTE PTR [rax],al
    3740:	00 02                	add    BYTE PTR [rdx],al
    3742:	08 05 13 01 00 00    	or     BYTE PTR [rip+0x113],al        # 385b <MULTIBOOT_HEADER_SIZE+0x3803>
    3748:	03 24 0e             	add    esp,DWORD PTR [rsi+rcx*1]
    374b:	00 00                	add    BYTE PTR [rax],al
    374d:	04 30                	add    al,0x30
    374f:	6a 00                	push   0x0
    3751:	00 00                	add    BYTE PTR [rax],al
    3753:	02 01                	add    al,BYTE PTR [rcx]
    3755:	08 c4                	or     ah,al
    3757:	00 00                	add    BYTE PTR [rax],al
    3759:	00 03                	add    BYTE PTR [rbx],al
    375b:	c3                   	ret    
    375c:	0e                   	(bad)  
    375d:	00 00                	add    BYTE PTR [rax],al
    375f:	04 31                	add    al,0x31
    3761:	7c 00                	jl     3763 <MULTIBOOT_HEADER_SIZE+0x370b>
    3763:	00 00                	add    BYTE PTR [rax],al
    3765:	02 02                	add    al,BYTE PTR [rdx]
    3767:	07                   	(bad)  
    3768:	d2 00                	rol    BYTE PTR [rax],cl
    376a:	00 00                	add    BYTE PTR [rax],al
    376c:	03 2f                	add    ebp,DWORD PTR [rdi]
    376e:	11 00                	adc    DWORD PTR [rax],eax
    3770:	00 04 33             	add    BYTE PTR [rbx+rsi*1],al
    3773:	8e 00                	mov    es,WORD PTR [rax]
    3775:	00 00                	add    BYTE PTR [rax],al
    3777:	02 04 07             	add    al,BYTE PTR [rdi+rax*1]
    377a:	6a 10                	push   0x10
    377c:	00 00                	add    BYTE PTR [rax],al
    377e:	03 7b 11             	add    edi,DWORD PTR [rbx+0x11]
    3781:	00 00                	add    BYTE PTR [rax],al
    3783:	04 37                	add    al,0x37
    3785:	a0 00 00 00 02 08 07 	movabs al,ds:0x1065070802000000
    378c:	65 10 
    378e:	00 00                	add    BYTE PTR [rax],al
    3790:	02 08                	add    cl,BYTE PTR [rax]
    3792:	05 0e 01 00 00       	add    eax,0x10e
    3797:	02 10                	add    dl,BYTE PTR [rax]
    3799:	04 2e                	add    al,0x2e
    379b:	01 00                	add    DWORD PTR [rax],eax
    379d:	00 02                	add    BYTE PTR [rdx],al
    379f:	08 07                	or     BYTE PTR [rdi],al
    37a1:	05 01 00 00 05       	add    eax,0x5000001
    37a6:	08 06                	or     BYTE PTR [rsi],al
    37a8:	0a 05 0c df 00 00    	or     al,BYTE PTR [rip+0xdf0c]        # 116ba <MULTIBOOT_HEADER_SIZE+0x11662>
    37ae:	00 07                	add    BYTE PTR [rdi],al
    37b0:	b8 0d 00 00 05       	mov    eax,0x500000d
    37b5:	0e                   	(bad)  
    37b6:	71 00                	jno    37b8 <MULTIBOOT_HEADER_SIZE+0x3760>
    37b8:	00 00                	add    BYTE PTR [rax],al
    37ba:	00 07                	add    BYTE PTR [rdi],al
    37bc:	b7 0e                	mov    bh,0xe
    37be:	00 00                	add    BYTE PTR [rax],al
    37c0:	05 0f 95 00 00       	add    eax,0x950f
    37c5:	00 02                	add    BYTE PTR [rdx],al
    37c7:	00 03                	add    BYTE PTR [rbx],al
    37c9:	76 0e                	jbe    37d9 <MULTIBOOT_HEADER_SIZE+0x3781>
    37cb:	00 00                	add    BYTE PTR [rax],al
    37cd:	05 10 be 00 00       	add    eax,0xbe10
    37d2:	00 06                	add    BYTE PTR [rsi],al
    37d4:	28 06                	sub    BYTE PTR [rsi],al
    37d6:	40 2d 01 00 00 08    	rex sub eax,0x8000001
    37dc:	72 69                	jb     3847 <MULTIBOOT_HEADER_SIZE+0x37ef>
    37de:	70 00                	jo     37e0 <MULTIBOOT_HEADER_SIZE+0x3788>
    37e0:	06                   	(bad)  
    37e1:	42 2d 01 00 00 00    	rex.X sub eax,0x1
    37e7:	08 63 73             	or     BYTE PTR [rbx+0x73],ah
    37ea:	00 06                	add    BYTE PTR [rsi],al
    37ec:	43 2d 01 00 00 08    	rex.XB sub eax,0x8000001
    37f2:	07                   	(bad)  
    37f3:	bc 0e 00 00 06       	mov    esp,0x600000e
    37f8:	44 2d 01 00 00 10    	rex.R sub eax,0x10000001
    37fe:	08 72 73             	or     BYTE PTR [rdx+0x73],dh
    3801:	70 00                	jo     3803 <MULTIBOOT_HEADER_SIZE+0x37ab>
    3803:	06                   	(bad)  
    3804:	45 2d 01 00 00 18    	rex.RB sub eax,0x18000001
    380a:	08 73 73             	or     BYTE PTR [rbx+0x73],dh
    380d:	00 06                	add    BYTE PTR [rsi],al
    380f:	46 2d 01 00 00 20    	rex.RX sub eax,0x20000001
    3815:	00 09                	add    BYTE PTR [rcx],cl
    3817:	95                   	xchg   ebp,eax
    3818:	00 00                	add    BYTE PTR [rax],al
    381a:	00 03                	add    BYTE PTR [rbx],al
    381c:	4b 0f 00 00          	rex.WXB sldt WORD PTR [r8]
    3820:	06                   	(bad)  
    3821:	47 ea                	rex.RXB (bad) 
    3823:	00 00                	add    BYTE PTR [rax],al
    3825:	00 0a                	add    BYTE PTR [rdx],cl
    3827:	6a 0e                	push   0xe
    3829:	00 00                	add    BYTE PTR [rax],al
    382b:	01 0c 95 00 00 00 1b 	add    DWORD PTR [rdx*4+0x1b000000],ecx
    3832:	d5                   	(bad)  
    3833:	00 01                	add    BYTE PTR [rcx],al
    3835:	00 00                	add    BYTE PTR [rax],al
    3837:	00 00                	add    BYTE PTR [rax],al
    3839:	1d 00 00 00 00       	sbb    eax,0x0
    383e:	00 00                	add    BYTE PTR [rax],al
    3840:	00 01                	add    BYTE PTR [rcx],al
    3842:	9c                   	pushf  
    3843:	6d                   	ins    DWORD PTR es:[rdi],dx
    3844:	01 00                	add    DWORD PTR [rax],eax
    3846:	00 0b                	add    BYTE PTR [rbx],cl
    3848:	62                   	(bad)  
    3849:	69 74 00 01 0c 83 00 	imul   esi,DWORD PTR [rax+rax*1+0x1],0x830c
    3850:	00 
    3851:	00 02                	add    BYTE PTR [rdx],al
    3853:	91                   	xchg   ecx,eax
    3854:	6c                   	ins    BYTE PTR es:[rdi],dx
    3855:	00 0a                	add    BYTE PTR [rdx],cl
    3857:	47 05 00 00 01 11    	rex.RXB add eax,0x11010000
    385d:	83 00 00             	add    DWORD PTR [rax],0x0
    3860:	00 38                	add    BYTE PTR [rax],bh
    3862:	d5                   	(bad)  
    3863:	00 01                	add    BYTE PTR [rcx],al
    3865:	00 00                	add    BYTE PTR [rax],al
    3867:	00 00                	add    BYTE PTR [rax],al
    3869:	1b 00                	sbb    eax,DWORD PTR [rax]
    386b:	00 00                	add    BYTE PTR [rax],al
    386d:	00 00                	add    BYTE PTR [rax],al
    386f:	00 00                	add    BYTE PTR [rax],al
    3871:	01 9c 9d 01 00 00 0b 	add    DWORD PTR [rbp+rbx*4+0xb000001],ebx
    3878:	62                   	(bad)  
    3879:	69 74 00 01 11 83 00 	imul   esi,DWORD PTR [rax+rax*1+0x1],0x8311
    3880:	00 
    3881:	00 02                	add    BYTE PTR [rdx],al
    3883:	91                   	xchg   ecx,eax
    3884:	6c                   	ins    BYTE PTR es:[rdi],dx
    3885:	00 0a                	add    BYTE PTR [rdx],cl
    3887:	39 0f                	cmp    DWORD PTR [rdi],ecx
    3889:	00 00                	add    BYTE PTR [rax],al
    388b:	01 16                	add    DWORD PTR [rsi],edx
    388d:	95                   	xchg   ebp,eax
    388e:	00 00                	add    BYTE PTR [rax],al
    3890:	00 53 d5             	add    BYTE PTR [rbx-0x2b],dl
    3893:	00 01                	add    BYTE PTR [rcx],al
    3895:	00 00                	add    BYTE PTR [rax],al
    3897:	00 00                	add    BYTE PTR [rax],al
    3899:	36 00 00             	add    BYTE PTR ss:[rax],al
    389c:	00 00                	add    BYTE PTR [rax],al
    389e:	00 00                	add    BYTE PTR [rax],al
    38a0:	00 01                	add    BYTE PTR [rcx],al
    38a2:	9c                   	pushf  
    38a3:	db 01                	fild   DWORD PTR [rcx]
    38a5:	00 00                	add    BYTE PTR [rax],al
    38a7:	0b 6c 6f 77          	or     ebp,DWORD PTR [rdi+rbp*2+0x77]
    38ab:	00 01                	add    BYTE PTR [rcx],al
    38ad:	16                   	(bad)  
    38ae:	83 00 00             	add    DWORD PTR [rax],0x0
    38b1:	00 02                	add    BYTE PTR [rdx],al
    38b3:	91                   	xchg   ecx,eax
    38b4:	6c                   	ins    BYTE PTR es:[rdi],dx
    38b5:	0c f2                	or     al,0xf2
    38b7:	04 00                	add    al,0x0
    38b9:	00 01                	add    BYTE PTR [rcx],al
    38bb:	16                   	(bad)  
    38bc:	83 00 00             	add    DWORD PTR [rax],0x0
    38bf:	00 02                	add    BYTE PTR [rdx],al
    38c1:	91                   	xchg   ecx,eax
    38c2:	68 00 0a cc 0e       	push   0xecc0a00
    38c7:	00 00                	add    BYTE PTR [rax],al
    38c9:	02 11                	add    dl,BYTE PTR [rcx]
    38cb:	83 00 00             	add    DWORD PTR [rax],0x0
    38ce:	00 89 d5 00 01 00    	add    BYTE PTR [rcx+0x100d5],cl
    38d4:	00 00                	add    BYTE PTR [rax],al
    38d6:	00 1f                	add    BYTE PTR [rdi],bl
    38d8:	00 00                	add    BYTE PTR [rax],al
    38da:	00 00                	add    BYTE PTR [rax],al
    38dc:	00 00                	add    BYTE PTR [rax],al
    38de:	00 01                	add    BYTE PTR [rcx],al
    38e0:	9c                   	pushf  
    38e1:	19 02                	sbb    DWORD PTR [rdx],eax
    38e3:	00 00                	add    BYTE PTR [rax],al
    38e5:	0c 35                	or     al,0x35
    38e7:	07                   	(bad)  
    38e8:	00 00                	add    BYTE PTR [rax],al
    38ea:	02 11                	add    dl,BYTE PTR [rcx]
    38ec:	83 00 00             	add    DWORD PTR [rax],0x0
    38ef:	00 02                	add    BYTE PTR [rdx],al
    38f1:	91                   	xchg   ecx,eax
    38f2:	6c                   	ins    BYTE PTR es:[rdi],dx
    38f3:	0b 72 70             	or     esi,DWORD PTR [rdx+0x70]
    38f6:	6c                   	ins    BYTE PTR es:[rdi],dx
    38f7:	00 02                	add    BYTE PTR [rdx],al
    38f9:	11 83 00 00 00 02    	adc    DWORD PTR [rbx+0x2000000],eax
    38ff:	91                   	xchg   ecx,eax
    3900:	68 00 0d e7 0e       	push   0xee70d00
    3905:	00 00                	add    BYTE PTR [rax],al
    3907:	03 0d a8 d5 00 01    	add    ecx,DWORD PTR [rip+0x100d5a8]        # 1010eb5 <entry+0xeb5>
    390d:	00 00                	add    BYTE PTR [rax],al
    390f:	00 00                	add    BYTE PTR [rax],al
    3911:	09 01                	or     DWORD PTR [rcx],eax
    3913:	00 00                	add    BYTE PTR [rax],al
    3915:	00 00                	add    BYTE PTR [rax],al
    3917:	00 00                	add    BYTE PTR [rax],al
    3919:	01 9c 6f 02 00 00 0c 	add    DWORD PTR [rdi+rbp*2+0xc000002],ebx
    3920:	f1                   	icebp  
    3921:	0e                   	(bad)  
    3922:	00 00                	add    BYTE PTR [rax],al
    3924:	03 0d 6f 02 00 00    	add    ecx,DWORD PTR [rip+0x26f]        # 3b99 <MULTIBOOT_HEADER_SIZE+0x3b41>
    392a:	02 91 68 0c 8e 0e    	add    dl,BYTE PTR [rcx+0xe8e0c68]
    3930:	00 00                	add    BYTE PTR [rax],al
    3932:	03 0e                	add    ecx,DWORD PTR [rsi]
    3934:	2d 01 00 00 02       	sub    eax,0x2000001
    3939:	91                   	xchg   ecx,eax
    393a:	60                   	(bad)  
    393b:	0c d0                	or     al,0xd0
    393d:	0e                   	(bad)  
    393e:	00 00                	add    BYTE PTR [rax],al
    3940:	03 0f                	add    ecx,DWORD PTR [rdi]
    3942:	74 02                	je     3946 <MULTIBOOT_HEADER_SIZE+0x38ee>
    3944:	00 00                	add    BYTE PTR [rax],al
    3946:	02 91 5c 0c 04 0f    	add    dl,BYTE PTR [rcx+0xf040c5c]
    394c:	00 00                	add    BYTE PTR [rax],al
    394e:	03 10                	add    edx,DWORD PTR [rax]
    3950:	74 02                	je     3954 <MULTIBOOT_HEADER_SIZE+0x38fc>
    3952:	00 00                	add    BYTE PTR [rax],al
    3954:	02 91 58 00 09 bc    	add    dl,BYTE PTR [rcx-0x43f6ffa8]
    395a:	00 00                	add    BYTE PTR [rax],al
    395c:	00 09                	add    BYTE PTR [rcx],cl
    395e:	83 00 00             	add    DWORD PTR [rax],0x0
    3961:	00 0e                	add    BYTE PTR [rsi],cl
    3963:	50                   	push   rax
    3964:	0e                   	(bad)  
    3965:	00 00                	add    BYTE PTR [rax],al
    3967:	03 25 b1 d6 00 01    	add    esp,DWORD PTR [rip+0x100d6b1]        # 101101e <entry+0x101e>
    396d:	00 00                	add    BYTE PTR [rax],al
    396f:	00 00                	add    BYTE PTR [rax],al
    3971:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    3974:	00 00                	add    BYTE PTR [rax],al
    3976:	00 00                	add    BYTE PTR [rax],al
    3978:	00 01                	add    BYTE PTR [rcx],al
    397a:	9c                   	pushf  
    397b:	b3 02                	mov    bl,0x2
    397d:	00 00                	add    BYTE PTR [rax],al
    397f:	0c 35                	or     al,0x35
    3981:	07                   	(bad)  
    3982:	00 00                	add    BYTE PTR [rax],al
    3984:	03 25 95 00 00 00    	add    esp,DWORD PTR [rip+0x95]        # 3a1f <MULTIBOOT_HEADER_SIZE+0x39c7>
    398a:	02 91 68 0c 54 14    	add    dl,BYTE PTR [rcx+0x14540c68]
    3990:	00 00                	add    BYTE PTR [rax],al
    3992:	03 26                	add    esp,DWORD PTR [rsi]
    3994:	b4 02                	mov    ah,0x2
    3996:	00 00                	add    BYTE PTR [rax],al
    3998:	02 91 60 00 0f 10    	add    dl,BYTE PTR [rcx+0x100f0060]
    399e:	08 b3 02 00 00 0d    	or     BYTE PTR [rbx+0xd000002],dh
    39a4:	f2 0d 00 00 03 30    	repnz or eax,0x30030000
    39aa:	ff d6                	call   rsi
    39ac:	00 01                	add    BYTE PTR [rcx],al
    39ae:	00 00                	add    BYTE PTR [rax],al
    39b0:	00 00                	add    BYTE PTR [rax],al
    39b2:	2b 00                	sub    eax,DWORD PTR [rax]
    39b4:	00 00                	add    BYTE PTR [rax],al
    39b6:	00 00                	add    BYTE PTR [rax],al
    39b8:	00 00                	add    BYTE PTR [rax],al
    39ba:	01 9c f4 02 00 00 0c 	add    DWORD PTR [rsp+rsi*8+0xc000002],ebx
    39c1:	35 07 00 00 03       	xor    eax,0x3000007
    39c6:	30 95 00 00 00 02    	xor    BYTE PTR [rbp+0x2000000],dl
    39cc:	91                   	xchg   ecx,eax
    39cd:	68 0c 54 14 00       	push   0x14540c
    39d2:	00 03                	add    BYTE PTR [rbx],al
    39d4:	31 09                	xor    DWORD PTR [rcx],ecx
    39d6:	03 00                	add    eax,DWORD PTR [rax]
    39d8:	00 02                	add    BYTE PTR [rdx],al
    39da:	91                   	xchg   ecx,eax
    39db:	60                   	(bad)  
    39dc:	00 11                	add    BYTE PTR [rcx],dl
    39de:	09 03                	or     DWORD PTR [rbx],eax
    39e0:	00 00                	add    BYTE PTR [rax],al
    39e2:	12 95 00 00 00 12    	adc    dl,BYTE PTR [rbp+0x12000000]
    39e8:	95                   	xchg   ebp,eax
    39e9:	00 00                	add    BYTE PTR [rax],al
    39eb:	00 12                	add    BYTE PTR [rdx],dl
    39ed:	95                   	xchg   ebp,eax
    39ee:	00 00                	add    BYTE PTR [rax],al
    39f0:	00 00                	add    BYTE PTR [rax],al
    39f2:	10 08                	adc    BYTE PTR [rax],cl
    39f4:	f4                   	hlt    
    39f5:	02 00                	add    al,BYTE PTR [rax]
    39f7:	00 0d be 0d 00 00    	add    BYTE PTR [rip+0xdbe],cl        # 47bb <MULTIBOOT_HEADER_SIZE+0x4763>
    39fd:	03 3c 2a             	add    edi,DWORD PTR [rdx+rbp*1]
    3a00:	d7                   	xlat   BYTE PTR ds:[rbx]
    3a01:	00 01                	add    BYTE PTR [rcx],al
    3a03:	00 00                	add    BYTE PTR [rax],al
    3a05:	00 00                	add    BYTE PTR [rax],al
    3a07:	27                   	(bad)  
    3a08:	00 00                	add    BYTE PTR [rax],al
    3a0a:	00 00                	add    BYTE PTR [rax],al
    3a0c:	00 00                	add    BYTE PTR [rax],al
    3a0e:	00 01                	add    BYTE PTR [rcx],al
    3a10:	9c                   	pushf  
    3a11:	3b 03                	cmp    eax,DWORD PTR [rbx]
    3a13:	00 00                	add    BYTE PTR [rax],al
    3a15:	0c 35                	or     al,0x35
    3a17:	07                   	(bad)  
    3a18:	00 00                	add    BYTE PTR [rax],al
    3a1a:	03 3c 95 00 00 00 02 	add    edi,DWORD PTR [rdx*4+0x2000000]
    3a21:	91                   	xchg   ecx,eax
    3a22:	68 00 0e 19 0e       	push   0xe190e00
    3a27:	00 00                	add    BYTE PTR [rax],al
    3a29:	03 45 51             	add    eax,DWORD PTR [rbp+0x51]
    3a2c:	d7                   	xlat   BYTE PTR ds:[rbx]
    3a2d:	00 01                	add    BYTE PTR [rcx],al
    3a2f:	00 00                	add    BYTE PTR [rax],al
    3a31:	00 00                	add    BYTE PTR [rax],al
    3a33:	49 00 00             	rex.WB add BYTE PTR [r8],al
    3a36:	00 00                	add    BYTE PTR [rax],al
    3a38:	00 00                	add    BYTE PTR [rax],al
    3a3a:	00 01                	add    BYTE PTR [rcx],al
    3a3c:	9c                   	pushf  
    3a3d:	75 03                	jne    3a42 <MULTIBOOT_HEADER_SIZE+0x39ea>
    3a3f:	00 00                	add    BYTE PTR [rax],al
    3a41:	0c 09                	or     al,0x9
    3a43:	0f 00 00             	sldt   WORD PTR [rax]
    3a46:	03 45 4d             	add    eax,DWORD PTR [rbp+0x4d]
    3a49:	00 00                	add    BYTE PTR [rax],al
    3a4b:	00 02                	add    BYTE PTR [rdx],al
    3a4d:	91                   	xchg   ecx,eax
    3a4e:	68 0c 11 0e 00       	push   0xe110c
    3a53:	00 03                	add    BYTE PTR [rbx],al
    3a55:	46 75 03             	rex.RX jne 3a5b <MULTIBOOT_HEADER_SIZE+0x3a03>
    3a58:	00 00                	add    BYTE PTR [rax],al
    3a5a:	02 91 60 00 10 08    	add    dl,BYTE PTR [rcx+0x8100060]
    3a60:	7b 03                	jnp    3a65 <MULTIBOOT_HEADER_SIZE+0x3a0d>
    3a62:	00 00                	add    BYTE PTR [rax],al
    3a64:	02 01                	add    al,BYTE PTR [rcx]
    3a66:	06                   	(bad)  
    3a67:	cd 00                	int    0x0
    3a69:	00 00                	add    BYTE PTR [rax],al
    3a6b:	0e                   	(bad)  
    3a6c:	37                   	(bad)  
    3a6d:	0e                   	(bad)  
    3a6e:	00 00                	add    BYTE PTR [rax],al
    3a70:	03 50 9a             	add    edx,DWORD PTR [rax-0x66]
    3a73:	d7                   	xlat   BYTE PTR ds:[rbx]
    3a74:	00 01                	add    BYTE PTR [rcx],al
    3a76:	00 00                	add    BYTE PTR [rax],al
    3a78:	00 00                	add    BYTE PTR [rax],al
    3a7a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3a7b:	00 00                	add    BYTE PTR [rax],al
    3a7d:	00 00                	add    BYTE PTR [rax],al
    3a7f:	00 00                	add    BYTE PTR [rax],al
    3a81:	00 01                	add    BYTE PTR [rcx],al
    3a83:	9c                   	pushf  
    3a84:	ca 03 00             	retf   0x3
    3a87:	00 0c f6             	add    BYTE PTR [rsi+rsi*8],cl
    3a8a:	0e                   	(bad)  
    3a8b:	00 00                	add    BYTE PTR [rax],al
    3a8d:	03 50 95             	add    edx,DWORD PTR [rax-0x6b]
    3a90:	00 00                	add    BYTE PTR [rax],al
    3a92:	00 02                	add    BYTE PTR [rdx],al
    3a94:	91                   	xchg   ecx,eax
    3a95:	68 0c 95 0e 00       	push   0xe950c
    3a9a:	00 03                	add    BYTE PTR [rbx],al
    3a9c:	50                   	push   rax
    3a9d:	ca 03 00             	retf   0x3
    3aa0:	00 02                	add    BYTE PTR [rdx],al
    3aa2:	91                   	xchg   ecx,eax
    3aa3:	60                   	(bad)  
    3aa4:	0c 2c                	or     al,0x2c
    3aa6:	0e                   	(bad)  
    3aa7:	00 00                	add    BYTE PTR [rax],al
    3aa9:	03 50 95             	add    edx,DWORD PTR [rax-0x6b]
    3aac:	00 00                	add    BYTE PTR [rax],al
    3aae:	00 02                	add    BYTE PTR [rdx],al
    3ab0:	91                   	xchg   ecx,eax
    3ab1:	58                   	pop    rax
    3ab2:	00 10                	add    BYTE PTR [rax],dl
    3ab4:	08 32                	or     BYTE PTR [rdx],dh
    3ab6:	01 00                	add    DWORD PTR [rax],eax
    3ab8:	00 13                	add    BYTE PTR [rbx],dl
    3aba:	14 0f                	adc    al,0xf
    3abc:	00 00                	add    BYTE PTR [rax],al
    3abe:	03 5d 09             	add    ebx,DWORD PTR [rbp+0x9]
    3ac1:	d8 00                	fadd   DWORD PTR [rax]
    3ac3:	01 00                	add    DWORD PTR [rax],eax
    3ac5:	00 00                	add    BYTE PTR [rax],al
    3ac7:	00 9c 01 00 00 00 00 	add    BYTE PTR [rcx+rax*1+0x0],bl
    3ace:	00 00                	add    BYTE PTR [rax],al
    3ad0:	01 9c 14 26 0f 00 00 	add    DWORD PTR [rsp+rdx*1+0xf26],ebx
    3ad7:	03 7f 3b             	add    edi,DWORD PTR [rdi+0x3b]
    3ada:	00 00                	add    BYTE PTR [rax],al
    3adc:	00 a5 d9 00 01 00    	add    BYTE PTR [rbp+0x100d9],ah
    3ae2:	00 00                	add    BYTE PTR [rax],al
    3ae4:	00 7b 02             	add    BYTE PTR [rbx+0x2],bh
    3ae7:	00 00                	add    BYTE PTR [rax],al
    3ae9:	00 00                	add    BYTE PTR [rax],al
    3aeb:	00 00                	add    BYTE PTR [rax],al
    3aed:	01 9c 7f 04 00 00 15 	add    DWORD PTR [rdi+rdi*2+0x15000004],ebx
    3af4:	65 61                	gs (bad) 
    3af6:	78 00                	js     3af8 <MULTIBOOT_HEADER_SIZE+0x3aa0>
    3af8:	03 81 83 00 00 00    	add    eax,DWORD PTR [rcx+0x83]
    3afe:	02 91 44 15 65 62    	add    dl,BYTE PTR [rcx+0x62651544]
    3b04:	78 00                	js     3b06 <MULTIBOOT_HEADER_SIZE+0x3aae>
    3b06:	03 81 83 00 00 00    	add    eax,DWORD PTR [rcx+0x83]
    3b0c:	02 91 40 15 65 63    	add    dl,BYTE PTR [rcx+0x63651540]
    3b12:	78 00                	js     3b14 <MULTIBOOT_HEADER_SIZE+0x3abc>
    3b14:	03 81 83 00 00 00    	add    eax,DWORD PTR [rcx+0x83]
    3b1a:	03 91 bc 7f 15 65    	add    edx,DWORD PTR [rcx+0x65157fbc]
    3b20:	64 78 00             	fs js  3b23 <MULTIBOOT_HEADER_SIZE+0x3acb>
    3b23:	03 81 83 00 00 00    	add    eax,DWORD PTR [rcx+0x83]
    3b29:	03 91 b8 7f 16 d9    	add    edx,DWORD PTR [rcx-0x26e98048]
    3b2f:	0e                   	(bad)  
    3b30:	00 00                	add    BYTE PTR [rax],al
    3b32:	03 9d 95 00 00 00    	add    ebx,DWORD PTR [rbp+0x95]
    3b38:	02 91 50 16 b2 0e    	add    dl,BYTE PTR [rcx+0xeb21650]
    3b3e:	00 00                	add    BYTE PTR [rax],al
    3b40:	03 9e 95 00 00 00    	add    ebx,DWORD PTR [rsi+0x95]
    3b46:	02 91 48 17 2c da    	add    dl,BYTE PTR [rcx-0x25d3e8b8]
    3b4c:	00 01                	add    BYTE PTR [rcx],al
    3b4e:	00 00                	add    BYTE PTR [rax],al
    3b50:	00 00                	add    BYTE PTR [rax],al
    3b52:	26 00 00             	add    BYTE PTR es:[rax],al
    3b55:	00 00                	add    BYTE PTR [rax],al
    3b57:	00 00                	add    BYTE PTR [rax],al
    3b59:	00 15 69 00 03 8f    	add    BYTE PTR [rip+0xffffffff8f030069],dl        # ffffffff8f033bc8 <MULTIBOOT_CHECK_SUM+0x77558cf6>
    3b5f:	95                   	xchg   ebp,eax
    3b60:	00 00                	add    BYTE PTR [rax],al
    3b62:	00 02                	add    BYTE PTR [rdx],al
    3b64:	91                   	xchg   ecx,eax
    3b65:	58                   	pop    rax
    3b66:	00 00                	add    BYTE PTR [rax],al
    3b68:	18 5f 00             	sbb    BYTE PTR [rdi+0x0],bl
    3b6b:	00 00                	add    BYTE PTR [rax],al
    3b6d:	8a 04 00             	mov    al,BYTE PTR [rax+rax*1]
    3b70:	00 19                	add    BYTE PTR [rcx],bl
    3b72:	00 1a                	add    BYTE PTR [rdx],bl
    3b74:	fe 0e                	dec    BYTE PTR [rsi]
    3b76:	00 00                	add    BYTE PTR [rax],al
    3b78:	07                   	(bad)  
    3b79:	0f 7f 04 00          	movq   QWORD PTR [rax+rax*1],mm0
    3b7d:	00 18                	add    BYTE PTR [rax],bl
    3b7f:	09 03                	or     DWORD PTR [rbx],eax
    3b81:	00 00                	add    BYTE PTR [rax],al
    3b83:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    3b84:	04 00                	add    al,0x0
    3b86:	00 1b                	add    BYTE PTR [rbx],bl
    3b88:	b5 00                	mov    ch,0x0
    3b8a:	00 00                	add    BYTE PTR [rax],al
    3b8c:	0f 00 1a             	ltr    WORD PTR [rdx]
    3b8f:	9d                   	popf   
    3b90:	0e                   	(bad)  
    3b91:	00 00                	add    BYTE PTR [rax],al
    3b93:	07                   	(bad)  
    3b94:	10 95 04 00 00 1a    	adc    BYTE PTR [rbp+0x1a000004],dl
    3b9a:	84 0e                	test   BYTE PTR [rsi],cl
    3b9c:	00 00                	add    BYTE PTR [rax],al
    3b9e:	07                   	(bad)  
    3b9f:	12 df                	adc    bl,bh
    3ba1:	00 00                	add    BYTE PTR [rax],al
    3ba3:	00 00                	add    BYTE PTR [rax],al
    3ba5:	07                   	(bad)  
    3ba6:	03 00                	add    eax,DWORD PTR [rax]
    3ba8:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    3bab:	bb 0d 00 00 08       	mov    ebx,0x800000d
    3bb0:	01 27                	add    DWORD PTR [rdi],esp
    3bb2:	00 00                	add    BYTE PTR [rax],al
    3bb4:	00 0c e2             	add    BYTE PTR [rdx+riz*8],cl
    3bb7:	0f 00 00             	sldt   WORD PTR [rax]
    3bba:	e5 00                	in     eax,0x0
    3bbc:	00 00                	add    BYTE PTR [rax],al
    3bbe:	20 dc                	and    ah,bl
    3bc0:	00 01                	add    BYTE PTR [rcx],al
    3bc2:	00 00                	add    BYTE PTR [rax],al
    3bc4:	00 00                	add    BYTE PTR [rax],al
    3bc6:	64 04 00             	fs add al,0x0
    3bc9:	00 00                	add    BYTE PTR [rax],al
    3bcb:	00 00                	add    BYTE PTR [rax],al
    3bcd:	00 a4 23 00 00 02 08 	add    BYTE PTR [rbx+riz*1+0x8020000],ah
    3bd4:	05 13 01 00 00       	add    eax,0x113
    3bd9:	02 08                	add    cl,BYTE PTR [rax]
    3bdb:	07                   	(bad)  
    3bdc:	65 10 00             	adc    BYTE PTR gs:[rax],al
    3bdf:	00 03                	add    BYTE PTR [rbx],al
    3be1:	04 05                	add    al,0x5
    3be3:	69 6e 74 00 02 08 05 	imul   ebp,DWORD PTR [rsi+0x74],0x5080200
    3bea:	0e                   	(bad)  
    3beb:	01 00                	add    DWORD PTR [rax],eax
    3bed:	00 02                	add    BYTE PTR [rdx],al
    3bef:	10 04 2e             	adc    BYTE PTR [rsi+rbp*1],al
    3bf2:	01 00                	add    DWORD PTR [rax],eax
    3bf4:	00 02                	add    BYTE PTR [rdx],al
    3bf6:	08 07                	or     BYTE PTR [rdi],al
    3bf8:	05 01 00 00 02       	add    eax,0x2000001
    3bfd:	04 07                	add    al,0x7
    3bff:	6a 10                	push   0x10
    3c01:	00 00                	add    BYTE PTR [rax],al
    3c03:	04 08                	add    al,0x8
    3c05:	02 01                	add    al,BYTE PTR [rcx]
    3c07:	06                   	(bad)  
    3c08:	c6 00 00             	mov    BYTE PTR [rax],0x0
    3c0b:	00 02                	add    BYTE PTR [rdx],al
    3c0d:	02 05 1c 01 00 00    	add    al,BYTE PTR [rip+0x11c]        # 3d2f <MULTIBOOT_HEADER_SIZE+0x3cd7>
    3c13:	05 24 0e 00 00       	add    eax,0xe24
    3c18:	02 30                	add    dh,BYTE PTR [rax]
    3c1a:	79 00                	jns    3c1c <MULTIBOOT_HEADER_SIZE+0x3bc4>
    3c1c:	00 00                	add    BYTE PTR [rax],al
    3c1e:	02 01                	add    al,BYTE PTR [rcx]
    3c20:	08 c4                	or     ah,al
    3c22:	00 00                	add    BYTE PTR [rax],al
    3c24:	00 02                	add    BYTE PTR [rdx],al
    3c26:	02 07                	add    al,BYTE PTR [rdi]
    3c28:	d2 00                	rol    BYTE PTR [rax],cl
    3c2a:	00 00                	add    BYTE PTR [rax],al
    3c2c:	05 2f 11 00 00       	add    eax,0x112f
    3c31:	02 33                	add    dh,BYTE PTR [rbx]
    3c33:	57                   	push   rdi
    3c34:	00 00                	add    BYTE PTR [rax],al
    3c36:	00 05 7b 11 00 00    	add    BYTE PTR [rip+0x117b],al        # 4db7 <MULTIBOOT_HEADER_SIZE+0x4d5f>
    3c3c:	02 37                	add    dh,BYTE PTR [rdi]
    3c3e:	34 00                	xor    al,0x0
    3c40:	00 00                	add    BYTE PTR [rax],al
    3c42:	06                   	(bad)  
    3c43:	8a 0f                	mov    cl,BYTE PTR [rdi]
    3c45:	00 00                	add    BYTE PTR [rax],al
    3c47:	01 0f                	add    DWORD PTR [rdi],ecx
    3c49:	20 dc                	and    ah,bl
    3c4b:	00 01                	add    BYTE PTR [rcx],al
    3c4d:	00 00                	add    BYTE PTR [rax],al
    3c4f:	00 00                	add    BYTE PTR [rax],al
    3c51:	c5 00 00             	(bad)  
    3c54:	00 00                	add    BYTE PTR [rax],al
    3c56:	00 00                	add    BYTE PTR [rax],al
    3c58:	00 01                	add    BYTE PTR [rcx],al
    3c5a:	9c                   	pushf  
    3c5b:	f3 00 00             	repz add BYTE PTR [rax],al
    3c5e:	00 07                	add    BYTE PTR [rdi],al
    3c60:	b7 0e                	mov    bh,0xe
    3c62:	00 00                	add    BYTE PTR [rax],al
    3c64:	01 0f                	add    DWORD PTR [rdi],ecx
    3c66:	f3 00 00             	repz add BYTE PTR [rax],al
    3c69:	00 02                	add    BYTE PTR [rdx],al
    3c6b:	91                   	xchg   ecx,eax
    3c6c:	58                   	pop    rax
    3c6d:	07                   	(bad)  
    3c6e:	c8 0f 00 00          	enter  0xf,0x0
    3c72:	01 0f                	add    DWORD PTR [rdi],ecx
    3c74:	f8                   	clc    
    3c75:	00 00                	add    BYTE PTR [rax],al
    3c77:	00 02                	add    BYTE PTR [rdx],al
    3c79:	91                   	xchg   ecx,eax
    3c7a:	50                   	push   rax
    3c7b:	07                   	(bad)  
    3c7c:	04 0f                	add    al,0xf
    3c7e:	00 00                	add    BYTE PTR [rax],al
    3c80:	01 0f                	add    DWORD PTR [rdi],ecx
    3c82:	f8                   	clc    
    3c83:	00 00                	add    BYTE PTR [rax],al
    3c85:	00 02                	add    BYTE PTR [rdx],al
    3c87:	91                   	xchg   ecx,eax
    3c88:	48 08 03             	rex.W or BYTE PTR [rbx],al
    3c8b:	10 00                	adc    BYTE PTR [rax],al
    3c8d:	00 01                	add    BYTE PTR [rcx],al
    3c8f:	13 92 00 00 00 02    	adc    edx,DWORD PTR [rdx+0x2000000]
    3c95:	91                   	xchg   ecx,eax
    3c96:	68 00 09 5e 00       	push   0x5e0900
    3c9b:	00 00                	add    BYTE PTR [rax],al
    3c9d:	09 92 00 00 00 06    	or     DWORD PTR [rdx+0x6000000],edx
    3ca3:	cf                   	iret   
    3ca4:	0f 00 00             	sldt   WORD PTR [rax]
    3ca7:	01 1f                	add    DWORD PTR [rdi],ebx
    3ca9:	e5 dc                	in     eax,0xdc
    3cab:	00 01                	add    BYTE PTR [rcx],al
    3cad:	00 00                	add    BYTE PTR [rax],al
    3caf:	00 00                	add    BYTE PTR [rax],al
    3cb1:	c5 00 00             	(bad)  
    3cb4:	00 00                	add    BYTE PTR [rax],al
    3cb6:	00 00                	add    BYTE PTR [rax],al
    3cb8:	00 01                	add    BYTE PTR [rcx],al
    3cba:	9c                   	pushf  
    3cbb:	53                   	push   rbx
    3cbc:	01 00                	add    DWORD PTR [rax],eax
    3cbe:	00 07                	add    BYTE PTR [rdi],al
    3cc0:	b7 0e                	mov    bh,0xe
    3cc2:	00 00                	add    BYTE PTR [rax],al
    3cc4:	01 1f                	add    DWORD PTR [rdi],ebx
    3cc6:	f3 00 00             	repz add BYTE PTR [rax],al
    3cc9:	00 02                	add    BYTE PTR [rdx],al
    3ccb:	91                   	xchg   ecx,eax
    3ccc:	58                   	pop    rax
    3ccd:	07                   	(bad)  
    3cce:	13 10                	adc    edx,DWORD PTR [rax]
    3cd0:	00 00                	add    BYTE PTR [rax],al
    3cd2:	01 1f                	add    DWORD PTR [rdi],ebx
    3cd4:	f8                   	clc    
    3cd5:	00 00                	add    BYTE PTR [rax],al
    3cd7:	00 02                	add    BYTE PTR [rdx],al
    3cd9:	91                   	xchg   ecx,eax
    3cda:	50                   	push   rax
    3cdb:	07                   	(bad)  
    3cdc:	04 0f                	add    al,0xf
    3cde:	00 00                	add    BYTE PTR [rax],al
    3ce0:	01 1f                	add    DWORD PTR [rdi],ebx
    3ce2:	f8                   	clc    
    3ce3:	00 00                	add    BYTE PTR [rax],al
    3ce5:	00 02                	add    BYTE PTR [rdx],al
    3ce7:	91                   	xchg   ecx,eax
    3ce8:	48 08 03             	rex.W or BYTE PTR [rbx],al
    3ceb:	10 00                	adc    BYTE PTR [rax],al
    3ced:	00 01                	add    BYTE PTR [rcx],al
    3cef:	23 92 00 00 00 02    	and    edx,DWORD PTR [rdx+0x2000000]
    3cf5:	91                   	xchg   ecx,eax
    3cf6:	68 00 06 a6 0f       	push   0xfa60600
    3cfb:	00 00                	add    BYTE PTR [rax],al
    3cfd:	01 2f                	add    DWORD PTR [rdi],ebp
    3cff:	aa                   	stos   BYTE PTR es:[rdi],al
    3d00:	dd 00                	fld    QWORD PTR [rax]
    3d02:	01 00                	add    DWORD PTR [rax],eax
    3d04:	00 00                	add    BYTE PTR [rax],al
    3d06:	00 c5                	add    ch,al
    3d08:	00 00                	add    BYTE PTR [rax],al
    3d0a:	00 00                	add    BYTE PTR [rax],al
    3d0c:	00 00                	add    BYTE PTR [rax],al
    3d0e:	00 01                	add    BYTE PTR [rcx],al
    3d10:	9c                   	pushf  
    3d11:	a9 01 00 00 07       	test   eax,0x7000001
    3d16:	b7 0e                	mov    bh,0xe
    3d18:	00 00                	add    BYTE PTR [rax],al
    3d1a:	01 2f                	add    DWORD PTR [rdi],ebp
    3d1c:	f3 00 00             	repz add BYTE PTR [rax],al
    3d1f:	00 02                	add    BYTE PTR [rdx],al
    3d21:	91                   	xchg   ecx,eax
    3d22:	58                   	pop    rax
    3d23:	07                   	(bad)  
    3d24:	09 10                	or     DWORD PTR [rax],edx
    3d26:	00 00                	add    BYTE PTR [rax],al
    3d28:	01 2f                	add    DWORD PTR [rdi],ebp
    3d2a:	f8                   	clc    
    3d2b:	00 00                	add    BYTE PTR [rax],al
    3d2d:	00 02                	add    BYTE PTR [rdx],al
    3d2f:	91                   	xchg   ecx,eax
    3d30:	50                   	push   rax
    3d31:	07                   	(bad)  
    3d32:	04 0f                	add    al,0xf
    3d34:	00 00                	add    BYTE PTR [rax],al
    3d36:	01 2f                	add    DWORD PTR [rdi],ebp
    3d38:	f8                   	clc    
    3d39:	00 00                	add    BYTE PTR [rax],al
    3d3b:	00 02                	add    BYTE PTR [rdx],al
    3d3d:	91                   	xchg   ecx,eax
    3d3e:	48 08 03             	rex.W or BYTE PTR [rbx],al
    3d41:	10 00                	adc    BYTE PTR [rax],al
    3d43:	00 01                	add    BYTE PTR [rcx],al
    3d45:	33 92 00 00 00 02    	xor    edx,DWORD PTR [rdx+0x2000000]
    3d4b:	91                   	xchg   ecx,eax
    3d4c:	68 00 06 f4 0f       	push   0xff40600
    3d51:	00 00                	add    BYTE PTR [rax],al
    3d53:	01 3f                	add    DWORD PTR [rdi],edi
    3d55:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3d56:	de 00                	fiadd  WORD PTR [rax]
    3d58:	01 00                	add    DWORD PTR [rax],eax
    3d5a:	00 00                	add    BYTE PTR [rax],al
    3d5c:	00 c5                	add    ch,al
    3d5e:	00 00                	add    BYTE PTR [rax],al
    3d60:	00 00                	add    BYTE PTR [rax],al
    3d62:	00 00                	add    BYTE PTR [rax],al
    3d64:	00 01                	add    BYTE PTR [rcx],al
    3d66:	9c                   	pushf  
    3d67:	ff 01                	inc    DWORD PTR [rcx]
    3d69:	00 00                	add    BYTE PTR [rax],al
    3d6b:	07                   	(bad)  
    3d6c:	b7 0e                	mov    bh,0xe
    3d6e:	00 00                	add    BYTE PTR [rax],al
    3d70:	01 3f                	add    DWORD PTR [rdi],edi
    3d72:	f3 00 00             	repz add BYTE PTR [rax],al
    3d75:	00 02                	add    BYTE PTR [rdx],al
    3d77:	91                   	xchg   ecx,eax
    3d78:	58                   	pop    rax
    3d79:	07                   	(bad)  
    3d7a:	11 10                	adc    DWORD PTR [rax],edx
    3d7c:	00 00                	add    BYTE PTR [rax],al
    3d7e:	01 3f                	add    DWORD PTR [rdi],edi
    3d80:	f8                   	clc    
    3d81:	00 00                	add    BYTE PTR [rax],al
    3d83:	00 02                	add    BYTE PTR [rdx],al
    3d85:	91                   	xchg   ecx,eax
    3d86:	50                   	push   rax
    3d87:	07                   	(bad)  
    3d88:	04 0f                	add    al,0xf
    3d8a:	00 00                	add    BYTE PTR [rax],al
    3d8c:	01 3f                	add    DWORD PTR [rdi],edi
    3d8e:	f8                   	clc    
    3d8f:	00 00                	add    BYTE PTR [rax],al
    3d91:	00 02                	add    BYTE PTR [rdx],al
    3d93:	91                   	xchg   ecx,eax
    3d94:	48 08 03             	rex.W or BYTE PTR [rbx],al
    3d97:	10 00                	adc    BYTE PTR [rax],al
    3d99:	00 01                	add    BYTE PTR [rcx],al
    3d9b:	43 f8                	rex.XB clc 
    3d9d:	00 00                	add    BYTE PTR [rax],al
    3d9f:	00 02                	add    BYTE PTR [rdx],al
    3da1:	91                   	xchg   ecx,eax
    3da2:	68 00 06 6d 0f       	push   0xf6d0600
    3da7:	00 00                	add    BYTE PTR [rax],al
    3da9:	01 4f 34             	add    DWORD PTR [rdi+0x34],ecx
    3dac:	df 00                	fild   WORD PTR [rax]
    3dae:	01 00                	add    DWORD PTR [rax],eax
    3db0:	00 00                	add    BYTE PTR [rax],al
    3db2:	00 fe                	add    dh,bh
    3db4:	00 00                	add    BYTE PTR [rax],al
    3db6:	00 00                	add    BYTE PTR [rax],al
    3db8:	00 00                	add    BYTE PTR [rax],al
    3dba:	00 01                	add    BYTE PTR [rcx],al
    3dbc:	9c                   	pushf  
    3dbd:	63 02                	movsxd eax,DWORD PTR [rdx]
    3dbf:	00 00                	add    BYTE PTR [rax],al
    3dc1:	0a 67 64             	or     ah,BYTE PTR [rdi+0x64]
    3dc4:	74 00                	je     3dc6 <MULTIBOOT_HEADER_SIZE+0x3d6e>
    3dc6:	01 4f f3             	add    DWORD PTR [rdi-0xd],ecx
    3dc9:	00 00                	add    BYTE PTR [rax],al
    3dcb:	00 02                	add    BYTE PTR [rdx],al
    3dcd:	91                   	xchg   ecx,eax
    3dce:	58                   	pop    rax
    3dcf:	07                   	(bad)  
    3dd0:	b7 0e                	mov    bh,0xe
    3dd2:	00 00                	add    BYTE PTR [rax],al
    3dd4:	01 4f 63             	add    DWORD PTR [rdi+0x63],ecx
    3dd7:	02 00                	add    al,BYTE PTR [rax]
    3dd9:	00 02                	add    BYTE PTR [rdx],al
    3ddb:	91                   	xchg   ecx,eax
    3ddc:	54                   	push   rsp
    3ddd:	07                   	(bad)  
    3dde:	b8 0d 00 00 01       	mov    eax,0x100000d
    3de3:	4f 63 02             	rex.WRXB movsxd r8,DWORD PTR [r10]
    3de6:	00 00                	add    BYTE PTR [rax],al
    3de8:	02 91 50 07 04 0f    	add    dl,BYTE PTR [rcx+0xf040750]
    3dee:	00 00                	add    BYTE PTR [rax],al
    3df0:	01 50 f8             	add    DWORD PTR [rax-0x8],edx
    3df3:	00 00                	add    BYTE PTR [rax],al
    3df5:	00 02                	add    BYTE PTR [rdx],al
    3df7:	91                   	xchg   ecx,eax
    3df8:	48 08 9d 0f 00 00 01 	rex.W or BYTE PTR [rbp+0x100000f],bl
    3dff:	54                   	push   rsp
    3e00:	f8                   	clc    
    3e01:	00 00                	add    BYTE PTR [rax],al
    3e03:	00 02                	add    BYTE PTR [rdx],al
    3e05:	91                   	xchg   ecx,eax
    3e06:	68 00 09 87 00       	push   0x870900
    3e0b:	00 00                	add    BYTE PTR [rax],al
    3e0d:	0b bb 0f 00 00 01    	or     edi,DWORD PTR [rbx+0x100000f]
    3e13:	62                   	(bad)  
    3e14:	5e                   	pop    rsi
    3e15:	00 00                	add    BYTE PTR [rax],al
    3e17:	00 32                	add    BYTE PTR [rdx],dh
    3e19:	e0 00                	loopne 3e1b <MULTIBOOT_HEADER_SIZE+0x3dc3>
    3e1b:	01 00                	add    DWORD PTR [rax],eax
    3e1d:	00 00                	add    BYTE PTR [rax],al
    3e1f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    3e22:	00 00                	add    BYTE PTR [rax],al
    3e24:	00 00                	add    BYTE PTR [rax],al
    3e26:	00 00                	add    BYTE PTR [rax],al
    3e28:	01 9c 98 02 00 00 07 	add    DWORD PTR [rax+rbx*4+0x7000002],ebx
    3e2f:	30 03                	xor    BYTE PTR [rbx],al
    3e31:	00 00                	add    BYTE PTR [rax],al
    3e33:	01 62 87             	add    DWORD PTR [rdx-0x79],esp
    3e36:	00 00                	add    BYTE PTR [rax],al
    3e38:	00 02                	add    BYTE PTR [rdx],al
    3e3a:	91                   	xchg   ecx,eax
    3e3b:	6c                   	ins    BYTE PTR es:[rdi],dx
    3e3c:	00 0c c2             	add    BYTE PTR [rdx+rax*8],cl
    3e3f:	0f 00 00             	sldt   WORD PTR [rax]
    3e42:	01 67 4e             	add    DWORD PTR [rdi+0x4e],esp
    3e45:	e0 00                	loopne 3e47 <MULTIBOOT_HEADER_SIZE+0x3def>
    3e47:	01 00                	add    DWORD PTR [rax],eax
    3e49:	00 00                	add    BYTE PTR [rax],al
    3e4b:	00 20                	add    BYTE PTR [rax],ah
    3e4d:	00 00                	add    BYTE PTR [rax],al
    3e4f:	00 00                	add    BYTE PTR [rax],al
    3e51:	00 00                	add    BYTE PTR [rax],al
    3e53:	00 01                	add    BYTE PTR [rcx],al
    3e55:	9c                   	pushf  
    3e56:	c4 02 00 00          	(bad)  
    3e5a:	0a 70 74             	or     dh,BYTE PTR [rax+0x74]
    3e5d:	72 00                	jb     3e5f <MULTIBOOT_HEADER_SIZE+0x3e07>
    3e5f:	01 67 5e             	add    DWORD PTR [rdi+0x5e],esp
    3e62:	00 00                	add    BYTE PTR [rax],al
    3e64:	00 02                	add    BYTE PTR [rdx],al
    3e66:	91                   	xchg   ecx,eax
    3e67:	68 00 0d 5e 0f       	push   0xf5e0d00
    3e6c:	00 00                	add    BYTE PTR [rax],al
    3e6e:	01 6d 6e             	add    DWORD PTR [rbp+0x6e],ebp
    3e71:	e0 00                	loopne 3e73 <MULTIBOOT_HEADER_SIZE+0x3e1b>
    3e73:	01 00                	add    DWORD PTR [rax],eax
    3e75:	00 00                	add    BYTE PTR [rax],al
    3e77:	00 16                	add    BYTE PTR [rsi],dl
    3e79:	00 00                	add    BYTE PTR [rax],al
    3e7b:	00 00                	add    BYTE PTR [rax],al
    3e7d:	00 00                	add    BYTE PTR [rax],al
    3e7f:	00 01                	add    BYTE PTR [rcx],al
    3e81:	9c                   	pushf  
    3e82:	0e                   	(bad)  
    3e83:	ee                   	out    dx,al
    3e84:	02 00                	add    al,BYTE PTR [rax]
    3e86:	00 ee                	add    dh,ch
    3e88:	02 00                	add    al,BYTE PTR [rax]
    3e8a:	00 0f                	add    BYTE PTR [rdi],cl
    3e8c:	50                   	push   rax
    3e8d:	00 00                	add    BYTE PTR [rax],al
    3e8f:	00 ff                	add    bh,bh
    3e91:	1f                   	(bad)  
    3e92:	00 02                	add    BYTE PTR [rdx],al
    3e94:	01 06                	add    DWORD PTR [rsi],eax
    3e96:	cd 00                	int    0x0
    3e98:	00 00                	add    BYTE PTR [rax],al
    3e9a:	10 1b                	adc    BYTE PTR [rbx],bl
    3e9c:	10 00                	adc    BYTE PTR [rax],al
    3e9e:	00 01                	add    BYTE PTR [rcx],al
    3ea0:	0d dd 02 00 00       	or     eax,0x2dd
    3ea5:	09 03                	or     DWORD PTR [rbx],eax
    3ea7:	60                   	(bad)  
    3ea8:	9c                   	pushf  
    3ea9:	01 01                	add    DWORD PTR [rcx],eax
    3eab:	00 00                	add    BYTE PTR [rax],al
    3ead:	00 00                	add    BYTE PTR [rax],al
    3eaf:	00 aa 01 00 00 04    	add    BYTE PTR [rdx+0x4000001],ch
    3eb5:	00 b6 0e 00 00 08    	add    BYTE PTR [rsi+0x800000e],dh
    3ebb:	01 27                	add    DWORD PTR [rdi],esp
    3ebd:	00 00                	add    BYTE PTR [rax],al
    3ebf:	00 0c 4e             	add    BYTE PTR [rsi+rcx*2],cl
    3ec2:	10 00                	adc    BYTE PTR [rax],al
    3ec4:	00 e5                	add    ch,ah
    3ec6:	00 00                	add    BYTE PTR [rax],al
    3ec8:	00 9a 24 00 00 02    	add    BYTE PTR [rdx+0x2000024],bl
    3ece:	08 05 13 01 00 00    	or     BYTE PTR [rip+0x113],al        # 3fe7 <MULTIBOOT_HEADER_SIZE+0x3f8f>
    3ed4:	02 08                	add    cl,BYTE PTR [rax]
    3ed6:	07                   	(bad)  
    3ed7:	65 10 00             	adc    BYTE PTR gs:[rax],al
    3eda:	00 03                	add    BYTE PTR [rbx],al
    3edc:	04 05                	add    al,0x5
    3ede:	69 6e 74 00 02 08 05 	imul   ebp,DWORD PTR [rsi+0x74],0x5080200
    3ee5:	0e                   	(bad)  
    3ee6:	01 00                	add    DWORD PTR [rax],eax
    3ee8:	00 02                	add    BYTE PTR [rdx],al
    3eea:	10 04 2e             	adc    BYTE PTR [rsi+rbp*1],al
    3eed:	01 00                	add    DWORD PTR [rax],eax
    3eef:	00 02                	add    BYTE PTR [rdx],al
    3ef1:	08 07                	or     BYTE PTR [rdi],al
    3ef3:	05 01 00 00 02       	add    eax,0x2000001
    3ef8:	04 07                	add    al,0x7
    3efa:	6a 10                	push   0x10
    3efc:	00 00                	add    BYTE PTR [rax],al
    3efe:	02 01                	add    al,BYTE PTR [rcx]
    3f00:	06                   	(bad)  
    3f01:	c6 00 00             	mov    BYTE PTR [rax],0x0
    3f04:	00 02                	add    BYTE PTR [rdx],al
    3f06:	02 05 1c 01 00 00    	add    al,BYTE PTR [rip+0x11c]        # 4028 <MULTIBOOT_HEADER_SIZE+0x3fd0>
    3f0c:	04 24                	add    al,0x24
    3f0e:	0e                   	(bad)  
    3f0f:	00 00                	add    BYTE PTR [rax],al
    3f11:	01 30                	add    DWORD PTR [rax],esi
    3f13:	67 00 00             	add    BYTE PTR [eax],al
    3f16:	00 02                	add    BYTE PTR [rdx],al
    3f18:	01 08                	add    DWORD PTR [rax],ecx
    3f1a:	c4                   	(bad)  
    3f1b:	00 00                	add    BYTE PTR [rax],al
    3f1d:	00 04 c3             	add    BYTE PTR [rbx+rax*8],al
    3f20:	0e                   	(bad)  
    3f21:	00 00                	add    BYTE PTR [rax],al
    3f23:	01 31                	add    DWORD PTR [rcx],esi
    3f25:	79 00                	jns    3f27 <MULTIBOOT_HEADER_SIZE+0x3ecf>
    3f27:	00 00                	add    BYTE PTR [rax],al
    3f29:	02 02                	add    al,BYTE PTR [rdx]
    3f2b:	07                   	(bad)  
    3f2c:	d2 00                	rol    BYTE PTR [rax],cl
    3f2e:	00 00                	add    BYTE PTR [rax],al
    3f30:	04 7b                	add    al,0x7b
    3f32:	11 00                	adc    DWORD PTR [rax],eax
    3f34:	00 01                	add    BYTE PTR [rcx],al
    3f36:	37                   	(bad)  
    3f37:	24 00                	and    al,0x0
    3f39:	00 00                	add    BYTE PTR [rax],al
    3f3b:	05 0a 02 06 ac       	add    eax,0xac06020a
    3f40:	00 00                	add    BYTE PTR [rax],al
    3f42:	00 06                	add    BYTE PTR [rsi],al
    3f44:	b8 0d 00 00 02       	mov    eax,0x200000d
    3f49:	08 6e 00             	or     BYTE PTR [rsi+0x0],ch
    3f4c:	00 00                	add    BYTE PTR [rax],al
    3f4e:	00 06                	add    BYTE PTR [rsi],al
    3f50:	b7 0e                	mov    bh,0xe
    3f52:	00 00                	add    BYTE PTR [rax],al
    3f54:	02 09                	add    cl,BYTE PTR [rcx]
    3f56:	80 00 00             	add    BYTE PTR [rax],0x0
    3f59:	00 02                	add    BYTE PTR [rdx],al
    3f5b:	00 04 30             	add    BYTE PTR [rax+rsi*1],al
    3f5e:	10 00                	adc    BYTE PTR [rax],al
    3f60:	00 02                	add    BYTE PTR [rdx],al
    3f62:	0a 8b 00 00 00 05    	or     cl,BYTE PTR [rbx+0x5000000]
    3f68:	0a 02                	or     al,BYTE PTR [rdx]
    3f6a:	0c d8                	or     al,0xd8
    3f6c:	00 00                	add    BYTE PTR [rax],al
    3f6e:	00 06                	add    BYTE PTR [rsi],al
    3f70:	b8 0d 00 00 02       	mov    eax,0x200000d
    3f75:	0e                   	(bad)  
    3f76:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3f77:	00 00                	add    BYTE PTR [rax],al
    3f79:	00 00                	add    BYTE PTR [rax],al
    3f7b:	06                   	(bad)  
    3f7c:	b7 0e                	mov    bh,0xe
    3f7e:	00 00                	add    BYTE PTR [rax],al
    3f80:	02 0f                	add    cl,BYTE PTR [rdi]
    3f82:	80 00 00             	add    BYTE PTR [rax],0x0
    3f85:	00 02                	add    BYTE PTR [rdx],al
    3f87:	00 04 76             	add    BYTE PTR [rsi+rsi*2],al
    3f8a:	0e                   	(bad)  
    3f8b:	00 00                	add    BYTE PTR [rax],al
    3f8d:	02 10                	add    dl,BYTE PTR [rax]
    3f8f:	b7 00                	mov    bh,0x0
    3f91:	00 00                	add    BYTE PTR [rax],al
    3f93:	07                   	(bad)  
    3f94:	5c                   	pop    rsp
    3f95:	00 00                	add    BYTE PTR [rax],al
    3f97:	00 f3                	add    bl,dh
    3f99:	00 00                	add    BYTE PTR [rax],al
    3f9b:	00 08                	add    BYTE PTR [rax],cl
    3f9d:	40 00 00             	add    BYTE PTR [rax],al
    3fa0:	00 47 00             	add    BYTE PTR [rdi+0x0],al
    3fa3:	09 3e                	or     DWORD PTR [rsi],edi
    3fa5:	10 00                	adc    BYTE PTR [rax],al
    3fa7:	00 03                	add    BYTE PTR [rbx],al
    3fa9:	09 e3                	or     ebx,esp
    3fab:	00 00                	add    BYTE PTR [rax],al
    3fad:	00 09                	add    BYTE PTR [rcx],cl
    3faf:	03 80 bf 01 01 00    	add    eax,DWORD PTR [rax+0x101bf]
    3fb5:	00 00                	add    BYTE PTR [rax],al
    3fb7:	00 07                	add    BYTE PTR [rdi],al
    3fb9:	5c                   	pop    rsp
    3fba:	00 00                	add    BYTE PTR [rax],al
    3fbc:	00 19                	add    BYTE PTR [rcx],bl
    3fbe:	01 00                	add    DWORD PTR [rax],eax
    3fc0:	00 0a                	add    BYTE PTR [rdx],cl
    3fc2:	40 00 00             	add    BYTE PTR [rax],al
    3fc5:	00 7f 02             	add    BYTE PTR [rdi+0x2],bh
    3fc8:	00 09                	add    BYTE PTR [rcx],cl
    3fca:	fe 0e                	dec    BYTE PTR [rsi]
    3fcc:	00 00                	add    BYTE PTR [rax],al
    3fce:	03 0a                	add    ecx,DWORD PTR [rdx]
    3fd0:	08 01                	or     BYTE PTR [rcx],al
    3fd2:	00 00                	add    BYTE PTR [rax],al
    3fd4:	09 03                	or     DWORD PTR [rbx],eax
    3fd6:	60                   	(bad)  
    3fd7:	bc 01 01 00 00       	mov    esp,0x101
    3fdc:	00 00                	add    BYTE PTR [rax],al
    3fde:	07                   	(bad)  
    3fdf:	3e 01 00             	add    DWORD PTR ds:[rax],eax
    3fe2:	00 3e                	add    BYTE PTR [rsi],bh
    3fe4:	01 00                	add    DWORD PTR [rax],eax
    3fe6:	00 08                	add    BYTE PTR [rax],cl
    3fe8:	40 00 00             	add    BYTE PTR [rax],al
    3feb:	00 0f                	add    BYTE PTR [rdi],cl
    3fed:	00 0b                	add    BYTE PTR [rbx],cl
    3fef:	08 44 01 00          	or     BYTE PTR [rcx+rax*1+0x0],al
    3ff3:	00 0c 59             	add    BYTE PTR [rcx+rbx*2],cl
    3ff6:	01 00                	add    DWORD PTR [rax],eax
    3ff8:	00 0d 80 00 00 00    	add    BYTE PTR [rip+0x80],cl        # 407e <MULTIBOOT_HEADER_SIZE+0x4026>
    3ffe:	0d 80 00 00 00       	or     eax,0x80
    4003:	0d 80 00 00 00       	or     eax,0x80
    4008:	00 09                	add    BYTE PTR [rcx],cl
    400a:	9d                   	popf   
    400b:	0e                   	(bad)  
    400c:	00 00                	add    BYTE PTR [rax],al
    400e:	03 0b                	add    ecx,DWORD PTR [rbx]
    4010:	2e 01 00             	add    DWORD PTR cs:[rax],eax
    4013:	00 09                	add    BYTE PTR [rcx],cl
    4015:	03 00                	add    eax,DWORD PTR [rax]
    4017:	bf 01 01 00 00       	mov    edi,0x101
    401c:	00 00                	add    BYTE PTR [rax],al
    401e:	09 44 10 00          	or     DWORD PTR [rax+rdx*1+0x0],eax
    4022:	00 03                	add    BYTE PTR [rbx],al
    4024:	0c ac                	or     al,0xac
    4026:	00 00                	add    BYTE PTR [rax],al
    4028:	00 09                	add    BYTE PTR [rcx],cl
    402a:	03 f0                	add    esi,eax
    402c:	be 01 01 00 00       	mov    esi,0x101
    4031:	00 00                	add    BYTE PTR [rax],al
    4033:	09 84 0e 00 00 03 0d 	or     DWORD PTR [rsi+rcx*1+0xd030000],eax
    403a:	d8 00                	fadd   DWORD PTR [rax]
    403c:	00 00                	add    BYTE PTR [rax],al
    403e:	09 03                	or     DWORD PTR [rbx],eax
    4040:	e0 be                	loopne 4000 <MULTIBOOT_HEADER_SIZE+0x3fa8>
    4042:	01 01                	add    DWORD PTR [rcx],eax
    4044:	00 00                	add    BYTE PTR [rax],al
    4046:	00 00                	add    BYTE PTR [rax],al
    4048:	09 27                	or     DWORD PTR [rdi],esp
    404a:	10 00                	adc    BYTE PTR [rax],al
    404c:	00 03                	add    BYTE PTR [rbx],al
    404e:	0e                   	(bad)  
    404f:	80 00 00             	add    BYTE PTR [rax],0x0
    4052:	00 09                	add    BYTE PTR [rcx],cl
    4054:	03 c8                	add    ecx,eax
    4056:	bf 01 01 00 00       	mov    edi,0x101
    405b:	00 00                	add    BYTE PTR [rax],al
    405d:	00 ea                	add    dl,ch
    405f:	03 00                	add    eax,DWORD PTR [rax]
    4061:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    4064:	4a 0f 00 00          	rex.WX sldt WORD PTR [rax]
    4068:	08 01                	or     BYTE PTR [rcx],al
    406a:	27                   	(bad)  
    406b:	00 00                	add    BYTE PTR [rax],al
    406d:	00 0c 83             	add    BYTE PTR [rbx+rax*4],cl
    4070:	10 00                	adc    BYTE PTR [rax],al
    4072:	00 e5                	add    ch,ah
    4074:	00 00                	add    BYTE PTR [rax],al
    4076:	00 84 e0 00 01 00 00 	add    BYTE PTR [rax+riz*8+0x100],al
    407d:	00 00                	add    BYTE PTR [rax],al
    407f:	fe 02                	inc    BYTE PTR [rdx]
    4081:	00 00                	add    BYTE PTR [rax],al
    4083:	00 00                	add    BYTE PTR [rax],al
    4085:	00 00                	add    BYTE PTR [rax],al
    4087:	ff 24 00             	jmp    QWORD PTR [rax+rax*1]
    408a:	00 02                	add    BYTE PTR [rdx],al
    408c:	01 06                	add    DWORD PTR [rsi],eax
    408e:	c6 00 00             	mov    BYTE PTR [rax],0x0
    4091:	00 02                	add    BYTE PTR [rdx],al
    4093:	02 05 1c 01 00 00    	add    al,BYTE PTR [rip+0x11c]        # 41b5 <MULTIBOOT_HEADER_SIZE+0x415d>
    4099:	03 04 05 69 6e 74 00 	add    eax,DWORD PTR [rax*1+0x746e69]
    40a0:	02 08                	add    cl,BYTE PTR [rax]
    40a2:	05 13 01 00 00       	add    eax,0x113
    40a7:	04 24                	add    al,0x24
    40a9:	0e                   	(bad)  
    40aa:	00 00                	add    BYTE PTR [rax],al
    40ac:	04 30                	add    al,0x30
    40ae:	54                   	push   rsp
    40af:	00 00                	add    BYTE PTR [rax],al
    40b1:	00 02                	add    BYTE PTR [rdx],al
    40b3:	01 08                	add    DWORD PTR [rax],ecx
    40b5:	c4                   	(bad)  
    40b6:	00 00                	add    BYTE PTR [rax],al
    40b8:	00 04 c3             	add    BYTE PTR [rbx+rax*8],al
    40bb:	0e                   	(bad)  
    40bc:	00 00                	add    BYTE PTR [rax],al
    40be:	04 31                	add    al,0x31
    40c0:	66 00 00             	data16 add BYTE PTR [rax],al
    40c3:	00 02                	add    BYTE PTR [rdx],al
    40c5:	02 07                	add    al,BYTE PTR [rdi]
    40c7:	d2 00                	rol    BYTE PTR [rax],cl
    40c9:	00 00                	add    BYTE PTR [rax],al
    40cb:	04 2f                	add    al,0x2f
    40cd:	11 00                	adc    DWORD PTR [rax],eax
    40cf:	00 04 33             	add    BYTE PTR [rbx+rsi*1],al
    40d2:	78 00                	js     40d4 <MULTIBOOT_HEADER_SIZE+0x407c>
    40d4:	00 00                	add    BYTE PTR [rax],al
    40d6:	02 04 07             	add    al,BYTE PTR [rdi+rax*1]
    40d9:	6a 10                	push   0x10
    40db:	00 00                	add    BYTE PTR [rax],al
    40dd:	04 7b                	add    al,0x7b
    40df:	11 00                	adc    DWORD PTR [rax],eax
    40e1:	00 04 37             	add    BYTE PTR [rdi+rsi*1],al
    40e4:	8a 00                	mov    al,BYTE PTR [rax]
    40e6:	00 00                	add    BYTE PTR [rax],al
    40e8:	02 08                	add    cl,BYTE PTR [rax]
    40ea:	07                   	(bad)  
    40eb:	65 10 00             	adc    BYTE PTR gs:[rax],al
    40ee:	00 02                	add    BYTE PTR [rdx],al
    40f0:	08 05 0e 01 00 00    	or     BYTE PTR [rip+0x10e],al        # 4204 <MULTIBOOT_HEADER_SIZE+0x41ac>
    40f6:	02 10                	add    dl,BYTE PTR [rax]
    40f8:	04 2e                	add    al,0x2e
    40fa:	01 00                	add    DWORD PTR [rax],eax
    40fc:	00 02                	add    BYTE PTR [rdx],al
    40fe:	08 07                	or     BYTE PTR [rdi],al
    4100:	05 01 00 00 04       	add    eax,0x4000001
    4105:	25 11 00 00 05       	and    eax,0x5000011
    410a:	54                   	push   rsp
    410b:	78 00                	js     410d <MULTIBOOT_HEADER_SIZE+0x40b5>
    410d:	00 00                	add    BYTE PTR [rax],al
    410f:	04 71                	add    al,0x71
    4111:	11 00                	adc    DWORD PTR [rax],eax
    4113:	00 05 55 bc 00 00    	add    BYTE PTR [rip+0xbc55],al        # fd6e <MULTIBOOT_HEADER_SIZE+0xfd16>
    4119:	00 02                	add    BYTE PTR [rdx],al
    411b:	08 07                	or     BYTE PTR [rdi],al
    411d:	60                   	(bad)  
    411e:	10 00                	adc    BYTE PTR [rax],al
    4120:	00 05 5c 11 00 00    	add    BYTE PTR [rip+0x115c],al        # 5282 <MULTIBOOT_HEADER_SIZE+0x522a>
    4126:	18 05 a8 00 01 00    	sbb    BYTE PTR [rip+0x100a8],al        # 141d4 <MULTIBOOT_HEADER_SIZE+0x1417c>
    412c:	00 06                	add    BYTE PTR [rsi],al
    412e:	0c 10                	or     al,0x10
    4130:	00 00                	add    BYTE PTR [rax],al
    4132:	05 aa b1 00 00       	add    eax,0xb1aa
    4137:	00 00                	add    BYTE PTR [rax],al
    4139:	07                   	(bad)  
    413a:	6c                   	ins    BYTE PTR es:[rdi],dx
    413b:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    413d:	00 05 ab b1 00 00    	add    BYTE PTR [rip+0xb1ab],al        # f2ee <MULTIBOOT_HEADER_SIZE+0xf296>
    4143:	00 08                	add    BYTE PTR [rax],cl
    4145:	06                   	(bad)  
    4146:	09 01                	or     DWORD PTR [rcx],eax
    4148:	00 00                	add    BYTE PTR [rax],al
    414a:	05 b1 a6 00 00       	add    eax,0xa6b1
    414f:	00 10                	add    BYTE PTR [rax],dl
    4151:	06                   	(bad)  
    4152:	cb                   	retf   
    4153:	10 00                	adc    BYTE PTR [rax],al
    4155:	00 05 b2 a6 00 00    	add    BYTE PTR [rip+0xa6b2],al        # e80d <MULTIBOOT_HEADER_SIZE+0xe7b5>
    415b:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
    415e:	02 01                	add    al,BYTE PTR [rcx]
    4160:	06                   	(bad)  
    4161:	cd 00                	int    0x0
    4163:	00 00                	add    BYTE PTR [rax],al
    4165:	05 cc 05 00 00       	add    eax,0x5cc
    416a:	10 06                	adc    BYTE PTR [rsi],al
    416c:	0b 2c 01             	or     ebp,DWORD PTR [rcx+rax*1]
    416f:	00 00                	add    BYTE PTR [rax],al
    4171:	06                   	(bad)  
    4172:	d1 06                	rol    DWORD PTR [rsi],1
    4174:	00 00                	add    BYTE PTR [rax],al
    4176:	06                   	(bad)  
    4177:	0d 2c 01 00 00       	or     eax,0x12c
    417c:	00 06                	add    BYTE PTR [rsi],al
    417e:	10 07                	adc    BYTE PTR [rdi],al
    4180:	00 00                	add    BYTE PTR [rax],al
    4182:	06                   	(bad)  
    4183:	0e                   	(bad)  
    4184:	2c 01                	sub    al,0x1
    4186:	00 00                	add    BYTE PTR [rax],al
    4188:	08 00                	or     BYTE PTR [rax],al
    418a:	08 08                	or     BYTE PTR [rax],cl
    418c:	07                   	(bad)  
    418d:	01 00                	add    DWORD PTR [rax],eax
    418f:	00 04 cd 05 00 00 06 	add    BYTE PTR [rcx*8+0x6000005],al
    4196:	0f 07                	sysret 
    4198:	01 00                	add    DWORD PTR [rax],eax
    419a:	00 05 90 06 00 00    	add    BYTE PTR [rip+0x690],al        # 4830 <MULTIBOOT_HEADER_SIZE+0x47d8>
    41a0:	10 06                	adc    BYTE PTR [rsi],al
    41a2:	11 62 01             	adc    DWORD PTR [rdx+0x1],esp
    41a5:	00 00                	add    BYTE PTR [rax],al
    41a7:	06                   	(bad)  
    41a8:	dd 07                	fld    QWORD PTR [rdi]
    41aa:	00 00                	add    BYTE PTR [rax],al
    41ac:	06                   	(bad)  
    41ad:	13 62 01             	adc    esp,DWORD PTR [rdx+0x1]
    41b0:	00 00                	add    BYTE PTR [rax],al
    41b2:	00 06                	add    BYTE PTR [rsi],al
    41b4:	50                   	push   rax
    41b5:	08 00                	or     BYTE PTR [rax],al
    41b7:	00 06                	add    BYTE PTR [rsi],al
    41b9:	14 62                	adc    al,0x62
    41bb:	01 00                	add    DWORD PTR [rax],eax
    41bd:	00 08                	add    BYTE PTR [rax],cl
    41bf:	00 08                	add    BYTE PTR [rax],cl
    41c1:	08 32                	or     BYTE PTR [rdx],dh
    41c3:	01 00                	add    DWORD PTR [rax],eax
    41c5:	00 04 91             	add    BYTE PTR [rcx+rdx*4],al
    41c8:	06                   	(bad)  
    41c9:	00 00                	add    BYTE PTR [rax],al
    41cb:	06                   	(bad)  
    41cc:	15 3d 01 00 00       	adc    eax,0x13d
    41d1:	09 0a                	or     DWORD PTR [rdx],ecx
    41d3:	07                   	(bad)  
    41d4:	06                   	(bad)  
    41d5:	94                   	xchg   esp,eax
    41d6:	01 00                	add    DWORD PTR [rax],eax
    41d8:	00 06                	add    BYTE PTR [rsi],al
    41da:	b8 0d 00 00 07       	mov    eax,0x700000d
    41df:	08 5b 00             	or     BYTE PTR [rbx+0x0],bl
    41e2:	00 00                	add    BYTE PTR [rax],al
    41e4:	00 06                	add    BYTE PTR [rsi],al
    41e6:	b7 0e                	mov    bh,0xe
    41e8:	00 00                	add    BYTE PTR [rax],al
    41ea:	07                   	(bad)  
    41eb:	09 7f 00             	or     DWORD PTR [rdi+0x0],edi
    41ee:	00 00                	add    BYTE PTR [rax],al
    41f0:	02 00                	add    al,BYTE PTR [rax]
    41f2:	04 30                	add    al,0x30
    41f4:	10 00                	adc    BYTE PTR [rax],al
    41f6:	00 07                	add    BYTE PTR [rdi],al
    41f8:	0a 73 01             	or     dh,BYTE PTR [rbx+0x1]
    41fb:	00 00                	add    BYTE PTR [rax],al
    41fd:	09 20                	or     DWORD PTR [rax],esp
    41ff:	08 16                	or     BYTE PTR [rsi],dl
    4201:	d8 01                	fadd   DWORD PTR [rcx]
    4203:	00 00                	add    BYTE PTR [rax],al
    4205:	06                   	(bad)  
    4206:	84 11                	test   BYTE PTR [rcx],dl
    4208:	00 00                	add    BYTE PTR [rax],al
    420a:	08 17                	or     BYTE PTR [rdi],dl
    420c:	d8 01                	fadd   DWORD PTR [rcx]
    420e:	00 00                	add    BYTE PTR [rax],al
    4210:	00 06                	add    BYTE PTR [rsi],al
    4212:	e7 10                	out    0x10,eax
    4214:	00 00                	add    BYTE PTR [rax],al
    4216:	08 18                	or     BYTE PTR [rax],bl
    4218:	d8 01                	fadd   DWORD PTR [rcx]
    421a:	00 00                	add    BYTE PTR [rax],al
    421c:	08 06                	or     BYTE PTR [rsi],al
    421e:	a1 11 00 00 08 19 7f 	movabs eax,ds:0x7f1908000011
    4225:	00 00 
    4227:	00 10                	add    BYTE PTR [rax],dl
    4229:	06                   	(bad)  
    422a:	38 11                	cmp    BYTE PTR [rcx],dl
    422c:	00 00                	add    BYTE PTR [rax],al
    422e:	08 1a                	or     BYTE PTR [rdx],bl
    4230:	7f 00                	jg     4232 <MULTIBOOT_HEADER_SIZE+0x41da>
    4232:	00 00                	add    BYTE PTR [rax],al
    4234:	18 00                	sbb    BYTE PTR [rax],al
    4236:	08 08                	or     BYTE PTR [rax],cl
    4238:	68 01 00 00 04       	push   0x4000001
    423d:	b7 10                	mov    bh,0x10
    423f:	00 00                	add    BYTE PTR [rax],al
    4241:	08 1b                	or     BYTE PTR [rbx],bl
    4243:	9f                   	lahf   
    4244:	01 00                	add    DWORD PTR [rax],eax
    4246:	00 08                	add    BYTE PTR [rax],cl
    4248:	08 00                	or     BYTE PTR [rax],al
    424a:	01 00                	add    DWORD PTR [rax],eax
    424c:	00 09                	add    BYTE PTR [rcx],cl
    424e:	10 08                	adc    BYTE PTR [rax],cl
    4250:	25 10 02 00 00       	and    eax,0x210
    4255:	06                   	(bad)  
    4256:	fa                   	cli    
    4257:	10 00                	adc    BYTE PTR [rax],al
    4259:	00 08                	add    BYTE PTR [rax],cl
    425b:	26 d8 01             	fadd   DWORD PTR es:[rcx]
    425e:	00 00                	add    BYTE PTR [rax],al
    4260:	00 06                	add    BYTE PTR [rsi],al
    4262:	4f 11 00             	rex.WRXB adc QWORD PTR [r8],r8
    4265:	00 08                	add    BYTE PTR [rax],cl
    4267:	27                   	(bad)  
    4268:	7f 00                	jg     426a <MULTIBOOT_HEADER_SIZE+0x4212>
    426a:	00 00                	add    BYTE PTR [rax],al
    426c:	08 00                	or     BYTE PTR [rax],al
    426e:	04 93                	add    al,0x93
    4270:	11 00                	adc    DWORD PTR [rax],eax
    4272:	00 08                	add    BYTE PTR [rax],cl
    4274:	28 ef                	sub    bh,ch
    4276:	01 00                	add    DWORD PTR [rax],eax
    4278:	00 09                	add    BYTE PTR [rcx],cl
    427a:	20 08                	and    BYTE PTR [rax],cl
    427c:	2a 48 02             	sub    cl,BYTE PTR [rax+0x2]
    427f:	00 00                	add    BYTE PTR [rax],al
    4281:	06                   	(bad)  
    4282:	13 11                	adc    edx,DWORD PTR [rcx]
    4284:	00 00                	add    BYTE PTR [rax],al
    4286:	08 2b                	or     BYTE PTR [rbx],ch
    4288:	48 02 00             	rex.W add al,BYTE PTR [rax]
    428b:	00 00                	add    BYTE PTR [rax],al
    428d:	06                   	(bad)  
    428e:	c2 10 00             	ret    0x10
    4291:	00 08                	add    BYTE PTR [rax],cl
    4293:	2c 58                	sub    al,0x58
    4295:	02 00                	add    al,BYTE PTR [rax]
    4297:	00 10                	add    BYTE PTR [rax],dl
    4299:	06                   	(bad)  
    429a:	77 10                	ja     42ac <MULTIBOOT_HEADER_SIZE+0x4254>
    429c:	00 00                	add    BYTE PTR [rax],al
    429e:	08 2d 5e 02 00 00    	or     BYTE PTR [rip+0x25e],ch        # 4502 <MULTIBOOT_HEADER_SIZE+0x44aa>
    42a4:	18 00                	sbb    BYTE PTR [rax],al
    42a6:	0a 00                	or     al,BYTE PTR [rax]
    42a8:	01 00                	add    DWORD PTR [rax],eax
    42aa:	00 58 02             	add    BYTE PTR [rax+0x2],bl
    42ad:	00 00                	add    BYTE PTR [rax],al
    42af:	0b 9f 00 00 00 0c    	or     ebx,DWORD PTR [rdi+0xc000000]
    42b5:	00 08                	add    BYTE PTR [rax],cl
    42b7:	08 de                	or     dh,bl
    42b9:	01 00                	add    DWORD PTR [rax],eax
    42bb:	00 08                	add    BYTE PTR [rax],cl
    42bd:	08 10                	or     BYTE PTR [rax],dl
    42bf:	02 00                	add    al,BYTE PTR [rax]
    42c1:	00 04 06             	add    BYTE PTR [rsi+rax*1],al
    42c4:	11 00                	adc    DWORD PTR [rax],eax
    42c6:	00 08                	add    BYTE PTR [rax],cl
    42c8:	2e 1b 02             	sbb    eax,DWORD PTR cs:[rdx]
    42cb:	00 00                	add    BYTE PTR [rax],al
    42cd:	0c 39                	or     al,0x39
    42cf:	0f 00 00             	sldt   WORD PTR [rax]
    42d2:	01 16                	add    DWORD PTR [rsi],edx
    42d4:	7f 00                	jg     42d6 <MULTIBOOT_HEADER_SIZE+0x427e>
    42d6:	00 00                	add    BYTE PTR [rax],al
    42d8:	84 e0                	test   al,ah
    42da:	00 01                	add    BYTE PTR [rcx],al
    42dc:	00 00                	add    BYTE PTR [rax],al
    42de:	00 00                	add    BYTE PTR [rax],al
    42e0:	36 00 00             	add    BYTE PTR ss:[rax],al
    42e3:	00 00                	add    BYTE PTR [rax],al
    42e5:	00 00                	add    BYTE PTR [rax],al
    42e7:	00 01                	add    BYTE PTR [rcx],al
    42e9:	9c                   	pushf  
    42ea:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    42eb:	02 00                	add    al,BYTE PTR [rax]
    42ed:	00 0d 6c 6f 77 00    	add    BYTE PTR [rip+0x776f6c],cl        # 77b25f <MULTIBOOT_HEADER_SIZE+0x77b207>
    42f3:	01 16                	add    DWORD PTR [rsi],edx
    42f5:	6d                   	ins    DWORD PTR es:[rdi],dx
    42f6:	00 00                	add    BYTE PTR [rax],al
    42f8:	00 02                	add    BYTE PTR [rdx],al
    42fa:	91                   	xchg   ecx,eax
    42fb:	6c                   	ins    BYTE PTR es:[rdi],dx
    42fc:	0e                   	(bad)  
    42fd:	f2 04 00             	repnz add al,0x0
    4300:	00 01                	add    BYTE PTR [rcx],al
    4302:	16                   	(bad)  
    4303:	6d                   	ins    DWORD PTR es:[rdi],dx
    4304:	00 00                	add    BYTE PTR [rax],al
    4306:	00 02                	add    BYTE PTR [rdx],al
    4308:	91                   	xchg   ecx,eax
    4309:	68 00 0c cc 0e       	push   0xecc0c00
    430e:	00 00                	add    BYTE PTR [rax],al
    4310:	02 11                	add    dl,BYTE PTR [rcx]
    4312:	6d                   	ins    DWORD PTR es:[rdi],dx
    4313:	00 00                	add    BYTE PTR [rax],al
    4315:	00 ba e0 00 01 00    	add    BYTE PTR [rdx+0x100e0],bh
    431b:	00 00                	add    BYTE PTR [rax],al
    431d:	00 1f                	add    BYTE PTR [rdi],bl
    431f:	00 00                	add    BYTE PTR [rax],al
    4321:	00 00                	add    BYTE PTR [rax],al
    4323:	00 00                	add    BYTE PTR [rax],al
    4325:	00 01                	add    BYTE PTR [rcx],al
    4327:	9c                   	pushf  
    4328:	eb 02                	jmp    432c <MULTIBOOT_HEADER_SIZE+0x42d4>
    432a:	00 00                	add    BYTE PTR [rax],al
    432c:	0e                   	(bad)  
    432d:	35 07 00 00 02       	xor    eax,0x2000007
    4332:	11 6d 00             	adc    DWORD PTR [rbp+0x0],ebp
    4335:	00 00                	add    BYTE PTR [rax],al
    4337:	02 91 6c 0d 72 70    	add    dl,BYTE PTR [rcx+0x70720d6c]
    433d:	6c                   	ins    BYTE PTR es:[rdi],dx
    433e:	00 02                	add    BYTE PTR [rdx],al
    4340:	11 6d 00             	adc    DWORD PTR [rbp+0x0],ebp
    4343:	00 00                	add    BYTE PTR [rax],al
    4345:	02 91 68 00 0f a2    	add    dl,BYTE PTR [rcx-0x5df0ff98]
    434b:	10 00                	adc    BYTE PTR [rax],al
    434d:	00 03                	add    BYTE PTR [rbx],al
    434f:	10 d9                	adc    cl,bl
    4351:	e0 00                	loopne 4353 <MULTIBOOT_HEADER_SIZE+0x42fb>
    4353:	01 00                	add    DWORD PTR [rax],eax
    4355:	00 00                	add    BYTE PTR [rax],al
    4357:	00 a8 00 00 00 00    	add    BYTE PTR [rax+0x0],ch
    435d:	00 00                	add    BYTE PTR [rax],al
    435f:	00 01                	add    BYTE PTR [rcx],al
    4361:	9c                   	pushf  
    4362:	4f 03 00             	rex.WRXB add r8,QWORD PTR [r8]
    4365:	00 0e                	add    BYTE PTR [rsi],cl
    4367:	de 10                	ficom  WORD PTR [rax]
    4369:	00 00                	add    BYTE PTR [rax],al
    436b:	03 10                	add    edx,DWORD PTR [rax]
    436d:	4f 03 00             	rex.WRXB add r8,QWORD PTR [r8]
    4370:	00 02                	add    BYTE PTR [rdx],al
    4372:	91                   	xchg   ecx,eax
    4373:	58                   	pop    rax
    4374:	10 65 61             	adc    BYTE PTR [rbp+0x61],ah
    4377:	78 00                	js     4379 <MULTIBOOT_HEADER_SIZE+0x4321>
    4379:	03 14 6d 00 00 00 02 	add    edx,DWORD PTR [rbp*2+0x2000000]
    4380:	91                   	xchg   ecx,eax
    4381:	6c                   	ins    BYTE PTR es:[rdi],dx
    4382:	10 65 62             	adc    BYTE PTR [rbp+0x62],ah
    4385:	78 00                	js     4387 <MULTIBOOT_HEADER_SIZE+0x432f>
    4387:	03 14 6d 00 00 00 02 	add    edx,DWORD PTR [rbp*2+0x2000000]
    438e:	91                   	xchg   ecx,eax
    438f:	68 10 65 63 78       	push   0x78636510
    4394:	00 03                	add    BYTE PTR [rbx],al
    4396:	14 6d                	adc    al,0x6d
    4398:	00 00                	add    BYTE PTR [rax],al
    439a:	00 02                	add    BYTE PTR [rdx],al
    439c:	91                   	xchg   ecx,eax
    439d:	64 10 65 64          	adc    BYTE PTR fs:[rbp+0x64],ah
    43a1:	78 00                	js     43a3 <MULTIBOOT_HEADER_SIZE+0x434b>
    43a3:	03 14 6d 00 00 00 02 	add    edx,DWORD PTR [rbp*2+0x2000000]
    43aa:	91                   	xchg   ecx,eax
    43ab:	60                   	(bad)  
    43ac:	00 08                	add    BYTE PTR [rax],cl
    43ae:	08 64 02 00          	or     BYTE PTR [rdx+rax*1+0x0],ah
    43b2:	00 11                	add    BYTE PTR [rcx],dl
    43b4:	d0 10                	rcl    BYTE PTR [rax],1
    43b6:	00 00                	add    BYTE PTR [rax],al
    43b8:	03 1c 81             	add    ebx,DWORD PTR [rcx+rax*4]
    43bb:	e1 00                	loope  43bd <MULTIBOOT_HEADER_SIZE+0x4365>
    43bd:	01 00                	add    DWORD PTR [rax],eax
    43bf:	00 00                	add    BYTE PTR [rax],al
    43c1:	00 6c 01 00          	add    BYTE PTR [rcx+rax*1+0x0],ch
    43c5:	00 00                	add    BYTE PTR [rax],al
    43c7:	00 00                	add    BYTE PTR [rax],al
    43c9:	00 01                	add    BYTE PTR [rcx],al
    43cb:	9c                   	pushf  
    43cc:	12 46 11             	adc    al,BYTE PTR [rsi+0x11]
    43cf:	00 00                	add    BYTE PTR [rax],al
    43d1:	03 3c 4f             	add    edi,DWORD PTR [rdi+rcx*2]
    43d4:	03 00                	add    eax,DWORD PTR [rax]
    43d6:	00 ed                	add    ch,ch
    43d8:	e2 00                	loop   43da <MULTIBOOT_HEADER_SIZE+0x4382>
    43da:	01 00                	add    DWORD PTR [rax],eax
    43dc:	00 00                	add    BYTE PTR [rax],al
    43de:	00 95 00 00 00 00    	add    BYTE PTR [rbp+0x0],dl
    43e4:	00 00                	add    BYTE PTR [rax],al
    43e6:	00 01                	add    BYTE PTR [rcx],al
    43e8:	9c                   	pushf  
    43e9:	ac                   	lods   al,BYTE PTR ds:[rsi]
    43ea:	03 00                	add    eax,DWORD PTR [rax]
    43ec:	00 0e                	add    BYTE PTR [rsi],cl
    43ee:	c4                   	(bad)  
    43ef:	10 00                	adc    BYTE PTR [rax],al
    43f1:	00 03                	add    BYTE PTR [rbx],al
    43f3:	3c e9                	cmp    al,0xe9
    43f5:	01 00                	add    DWORD PTR [rax],eax
    43f7:	00 02                	add    BYTE PTR [rdx],al
    43f9:	91                   	xchg   ecx,eax
    43fa:	58                   	pop    rax
    43fb:	13 de                	adc    ebx,esi
    43fd:	10 00                	adc    BYTE PTR [rax],al
    43ff:	00 03                	add    BYTE PTR [rbx],al
    4401:	4d                   	rex.WRB
    4402:	4f 03 00             	rex.WRXB add r8,QWORD PTR [r8]
    4405:	00 02                	add    BYTE PTR [rdx],al
    4407:	91                   	xchg   ecx,eax
    4408:	68 00 14 96 10       	push   0x10961400
    440d:	00 00                	add    BYTE PTR [rax],al
    440f:	05 b3 c3 00 00       	add    eax,0xc3b3
    4414:	00 09                	add    BYTE PTR [rcx],cl
    4416:	03 d0                	add    edx,eax
    4418:	bf 01 01 00 00       	mov    edi,0x101
    441d:	00 00                	add    BYTE PTR [rax],al
    441f:	0a 49 00             	or     cl,BYTE PTR [rcx+0x0]
    4422:	00 00                	add    BYTE PTR [rax],al
    4424:	cc                   	int3   
    4425:	03 00                	add    eax,DWORD PTR [rax]
    4427:	00 15 00 16 3e 10    	add    BYTE PTR [rip+0x103e1600],dl        # 103e5a2d <kernel_end+0xf3c9a35>
    442d:	00 00                	add    BYTE PTR [rax],al
    442f:	09 0e                	or     DWORD PTR [rsi],ecx
    4431:	c1 03 00             	rol    DWORD PTR [rbx],0x0
    4434:	00 16                	add    BYTE PTR [rsi],dl
    4436:	44 10 00             	adc    BYTE PTR [rax],r8b
    4439:	00 09                	add    BYTE PTR [rcx],cl
    443b:	11 94 01 00 00 16 27 	adc    DWORD PTR [rcx+rax*1+0x27160000],edx
    4442:	10 00                	adc    BYTE PTR [rax],al
    4444:	00 09                	add    BYTE PTR [rcx],cl
    4446:	13 7f 00             	adc    edi,DWORD PTR [rdi+0x0]
    4449:	00 00                	add    BYTE PTR [rax],al
    444b:	00 c0                	add    al,al
    444d:	03 00                	add    eax,DWORD PTR [rax]
    444f:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    4452:	9b                   	fwait
    4453:	10 00                	adc    BYTE PTR [rax],al
    4455:	00 08                	add    BYTE PTR [rax],cl
    4457:	01 27                	add    DWORD PTR [rdi],esp
    4459:	00 00                	add    BYTE PTR [rax],al
    445b:	00 0c 2d 12 00 00 e5 	add    BYTE PTR [rbp*1-0x1affffee],cl
    4462:	00 00                	add    BYTE PTR [rax],al
    4464:	00 82 e3 00 01 00    	add    BYTE PTR [rdx+0x100e3],al
    446a:	00 00                	add    BYTE PTR [rax],al
    446c:	00 4b 06             	add    BYTE PTR [rbx+0x6],cl
    446f:	00 00                	add    BYTE PTR [rax],al
    4471:	00 00                	add    BYTE PTR [rax],al
    4473:	00 00                	add    BYTE PTR [rax],al
    4475:	68 26 00 00 02       	push   0x2000026
    447a:	08 05 13 01 00 00    	or     BYTE PTR [rip+0x113],al        # 4593 <MULTIBOOT_HEADER_SIZE+0x453b>
    4480:	02 08                	add    cl,BYTE PTR [rax]
    4482:	07                   	(bad)  
    4483:	65 10 00             	adc    BYTE PTR gs:[rax],al
    4486:	00 03                	add    BYTE PTR [rbx],al
    4488:	04 05                	add    al,0x5
    448a:	69 6e 74 00 02 08 05 	imul   ebp,DWORD PTR [rsi+0x74],0x5080200
    4491:	0e                   	(bad)  
    4492:	01 00                	add    DWORD PTR [rax],eax
    4494:	00 02                	add    BYTE PTR [rdx],al
    4496:	10 04 2e             	adc    BYTE PTR [rsi+rbp*1],al
    4499:	01 00                	add    DWORD PTR [rax],eax
    449b:	00 04 5d 12 00 00 02 	add    BYTE PTR [rbx*2+0x2000012],al
    44a2:	28 02                	sub    BYTE PTR [rdx],al
    44a4:	08 07                	or     BYTE PTR [rdi],al
    44a6:	05 01 00 00 02       	add    eax,0x2000001
    44ab:	04 07                	add    al,0x7
    44ad:	6a 10                	push   0x10
    44af:	00 00                	add    BYTE PTR [rax],al
    44b1:	05 64 12 00 00       	add    eax,0x1264
    44b6:	02 62 50             	add    ah,BYTE PTR [rdx+0x50]
    44b9:	00 00                	add    BYTE PTR [rax],al
    44bb:	00 02                	add    BYTE PTR [rdx],al
    44bd:	01 06                	add    DWORD PTR [rsi],eax
    44bf:	c6 00 00             	mov    BYTE PTR [rax],0x0
    44c2:	00 02                	add    BYTE PTR [rdx],al
    44c4:	02 05 1c 01 00 00    	add    al,BYTE PTR [rip+0x11c]        # 45e6 <MULTIBOOT_HEADER_SIZE+0x458e>
    44ca:	05 30 11 00 00       	add    eax,0x1130
    44cf:	03 26                	add    esp,DWORD PTR [rsi]
    44d1:	3b 00                	cmp    eax,DWORD PTR [rax]
    44d3:	00 00                	add    BYTE PTR [rax],al
    44d5:	05 7c 11 00 00       	add    eax,0x117c
    44da:	03 28                	add    ebp,DWORD PTR [rax]
    44dc:	2d 00 00 00 02       	sub    eax,0x2000000
    44e1:	01 08                	add    DWORD PTR [rax],ecx
    44e3:	c4                   	(bad)  
    44e4:	00 00                	add    BYTE PTR [rax],al
    44e6:	00 02                	add    BYTE PTR [rdx],al
    44e8:	02 07                	add    al,BYTE PTR [rdi]
    44ea:	d2 00                	rol    BYTE PTR [rax],cl
    44ec:	00 00                	add    BYTE PTR [rax],al
    44ee:	05 2f 11 00 00       	add    eax,0x112f
    44f3:	03 33                	add    esi,DWORD PTR [rbx]
    44f5:	5e                   	pop    rsi
    44f6:	00 00                	add    BYTE PTR [rax],al
    44f8:	00 05 7b 11 00 00    	add    BYTE PTR [rip+0x117b],al        # 5679 <MULTIBOOT_HEADER_SIZE+0x5621>
    44fe:	03 37                	add    esi,DWORD PTR [rdi]
    4500:	34 00                	xor    al,0x0
    4502:	00 00                	add    BYTE PTR [rax],al
    4504:	06                   	(bad)  
    4505:	cb                   	retf   
    4506:	11 00                	adc    DWORD PTR [rax],eax
    4508:	00 01                	add    BYTE PTR [rcx],al
    450a:	0b 82 e3 00 01 00    	or     eax,DWORD PTR [rdx+0x100e3]
    4510:	00 00                	add    BYTE PTR [rax],al
    4512:	00 1b                	add    BYTE PTR [rbx],bl
    4514:	00 00                	add    BYTE PTR [rax],al
    4516:	00 00                	add    BYTE PTR [rax],al
    4518:	00 00                	add    BYTE PTR [rax],al
    451a:	00 01                	add    BYTE PTR [rcx],al
    451c:	9c                   	pushf  
    451d:	07                   	(bad)  
    451e:	dd 11                	fst    QWORD PTR [rcx]
    4520:	00 00                	add    BYTE PTR [rax],al
    4522:	01 11                	add    DWORD PTR [rcx],edx
    4524:	9d                   	popf   
    4525:	e3 00                	jrcxz  4527 <MULTIBOOT_HEADER_SIZE+0x44cf>
    4527:	01 00                	add    DWORD PTR [rax],eax
    4529:	00 00                	add    BYTE PTR [rax],al
    452b:	00 1b                	add    BYTE PTR [rbx],bl
    452d:	01 00                	add    DWORD PTR [rax],eax
    452f:	00 00                	add    BYTE PTR [rax],al
    4531:	00 00                	add    BYTE PTR [rax],al
    4533:	00 01                	add    BYTE PTR [rcx],al
    4535:	9c                   	pushf  
    4536:	fd                   	std    
    4537:	00 00                	add    BYTE PTR [rax],al
    4539:	00 08                	add    BYTE PTR [rax],cl
    453b:	73 74                	jae    45b1 <MULTIBOOT_HEADER_SIZE+0x4559>
    453d:	72 00                	jb     453f <MULTIBOOT_HEADER_SIZE+0x44e7>
    453f:	01 11                	add    DWORD PTR [rcx],edx
    4541:	fd                   	std    
    4542:	00 00                	add    BYTE PTR [rax],al
    4544:	00 02                	add    BYTE PTR [rdx],al
    4546:	91                   	xchg   ecx,eax
    4547:	68 00 09 08 0a       	push   0xa080900
    454c:	01 00                	add    DWORD PTR [rax],eax
    454e:	00 02                	add    BYTE PTR [rdx],al
    4550:	01 06                	add    DWORD PTR [rsi],eax
    4552:	cd 00                	int    0x0
    4554:	00 00                	add    BYTE PTR [rax],al
    4556:	0a 03                	or     al,BYTE PTR [rbx]
    4558:	01 00                	add    DWORD PTR [rax],eax
    455a:	00 07                	add    BYTE PTR [rdi],al
    455c:	f9                   	stc    
    455d:	11 00                	adc    DWORD PTR [rax],eax
    455f:	00 01                	add    BYTE PTR [rcx],al
    4561:	34 b8                	xor    al,0xb8
    4563:	e4 00                	in     al,0x0
    4565:	01 00                	add    DWORD PTR [rax],eax
    4567:	00 00                	add    BYTE PTR [rax],al
    4569:	00 86 00 00 00 00    	add    BYTE PTR [rsi+0x0],al
    456f:	00 00                	add    BYTE PTR [rax],al
    4571:	00 01                	add    BYTE PTR [rcx],al
    4573:	9c                   	pushf  
    4574:	88 01                	mov    BYTE PTR [rcx],al
    4576:	00 00                	add    BYTE PTR [rax],al
    4578:	0b 6c 12 00          	or     ebp,DWORD PTR [rdx+rdx*1+0x0]
    457c:	00 01                	add    BYTE PTR [rcx],al
    457e:	34 ad                	xor    al,0xad
    4580:	00 00                	add    BYTE PTR [rax],al
    4582:	00 03                	add    BYTE PTR [rbx],al
    4584:	91                   	xchg   ecx,eax
    4585:	b8 7f 0c 61 72       	mov    eax,0x72610c7f
    458a:	72 00                	jb     458c <MULTIBOOT_HEADER_SIZE+0x4534>
    458c:	01 36                	add    DWORD PTR [rsi],esi
    458e:	88 01                	mov    BYTE PTR [rcx],al
    4590:	00 00                	add    BYTE PTR [rax],al
    4592:	02 91 43 0d 35 07    	add    dl,BYTE PTR [rcx+0x7350d43]
    4598:	00 00                	add    BYTE PTR [rax],al
    459a:	01 38                	add    DWORD PTR [rax],edi
    459c:	a2 00 00 00 02 91 6c 	movabs ds:0x640c6c9102000000,al
    45a3:	0c 64 
    45a5:	69 76 00 01 39 98 01 	imul   esi,DWORD PTR [rsi+0x0],0x1983901
    45ac:	00 00                	add    BYTE PTR [rax],al
    45ae:	02 91 68 0e c0 00    	add    dl,BYTE PTR [rcx+0xc00e68]
    45b4:	00 00                	add    BYTE PTR [rax],al
    45b6:	0c 71                	or     al,0x71
    45b8:	75 6f                	jne    4629 <MULTIBOOT_HEADER_SIZE+0x45d1>
    45ba:	00 01                	add    BYTE PTR [rcx],al
    45bc:	3c ad                	cmp    al,0xad
    45be:	00 00                	add    BYTE PTR [rax],al
    45c0:	00 02                	add    BYTE PTR [rdx],al
    45c2:	91                   	xchg   ecx,eax
    45c3:	60                   	(bad)  
    45c4:	0c 72                	or     al,0x72
    45c6:	6d                   	ins    DWORD PTR es:[rdi],dx
    45c7:	64 00 01             	add    BYTE PTR fs:[rcx],al
    45ca:	3d ad 00 00 00       	cmp    eax,0xad
    45cf:	02 91 58 00 00 0f    	add    dl,BYTE PTR [rcx+0xf000058]
    45d5:	03 01                	add    eax,DWORD PTR [rcx]
    45d7:	00 00                	add    BYTE PTR [rax],al
    45d9:	98                   	cwde   
    45da:	01 00                	add    DWORD PTR [rax],eax
    45dc:	00 10                	add    BYTE PTR [rax],dl
    45de:	57                   	push   rdi
    45df:	00 00                	add    BYTE PTR [rax],al
    45e1:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
    45e4:	0a a2 00 00 00 07    	or     ah,BYTE PTR [rdx+0x7000000]
    45ea:	73 12                	jae    45fe <MULTIBOOT_HEADER_SIZE+0x45a6>
    45ec:	00 00                	add    BYTE PTR [rax],al
    45ee:	01 47 3e             	add    DWORD PTR [rdi+0x3e],eax
    45f1:	e5 00                	in     eax,0x0
    45f3:	01 00                	add    DWORD PTR [rax],eax
    45f5:	00 00                	add    BYTE PTR [rax],al
    45f7:	00 af 00 00 00 00    	add    BYTE PTR [rdi+0x0],ch
    45fd:	00 00                	add    BYTE PTR [rax],al
    45ff:	00 01                	add    BYTE PTR [rcx],al
    4601:	9c                   	pushf  
    4602:	25 02 00 00 0b       	and    eax,0xb000002
    4607:	6c                   	ins    BYTE PTR es:[rdi],dx
    4608:	12 00                	adc    al,BYTE PTR [rax]
    460a:	00 01                	add    BYTE PTR [rcx],al
    460c:	47 89 00             	rex.RXB mov DWORD PTR [r8],r8d
    460f:	00 00                	add    BYTE PTR [rax],al
    4611:	03 91 a8 7f 0c 61    	add    edx,DWORD PTR [rcx+0x610c7fa8]
    4617:	72 72                	jb     468b <MULTIBOOT_HEADER_SIZE+0x4633>
    4619:	00 01                	add    BYTE PTR [rcx],al
    461b:	49 88 01             	rex.WB mov BYTE PTR [r9],al
    461e:	00 00                	add    BYTE PTR [rax],al
    4620:	03 91 bb 7f 0d 35    	add    edx,DWORD PTR [rcx+0x350d7fbb]
    4626:	07                   	(bad)  
    4627:	00 00                	add    BYTE PTR [rax],al
    4629:	01 4b a2             	add    DWORD PTR [rbx-0x5e],ecx
    462c:	00 00                	add    BYTE PTR [rax],al
    462e:	00 02                	add    BYTE PTR [rdx],al
    4630:	91                   	xchg   ecx,eax
    4631:	6c                   	ins    BYTE PTR es:[rdi],dx
    4632:	0d 52 12 00 00       	or     eax,0x1252
    4637:	01 4c a2 00          	add    DWORD PTR [rdx+riz*4+0x0],ecx
    463b:	00 00                	add    BYTE PTR [rax],al
    463d:	02 91 68 0c 64 69    	add    dl,BYTE PTR [rcx+0x69640c68]
    4643:	76 00                	jbe    4645 <MULTIBOOT_HEADER_SIZE+0x45ed>
    4645:	01 4d 98             	add    DWORD PTR [rbp-0x68],ecx
    4648:	01 00                	add    DWORD PTR [rax],eax
    464a:	00 02                	add    BYTE PTR [rdx],al
    464c:	91                   	xchg   ecx,eax
    464d:	64 0e                	fs (bad) 
    464f:	f0 00 00             	lock add BYTE PTR [rax],al
    4652:	00 0c 71             	add    BYTE PTR [rcx+rsi*2],cl
    4655:	75 6f                	jne    46c6 <MULTIBOOT_HEADER_SIZE+0x466e>
    4657:	00 01                	add    BYTE PTR [rcx],al
    4659:	55                   	push   rbp
    465a:	89 00                	mov    DWORD PTR [rax],eax
    465c:	00 00                	add    BYTE PTR [rax],al
    465e:	02 91 58 0c 72 6d    	add    dl,BYTE PTR [rcx+0x6d720c58]
    4664:	64 00 01             	add    BYTE PTR fs:[rcx],al
    4667:	56                   	push   rsi
    4668:	89 00                	mov    DWORD PTR [rax],eax
    466a:	00 00                	add    BYTE PTR [rax],al
    466c:	02 91 50 00 00 07    	add    dl,BYTE PTR [rcx+0x7000050]
    4672:	09 12                	or     DWORD PTR [rdx],edx
    4674:	00 00                	add    BYTE PTR [rax],al
    4676:	01 64 ed e5          	add    DWORD PTR [rbp+rbp*8-0x1b],esp
    467a:	00 01                	add    BYTE PTR [rcx],al
    467c:	00 00                	add    BYTE PTR [rax],al
    467e:	00 00                	add    BYTE PTR [rax],al
    4680:	26 01 00             	add    DWORD PTR es:[rax],eax
    4683:	00 00                	add    BYTE PTR [rax],al
    4685:	00 00                	add    BYTE PTR [rax],al
    4687:	00 01                	add    BYTE PTR [rcx],al
    4689:	9c                   	pushf  
    468a:	da 02                	fiadd  DWORD PTR [rdx]
    468c:	00 00                	add    BYTE PTR [rax],al
    468e:	0b 6c 12 00          	or     ebp,DWORD PTR [rdx+rdx*1+0x0]
    4692:	00 01                	add    BYTE PTR [rcx],al
    4694:	64 ad                	lods   eax,DWORD PTR fs:[rsi]
    4696:	00 00                	add    BYTE PTR [rax],al
    4698:	00 03                	add    BYTE PTR [rbx],al
    469a:	91                   	xchg   ecx,eax
    469b:	88 7f 0b             	mov    BYTE PTR [rdi+0xb],bh
    469e:	ec                   	in     al,dx
    469f:	11 00                	adc    DWORD PTR [rax],eax
    46a1:	00 01                	add    BYTE PTR [rcx],al
    46a3:	64 ad                	lods   eax,DWORD PTR fs:[rsi]
    46a5:	00 00                	add    BYTE PTR [rax],al
    46a7:	00 03                	add    BYTE PTR [rbx],al
    46a9:	91                   	xchg   ecx,eax
    46aa:	80 7f 0d ba          	cmp    BYTE PTR [rdi+0xd],0xba
    46ae:	11 00                	adc    DWORD PTR [rax],eax
    46b0:	00 01                	add    BYTE PTR [rcx],al
    46b2:	66 ea                	data16 (bad) 
    46b4:	02 00                	add    al,BYTE PTR [rax]
    46b6:	00 03                	add    BYTE PTR [rbx],al
    46b8:	91                   	xchg   ecx,eax
    46b9:	b8 7f 0d 20 12       	mov    eax,0x12200d7f
    46be:	00 00                	add    BYTE PTR [rax],al
    46c0:	01 67 ef             	add    DWORD PTR [rdi-0x11],esp
    46c3:	02 00                	add    al,BYTE PTR [rax]
    46c5:	00 03                	add    BYTE PTR [rbx],al
    46c7:	91                   	xchg   ecx,eax
    46c8:	a8 7f                	test   al,0x7f
    46ca:	0d 18 12 00 00       	or     eax,0x1218
    46cf:	01 68 f4             	add    DWORD PTR [rax-0xc],ebp
    46d2:	02 00                	add    al,BYTE PTR [rax]
    46d4:	00 02                	add    BYTE PTR [rdx],al
    46d6:	91                   	xchg   ecx,eax
    46d7:	60                   	(bad)  
    46d8:	0c 61                	or     al,0x61
    46da:	72 72                	jb     474e <MULTIBOOT_HEADER_SIZE+0x46f6>
    46dc:	00 01                	add    BYTE PTR [rcx],al
    46de:	69 f9 02 00 00 03    	imul   edi,ecx,0x3000002
    46e4:	91                   	xchg   ecx,eax
    46e5:	97                   	xchg   edi,eax
    46e6:	7f 0d                	jg     46f5 <MULTIBOOT_HEADER_SIZE+0x469d>
    46e8:	35 07 00 00 01       	xor    eax,0x1000007
    46ed:	6b a2 00 00 00 02 91 	imul   esp,DWORD PTR [rdx+0x2000000],0xffffff91
    46f4:	6c                   	ins    BYTE PTR es:[rdi],dx
    46f5:	0c 64                	or     al,0x64
    46f7:	69 76 00 01 6c 98 01 	imul   esi,DWORD PTR [rsi+0x0],0x1986c01
    46fe:	00 00                	add    BYTE PTR [rax],al
    4700:	02 91 5c 0e 20 01    	add    dl,BYTE PTR [rcx+0x1200e5c]
    4706:	00 00                	add    BYTE PTR [rax],al
    4708:	0c 71                	or     al,0x71
    470a:	75 6f                	jne    477b <MULTIBOOT_HEADER_SIZE+0x4723>
    470c:	00 01                	add    BYTE PTR [rcx],al
    470e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    470f:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    4710:	00 00                	add    BYTE PTR [rax],al
    4712:	00 02                	add    BYTE PTR [rdx],al
    4714:	91                   	xchg   ecx,eax
    4715:	50                   	push   rax
    4716:	0c 72                	or     al,0x72
    4718:	6d                   	ins    DWORD PTR es:[rdi],dx
    4719:	64 00 01             	add    BYTE PTR fs:[rcx],al
    471c:	70 ad                	jo     46cb <MULTIBOOT_HEADER_SIZE+0x4673>
    471e:	00 00                	add    BYTE PTR [rax],al
    4720:	00 02                	add    BYTE PTR [rdx],al
    4722:	91                   	xchg   ecx,eax
    4723:	48 00 00             	rex.W add BYTE PTR [rax],al
    4726:	0f 0a                	(bad)  
    4728:	01 00                	add    DWORD PTR [rax],eax
    472a:	00 ea                	add    dl,ch
    472c:	02 00                	add    al,BYTE PTR [rax]
    472e:	00 10                	add    BYTE PTR [rax],dl
    4730:	57                   	push   rdi
    4731:	00 00                	add    BYTE PTR [rax],al
    4733:	00 0f                	add    BYTE PTR [rdi],cl
    4735:	00 0a                	add    BYTE PTR [rdx],cl
    4737:	da 02                	fiadd  DWORD PTR [rdx]
    4739:	00 00                	add    BYTE PTR [rax],al
    473b:	0a da                	or     bl,dl
    473d:	02 00                	add    al,BYTE PTR [rax]
    473f:	00 0a                	add    BYTE PTR [rdx],cl
    4741:	fd                   	std    
    4742:	00 00                	add    BYTE PTR [rax],al
    4744:	00 0f                	add    BYTE PTR [rdi],cl
    4746:	03 01                	add    eax,DWORD PTR [rcx]
    4748:	00 00                	add    BYTE PTR [rax],al
    474a:	09 03                	or     DWORD PTR [rbx],eax
    474c:	00 00                	add    BYTE PTR [rax],al
    474e:	10 57 00             	adc    BYTE PTR [rdi+0x0],dl
    4751:	00 00                	add    BYTE PTR [rax],al
    4753:	10 00                	adc    BYTE PTR [rax],al
    4755:	11 41 12             	adc    DWORD PTR [rcx+0x12],eax
    4758:	00 00                	add    BYTE PTR [rax],al
    475a:	01 7a 13             	add    DWORD PTR [rdx+0x13],edi
    475d:	e7 00                	out    0x0,eax
    475f:	01 00                	add    DWORD PTR [rax],eax
    4761:	00 00                	add    BYTE PTR [rax],al
    4763:	00 26                	add    BYTE PTR [rsi],ah
    4765:	00 00                	add    BYTE PTR [rax],al
    4767:	00 00                	add    BYTE PTR [rax],al
    4769:	00 00                	add    BYTE PTR [rax],al
    476b:	00 01                	add    BYTE PTR [rcx],al
    476d:	9c                   	pushf  
    476e:	07                   	(bad)  
    476f:	af                   	scas   eax,DWORD PTR es:[rdi]
    4770:	11 00                	adc    DWORD PTR [rax],eax
    4772:	00 01                	add    BYTE PTR [rcx],al
    4774:	81 39 e7 00 01 00    	cmp    DWORD PTR [rcx],0x100e7
    477a:	00 00                	add    BYTE PTR [rax],al
    477c:	00 94 02 00 00 00 00 	add    BYTE PTR [rdx+rax*1+0x0],dl
    4783:	00 00                	add    BYTE PTR [rax],al
    4785:	01 9c a2 03 00 00 0b 	add    DWORD PTR [rdx+riz*4+0xb000003],ebx
    478c:	82                   	(bad)  
    478d:	12 00                	adc    al,BYTE PTR [rax]
    478f:	00 01                	add    BYTE PTR [rcx],al
    4791:	81 fd 00 00 00 03    	cmp    ebp,0x3000000
    4797:	91                   	xchg   ecx,eax
    4798:	f8                   	clc    
    4799:	7e 12                	jle    47ad <MULTIBOOT_HEADER_SIZE+0x4755>
    479b:	0d f4 11 00 00       	or     eax,0x11f4
    47a0:	01 83 65 00 00 00    	add    DWORD PTR [rbx+0x65],eax
    47a6:	03 91 90 7f 0c 62    	add    edx,DWORD PTR [rcx+0x620c7f90]
    47ac:	75 66                	jne    4814 <MULTIBOOT_HEADER_SIZE+0x47bc>
    47ae:	00 01                	add    BYTE PTR [rcx],al
    47b0:	85 a2 03 00 00 03    	test   DWORD PTR [rdx+0x3000003],esp
    47b6:	91                   	xchg   ecx,eax
    47b7:	8e 7f 0c             	mov    ?,WORD PTR [rdi+0xc]
    47ba:	64 00 01             	add    BYTE PTR fs:[rcx],al
    47bd:	86 7e 00             	xchg   BYTE PTR [rsi+0x0],bh
    47c0:	00 00                	add    BYTE PTR [rax],al
    47c2:	03 91 bc 7f 0c 75    	add    edx,DWORD PTR [rcx+0x750c7fbc]
    47c8:	00 01                	add    BYTE PTR [rcx],al
    47ca:	87 a2 00 00 00 03    	xchg   DWORD PTR [rdx+0x3000000],esp
    47d0:	91                   	xchg   ecx,eax
    47d1:	b8 7f 0c 73 00       	mov    eax,0x730c7f
    47d6:	01 88 b2 03 00 00    	add    DWORD PTR [rax+0x3b2],ecx
    47dc:	03 91 b0 7f 0c 63    	add    edx,DWORD PTR [rcx+0x630c7fb0]
    47e2:	00 01                	add    BYTE PTR [rcx],al
    47e4:	89 03                	mov    DWORD PTR [rbx],eax
    47e6:	01 00                	add    DWORD PTR [rax],eax
    47e8:	00 03                	add    BYTE PTR [rbx],al
    47ea:	91                   	xchg   ecx,eax
    47eb:	af                   	scas   eax,DWORD PTR es:[rdi]
    47ec:	7f 00                	jg     47ee <MULTIBOOT_HEADER_SIZE+0x4796>
    47ee:	0f 03 01             	lsl    eax,WORD PTR [rcx]
    47f1:	00 00                	add    BYTE PTR [rax],al
    47f3:	b2 03                	mov    dl,0x3
    47f5:	00 00                	add    BYTE PTR [rax],al
    47f7:	10 57 00             	adc    BYTE PTR [rdi+0x0],dl
    47fa:	00 00                	add    BYTE PTR [rax],al
    47fc:	01 00                	add    DWORD PTR [rax],eax
    47fe:	09 08                	or     DWORD PTR [rax],ecx
    4800:	03 01                	add    eax,DWORD PTR [rcx]
    4802:	00 00                	add    BYTE PTR [rax],al
    4804:	13 27                	adc    esp,DWORD PTR [rdi]
    4806:	10 00                	adc    BYTE PTR [rax],al
    4808:	00 04 13             	add    BYTE PTR [rbx+rdx*1],al
    480b:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    480c:	00 00                	add    BYTE PTR [rax],al
    480e:	00 00                	add    BYTE PTR [rax],al
    4810:	67 00 00             	add    BYTE PTR [eax],al
    4813:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    4816:	a0 11 00 00 08 01 27 	movabs al,ds:0x270108000011
    481d:	00 00 
    481f:	00 0c 89             	add    BYTE PTR [rcx+rcx*4],cl
    4822:	12 00                	adc    al,BYTE PTR [rax]
    4824:	00 e5                	add    ch,ah
    4826:	00 00                	add    BYTE PTR [rax],al
    4828:	00 79 28             	add    BYTE PTR [rcx+0x28],bh
    482b:	00 00                	add    BYTE PTR [rax],al
    482d:	02 08                	add    cl,BYTE PTR [rax]
    482f:	05 13 01 00 00       	add    eax,0x113
    4834:	02 08                	add    cl,BYTE PTR [rax]
    4836:	07                   	(bad)  
    4837:	65 10 00             	adc    BYTE PTR gs:[rax],al
    483a:	00 03                	add    BYTE PTR [rbx],al
    483c:	04 05                	add    al,0x5
    483e:	69 6e 74 00 02 08 05 	imul   ebp,DWORD PTR [rsi+0x74],0x5080200
    4845:	0e                   	(bad)  
    4846:	01 00                	add    DWORD PTR [rax],eax
    4848:	00 02                	add    BYTE PTR [rdx],al
    484a:	10 04 2e             	adc    BYTE PTR [rsi+rbp*1],al
    484d:	01 00                	add    DWORD PTR [rax],eax
    484f:	00 02                	add    BYTE PTR [rdx],al
    4851:	08 07                	or     BYTE PTR [rdi],al
    4853:	05 01 00 00 02       	add    eax,0x2000001
    4858:	04 07                	add    al,0x7
    485a:	6a 10                	push   0x10
    485c:	00 00                	add    BYTE PTR [rax],al
    485e:	02 01                	add    al,BYTE PTR [rcx]
    4860:	06                   	(bad)  
    4861:	c6 00 00             	mov    BYTE PTR [rax],0x0
    4864:	00 02                	add    BYTE PTR [rdx],al
    4866:	02 05 1c 01 00 00    	add    al,BYTE PTR [rip+0x11c]        # 4988 <MULTIBOOT_HEADER_SIZE+0x4930>
    486c:	02 01                	add    al,BYTE PTR [rcx]
    486e:	08 c4                	or     ah,al
    4870:	00 00                	add    BYTE PTR [rax],al
    4872:	00 02                	add    BYTE PTR [rdx],al
    4874:	02 07                	add    al,BYTE PTR [rdi]
    4876:	d2 00                	rol    BYTE PTR [rax],cl
    4878:	00 00                	add    BYTE PTR [rax],al
    487a:	00 03                	add    BYTE PTR [rbx],al
    487c:	01 00                	add    DWORD PTR [rax],eax
    487e:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    4881:	c6                   	(bad)  
    4882:	11 00                	adc    DWORD PTR [rax],eax
    4884:	00 08                	add    BYTE PTR [rax],cl
    4886:	01 27                	add    DWORD PTR [rdi],esp
    4888:	00 00                	add    BYTE PTR [rax],al
    488a:	00 0c a9             	add    BYTE PTR [rcx+rbp*4],cl
    488d:	12 00                	adc    al,BYTE PTR [rax]
    488f:	00 e5                	add    ch,ah
    4891:	00 00                	add    BYTE PTR [rax],al
    4893:	00 cd                	add    ch,cl
    4895:	e9 00 01 00 00       	jmp    499a <MULTIBOOT_HEADER_SIZE+0x4942>
    489a:	00 00                	add    BYTE PTR [rax],al
    489c:	51                   	push   rcx
    489d:	00 00                	add    BYTE PTR [rax],al
    489f:	00 00                	add    BYTE PTR [rax],al
    48a1:	00 00                	add    BYTE PTR [rax],al
    48a3:	00 96 28 00 00 02    	add    BYTE PTR [rsi+0x2000028],dl
    48a9:	08 05 13 01 00 00    	or     BYTE PTR [rip+0x113],al        # 49c2 <MULTIBOOT_HEADER_SIZE+0x496a>
    48af:	02 08                	add    cl,BYTE PTR [rax]
    48b1:	07                   	(bad)  
    48b2:	65 10 00             	adc    BYTE PTR gs:[rax],al
    48b5:	00 03                	add    BYTE PTR [rbx],al
    48b7:	04 05                	add    al,0x5
    48b9:	69 6e 74 00 02 08 05 	imul   ebp,DWORD PTR [rsi+0x74],0x5080200
    48c0:	0e                   	(bad)  
    48c1:	01 00                	add    DWORD PTR [rax],eax
    48c3:	00 02                	add    BYTE PTR [rdx],al
    48c5:	10 04 2e             	adc    BYTE PTR [rsi+rbp*1],al
    48c8:	01 00                	add    DWORD PTR [rax],eax
    48ca:	00 02                	add    BYTE PTR [rdx],al
    48cc:	08 07                	or     BYTE PTR [rdi],al
    48ce:	05 01 00 00 02       	add    eax,0x2000001
    48d3:	04 07                	add    al,0x7
    48d5:	6a 10                	push   0x10
    48d7:	00 00                	add    BYTE PTR [rax],al
    48d9:	02 01                	add    al,BYTE PTR [rcx]
    48db:	06                   	(bad)  
    48dc:	c6 00 00             	mov    BYTE PTR [rax],0x0
    48df:	00 02                	add    BYTE PTR [rdx],al
    48e1:	02 05 1c 01 00 00    	add    al,BYTE PTR [rip+0x11c]        # 4a03 <MULTIBOOT_HEADER_SIZE+0x49ab>
    48e7:	02 01                	add    al,BYTE PTR [rcx]
    48e9:	08 c4                	or     ah,al
    48eb:	00 00                	add    BYTE PTR [rax],al
    48ed:	00 02                	add    BYTE PTR [rdx],al
    48ef:	02 07                	add    al,BYTE PTR [rdi]
    48f1:	d2 00                	rol    BYTE PTR [rax],cl
    48f3:	00 00                	add    BYTE PTR [rax],al
    48f5:	04 7b                	add    al,0x7b
    48f7:	11 00                	adc    DWORD PTR [rax],eax
    48f9:	00 02                	add    BYTE PTR [rdx],al
    48fb:	37                   	(bad)  
    48fc:	34 00                	xor    al,0x0
    48fe:	00 00                	add    BYTE PTR [rax],al
    4900:	05 08 03 07 9a       	add    eax,0x9a070308
    4905:	00 00                	add    BYTE PTR [rax],al
    4907:	00 06                	add    BYTE PTR [rsi],al
    4909:	76 61                	jbe    496c <MULTIBOOT_HEADER_SIZE+0x4914>
    490b:	6c                   	ins    BYTE PTR es:[rdi],dx
    490c:	00 03                	add    BYTE PTR [rbx],al
    490e:	09 7a 00             	or     DWORD PTR [rdx+0x0],edi
    4911:	00 00                	add    BYTE PTR [rax],al
    4913:	00 00                	add    BYTE PTR [rax],al
    4915:	04 cd                	add    al,0xcd
    4917:	12 00                	adc    al,BYTE PTR [rax]
    4919:	00 03                	add    BYTE PTR [rbx],al
    491b:	0a 85 00 00 00 02    	or     al,BYTE PTR [rbp+0x2000000]
    4921:	01 06                	add    DWORD PTR [rsi],eax
    4923:	cd 00                	int    0x0
    4925:	00 00                	add    BYTE PTR [rax],al
    4927:	07                   	(bad)  
    4928:	9d                   	popf   
    4929:	12 00                	adc    al,BYTE PTR [rax]
    492b:	00 01                	add    BYTE PTR [rcx],al
    492d:	04 cd                	add    al,0xcd
    492f:	e9 00 01 00 00       	jmp    4a34 <MULTIBOOT_HEADER_SIZE+0x49dc>
    4934:	00 00                	add    BYTE PTR [rax],al
    4936:	2f                   	(bad)  
    4937:	00 00                	add    BYTE PTR [rax],al
    4939:	00 00                	add    BYTE PTR [rax],al
    493b:	00 00                	add    BYTE PTR [rax],al
    493d:	00 01                	add    BYTE PTR [rcx],al
    493f:	9c                   	pushf  
    4940:	d8 00                	fadd   DWORD PTR [rax]
    4942:	00 00                	add    BYTE PTR [rax],al
    4944:	08 a4 12 00 00 01 04 	or     BYTE PTR [rdx+rdx*1+0x4010000],ah
    494b:	d8 00                	fadd   DWORD PTR [rax]
    494d:	00 00                	add    BYTE PTR [rax],al
    494f:	02 91 68 00 09 08    	add    dl,BYTE PTR [rcx+0x8090068]
    4955:	9a                   	(bad)  
    4956:	00 00                	add    BYTE PTR [rax],al
    4958:	00 0a                	add    BYTE PTR [rdx],cl
    495a:	bf 12 00 00 01       	mov    edi,0x1000012
    495f:	0d fc e9 00 01       	or     eax,0x100e9fc
    4964:	00 00                	add    BYTE PTR [rax],al
    4966:	00 00                	add    BYTE PTR [rax],al
    4968:	22 00                	and    al,BYTE PTR [rax]
    496a:	00 00                	add    BYTE PTR [rax],al
    496c:	00 00                	add    BYTE PTR [rax],al
    496e:	00 00                	add    BYTE PTR [rax],al
    4970:	01 9c 08 a4 12 00 00 	add    DWORD PTR [rax+rcx*1+0x12a4],ebx
    4977:	01 0d d8 00 00 00    	add    DWORD PTR [rip+0xd8],ecx        # 4a55 <MULTIBOOT_HEADER_SIZE+0x49fd>
    497d:	02 91 68 00 00 31    	add    dl,BYTE PTR [rcx+0x31000068]
    4983:	03 00                	add    eax,DWORD PTR [rax]
    4985:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    4988:	63 12                	movsxd edx,DWORD PTR [rdx]
    498a:	00 00                	add    BYTE PTR [rax],al
    498c:	08 01                	or     BYTE PTR [rcx],al
    498e:	27                   	(bad)  
    498f:	00 00                	add    BYTE PTR [rax],al
    4991:	00 0c ea             	add    BYTE PTR [rdx+rbp*8],cl
    4994:	12 00                	adc    al,BYTE PTR [rax]
    4996:	00 e5                	add    ch,ah
    4998:	00 00                	add    BYTE PTR [rax],al
    499a:	00 1e                	add    BYTE PTR [rsi],bl
    499c:	ea                   	(bad)  
    499d:	00 01                	add    BYTE PTR [rcx],al
    499f:	00 00                	add    BYTE PTR [rax],al
    49a1:	00 00                	add    BYTE PTR [rax],al
    49a3:	37                   	(bad)  
    49a4:	02 00                	add    al,BYTE PTR [rax]
    49a6:	00 00                	add    BYTE PTR [rax],al
    49a8:	00 00                	add    BYTE PTR [rax],al
    49aa:	00 24 29             	add    BYTE PTR [rcx+rbp*1],ah
    49ad:	00 00                	add    BYTE PTR [rax],al
    49af:	02 01                	add    al,BYTE PTR [rcx]
    49b1:	06                   	(bad)  
    49b2:	c6 00 00             	mov    BYTE PTR [rax],0x0
    49b5:	00 02                	add    BYTE PTR [rdx],al
    49b7:	02 05 1c 01 00 00    	add    al,BYTE PTR [rip+0x11c]        # 4ad9 <MULTIBOOT_HEADER_SIZE+0x4a81>
    49bd:	03 04 05 69 6e 74 00 	add    eax,DWORD PTR [rax*1+0x746e69]
    49c4:	02 08                	add    cl,BYTE PTR [rax]
    49c6:	05 13 01 00 00       	add    eax,0x113
    49cb:	02 01                	add    al,BYTE PTR [rcx]
    49cd:	08 c4                	or     ah,al
    49cf:	00 00                	add    BYTE PTR [rax],al
    49d1:	00 02                	add    BYTE PTR [rdx],al
    49d3:	02 07                	add    al,BYTE PTR [rdi]
    49d5:	d2 00                	rol    BYTE PTR [rax],cl
    49d7:	00 00                	add    BYTE PTR [rax],al
    49d9:	02 04 07             	add    al,BYTE PTR [rdi+rax*1]
    49dc:	6a 10                	push   0x10
    49de:	00 00                	add    BYTE PTR [rax],al
    49e0:	04 7b                	add    al,0x7b
    49e2:	11 00                	adc    DWORD PTR [rax],eax
    49e4:	00 03                	add    BYTE PTR [rbx],al
    49e6:	37                   	(bad)  
    49e7:	69 00 00 00 02 08    	imul   eax,DWORD PTR [rax],0x8020000
    49ed:	07                   	(bad)  
    49ee:	65 10 00             	adc    BYTE PTR gs:[rax],al
    49f1:	00 02                	add    BYTE PTR [rdx],al
    49f3:	08 05 0e 01 00 00    	or     BYTE PTR [rip+0x10e],al        # 4b07 <MULTIBOOT_HEADER_SIZE+0x4aaf>
    49f9:	02 10                	add    dl,BYTE PTR [rax]
    49fb:	04 2e                	add    al,0x2e
    49fd:	01 00                	add    DWORD PTR [rax],eax
    49ff:	00 02                	add    BYTE PTR [rdx],al
    4a01:	08 07                	or     BYTE PTR [rdi],al
    4a03:	05 01 00 00 05       	add    eax,0x5000001
    4a08:	08 06                	or     BYTE PTR [rsi],al
    4a0a:	cc                   	int3   
    4a0b:	05 00 00 10 02       	add    eax,0x2100000
    4a10:	0b ac 00 00 00 07 d1 	or     ebp,DWORD PTR [rax+rax*1-0x2ef90000]
    4a17:	06                   	(bad)  
    4a18:	00 00                	add    BYTE PTR [rax],al
    4a1a:	02 0d ac 00 00 00    	add    cl,BYTE PTR [rip+0xac]        # 4acc <MULTIBOOT_HEADER_SIZE+0x4a74>
    4a20:	00 07                	add    BYTE PTR [rdi],al
    4a22:	10 07                	adc    BYTE PTR [rdi],al
    4a24:	00 00                	add    BYTE PTR [rax],al
    4a26:	02 0e                	add    cl,BYTE PTR [rsi]
    4a28:	ac                   	lods   al,BYTE PTR ds:[rsi]
    4a29:	00 00                	add    BYTE PTR [rax],al
    4a2b:	00 08                	add    BYTE PTR [rax],cl
    4a2d:	00 08                	add    BYTE PTR [rax],cl
    4a2f:	08 87 00 00 00 04    	or     BYTE PTR [rdi+0x4000000],al
    4a35:	cd 05                	int    0x5
    4a37:	00 00                	add    BYTE PTR [rax],al
    4a39:	02 0f                	add    cl,BYTE PTR [rdi]
    4a3b:	87 00                	xchg   DWORD PTR [rax],eax
    4a3d:	00 00                	add    BYTE PTR [rax],al
    4a3f:	06                   	(bad)  
    4a40:	90                   	nop
    4a41:	06                   	(bad)  
    4a42:	00 00                	add    BYTE PTR [rax],al
    4a44:	10 02                	adc    BYTE PTR [rdx],al
    4a46:	11 e2                	adc    edx,esp
    4a48:	00 00                	add    BYTE PTR [rax],al
    4a4a:	00 07                	add    BYTE PTR [rdi],al
    4a4c:	dd 07                	fld    QWORD PTR [rdi]
    4a4e:	00 00                	add    BYTE PTR [rax],al
    4a50:	02 13                	add    dl,BYTE PTR [rbx]
    4a52:	e2 00                	loop   4a54 <MULTIBOOT_HEADER_SIZE+0x49fc>
    4a54:	00 00                	add    BYTE PTR [rax],al
    4a56:	00 07                	add    BYTE PTR [rdi],al
    4a58:	50                   	push   rax
    4a59:	08 00                	or     BYTE PTR [rax],al
    4a5b:	00 02                	add    BYTE PTR [rdx],al
    4a5d:	14 e2                	adc    al,0xe2
    4a5f:	00 00                	add    BYTE PTR [rax],al
    4a61:	00 08                	add    BYTE PTR [rax],cl
    4a63:	00 08                	add    BYTE PTR [rax],cl
    4a65:	08 b2 00 00 00 04    	or     BYTE PTR [rdx+0x4000000],dh
    4a6b:	91                   	xchg   ecx,eax
    4a6c:	06                   	(bad)  
    4a6d:	00 00                	add    BYTE PTR [rax],al
    4a6f:	02 15 bd 00 00 00    	add    dl,BYTE PTR [rip+0xbd]        # 4b32 <MULTIBOOT_HEADER_SIZE+0x4ada>
    4a75:	09 20                	or     DWORD PTR [rax],esp
    4a77:	04 0f                	add    al,0xf
    4a79:	20 01                	and    BYTE PTR [rcx],al
    4a7b:	00 00                	add    BYTE PTR [rax],al
    4a7d:	07                   	(bad)  
    4a7e:	46 13 00             	rex.RX adc r8d,DWORD PTR [rax]
    4a81:	00 04 11             	add    BYTE PTR [rcx+rdx*1],al
    4a84:	5e                   	pop    rsi
    4a85:	00 00                	add    BYTE PTR [rax],al
    4a87:	00 00                	add    BYTE PTR [rax],al
    4a89:	07                   	(bad)  
    4a8a:	17                   	(bad)  
    4a8b:	13 00                	adc    eax,DWORD PTR [rax]
    4a8d:	00 04 12             	add    BYTE PTR [rdx+rdx*1],al
    4a90:	5e                   	pop    rsi
    4a91:	00 00                	add    BYTE PTR [rax],al
    4a93:	00 08                	add    BYTE PTR [rax],cl
    4a95:	07                   	(bad)  
    4a96:	e3 06                	jrcxz  4a9e <MULTIBOOT_HEADER_SIZE+0x4a46>
    4a98:	00 00                	add    BYTE PTR [rax],al
    4a9a:	04 13                	add    al,0x13
    4a9c:	b2 00                	mov    dl,0x0
    4a9e:	00 00                	add    BYTE PTR [rax],al
    4aa0:	10 00                	adc    BYTE PTR [rax],al
    4aa2:	04 2d                	add    al,0x2d
    4aa4:	13 00                	adc    eax,DWORD PTR [rax]
    4aa6:	00 04 14             	add    BYTE PTR [rsp+rdx*1],al
    4aa9:	f3 00 00             	repz add BYTE PTR [rax],al
    4aac:	00 09                	add    BYTE PTR [rcx],cl
    4aae:	20 04 16             	and    BYTE PTR [rsi+rdx*1],al
    4ab1:	64 01 00             	add    DWORD PTR fs:[rax],eax
    4ab4:	00 07                	add    BYTE PTR [rdi],al
    4ab6:	84 11                	test   BYTE PTR [rcx],dl
    4ab8:	00 00                	add    BYTE PTR [rax],al
    4aba:	04 17                	add    al,0x17
    4abc:	64 01 00             	add    DWORD PTR fs:[rax],eax
    4abf:	00 00                	add    BYTE PTR [rax],al
    4ac1:	07                   	(bad)  
    4ac2:	e7 10                	out    0x10,eax
    4ac4:	00 00                	add    BYTE PTR [rax],al
    4ac6:	04 18                	add    al,0x18
    4ac8:	64 01 00             	add    DWORD PTR fs:[rax],eax
    4acb:	00 08                	add    BYTE PTR [rax],cl
    4acd:	07                   	(bad)  
    4ace:	a1 11 00 00 04 19 5e 	movabs eax,ds:0x5e1904000011
    4ad5:	00 00 
    4ad7:	00 10                	add    BYTE PTR [rax],dl
    4ad9:	07                   	(bad)  
    4ada:	38 11                	cmp    BYTE PTR [rcx],dl
    4adc:	00 00                	add    BYTE PTR [rax],al
    4ade:	04 1a                	add    al,0x1a
    4ae0:	5e                   	pop    rsi
    4ae1:	00 00                	add    BYTE PTR [rax],al
    4ae3:	00 18                	add    BYTE PTR [rax],bl
    4ae5:	00 08                	add    BYTE PTR [rax],cl
    4ae7:	08 e8                	or     al,ch
    4ae9:	00 00                	add    BYTE PTR [rax],al
    4aeb:	00 04 b7             	add    BYTE PTR [rdi+rsi*4],al
    4aee:	10 00                	adc    BYTE PTR [rax],al
    4af0:	00 04 1b             	add    BYTE PTR [rbx+rbx*1],al
    4af3:	2b 01                	sub    eax,DWORD PTR [rcx]
    4af5:	00 00                	add    BYTE PTR [rax],al
    4af7:	09 28                	or     DWORD PTR [rax],ebp
    4af9:	04 1d                	add    al,0x1d
    4afb:	ae                   	scas   al,BYTE PTR es:[rdi]
    4afc:	01 00                	add    DWORD PTR [rax],eax
    4afe:	00 07                	add    BYTE PTR [rdi],al
    4b00:	46 13 00             	rex.RX adc r8d,DWORD PTR [rax]
    4b03:	00 04 1f             	add    BYTE PTR [rdi+rbx*1],al
    4b06:	5e                   	pop    rsi
    4b07:	00 00                	add    BYTE PTR [rax],al
    4b09:	00 00                	add    BYTE PTR [rax],al
    4b0b:	07                   	(bad)  
    4b0c:	30 03                	xor    BYTE PTR [rbx],al
    4b0e:	00 00                	add    BYTE PTR [rax],al
    4b10:	04 20                	add    al,0x20
    4b12:	5e                   	pop    rsi
    4b13:	00 00                	add    BYTE PTR [rax],al
    4b15:	00 08                	add    BYTE PTR [rax],cl
    4b17:	07                   	(bad)  
    4b18:	5d                   	pop    rbp
    4b19:	0d 00 00 04 21       	or     eax,0x21040000
    4b1e:	ae                   	scas   al,BYTE PTR es:[rdi]
    4b1f:	01 00                	add    DWORD PTR [rax],eax
    4b21:	00 10                	add    BYTE PTR [rax],dl
    4b23:	07                   	(bad)  
    4b24:	e3 06                	jrcxz  4b2c <MULTIBOOT_HEADER_SIZE+0x4ad4>
    4b26:	00 00                	add    BYTE PTR [rax],al
    4b28:	04 22                	add    al,0x22
    4b2a:	b2 00                	mov    dl,0x0
    4b2c:	00 00                	add    BYTE PTR [rax],al
    4b2e:	18 00                	sbb    BYTE PTR [rax],al
    4b30:	08 08                	or     BYTE PTR [rax],cl
    4b32:	b4 01                	mov    ah,0x1
    4b34:	00 00                	add    BYTE PTR [rax],al
    4b36:	02 01                	add    al,BYTE PTR [rcx]
    4b38:	06                   	(bad)  
    4b39:	cd 00                	int    0x0
    4b3b:	00 00                	add    BYTE PTR [rax],al
    4b3d:	04 50                	add    al,0x50
    4b3f:	13 00                	adc    eax,DWORD PTR [rax]
    4b41:	00 04 23             	add    BYTE PTR [rbx+riz*1],al
    4b44:	75 01                	jne    4b47 <MULTIBOOT_HEADER_SIZE+0x4aef>
    4b46:	00 00                	add    BYTE PTR [rax],al
    4b48:	09 10                	or     DWORD PTR [rax],edx
    4b4a:	04 25                	add    al,0x25
    4b4c:	e7 01                	out    0x1,eax
    4b4e:	00 00                	add    BYTE PTR [rax],al
    4b50:	07                   	(bad)  
    4b51:	fa                   	cli    
    4b52:	10 00                	adc    BYTE PTR [rax],al
    4b54:	00 04 26             	add    BYTE PTR [rsi+riz*1],al
    4b57:	64 01 00             	add    DWORD PTR fs:[rax],eax
    4b5a:	00 00                	add    BYTE PTR [rax],al
    4b5c:	07                   	(bad)  
    4b5d:	4f 11 00             	rex.WRXB adc QWORD PTR [r8],r8
    4b60:	00 04 27             	add    BYTE PTR [rdi+riz*1],al
    4b63:	5e                   	pop    rsi
    4b64:	00 00                	add    BYTE PTR [rax],al
    4b66:	00 08                	add    BYTE PTR [rax],cl
    4b68:	00 04 93             	add    BYTE PTR [rbx+rdx*4],al
    4b6b:	11 00                	adc    DWORD PTR [rax],eax
    4b6d:	00 04 28             	add    BYTE PTR [rax+rbp*1],al
    4b70:	c6 01 00             	mov    BYTE PTR [rcx],0x0
    4b73:	00 09                	add    BYTE PTR [rcx],cl
    4b75:	20 04 2a             	and    BYTE PTR [rdx+rbp*1],al
    4b78:	1f                   	(bad)  
    4b79:	02 00                	add    al,BYTE PTR [rax]
    4b7b:	00 07                	add    BYTE PTR [rdi],al
    4b7d:	13 11                	adc    edx,DWORD PTR [rcx]
    4b7f:	00 00                	add    BYTE PTR [rax],al
    4b81:	04 2b                	add    al,0x2b
    4b83:	1f                   	(bad)  
    4b84:	02 00                	add    al,BYTE PTR [rax]
    4b86:	00 00                	add    BYTE PTR [rax],al
    4b88:	07                   	(bad)  
    4b89:	c2 10 00             	ret    0x10
    4b8c:	00 04 2c             	add    BYTE PTR [rsp+rbp*1],al
    4b8f:	2f                   	(bad)  
    4b90:	02 00                	add    al,BYTE PTR [rax]
    4b92:	00 10                	add    BYTE PTR [rax],dl
    4b94:	07                   	(bad)  
    4b95:	77 10                	ja     4ba7 <MULTIBOOT_HEADER_SIZE+0x4b4f>
    4b97:	00 00                	add    BYTE PTR [rax],al
    4b99:	04 2d                	add    al,0x2d
    4b9b:	35 02 00 00 18       	xor    eax,0x18000002
    4ba0:	00 0a                	add    BYTE PTR [rdx],cl
    4ba2:	b4 01                	mov    ah,0x1
    4ba4:	00 00                	add    BYTE PTR [rax],al
    4ba6:	2f                   	(bad)  
    4ba7:	02 00                	add    al,BYTE PTR [rax]
    4ba9:	00 0b                	add    BYTE PTR [rbx],cl
    4bab:	7e 00                	jle    4bad <MULTIBOOT_HEADER_SIZE+0x4b55>
    4bad:	00 00                	add    BYTE PTR [rax],al
    4baf:	0c 00                	or     al,0x0
    4bb1:	08 08                	or     BYTE PTR [rax],cl
    4bb3:	6a 01                	push   0x1
    4bb5:	00 00                	add    BYTE PTR [rax],al
    4bb7:	08 08                	or     BYTE PTR [rax],cl
    4bb9:	e7 01                	out    0x1,eax
    4bbb:	00 00                	add    BYTE PTR [rax],al
    4bbd:	04 06                	add    al,0x6
    4bbf:	11 00                	adc    DWORD PTR [rax],eax
    4bc1:	00 04 2e             	add    BYTE PTR [rsi+rbp*1],al
    4bc4:	f2 01 00             	repnz add DWORD PTR [rax],eax
    4bc7:	00 0c ff             	add    BYTE PTR [rdi+rdi*8],cl
    4bca:	12 00                	adc    al,BYTE PTR [rax]
    4bcc:	00 01                	add    BYTE PTR [rcx],al
    4bce:	0d 1e ea 00 01       	or     eax,0x100ea1e
    4bd3:	00 00                	add    BYTE PTR [rax],al
    4bd5:	00 00                	add    BYTE PTR [rax],al
    4bd7:	37                   	(bad)  
    4bd8:	02 00                	add    al,BYTE PTR [rax]
    4bda:	00 00                	add    BYTE PTR [rax],al
    4bdc:	00 00                	add    BYTE PTR [rax],al
    4bde:	00 01                	add    BYTE PTR [rcx],al
    4be0:	9c                   	pushf  
    4be1:	01 03                	add    DWORD PTR [rbx],eax
    4be3:	00 00                	add    BYTE PTR [rax],al
    4be5:	0d db 12 00 00       	or     eax,0x12db
    4bea:	01 0d 85 00 00 00    	add    DWORD PTR [rip+0x85],ecx        # 4c75 <MULTIBOOT_HEADER_SIZE+0x4c1d>
    4bf0:	03 91 b8 7f 0e e0    	add    edx,DWORD PTR [rcx-0x1ff18048]
    4bf6:	12 00                	adc    al,BYTE PTR [rax]
    4bf8:	00 01                	add    BYTE PTR [rcx],al
    4bfa:	0f 01 03             	sgdt   [rbx]
    4bfd:	00 00                	add    BYTE PTR [rax],al
    4bff:	02 91 58 0f 2a eb    	add    dl,BYTE PTR [rcx-0x14d5f0a8]
    4c05:	00 01                	add    BYTE PTR [rcx],al
    4c07:	00 00                	add    BYTE PTR [rax],al
    4c09:	00 00                	add    BYTE PTR [rax],al
    4c0b:	66 00 00             	data16 add BYTE PTR [rax],al
    4c0e:	00 00                	add    BYTE PTR [rax],al
    4c10:	00 00                	add    BYTE PTR [rax],al
    4c12:	00 c2                	add    dl,al
    4c14:	02 00                	add    al,BYTE PTR [rax]
    4c16:	00 10                	add    BYTE PTR [rax],dl
    4c18:	69 00 01 25 3b 00    	imul   eax,DWORD PTR [rax],0x3b2501
    4c1e:	00 00                	add    BYTE PTR [rax],al
    4c20:	02 91 6c 11 33 eb    	add    dl,BYTE PTR [rcx-0x14ccee94]
    4c26:	00 01                	add    BYTE PTR [rcx],al
    4c28:	00 00                	add    BYTE PTR [rax],al
    4c2a:	00 00                	add    BYTE PTR [rax],al
    4c2c:	41 00 00             	add    BYTE PTR [r8],al
    4c2f:	00 00                	add    BYTE PTR [rax],al
    4c31:	00 00                	add    BYTE PTR [rax],al
    4c33:	00 0e                	add    BYTE PTR [rsi],cl
    4c35:	76 13                	jbe    4c4a <MULTIBOOT_HEADER_SIZE+0x4bf2>
    4c37:	00 00                	add    BYTE PTR [rax],al
    4c39:	01 27                	add    DWORD PTR [rdi],esp
    4c3b:	07                   	(bad)  
    4c3c:	03 00                	add    eax,DWORD PTR [rax]
    4c3e:	00 02                	add    BYTE PTR [rdx],al
    4c40:	91                   	xchg   ecx,eax
    4c41:	50                   	push   rax
    4c42:	00 00                	add    BYTE PTR [rax],al
    4c44:	11 bf eb 00 01 00    	adc    DWORD PTR [rdi+0x100eb],edi
    4c4a:	00 00                	add    BYTE PTR [rax],al
    4c4c:	00 7f 00             	add    BYTE PTR [rdi+0x0],bh
    4c4f:	00 00                	add    BYTE PTR [rax],al
    4c51:	00 00                	add    BYTE PTR [rax],al
    4c53:	00 00                	add    BYTE PTR [rax],al
    4c55:	10 69 00             	adc    BYTE PTR [rcx+0x0],ch
    4c58:	01 33                	add    DWORD PTR [rbx],esi
    4c5a:	5e                   	pop    rsi
    4c5b:	00 00                	add    BYTE PTR [rax],al
    4c5d:	00 02                	add    BYTE PTR [rdx],al
    4c5f:	91                   	xchg   ecx,eax
    4c60:	60                   	(bad)  
    4c61:	11 c9                	adc    ecx,ecx
    4c63:	eb 00                	jmp    4c65 <MULTIBOOT_HEADER_SIZE+0x4c0d>
    4c65:	01 00                	add    DWORD PTR [rax],eax
    4c67:	00 00                	add    BYTE PTR [rax],al
    4c69:	00 5e 00             	add    BYTE PTR [rsi+0x0],bl
    4c6c:	00 00                	add    BYTE PTR [rax],al
    4c6e:	00 00                	add    BYTE PTR [rax],al
    4c70:	00 00                	add    BYTE PTR [rax],al
    4c72:	0e                   	(bad)  
    4c73:	05 13 00 00 01       	add    eax,0x1000013
    4c78:	35 0d 03 00 00       	xor    eax,0x30d
    4c7d:	02 91 48 00 00 00    	add    dl,BYTE PTR [rcx+0x48]
    4c83:	08 08                	or     BYTE PTR [rax],cl
    4c85:	3b 02                	cmp    eax,DWORD PTR [rdx]
    4c87:	00 00                	add    BYTE PTR [rax],al
    4c89:	08 08                	or     BYTE PTR [rax],cl
    4c8b:	20 01                	and    BYTE PTR [rcx],al
    4c8d:	00 00                	add    BYTE PTR [rax],al
    4c8f:	08 08                	or     BYTE PTR [rax],cl
    4c91:	bb 01 00 00 0a       	mov    ebx,0xa000001
    4c96:	b4 01                	mov    ah,0x1
    4c98:	00 00                	add    BYTE PTR [rax],al
    4c9a:	1e                   	(bad)  
    4c9b:	03 00                	add    eax,DWORD PTR [rax]
    4c9d:	00 12                	add    BYTE PTR [rdx],dl
    4c9f:	00 13                	add    BYTE PTR [rbx],dl
    4ca1:	69 13 00 00 05 1e    	imul   edx,DWORD PTR [rbx],0x1e050000
    4ca7:	13 03                	adc    eax,DWORD PTR [rbx]
    4ca9:	00 00                	add    BYTE PTR [rax],al
    4cab:	13 22                	adc    esp,DWORD PTR [rdx]
    4cad:	13 00                	adc    eax,DWORD PTR [rax]
    4caf:	00 05 1f 13 03 00    	add    BYTE PTR [rip+0x3131f],al        # 35fd4 <MULTIBOOT_HEADER_SIZE+0x35f7c>
    4cb5:	00 00                	add    BYTE PTR [rax],al
    4cb7:	91                   	xchg   ecx,eax
    4cb8:	02 00                	add    al,BYTE PTR [rax]
    4cba:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    4cbd:	58                   	pop    rax
    4cbe:	13 00                	adc    eax,DWORD PTR [rax]
    4cc0:	00 08                	add    BYTE PTR [rax],cl
    4cc2:	01 27                	add    DWORD PTR [rdi],esp
    4cc4:	00 00                	add    BYTE PTR [rax],al
    4cc6:	00 0c 80             	add    BYTE PTR [rax+rax*4],cl
    4cc9:	13 00                	adc    eax,DWORD PTR [rax]
    4ccb:	00 e5                	add    ch,ah
    4ccd:	00 00                	add    BYTE PTR [rax],al
    4ccf:	00 55 ec             	add    BYTE PTR [rbp-0x14],dl
    4cd2:	00 01                	add    BYTE PTR [rcx],al
    4cd4:	00 00                	add    BYTE PTR [rax],al
    4cd6:	00 00                	add    BYTE PTR [rax],al
    4cd8:	68 01 00 00 00       	push   0x1
    4cdd:	00 00                	add    BYTE PTR [rax],al
    4cdf:	00 4c 2a 00          	add    BYTE PTR [rdx+rbp*1+0x0],cl
    4ce3:	00 02                	add    BYTE PTR [rdx],al
    4ce5:	08 05 13 01 00 00    	or     BYTE PTR [rip+0x113],al        # 4dfe <MULTIBOOT_HEADER_SIZE+0x4da6>
    4ceb:	02 08                	add    cl,BYTE PTR [rax]
    4ced:	07                   	(bad)  
    4cee:	65 10 00             	adc    BYTE PTR gs:[rax],al
    4cf1:	00 03                	add    BYTE PTR [rbx],al
    4cf3:	04 05                	add    al,0x5
    4cf5:	69 6e 74 00 02 08 05 	imul   ebp,DWORD PTR [rsi+0x74],0x5080200
    4cfc:	0e                   	(bad)  
    4cfd:	01 00                	add    DWORD PTR [rax],eax
    4cff:	00 02                	add    BYTE PTR [rdx],al
    4d01:	10 04 2e             	adc    BYTE PTR [rsi+rbp*1],al
    4d04:	01 00                	add    DWORD PTR [rax],eax
    4d06:	00 02                	add    BYTE PTR [rdx],al
    4d08:	08 07                	or     BYTE PTR [rdi],al
    4d0a:	05 01 00 00 02       	add    eax,0x2000001
    4d0f:	04 07                	add    al,0x7
    4d11:	6a 10                	push   0x10
    4d13:	00 00                	add    BYTE PTR [rax],al
    4d15:	04 08                	add    al,0x8
    4d17:	02 01                	add    al,BYTE PTR [rcx]
    4d19:	06                   	(bad)  
    4d1a:	c6 00 00             	mov    BYTE PTR [rax],0x0
    4d1d:	00 02                	add    BYTE PTR [rdx],al
    4d1f:	02 05 1c 01 00 00    	add    al,BYTE PTR [rip+0x11c]        # 4e41 <MULTIBOOT_HEADER_SIZE+0x4de9>
    4d25:	02 01                	add    al,BYTE PTR [rcx]
    4d27:	08 c4                	or     ah,al
    4d29:	00 00                	add    BYTE PTR [rax],al
    4d2b:	00 02                	add    BYTE PTR [rdx],al
    4d2d:	02 07                	add    al,BYTE PTR [rdi]
    4d2f:	d2 00                	rol    BYTE PTR [rax],cl
    4d31:	00 00                	add    BYTE PTR [rax],al
    4d33:	05 7b 11 00 00       	add    eax,0x117b
    4d38:	03 37                	add    esi,DWORD PTR [rdi]
    4d3a:	34 00                	xor    al,0x0
    4d3c:	00 00                	add    BYTE PTR [rax],al
    4d3e:	06                   	(bad)  
    4d3f:	cc                   	int3   
    4d40:	05 00 00 10 02       	add    eax,0x2100000
    4d45:	0b ac 00 00 00 07 d1 	or     ebp,DWORD PTR [rax+rax*1-0x2ef90000]
    4d4c:	06                   	(bad)  
    4d4d:	00 00                	add    BYTE PTR [rax],al
    4d4f:	02 0d ac 00 00 00    	add    cl,BYTE PTR [rip+0xac]        # 4e01 <MULTIBOOT_HEADER_SIZE+0x4da9>
    4d55:	00 07                	add    BYTE PTR [rdi],al
    4d57:	10 07                	adc    BYTE PTR [rdi],al
    4d59:	00 00                	add    BYTE PTR [rax],al
    4d5b:	02 0e                	add    cl,BYTE PTR [rsi]
    4d5d:	ac                   	lods   al,BYTE PTR ds:[rsi]
    4d5e:	00 00                	add    BYTE PTR [rax],al
    4d60:	00 08                	add    BYTE PTR [rax],cl
    4d62:	00 08                	add    BYTE PTR [rax],cl
    4d64:	08 87 00 00 00 05    	or     BYTE PTR [rdi+0x5000000],al
    4d6a:	cd 05                	int    0x5
    4d6c:	00 00                	add    BYTE PTR [rax],al
    4d6e:	02 0f                	add    cl,BYTE PTR [rdi]
    4d70:	87 00                	xchg   DWORD PTR [rax],eax
    4d72:	00 00                	add    BYTE PTR [rax],al
    4d74:	06                   	(bad)  
    4d75:	90                   	nop
    4d76:	06                   	(bad)  
    4d77:	00 00                	add    BYTE PTR [rax],al
    4d79:	10 02                	adc    BYTE PTR [rdx],al
    4d7b:	11 e2                	adc    edx,esp
    4d7d:	00 00                	add    BYTE PTR [rax],al
    4d7f:	00 07                	add    BYTE PTR [rdi],al
    4d81:	dd 07                	fld    QWORD PTR [rdi]
    4d83:	00 00                	add    BYTE PTR [rax],al
    4d85:	02 13                	add    dl,BYTE PTR [rbx]
    4d87:	e2 00                	loop   4d89 <MULTIBOOT_HEADER_SIZE+0x4d31>
    4d89:	00 00                	add    BYTE PTR [rax],al
    4d8b:	00 07                	add    BYTE PTR [rdi],al
    4d8d:	50                   	push   rax
    4d8e:	08 00                	or     BYTE PTR [rax],al
    4d90:	00 02                	add    BYTE PTR [rdx],al
    4d92:	14 e2                	adc    al,0xe2
    4d94:	00 00                	add    BYTE PTR [rax],al
    4d96:	00 08                	add    BYTE PTR [rax],cl
    4d98:	00 08                	add    BYTE PTR [rax],cl
    4d9a:	08 b2 00 00 00 05    	or     BYTE PTR [rdx+0x5000000],dh
    4da0:	91                   	xchg   ecx,eax
    4da1:	06                   	(bad)  
    4da2:	00 00                	add    BYTE PTR [rax],al
    4da4:	02 15 bd 00 00 00    	add    dl,BYTE PTR [rip+0xbd]        # 4e67 <MULTIBOOT_HEADER_SIZE+0x4e0f>
    4daa:	09 20                	or     DWORD PTR [rax],esp
    4dac:	04 0f                	add    al,0xf
    4dae:	20 01                	and    BYTE PTR [rcx],al
    4db0:	00 00                	add    BYTE PTR [rax],al
    4db2:	07                   	(bad)  
    4db3:	46 13 00             	rex.RX adc r8d,DWORD PTR [rax]
    4db6:	00 04 11             	add    BYTE PTR [rcx+rdx*1],al
    4db9:	7c 00                	jl     4dbb <MULTIBOOT_HEADER_SIZE+0x4d63>
    4dbb:	00 00                	add    BYTE PTR [rax],al
    4dbd:	00 07                	add    BYTE PTR [rdi],al
    4dbf:	17                   	(bad)  
    4dc0:	13 00                	adc    eax,DWORD PTR [rax]
    4dc2:	00 04 12             	add    BYTE PTR [rdx+rdx*1],al
    4dc5:	7c 00                	jl     4dc7 <MULTIBOOT_HEADER_SIZE+0x4d6f>
    4dc7:	00 00                	add    BYTE PTR [rax],al
    4dc9:	08 07                	or     BYTE PTR [rdi],al
    4dcb:	e3 06                	jrcxz  4dd3 <MULTIBOOT_HEADER_SIZE+0x4d7b>
    4dcd:	00 00                	add    BYTE PTR [rax],al
    4dcf:	04 13                	add    al,0x13
    4dd1:	b2 00                	mov    dl,0x0
    4dd3:	00 00                	add    BYTE PTR [rax],al
    4dd5:	10 00                	adc    BYTE PTR [rax],al
    4dd7:	05 2d 13 00 00       	add    eax,0x132d
    4ddc:	04 14                	add    al,0x14
    4dde:	f3 00 00             	repz add BYTE PTR [rax],al
    4de1:	00 08                	add    BYTE PTR [rax],cl
    4de3:	08 e8                	or     al,ch
    4de5:	00 00                	add    BYTE PTR [rax],al
    4de7:	00 02                	add    BYTE PTR [rdx],al
    4de9:	01 06                	add    DWORD PTR [rsi],eax
    4deb:	cd 00                	int    0x0
    4ded:	00 00                	add    BYTE PTR [rax],al
    4def:	0a af 13 00 00 01    	or     ch,BYTE PTR [rdi+0x1000013]
    4df5:	0e                   	(bad)  
    4df6:	55                   	push   rbp
    4df7:	ec                   	in     al,dx
    4df8:	00 01                	add    BYTE PTR [rcx],al
    4dfa:	00 00                	add    BYTE PTR [rax],al
    4dfc:	00 00                	add    BYTE PTR [rax],al
    4dfe:	5c                   	pop    rsp
    4dff:	00 00                	add    BYTE PTR [rax],al
    4e01:	00 00                	add    BYTE PTR [rax],al
    4e03:	00 00                	add    BYTE PTR [rax],al
    4e05:	00 01                	add    BYTE PTR [rcx],al
    4e07:	9c                   	pushf  
    4e08:	72 01                	jb     4e0b <MULTIBOOT_HEADER_SIZE+0x4db3>
    4e0a:	00 00                	add    BYTE PTR [rax],al
    4e0c:	0b c5                	or     eax,ebp
    4e0e:	13 00                	adc    eax,DWORD PTR [rax]
    4e10:	00 01                	add    BYTE PTR [rcx],al
    4e12:	0e                   	(bad)  
    4e13:	2b 01                	sub    eax,DWORD PTR [rcx]
    4e15:	00 00                	add    BYTE PTR [rax],al
    4e17:	02 91 68 0b 3c 11    	add    dl,BYTE PTR [rcx+0x113c0b68]
    4e1d:	00 00                	add    BYTE PTR [rax],al
    4e1f:	01 0e                	add    DWORD PTR [rsi],ecx
    4e21:	2b 01                	sub    eax,DWORD PTR [rcx]
    4e23:	00 00                	add    BYTE PTR [rax],al
    4e25:	02 91 60 00 0a dc    	add    dl,BYTE PTR [rcx-0x23f5ffa0]
    4e2b:	13 00                	adc    eax,DWORD PTR [rax]
    4e2d:	00 01                	add    BYTE PTR [rcx],al
    4e2f:	16                   	(bad)  
    4e30:	b1 ec                	mov    cl,0xec
    4e32:	00 01                	add    BYTE PTR [rcx],al
    4e34:	00 00                	add    BYTE PTR [rax],al
    4e36:	00 00                	add    BYTE PTR [rax],al
    4e38:	80 00 00             	add    BYTE PTR [rax],0x0
    4e3b:	00 00                	add    BYTE PTR [rax],al
    4e3d:	00 00                	add    BYTE PTR [rax],al
    4e3f:	00 01                	add    BYTE PTR [rcx],al
    4e41:	9c                   	pushf  
    4e42:	f8                   	clc    
    4e43:	01 00                	add    DWORD PTR [rax],eax
    4e45:	00 0b                	add    BYTE PTR [rbx],cl
    4e47:	67 12 00             	adc    al,BYTE PTR [eax]
    4e4a:	00 01                	add    BYTE PTR [rcx],al
    4e4c:	16                   	(bad)  
    4e4d:	2b 01                	sub    eax,DWORD PTR [rcx]
    4e4f:	00 00                	add    BYTE PTR [rax],al
    4e51:	02 91 58 0b 46 13    	add    dl,BYTE PTR [rcx+0x13460b58]
    4e57:	00 00                	add    BYTE PTR [rax],al
    4e59:	01 16                	add    DWORD PTR [rsi],edx
    4e5b:	7c 00                	jl     4e5d <MULTIBOOT_HEADER_SIZE+0x4e05>
    4e5d:	00 00                	add    BYTE PTR [rax],al
    4e5f:	02 91 50 0b 30 03    	add    dl,BYTE PTR [rcx+0x3300b50]
    4e65:	00 00                	add    BYTE PTR [rax],al
    4e67:	01 16                	add    DWORD PTR [rsi],edx
    4e69:	7c 00                	jl     4e6b <MULTIBOOT_HEADER_SIZE+0x4e13>
    4e6b:	00 00                	add    BYTE PTR [rax],al
    4e6d:	02 91 48 0c f5 ec    	add    dl,BYTE PTR [rcx-0x130af3b8]
    4e73:	00 01                	add    BYTE PTR [rcx],al
    4e75:	00 00                	add    BYTE PTR [rax],al
    4e77:	00 00                	add    BYTE PTR [rax],al
    4e79:	39 00                	cmp    DWORD PTR [rax],eax
    4e7b:	00 00                	add    BYTE PTR [rax],al
    4e7d:	00 00                	add    BYTE PTR [rax],al
    4e7f:	00 00                	add    BYTE PTR [rax],al
    4e81:	0d 69 00 01 20       	or     eax,0x20010069
    4e86:	3b 00                	cmp    eax,DWORD PTR [rax]
    4e88:	00 00                	add    BYTE PTR [rax],al
    4e8a:	02 91 6c 0c fe ec    	add    dl,BYTE PTR [rcx-0x1301f394]
    4e90:	00 01                	add    BYTE PTR [rcx],al
    4e92:	00 00                	add    BYTE PTR [rax],al
    4e94:	00 00                	add    BYTE PTR [rax],al
    4e96:	19 00                	sbb    DWORD PTR [rax],eax
    4e98:	00 00                	add    BYTE PTR [rax],al
    4e9a:	00 00                	add    BYTE PTR [rax],al
    4e9c:	00 00                	add    BYTE PTR [rax],al
    4e9e:	0e                   	(bad)  
    4e9f:	76 13                	jbe    4eb4 <MULTIBOOT_HEADER_SIZE+0x4e5c>
    4ea1:	00 00                	add    BYTE PTR [rax],al
    4ea3:	01 21                	add    DWORD PTR [rcx],esp
    4ea5:	f8                   	clc    
    4ea6:	01 00                	add    DWORD PTR [rax],eax
    4ea8:	00 02                	add    BYTE PTR [rdx],al
    4eaa:	91                   	xchg   ecx,eax
    4eab:	60                   	(bad)  
    4eac:	00 00                	add    BYTE PTR [rax],al
    4eae:	00 08                	add    BYTE PTR [rax],cl
    4eb0:	08 20                	or     BYTE PTR [rax],ah
    4eb2:	01 00                	add    DWORD PTR [rax],eax
    4eb4:	00 0f                	add    BYTE PTR [rdi],cl
    4eb6:	ea                   	(bad)  
    4eb7:	13 00                	adc    eax,DWORD PTR [rax]
    4eb9:	00 01                	add    BYTE PTR [rcx],al
    4ebb:	28 5e 00             	sub    BYTE PTR [rsi+0x0],bl
    4ebe:	00 00                	add    BYTE PTR [rax],al
    4ec0:	31 ed                	xor    ebp,ebp
    4ec2:	00 01                	add    BYTE PTR [rcx],al
    4ec4:	00 00                	add    BYTE PTR [rax],al
    4ec6:	00 00                	add    BYTE PTR [rax],al
    4ec8:	7d 00                	jge    4eca <MULTIBOOT_HEADER_SIZE+0x4e72>
    4eca:	00 00                	add    BYTE PTR [rax],al
    4ecc:	00 00                	add    BYTE PTR [rax],al
    4ece:	00 00                	add    BYTE PTR [rax],al
    4ed0:	01 9c 3e 02 00 00 0c 	add    DWORD PTR [rsi+rdi*1+0xc000002],ebx
    4ed7:	86 ed                	xchg   ch,ch
    4ed9:	00 01                	add    BYTE PTR [rcx],al
    4edb:	00 00                	add    BYTE PTR [rax],al
    4edd:	00 00                	add    BYTE PTR [rax],al
    4edf:	21 00                	and    DWORD PTR [rax],eax
    4ee1:	00 00                	add    BYTE PTR [rax],al
    4ee3:	00 00                	add    BYTE PTR [rax],al
    4ee5:	00 00                	add    BYTE PTR [rax],al
    4ee7:	0d 69 00 01 2d       	or     eax,0x2d010069
    4eec:	3b 00                	cmp    eax,DWORD PTR [rax]
    4eee:	00 00                	add    BYTE PTR [rax],al
    4ef0:	02 91 6c 00 00 10    	add    dl,BYTE PTR [rcx+0x1000006c]
    4ef6:	ce                   	(bad)  
    4ef7:	13 00                	adc    eax,DWORD PTR [rax]
    4ef9:	00 01                	add    BYTE PTR [rcx],al
    4efb:	40 ae                	scas   al,BYTE PTR es:[rdi]
    4efd:	ed                   	in     eax,dx
    4efe:	00 01                	add    BYTE PTR [rcx],al
    4f00:	00 00                	add    BYTE PTR [rax],al
    4f02:	00 00                	add    BYTE PTR [rax],al
    4f04:	0f 00 00             	sldt   WORD PTR [rax]
    4f07:	00 00                	add    BYTE PTR [rax],al
    4f09:	00 00                	add    BYTE PTR [rax],al
    4f0b:	00 01                	add    BYTE PTR [rcx],al
    4f0d:	9c                   	pushf  
    4f0e:	6a 02                	push   0x2
    4f10:	00 00                	add    BYTE PTR [rax],al
    4f12:	0b 93 13 00 00 01    	or     edx,DWORD PTR [rbx+0x1000013]
    4f18:	40 5e                	rex pop rsi
    4f1a:	00 00                	add    BYTE PTR [rax],al
    4f1c:	00 02                	add    BYTE PTR [rdx],al
    4f1e:	91                   	xchg   ecx,eax
    4f1f:	68 00 11 b8 13       	push   0x13b81100
    4f24:	00 00                	add    BYTE PTR [rax],al
    4f26:	01 0b                	add    DWORD PTR [rbx],ecx
    4f28:	2b 01                	sub    eax,DWORD PTR [rcx]
    4f2a:	00 00                	add    BYTE PTR [rax],al
    4f2c:	09 03                	or     DWORD PTR [rbx],eax
    4f2e:	f0 bf 01 01 00 00    	lock mov edi,0x101
    4f34:	00 00                	add    BYTE PTR [rax],al
    4f36:	11 a1 13 00 00 01    	adc    DWORD PTR [rcx+0x1000013],esp
    4f3c:	0c 2b                	or     al,0x2b
    4f3e:	01 00                	add    DWORD PTR [rax],eax
    4f40:	00 09                	add    BYTE PTR [rcx],cl
    4f42:	03 e8                	add    ebp,eax
    4f44:	bf 01 01 00 00       	mov    edi,0x101
    4f49:	00 00                	add    BYTE PTR [rax],al
    4f4b:	00 4a 01             	add    BYTE PTR [rdx+0x1],cl
    4f4e:	00 00                	add    BYTE PTR [rax],al
    4f50:	04 00                	add    al,0x0
    4f52:	5f                   	pop    rdi
    4f53:	14 00                	adc    al,0x0
    4f55:	00 08                	add    BYTE PTR [rax],cl
    4f57:	01 27                	add    DWORD PTR [rdi],esp
    4f59:	00 00                	add    BYTE PTR [rax],al
    4f5b:	00 0c 5c             	add    BYTE PTR [rsp+rbx*2],cl
    4f5e:	14 00                	adc    al,0x0
    4f60:	00 e5                	add    ch,ah
    4f62:	00 00                	add    BYTE PTR [rax],al
    4f64:	00 bd ed 00 01 00    	add    BYTE PTR [rbp+0x100ed],bh
    4f6a:	00 00                	add    BYTE PTR [rax],al
    4f6c:	00 6e 00             	add    BYTE PTR [rsi+0x0],ch
    4f6f:	00 00                	add    BYTE PTR [rax],al
    4f71:	00 00                	add    BYTE PTR [rax],al
    4f73:	00 00                	add    BYTE PTR [rax],al
    4f75:	76 2b                	jbe    4fa2 <MULTIBOOT_HEADER_SIZE+0x4f4a>
    4f77:	00 00                	add    BYTE PTR [rax],al
    4f79:	02 01                	add    al,BYTE PTR [rcx]
    4f7b:	06                   	(bad)  
    4f7c:	c6 00 00             	mov    BYTE PTR [rax],0x0
    4f7f:	00 02                	add    BYTE PTR [rdx],al
    4f81:	02 05 1c 01 00 00    	add    al,BYTE PTR [rip+0x11c]        # 50a3 <MULTIBOOT_HEADER_SIZE+0x504b>
    4f87:	03 04 05 69 6e 74 00 	add    eax,DWORD PTR [rax*1+0x746e69]
    4f8e:	02 08                	add    cl,BYTE PTR [rax]
    4f90:	05 13 01 00 00       	add    eax,0x113
    4f95:	02 01                	add    al,BYTE PTR [rcx]
    4f97:	08 c4                	or     ah,al
    4f99:	00 00                	add    BYTE PTR [rax],al
    4f9b:	00 02                	add    BYTE PTR [rdx],al
    4f9d:	02 07                	add    al,BYTE PTR [rdi]
    4f9f:	d2 00                	rol    BYTE PTR [rax],cl
    4fa1:	00 00                	add    BYTE PTR [rax],al
    4fa3:	02 04 07             	add    al,BYTE PTR [rdi+rax*1]
    4fa6:	6a 10                	push   0x10
    4fa8:	00 00                	add    BYTE PTR [rax],al
    4faa:	04 7b                	add    al,0x7b
    4fac:	11 00                	adc    DWORD PTR [rax],eax
    4fae:	00 02                	add    BYTE PTR [rdx],al
    4fb0:	37                   	(bad)  
    4fb1:	69 00 00 00 02 08    	imul   eax,DWORD PTR [rax],0x8020000
    4fb7:	07                   	(bad)  
    4fb8:	65 10 00             	adc    BYTE PTR gs:[rax],al
    4fbb:	00 02                	add    BYTE PTR [rdx],al
    4fbd:	08 05 0e 01 00 00    	or     BYTE PTR [rip+0x10e],al        # 50d1 <MULTIBOOT_HEADER_SIZE+0x5079>
    4fc3:	02 10                	add    dl,BYTE PTR [rax]
    4fc5:	04 2e                	add    al,0x2e
    4fc7:	01 00                	add    DWORD PTR [rax],eax
    4fc9:	00 02                	add    BYTE PTR [rdx],al
    4fcb:	08 07                	or     BYTE PTR [rdi],al
    4fcd:	05 01 00 00 02       	add    eax,0x2000001
    4fd2:	01 06                	add    DWORD PTR [rsi],eax
    4fd4:	cd 00                	int    0x0
    4fd6:	00 00                	add    BYTE PTR [rax],al
    4fd8:	05 3f 14 00 00       	add    eax,0x143f
    4fdd:	01 04 bd ed 00 01 00 	add    DWORD PTR [rdi*4+0x100ed],eax
    4fe4:	00 00                	add    BYTE PTR [rax],al
    4fe6:	00 26                	add    BYTE PTR [rsi],ah
    4fe8:	00 00                	add    BYTE PTR [rax],al
    4fea:	00 00                	add    BYTE PTR [rax],al
    4fec:	00 00                	add    BYTE PTR [rax],al
    4fee:	00 01                	add    BYTE PTR [rcx],al
    4ff0:	9c                   	pushf  
    4ff1:	c6 00 00             	mov    BYTE PTR [rax],0x0
    4ff4:	00 06                	add    BYTE PTR [rsi],al
    4ff6:	35 07 00 00 01       	xor    eax,0x1000007
    4ffb:	04 5e                	add    al,0x5e
    4ffd:	00 00                	add    BYTE PTR [rax],al
    4fff:	00 02                	add    BYTE PTR [rdx],al
    5001:	91                   	xchg   ecx,eax
    5002:	68 06 54 14 00       	push   0x145406
    5007:	00 01                	add    BYTE PTR [rcx],al
    5009:	04 db                	add    al,0xdb
    500b:	00 00                	add    BYTE PTR [rax],al
    500d:	00 02                	add    BYTE PTR [rdx],al
    500f:	91                   	xchg   ecx,eax
    5010:	60                   	(bad)  
    5011:	00 07                	add    BYTE PTR [rdi],al
    5013:	db 00                	fild   DWORD PTR [rax]
    5015:	00 00                	add    BYTE PTR [rax],al
    5017:	08 5e 00             	or     BYTE PTR [rsi+0x0],bl
    501a:	00 00                	add    BYTE PTR [rax],al
    501c:	08 5e 00             	or     BYTE PTR [rsi+0x0],bl
    501f:	00 00                	add    BYTE PTR [rax],al
    5021:	08 5e 00             	or     BYTE PTR [rsi+0x0],bl
    5024:	00 00                	add    BYTE PTR [rax],al
    5026:	00 09                	add    BYTE PTR [rcx],cl
    5028:	08 c6                	or     dh,al
    502a:	00 00                	add    BYTE PTR [rax],al
    502c:	00 05 20 14 00 00    	add    BYTE PTR [rip+0x1420],al        # 6452 <MULTIBOOT_HEADER_SIZE+0x63fa>
    5032:	01 09                	add    DWORD PTR [rcx],ecx
    5034:	e3 ed                	jrcxz  5023 <MULTIBOOT_HEADER_SIZE+0x4fcb>
    5036:	00 01                	add    BYTE PTR [rcx],al
    5038:	00 00                	add    BYTE PTR [rax],al
    503a:	00 00                	add    BYTE PTR [rax],al
    503c:	26 00 00             	add    BYTE PTR es:[rax],al
    503f:	00 00                	add    BYTE PTR [rax],al
    5041:	00 00                	add    BYTE PTR [rax],al
    5043:	00 01                	add    BYTE PTR [rcx],al
    5045:	9c                   	pushf  
    5046:	1b 01                	sbb    eax,DWORD PTR [rcx]
    5048:	00 00                	add    BYTE PTR [rax],al
    504a:	06                   	(bad)  
    504b:	35 07 00 00 01       	xor    eax,0x1000007
    5050:	09 5e 00             	or     DWORD PTR [rsi+0x0],ebx
    5053:	00 00                	add    BYTE PTR [rax],al
    5055:	02 91 68 06 54 14    	add    dl,BYTE PTR [rcx+0x14540668]
    505b:	00 00                	add    BYTE PTR [rax],al
    505d:	01 09                	add    DWORD PTR [rcx],ecx
    505f:	db 00                	fild   DWORD PTR [rax]
    5061:	00 00                	add    BYTE PTR [rax],al
    5063:	02 91 60 00 0a f9    	add    dl,BYTE PTR [rcx-0x6f5ffa0]
    5069:	13 00                	adc    eax,DWORD PTR [rax]
    506b:	00 01                	add    BYTE PTR [rcx],al
    506d:	0e                   	(bad)  
    506e:	09 ee                	or     esi,ebp
    5070:	00 01                	add    BYTE PTR [rcx],al
    5072:	00 00                	add    BYTE PTR [rax],al
    5074:	00 00                	add    BYTE PTR [rax],al
    5076:	11 00                	adc    DWORD PTR [rax],eax
    5078:	00 00                	add    BYTE PTR [rax],al
    507a:	00 00                	add    BYTE PTR [rax],al
    507c:	00 00                	add    BYTE PTR [rax],al
    507e:	01 9c 0a 0d 14 00 00 	add    DWORD PTR [rdx+rcx*1+0x140d],ebx
    5085:	01 13                	add    DWORD PTR [rbx],edx
    5087:	1a ee                	sbb    ch,dh
    5089:	00 01                	add    BYTE PTR [rcx],al
    508b:	00 00                	add    BYTE PTR [rax],al
    508d:	00 00                	add    BYTE PTR [rax],al
    508f:	11 00                	adc    DWORD PTR [rax],eax
    5091:	00 00                	add    BYTE PTR [rax],al
    5093:	00 00                	add    BYTE PTR [rax],al
    5095:	00 00                	add    BYTE PTR [rax],al
    5097:	01                   	.byte 0x1
    5098:	9c                   	pushf  
	...

Disassembly of section .debug_abbrev:

0000000000000000 <.debug_abbrev>:
       0:	01 11                	add    DWORD PTR [rcx],edx
       2:	01 25 0e 13 0b 03    	add    DWORD PTR [rip+0x30b130e],esp        # 30b1316 <kernel_end+0x209531e>
       8:	0e                   	(bad)  
       9:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
       b:	11 01                	adc    DWORD PTR [rcx],eax
       d:	12 07                	adc    al,BYTE PTR [rdi]
       f:	10 17                	adc    BYTE PTR [rdi],dl
      11:	00 00                	add    BYTE PTR [rax],al
      13:	02 16                	add    dl,BYTE PTR [rsi]
      15:	00 03                	add    BYTE PTR [rbx],al
      17:	0e                   	(bad)  
      18:	3a 0b                	cmp    cl,BYTE PTR [rbx]
      1a:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
      1c:	49 13 00             	adc    rax,QWORD PTR [r8]
      1f:	00 03                	add    BYTE PTR [rbx],al
      21:	24 00                	and    al,0x0
      23:	0b 0b                	or     ecx,DWORD PTR [rbx]
      25:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
      28:	0e                   	(bad)  
      29:	00 00                	add    BYTE PTR [rax],al
      2b:	04 24                	add    al,0x24
      2d:	00 0b                	add    BYTE PTR [rbx],cl
      2f:	0b 3e                	or     edi,DWORD PTR [rsi]
      31:	0b 03                	or     eax,DWORD PTR [rbx]
      33:	08 00                	or     BYTE PTR [rax],al
      35:	00 05 0f 00 0b 0b    	add    BYTE PTR [rip+0xb0b000f],al        # b0b004a <kernel_end+0xa094052>
      3b:	00 00                	add    BYTE PTR [rax],al
      3d:	06                   	(bad)  
      3e:	2e 01 3f             	add    DWORD PTR cs:[rdi],edi
      41:	19 03                	sbb    DWORD PTR [rbx],eax
      43:	0e                   	(bad)  
      44:	3a 0b                	cmp    cl,BYTE PTR [rbx]
      46:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
      48:	27                   	(bad)  
      49:	19 11                	sbb    DWORD PTR [rcx],edx
      4b:	01 12                	add    DWORD PTR [rdx],edx
      4d:	07                   	(bad)  
      4e:	40 18 97 42 19 01 13 	sbb    BYTE PTR [rdi+0x13011942],dl
      55:	00 00                	add    BYTE PTR [rax],al
      57:	07                   	(bad)  
      58:	05 00 03 08 3a       	add    eax,0x3a080300
      5d:	0b 3b                	or     edi,DWORD PTR [rbx]
      5f:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
      62:	02 18                	add    bl,BYTE PTR [rax]
      64:	00 00                	add    BYTE PTR [rax],al
      66:	08 05 00 03 0e 3a    	or     BYTE PTR [rip+0x3a0e0300],al        # 3a0e036c <MULTIBOOT_LOADED_MAGIC+0x336a0e3>
      6c:	0b 3b                	or     edi,DWORD PTR [rbx]
      6e:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
      71:	02 18                	add    bl,BYTE PTR [rax]
      73:	00 00                	add    BYTE PTR [rax],al
      75:	09 34 00             	or     DWORD PTR [rax+rax*1],esi
      78:	03 0e                	add    ecx,DWORD PTR [rsi]
      7a:	3a 0b                	cmp    cl,BYTE PTR [rbx]
      7c:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
      7e:	49 13 02             	adc    rax,QWORD PTR [r10]
      81:	18 00                	sbb    BYTE PTR [rax],al
      83:	00 0a                	add    BYTE PTR [rdx],cl
      85:	0f 00 0b             	str    WORD PTR [rbx]
      88:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
      8b:	00 00                	add    BYTE PTR [rax],al
      8d:	0b 26                	or     esp,DWORD PTR [rsi]
      8f:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
      92:	00 00                	add    BYTE PTR [rax],al
      94:	0c 2e                	or     al,0x2e
      96:	01 3f                	add    DWORD PTR [rdi],edi
      98:	19 03                	sbb    DWORD PTR [rbx],eax
      9a:	0e                   	(bad)  
      9b:	3a 0b                	cmp    cl,BYTE PTR [rbx]
      9d:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
      9f:	27                   	(bad)  
      a0:	19 11                	sbb    DWORD PTR [rcx],edx
      a2:	01 12                	add    DWORD PTR [rdx],edx
      a4:	07                   	(bad)  
      a5:	40 18 96 42 19 00 00 	sbb    BYTE PTR [rsi+0x1942],dl
      ac:	00 01                	add    BYTE PTR [rcx],al
      ae:	11 01                	adc    DWORD PTR [rcx],eax
      b0:	25 0e 13 0b 03       	and    eax,0x30b130e
      b5:	0e                   	(bad)  
      b6:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
      b8:	11 01                	adc    DWORD PTR [rcx],eax
      ba:	12 07                	adc    al,BYTE PTR [rdi]
      bc:	10 17                	adc    BYTE PTR [rdi],dl
      be:	00 00                	add    BYTE PTR [rax],al
      c0:	02 24 00             	add    ah,BYTE PTR [rax+rax*1]
      c3:	0b 0b                	or     ecx,DWORD PTR [rbx]
      c5:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
      c8:	0e                   	(bad)  
      c9:	00 00                	add    BYTE PTR [rax],al
      cb:	03 24 00             	add    esp,DWORD PTR [rax+rax*1]
      ce:	0b 0b                	or     ecx,DWORD PTR [rbx]
      d0:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
      d3:	08 00                	or     BYTE PTR [rax],al
      d5:	00 04 16             	add    BYTE PTR [rsi+rdx*1],al
      d8:	00 03                	add    BYTE PTR [rbx],al
      da:	0e                   	(bad)  
      db:	3a 0b                	cmp    cl,BYTE PTR [rbx]
      dd:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
      df:	49 13 00             	adc    rax,QWORD PTR [r8]
      e2:	00 05 2e 01 3f 19    	add    BYTE PTR [rip+0x193f012e],al        # 193f0216 <kernel_end+0x183d421e>
      e8:	03 0e                	add    ecx,DWORD PTR [rsi]
      ea:	3a 0b                	cmp    cl,BYTE PTR [rbx]
      ec:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
      ee:	27                   	(bad)  
      ef:	19 49 13             	sbb    DWORD PTR [rcx+0x13],ecx
      f2:	11 01                	adc    DWORD PTR [rcx],eax
      f4:	12 07                	adc    al,BYTE PTR [rdi]
      f6:	40 18 97 42 19 01 13 	sbb    BYTE PTR [rdi+0x13011942],dl
      fd:	00 00                	add    BYTE PTR [rax],al
      ff:	06                   	(bad)  
     100:	05 00 03 08 3a       	add    eax,0x3a080300
     105:	0b 3b                	or     edi,DWORD PTR [rbx]
     107:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     10a:	02 18                	add    bl,BYTE PTR [rax]
     10c:	00 00                	add    BYTE PTR [rax],al
     10e:	07                   	(bad)  
     10f:	34 00                	xor    al,0x0
     111:	03 0e                	add    ecx,DWORD PTR [rsi]
     113:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     115:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     117:	49 13 02             	adc    rax,QWORD PTR [r10]
     11a:	18 00                	sbb    BYTE PTR [rax],al
     11c:	00 08                	add    BYTE PTR [rax],cl
     11e:	0f 00 0b             	str    WORD PTR [rbx]
     121:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     124:	00 00                	add    BYTE PTR [rax],al
     126:	09 26                	or     DWORD PTR [rsi],esp
     128:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
     12b:	00 00                	add    BYTE PTR [rax],al
     12d:	0a 2e                	or     ch,BYTE PTR [rsi]
     12f:	01 3f                	add    DWORD PTR [rdi],edi
     131:	19 03                	sbb    DWORD PTR [rbx],eax
     133:	0e                   	(bad)  
     134:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     136:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     138:	27                   	(bad)  
     139:	19 49 13             	sbb    DWORD PTR [rcx+0x13],ecx
     13c:	11 01                	adc    DWORD PTR [rcx],eax
     13e:	12 07                	adc    al,BYTE PTR [rdi]
     140:	40 18 96 42 19 00 00 	sbb    BYTE PTR [rsi+0x1942],dl
     147:	0b 05 00 03 0e 3a    	or     eax,DWORD PTR [rip+0x3a0e0300]        # 3a0e044d <MULTIBOOT_LOADED_MAGIC+0x336a1c4>
     14d:	0b 3b                	or     edi,DWORD PTR [rbx]
     14f:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     152:	02 18                	add    bl,BYTE PTR [rax]
     154:	00 00                	add    BYTE PTR [rax],al
     156:	00 01                	add    BYTE PTR [rcx],al
     158:	11 01                	adc    DWORD PTR [rcx],eax
     15a:	25 0e 13 0b 03       	and    eax,0x30b130e
     15f:	0e                   	(bad)  
     160:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
     162:	11 01                	adc    DWORD PTR [rcx],eax
     164:	12 07                	adc    al,BYTE PTR [rdi]
     166:	10 17                	adc    BYTE PTR [rdi],dl
     168:	00 00                	add    BYTE PTR [rax],al
     16a:	02 24 00             	add    ah,BYTE PTR [rax+rax*1]
     16d:	0b 0b                	or     ecx,DWORD PTR [rbx]
     16f:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
     172:	0e                   	(bad)  
     173:	00 00                	add    BYTE PTR [rax],al
     175:	03 24 00             	add    esp,DWORD PTR [rax+rax*1]
     178:	0b 0b                	or     ecx,DWORD PTR [rbx]
     17a:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
     17d:	08 00                	or     BYTE PTR [rax],al
     17f:	00 04 16             	add    BYTE PTR [rsi+rdx*1],al
     182:	00 03                	add    BYTE PTR [rbx],al
     184:	0e                   	(bad)  
     185:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     187:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     189:	49 13 00             	adc    rax,QWORD PTR [r8]
     18c:	00 05 2e 00 3f 19    	add    BYTE PTR [rip+0x193f002e],al        # 193f01c0 <kernel_end+0x183d41c8>
     192:	03 0e                	add    ecx,DWORD PTR [rsi]
     194:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     196:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     198:	27                   	(bad)  
     199:	19 49 13             	sbb    DWORD PTR [rcx+0x13],ecx
     19c:	11 01                	adc    DWORD PTR [rcx],eax
     19e:	12 07                	adc    al,BYTE PTR [rdi]
     1a0:	40 18 97 42 19 00 00 	sbb    BYTE PTR [rdi+0x1942],dl
     1a7:	06                   	(bad)  
     1a8:	2e 01 3f             	add    DWORD PTR cs:[rdi],edi
     1ab:	19 03                	sbb    DWORD PTR [rbx],eax
     1ad:	0e                   	(bad)  
     1ae:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     1b0:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     1b2:	27                   	(bad)  
     1b3:	19 11                	sbb    DWORD PTR [rcx],edx
     1b5:	01 12                	add    DWORD PTR [rdx],edx
     1b7:	07                   	(bad)  
     1b8:	40 18 97 42 19 01 13 	sbb    BYTE PTR [rdi+0x13011942],dl
     1bf:	00 00                	add    BYTE PTR [rax],al
     1c1:	07                   	(bad)  
     1c2:	05 00 03 0e 3a       	add    eax,0x3a0e0300
     1c7:	0b 3b                	or     edi,DWORD PTR [rbx]
     1c9:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     1cc:	02 18                	add    bl,BYTE PTR [rax]
     1ce:	00 00                	add    BYTE PTR [rax],al
     1d0:	08 34 00             	or     BYTE PTR [rax+rax*1],dh
     1d3:	03 0e                	add    ecx,DWORD PTR [rsi]
     1d5:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     1d7:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     1d9:	49 13 02             	adc    rax,QWORD PTR [r10]
     1dc:	18 00                	sbb    BYTE PTR [rax],al
     1de:	00 09                	add    BYTE PTR [rcx],cl
     1e0:	34 00                	xor    al,0x0
     1e2:	03 08                	add    ecx,DWORD PTR [rax]
     1e4:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     1e6:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     1e8:	49 13 02             	adc    rax,QWORD PTR [r10]
     1eb:	18 00                	sbb    BYTE PTR [rax],al
     1ed:	00 00                	add    BYTE PTR [rax],al
     1ef:	01 11                	add    DWORD PTR [rcx],edx
     1f1:	01 25 0e 13 0b 03    	add    DWORD PTR [rip+0x30b130e],esp        # 30b1505 <kernel_end+0x209550d>
     1f7:	0e                   	(bad)  
     1f8:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
     1fa:	11 01                	adc    DWORD PTR [rcx],eax
     1fc:	12 07                	adc    al,BYTE PTR [rdi]
     1fe:	10 17                	adc    BYTE PTR [rdi],dl
     200:	00 00                	add    BYTE PTR [rax],al
     202:	02 24 00             	add    ah,BYTE PTR [rax+rax*1]
     205:	0b 0b                	or     ecx,DWORD PTR [rbx]
     207:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
     20a:	0e                   	(bad)  
     20b:	00 00                	add    BYTE PTR [rax],al
     20d:	03 24 00             	add    esp,DWORD PTR [rax+rax*1]
     210:	0b 0b                	or     ecx,DWORD PTR [rbx]
     212:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
     215:	08 00                	or     BYTE PTR [rax],al
     217:	00 04 16             	add    BYTE PTR [rsi+rdx*1],al
     21a:	00 03                	add    BYTE PTR [rbx],al
     21c:	0e                   	(bad)  
     21d:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     21f:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     221:	49 13 00             	adc    rax,QWORD PTR [r8]
     224:	00 05 13 01 03 0e    	add    BYTE PTR [rip+0xe030113],al        # e03033d <kernel_end+0xd014345>
     22a:	0b 0b                	or     ecx,DWORD PTR [rbx]
     22c:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     22e:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     230:	01 13                	add    DWORD PTR [rbx],edx
     232:	00 00                	add    BYTE PTR [rax],al
     234:	06                   	(bad)  
     235:	0d 00 03 0e 3a       	or     eax,0x3a0e0300
     23a:	0b 3b                	or     edi,DWORD PTR [rbx]
     23c:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     23f:	38 0b                	cmp    BYTE PTR [rbx],cl
     241:	00 00                	add    BYTE PTR [rax],al
     243:	07                   	(bad)  
     244:	0f 00 0b             	str    WORD PTR [rbx]
     247:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     24a:	00 00                	add    BYTE PTR [rax],al
     24c:	08 13                	or     BYTE PTR [rbx],dl
     24e:	01 0b                	add    DWORD PTR [rbx],ecx
     250:	0b 3a                	or     edi,DWORD PTR [rdx]
     252:	0b 3b                	or     edi,DWORD PTR [rbx]
     254:	0b 01                	or     eax,DWORD PTR [rcx]
     256:	13 00                	adc    eax,DWORD PTR [rax]
     258:	00 09                	add    BYTE PTR [rcx],cl
     25a:	2e 01 03             	add    DWORD PTR cs:[rbx],eax
     25d:	0e                   	(bad)  
     25e:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     260:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     262:	27                   	(bad)  
     263:	19 49 13             	sbb    DWORD PTR [rcx+0x13],ecx
     266:	11 01                	adc    DWORD PTR [rcx],eax
     268:	12 07                	adc    al,BYTE PTR [rdi]
     26a:	40 18 97 42 19 01 13 	sbb    BYTE PTR [rdi+0x13011942],dl
     271:	00 00                	add    BYTE PTR [rax],al
     273:	0a 05 00 03 08 3a    	or     al,BYTE PTR [rip+0x3a080300]        # 3a080579 <MULTIBOOT_LOADED_MAGIC+0x330a2f0>
     279:	0b 3b                	or     edi,DWORD PTR [rbx]
     27b:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     27e:	02 18                	add    bl,BYTE PTR [rax]
     280:	00 00                	add    BYTE PTR [rax],al
     282:	0b 05 00 03 0e 3a    	or     eax,DWORD PTR [rip+0x3a0e0300]        # 3a0e0588 <MULTIBOOT_LOADED_MAGIC+0x336a2ff>
     288:	0b 3b                	or     edi,DWORD PTR [rbx]
     28a:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     28d:	02 18                	add    bl,BYTE PTR [rax]
     28f:	00 00                	add    BYTE PTR [rax],al
     291:	0c 2e                	or     al,0x2e
     293:	01 03                	add    DWORD PTR [rbx],eax
     295:	0e                   	(bad)  
     296:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     298:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     29a:	27                   	(bad)  
     29b:	19 49 13             	sbb    DWORD PTR [rcx+0x13],ecx
     29e:	11 01                	adc    DWORD PTR [rcx],eax
     2a0:	12 07                	adc    al,BYTE PTR [rdi]
     2a2:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
     2a9:	00 00                	add    BYTE PTR [rax],al
     2ab:	0d 34 00 03 0e       	or     eax,0xe030034
     2b0:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     2b2:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     2b4:	49 13 02             	adc    rax,QWORD PTR [r10]
     2b7:	18 00                	sbb    BYTE PTR [rax],al
     2b9:	00 0e                	add    BYTE PTR [rsi],cl
     2bb:	34 00                	xor    al,0x0
     2bd:	03 08                	add    ecx,DWORD PTR [rax]
     2bf:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     2c1:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     2c3:	49 13 02             	adc    rax,QWORD PTR [r10]
     2c6:	18 00                	sbb    BYTE PTR [rax],al
     2c8:	00 0f                	add    BYTE PTR [rdi],cl
     2ca:	0b 01                	or     eax,DWORD PTR [rcx]
     2cc:	11 01                	adc    DWORD PTR [rcx],eax
     2ce:	12 07                	adc    al,BYTE PTR [rdi]
     2d0:	01 13                	add    DWORD PTR [rbx],edx
     2d2:	00 00                	add    BYTE PTR [rax],al
     2d4:	10 0b                	adc    BYTE PTR [rbx],cl
     2d6:	01 11                	add    DWORD PTR [rcx],edx
     2d8:	01 12                	add    DWORD PTR [rdx],edx
     2da:	07                   	(bad)  
     2db:	00 00                	add    BYTE PTR [rax],al
     2dd:	11 26                	adc    DWORD PTR [rsi],esp
     2df:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
     2e2:	00 00                	add    BYTE PTR [rax],al
     2e4:	12 15 01 27 19 49    	adc    dl,BYTE PTR [rip+0x49192701]        # 491929eb <MULTIBOOT_LOADED_MAGIC+0x1241c762>
     2ea:	13 01                	adc    eax,DWORD PTR [rcx]
     2ec:	13 00                	adc    eax,DWORD PTR [rax]
     2ee:	00 13                	add    BYTE PTR [rbx],dl
     2f0:	05 00 49 13 00       	add    eax,0x134900
     2f5:	00 14 2e             	add    BYTE PTR [rsi+rbp*1],dl
     2f8:	01 03                	add    DWORD PTR [rbx],eax
     2fa:	0e                   	(bad)  
     2fb:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     2fd:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     2ff:	27                   	(bad)  
     300:	19 11                	sbb    DWORD PTR [rcx],edx
     302:	01 12                	add    DWORD PTR [rdx],edx
     304:	07                   	(bad)  
     305:	40 18 97 42 19 01 13 	sbb    BYTE PTR [rdi+0x13011942],dl
     30c:	00 00                	add    BYTE PTR [rax],al
     30e:	15 0b 01 55 17       	adc    eax,0x1755010b
     313:	01 13                	add    DWORD PTR [rbx],edx
     315:	00 00                	add    BYTE PTR [rax],al
     317:	16                   	(bad)  
     318:	34 00                	xor    al,0x0
     31a:	03 0e                	add    ecx,DWORD PTR [rsi]
     31c:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     31e:	3b 05 49 13 02 18    	cmp    eax,DWORD PTR [rip+0x18021349]        # 1802166d <kernel_end+0x17005675>
     324:	00 00                	add    BYTE PTR [rax],al
     326:	17                   	(bad)  
     327:	2e 01 03             	add    DWORD PTR cs:[rbx],eax
     32a:	0e                   	(bad)  
     32b:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     32d:	3b 05 27 19 49 13    	cmp    eax,DWORD PTR [rip+0x13491927]        # 13491c5a <kernel_end+0x12475c62>
     333:	11 01                	adc    DWORD PTR [rcx],eax
     335:	12 07                	adc    al,BYTE PTR [rdi]
     337:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
     33e:	00 00                	add    BYTE PTR [rax],al
     340:	18 05 00 03 0e 3a    	sbb    BYTE PTR [rip+0x3a0e0300],al        # 3a0e0646 <MULTIBOOT_LOADED_MAGIC+0x336a3bd>
     346:	0b 3b                	or     edi,DWORD PTR [rbx]
     348:	05 49 13 02 18       	add    eax,0x18021349
     34d:	00 00                	add    BYTE PTR [rax],al
     34f:	19 2e                	sbb    DWORD PTR [rsi],ebp
     351:	01 03                	add    DWORD PTR [rbx],eax
     353:	0e                   	(bad)  
     354:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     356:	3b 05 27 19 11 01    	cmp    eax,DWORD PTR [rip+0x1111927]        # 1111c83 <kernel_end+0xf5c8b>
     35c:	12 07                	adc    al,BYTE PTR [rdi]
     35e:	40 18 97 42 19 01 13 	sbb    BYTE PTR [rdi+0x13011942],dl
     365:	00 00                	add    BYTE PTR [rax],al
     367:	1a 05 00 03 08 3a    	sbb    al,BYTE PTR [rip+0x3a080300]        # 3a08066d <MULTIBOOT_LOADED_MAGIC+0x330a3e4>
     36d:	0b 3b                	or     edi,DWORD PTR [rbx]
     36f:	05 49 13 02 18       	add    eax,0x18021349
     374:	00 00                	add    BYTE PTR [rax],al
     376:	1b 2e                	sbb    ebp,DWORD PTR [rsi]
     378:	01 3f                	add    DWORD PTR [rdi],edi
     37a:	19 03                	sbb    DWORD PTR [rbx],eax
     37c:	0e                   	(bad)  
     37d:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     37f:	3b 05 27 19 49 13    	cmp    eax,DWORD PTR [rip+0x13491927]        # 13491cac <kernel_end+0x12475cb4>
     385:	11 01                	adc    DWORD PTR [rcx],eax
     387:	12 07                	adc    al,BYTE PTR [rdi]
     389:	40 18 97 42 19 01 13 	sbb    BYTE PTR [rdi+0x13011942],dl
     390:	00 00                	add    BYTE PTR [rax],al
     392:	1c 2e                	sbb    al,0x2e
     394:	01 3f                	add    DWORD PTR [rdi],edi
     396:	19 03                	sbb    DWORD PTR [rbx],eax
     398:	0e                   	(bad)  
     399:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     39b:	3b 05 27 19 49 13    	cmp    eax,DWORD PTR [rip+0x13491927]        # 13491cc8 <kernel_end+0x12475cd0>
     3a1:	11 01                	adc    DWORD PTR [rcx],eax
     3a3:	12 07                	adc    al,BYTE PTR [rdi]
     3a5:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
     3ac:	00 00                	add    BYTE PTR [rax],al
     3ae:	1d 2e 01 3f 19       	sbb    eax,0x193f012e
     3b3:	03 0e                	add    ecx,DWORD PTR [rsi]
     3b5:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     3b7:	3b 05 27 19 11 01    	cmp    eax,DWORD PTR [rip+0x1111927]        # 1111ce4 <kernel_end+0xf5cec>
     3bd:	12 07                	adc    al,BYTE PTR [rdi]
     3bf:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
     3c6:	00 00                	add    BYTE PTR [rax],al
     3c8:	1e                   	(bad)  
     3c9:	2e 01 3f             	add    DWORD PTR cs:[rdi],edi
     3cc:	19 03                	sbb    DWORD PTR [rbx],eax
     3ce:	0e                   	(bad)  
     3cf:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     3d1:	3b 05 27 19 11 01    	cmp    eax,DWORD PTR [rip+0x1111927]        # 1111cfe <kernel_end+0xf5d06>
     3d7:	12 07                	adc    al,BYTE PTR [rdi]
     3d9:	40 18 97 42 19 01 13 	sbb    BYTE PTR [rdi+0x13011942],dl
     3e0:	00 00                	add    BYTE PTR [rax],al
     3e2:	1f                   	(bad)  
     3e3:	2e 01 3f             	add    DWORD PTR cs:[rdi],edi
     3e6:	19 03                	sbb    DWORD PTR [rbx],eax
     3e8:	0e                   	(bad)  
     3e9:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     3eb:	3b 05 27 19 49 13    	cmp    eax,DWORD PTR [rip+0x13491927]        # 13491d18 <kernel_end+0x12475d20>
     3f1:	11 01                	adc    DWORD PTR [rcx],eax
     3f3:	12 07                	adc    al,BYTE PTR [rdi]
     3f5:	40 18 96 42 19 00 00 	sbb    BYTE PTR [rsi+0x1942],dl
     3fc:	00 01                	add    BYTE PTR [rcx],al
     3fe:	11 01                	adc    DWORD PTR [rcx],eax
     400:	25 0e 13 0b 03       	and    eax,0x30b130e
     405:	0e                   	(bad)  
     406:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
     408:	11 01                	adc    DWORD PTR [rcx],eax
     40a:	12 07                	adc    al,BYTE PTR [rdi]
     40c:	10 17                	adc    BYTE PTR [rdi],dl
     40e:	00 00                	add    BYTE PTR [rax],al
     410:	02 24 00             	add    ah,BYTE PTR [rax+rax*1]
     413:	0b 0b                	or     ecx,DWORD PTR [rbx]
     415:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
     418:	0e                   	(bad)  
     419:	00 00                	add    BYTE PTR [rax],al
     41b:	03 24 00             	add    esp,DWORD PTR [rax+rax*1]
     41e:	0b 0b                	or     ecx,DWORD PTR [rbx]
     420:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
     423:	08 00                	or     BYTE PTR [rax],al
     425:	00 04 0f             	add    BYTE PTR [rdi+rcx*1],al
     428:	00 0b                	add    BYTE PTR [rbx],cl
     42a:	0b 00                	or     eax,DWORD PTR [rax]
     42c:	00 05 16 00 03 0e    	add    BYTE PTR [rip+0xe030016],al        # e030448 <kernel_end+0xd014450>
     432:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     434:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     436:	49 13 00             	adc    rax,QWORD PTR [r8]
     439:	00 06                	add    BYTE PTR [rsi],al
     43b:	17                   	(bad)  
     43c:	01 0b                	add    DWORD PTR [rbx],ecx
     43e:	0b 3a                	or     edi,DWORD PTR [rdx]
     440:	0b 3b                	or     edi,DWORD PTR [rbx]
     442:	0b 01                	or     eax,DWORD PTR [rcx]
     444:	13 00                	adc    eax,DWORD PTR [rax]
     446:	00 07                	add    BYTE PTR [rdi],al
     448:	0d 00 03 0e 3a       	or     eax,0x3a0e0300
     44d:	0b 3b                	or     edi,DWORD PTR [rbx]
     44f:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     452:	00 00                	add    BYTE PTR [rax],al
     454:	08 2e                	or     BYTE PTR [rsi],ch
     456:	01 03                	add    DWORD PTR [rbx],eax
     458:	0e                   	(bad)  
     459:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     45b:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     45d:	27                   	(bad)  
     45e:	19 49 13             	sbb    DWORD PTR [rcx+0x13],ecx
     461:	11 01                	adc    DWORD PTR [rcx],eax
     463:	12 07                	adc    al,BYTE PTR [rdi]
     465:	40 18 97 42 19 01 13 	sbb    BYTE PTR [rdi+0x13011942],dl
     46c:	00 00                	add    BYTE PTR [rax],al
     46e:	09 05 00 03 08 3a    	or     DWORD PTR [rip+0x3a080300],eax        # 3a080774 <MULTIBOOT_LOADED_MAGIC+0x330a4eb>
     474:	0b 3b                	or     edi,DWORD PTR [rbx]
     476:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     479:	02 18                	add    bl,BYTE PTR [rax]
     47b:	00 00                	add    BYTE PTR [rax],al
     47d:	0a 05 00 03 0e 3a    	or     al,BYTE PTR [rip+0x3a0e0300]        # 3a0e0783 <MULTIBOOT_LOADED_MAGIC+0x336a4fa>
     483:	0b 3b                	or     edi,DWORD PTR [rbx]
     485:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     488:	02 18                	add    bl,BYTE PTR [rax]
     48a:	00 00                	add    BYTE PTR [rax],al
     48c:	0b 2e                	or     ebp,DWORD PTR [rsi]
     48e:	01 03                	add    DWORD PTR [rbx],eax
     490:	0e                   	(bad)  
     491:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     493:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     495:	27                   	(bad)  
     496:	19 11                	sbb    DWORD PTR [rcx],edx
     498:	01 12                	add    DWORD PTR [rdx],edx
     49a:	07                   	(bad)  
     49b:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
     4a2:	00 00                	add    BYTE PTR [rax],al
     4a4:	0c 0f                	or     al,0xf
     4a6:	00 0b                	add    BYTE PTR [rbx],cl
     4a8:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     4ab:	00 00                	add    BYTE PTR [rax],al
     4ad:	0d 2e 01 03 0e       	or     eax,0xe03012e
     4b2:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     4b4:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     4b6:	27                   	(bad)  
     4b7:	19 49 13             	sbb    DWORD PTR [rcx+0x13],ecx
     4ba:	11 01                	adc    DWORD PTR [rcx],eax
     4bc:	12 07                	adc    al,BYTE PTR [rdi]
     4be:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
     4c5:	00 00                	add    BYTE PTR [rax],al
     4c7:	0e                   	(bad)  
     4c8:	0b 01                	or     eax,DWORD PTR [rcx]
     4ca:	11 01                	adc    DWORD PTR [rcx],eax
     4cc:	12 07                	adc    al,BYTE PTR [rdi]
     4ce:	00 00                	add    BYTE PTR [rax],al
     4d0:	0f 34                	sysenter 
     4d2:	00 03                	add    BYTE PTR [rbx],al
     4d4:	0e                   	(bad)  
     4d5:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     4d7:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     4d9:	49 13 02             	adc    rax,QWORD PTR [r10]
     4dc:	18 00                	sbb    BYTE PTR [rax],al
     4de:	00 10                	add    BYTE PTR [rax],dl
     4e0:	0b 01                	or     eax,DWORD PTR [rcx]
     4e2:	55                   	push   rbp
     4e3:	17                   	(bad)  
     4e4:	00 00                	add    BYTE PTR [rax],al
     4e6:	11 2e                	adc    DWORD PTR [rsi],ebp
     4e8:	01 3f                	add    DWORD PTR [rdi],edi
     4ea:	19 03                	sbb    DWORD PTR [rbx],eax
     4ec:	0e                   	(bad)  
     4ed:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     4ef:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     4f1:	27                   	(bad)  
     4f2:	19 49 13             	sbb    DWORD PTR [rcx+0x13],ecx
     4f5:	11 01                	adc    DWORD PTR [rcx],eax
     4f7:	12 07                	adc    al,BYTE PTR [rdi]
     4f9:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
     500:	00 00                	add    BYTE PTR [rax],al
     502:	12 34 00             	adc    dh,BYTE PTR [rax+rax*1]
     505:	03 08                	add    ecx,DWORD PTR [rax]
     507:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     509:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     50b:	49 13 02             	adc    rax,QWORD PTR [r10]
     50e:	18 00                	sbb    BYTE PTR [rax],al
     510:	00 13                	add    BYTE PTR [rbx],dl
     512:	2e 01 3f             	add    DWORD PTR cs:[rdi],edi
     515:	19 03                	sbb    DWORD PTR [rbx],eax
     517:	0e                   	(bad)  
     518:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     51a:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     51c:	27                   	(bad)  
     51d:	19 11                	sbb    DWORD PTR [rcx],edx
     51f:	01 12                	add    DWORD PTR [rdx],edx
     521:	07                   	(bad)  
     522:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
     529:	00 00                	add    BYTE PTR [rax],al
     52b:	14 2e                	adc    al,0x2e
     52d:	01 3f                	add    DWORD PTR [rdi],edi
     52f:	19 03                	sbb    DWORD PTR [rbx],eax
     531:	0e                   	(bad)  
     532:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     534:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     536:	27                   	(bad)  
     537:	19 11                	sbb    DWORD PTR [rcx],edx
     539:	01 12                	add    DWORD PTR [rdx],edx
     53b:	07                   	(bad)  
     53c:	40 18 96 42 19 00 00 	sbb    BYTE PTR [rsi+0x1942],dl
     543:	00 01                	add    BYTE PTR [rcx],al
     545:	11 01                	adc    DWORD PTR [rcx],eax
     547:	25 0e 13 0b 03       	and    eax,0x30b130e
     54c:	0e                   	(bad)  
     54d:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
     54f:	11 01                	adc    DWORD PTR [rcx],eax
     551:	12 07                	adc    al,BYTE PTR [rdi]
     553:	10 17                	adc    BYTE PTR [rdi],dl
     555:	00 00                	add    BYTE PTR [rax],al
     557:	02 24 00             	add    ah,BYTE PTR [rax+rax*1]
     55a:	0b 0b                	or     ecx,DWORD PTR [rbx]
     55c:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
     55f:	0e                   	(bad)  
     560:	00 00                	add    BYTE PTR [rax],al
     562:	03 24 00             	add    esp,DWORD PTR [rax+rax*1]
     565:	0b 0b                	or     ecx,DWORD PTR [rbx]
     567:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
     56a:	08 00                	or     BYTE PTR [rax],al
     56c:	00 04 16             	add    BYTE PTR [rsi+rdx*1],al
     56f:	00 03                	add    BYTE PTR [rbx],al
     571:	0e                   	(bad)  
     572:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     574:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     576:	49 13 00             	adc    rax,QWORD PTR [r8]
     579:	00 05 13 01 03 0e    	add    BYTE PTR [rip+0xe030113],al        # e030692 <kernel_end+0xd01469a>
     57f:	0b 0b                	or     ecx,DWORD PTR [rbx]
     581:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     583:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     585:	01 13                	add    DWORD PTR [rbx],edx
     587:	00 00                	add    BYTE PTR [rax],al
     589:	06                   	(bad)  
     58a:	0d 00 03 0e 3a       	or     eax,0x3a0e0300
     58f:	0b 3b                	or     edi,DWORD PTR [rbx]
     591:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     594:	38 0b                	cmp    BYTE PTR [rbx],cl
     596:	00 00                	add    BYTE PTR [rax],al
     598:	07                   	(bad)  
     599:	0f 00 0b             	str    WORD PTR [rbx]
     59c:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     59f:	00 00                	add    BYTE PTR [rax],al
     5a1:	08 2e                	or     BYTE PTR [rsi],ch
     5a3:	01 03                	add    DWORD PTR [rbx],eax
     5a5:	0e                   	(bad)  
     5a6:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     5a8:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     5aa:	27                   	(bad)  
     5ab:	19 11                	sbb    DWORD PTR [rcx],edx
     5ad:	01 12                	add    DWORD PTR [rdx],edx
     5af:	07                   	(bad)  
     5b0:	40 18 97 42 19 01 13 	sbb    BYTE PTR [rdi+0x13011942],dl
     5b7:	00 00                	add    BYTE PTR [rax],al
     5b9:	09 05 00 03 0e 3a    	or     DWORD PTR [rip+0x3a0e0300],eax        # 3a0e08bf <MULTIBOOT_LOADED_MAGIC+0x336a636>
     5bf:	0b 3b                	or     edi,DWORD PTR [rbx]
     5c1:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     5c4:	02 18                	add    bl,BYTE PTR [rax]
     5c6:	00 00                	add    BYTE PTR [rax],al
     5c8:	0a 34 00             	or     dh,BYTE PTR [rax+rax*1]
     5cb:	03 0e                	add    ecx,DWORD PTR [rsi]
     5cd:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     5cf:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     5d1:	49 13 02             	adc    rax,QWORD PTR [r10]
     5d4:	18 00                	sbb    BYTE PTR [rax],al
     5d6:	00 0b                	add    BYTE PTR [rbx],cl
     5d8:	2e 01 3f             	add    DWORD PTR cs:[rdi],edi
     5db:	19 03                	sbb    DWORD PTR [rbx],eax
     5dd:	0e                   	(bad)  
     5de:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     5e0:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     5e2:	27                   	(bad)  
     5e3:	19 11                	sbb    DWORD PTR [rcx],edx
     5e5:	01 12                	add    DWORD PTR [rdx],edx
     5e7:	07                   	(bad)  
     5e8:	40 18 97 42 19 01 13 	sbb    BYTE PTR [rdi+0x13011942],dl
     5ef:	00 00                	add    BYTE PTR [rax],al
     5f1:	0c 2e                	or     al,0x2e
     5f3:	01 3f                	add    DWORD PTR [rdi],edi
     5f5:	19 03                	sbb    DWORD PTR [rbx],eax
     5f7:	0e                   	(bad)  
     5f8:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     5fa:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     5fc:	27                   	(bad)  
     5fd:	19 49 13             	sbb    DWORD PTR [rcx+0x13],ecx
     600:	11 01                	adc    DWORD PTR [rcx],eax
     602:	12 07                	adc    al,BYTE PTR [rdi]
     604:	40 18 97 42 19 01 13 	sbb    BYTE PTR [rdi+0x13011942],dl
     60b:	00 00                	add    BYTE PTR [rax],al
     60d:	0d 2e 01 3f 19       	or     eax,0x193f012e
     612:	03 0e                	add    ecx,DWORD PTR [rsi]
     614:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     616:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     618:	27                   	(bad)  
     619:	19 11                	sbb    DWORD PTR [rcx],edx
     61b:	01 12                	add    DWORD PTR [rdx],edx
     61d:	07                   	(bad)  
     61e:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
     625:	00 00                	add    BYTE PTR [rax],al
     627:	0e                   	(bad)  
     628:	2e 01 3f             	add    DWORD PTR cs:[rdi],edi
     62b:	19 03                	sbb    DWORD PTR [rbx],eax
     62d:	0e                   	(bad)  
     62e:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     630:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     632:	27                   	(bad)  
     633:	19 49 13             	sbb    DWORD PTR [rcx+0x13],ecx
     636:	11 01                	adc    DWORD PTR [rcx],eax
     638:	12 07                	adc    al,BYTE PTR [rdi]
     63a:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
     641:	00 00                	add    BYTE PTR [rax],al
     643:	0f 2e 01             	ucomiss xmm0,DWORD PTR [rcx]
     646:	3f                   	(bad)  
     647:	19 03                	sbb    DWORD PTR [rbx],eax
     649:	0e                   	(bad)  
     64a:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     64c:	3b 05 27 19 49 13    	cmp    eax,DWORD PTR [rip+0x13491927]        # 13491f79 <kernel_end+0x12475f81>
     652:	11 01                	adc    DWORD PTR [rcx],eax
     654:	12 07                	adc    al,BYTE PTR [rdi]
     656:	40 18 97 42 19 01 13 	sbb    BYTE PTR [rdi+0x13011942],dl
     65d:	00 00                	add    BYTE PTR [rax],al
     65f:	10 05 00 03 0e 3a    	adc    BYTE PTR [rip+0x3a0e0300],al        # 3a0e0965 <MULTIBOOT_LOADED_MAGIC+0x336a6dc>
     665:	0b 3b                	or     edi,DWORD PTR [rbx]
     667:	05 49 13 02 18       	add    eax,0x18021349
     66c:	00 00                	add    BYTE PTR [rax],al
     66e:	11 34 00             	adc    DWORD PTR [rax+rax*1],esi
     671:	03 0e                	add    ecx,DWORD PTR [rsi]
     673:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     675:	3b 05 49 13 02 18    	cmp    eax,DWORD PTR [rip+0x18021349]        # 180219c4 <kernel_end+0x170059cc>
     67b:	00 00                	add    BYTE PTR [rax],al
     67d:	12 2e                	adc    ch,BYTE PTR [rsi]
     67f:	01 3f                	add    DWORD PTR [rdi],edi
     681:	19 03                	sbb    DWORD PTR [rbx],eax
     683:	0e                   	(bad)  
     684:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     686:	3b 05 27 19 49 13    	cmp    eax,DWORD PTR [rip+0x13491927]        # 13491fb3 <kernel_end+0x12475fbb>
     68c:	11 01                	adc    DWORD PTR [rcx],eax
     68e:	12 07                	adc    al,BYTE PTR [rdi]
     690:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
     697:	00 00                	add    BYTE PTR [rax],al
     699:	13 15 01 27 19 49    	adc    edx,DWORD PTR [rip+0x49192701]        # 49192da0 <MULTIBOOT_LOADED_MAGIC+0x1241cb17>
     69f:	13 01                	adc    eax,DWORD PTR [rcx]
     6a1:	13 00                	adc    eax,DWORD PTR [rax]
     6a3:	00 14 05 00 49 13 00 	add    BYTE PTR [rax*1+0x134900],dl
     6aa:	00 00                	add    BYTE PTR [rax],al
     6ac:	01 11                	add    DWORD PTR [rcx],edx
     6ae:	01 25 0e 13 0b 03    	add    DWORD PTR [rip+0x30b130e],esp        # 30b19c2 <kernel_end+0x20959ca>
     6b4:	0e                   	(bad)  
     6b5:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
     6b7:	11 01                	adc    DWORD PTR [rcx],eax
     6b9:	12 07                	adc    al,BYTE PTR [rdi]
     6bb:	10 17                	adc    BYTE PTR [rdi],dl
     6bd:	00 00                	add    BYTE PTR [rax],al
     6bf:	02 24 00             	add    ah,BYTE PTR [rax+rax*1]
     6c2:	0b 0b                	or     ecx,DWORD PTR [rbx]
     6c4:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
     6c7:	0e                   	(bad)  
     6c8:	00 00                	add    BYTE PTR [rax],al
     6ca:	03 24 00             	add    esp,DWORD PTR [rax+rax*1]
     6cd:	0b 0b                	or     ecx,DWORD PTR [rbx]
     6cf:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
     6d2:	08 00                	or     BYTE PTR [rax],al
     6d4:	00 04 16             	add    BYTE PTR [rsi+rdx*1],al
     6d7:	00 03                	add    BYTE PTR [rbx],al
     6d9:	0e                   	(bad)  
     6da:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     6dc:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     6de:	49 13 00             	adc    rax,QWORD PTR [r8]
     6e1:	00 05 0f 00 0b 0b    	add    BYTE PTR [rip+0xb0b000f],al        # b0b06f6 <kernel_end+0xa0946fe>
     6e7:	00 00                	add    BYTE PTR [rax],al
     6e9:	06                   	(bad)  
     6ea:	2e 01 03             	add    DWORD PTR cs:[rbx],eax
     6ed:	0e                   	(bad)  
     6ee:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     6f0:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     6f2:	49 13 11             	adc    rdx,QWORD PTR [r9]
     6f5:	01 12                	add    DWORD PTR [rdx],edx
     6f7:	07                   	(bad)  
     6f8:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
     6ff:	00 00                	add    BYTE PTR [rax],al
     701:	07                   	(bad)  
     702:	34 00                	xor    al,0x0
     704:	03 0e                	add    ecx,DWORD PTR [rsi]
     706:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     708:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     70a:	49 13 02             	adc    rax,QWORD PTR [r10]
     70d:	18 00                	sbb    BYTE PTR [rax],al
     70f:	00 08                	add    BYTE PTR [rax],cl
     711:	01 01                	add    DWORD PTR [rcx],eax
     713:	49 13 01             	adc    rax,QWORD PTR [r9]
     716:	13 00                	adc    eax,DWORD PTR [rax]
     718:	00 09                	add    BYTE PTR [rcx],cl
     71a:	21 00                	and    DWORD PTR [rax],eax
     71c:	49 13 2f             	adc    rbp,QWORD PTR [r15]
     71f:	0b 00                	or     eax,DWORD PTR [rax]
     721:	00 0a                	add    BYTE PTR [rdx],cl
     723:	34 00                	xor    al,0x0
     725:	03 08                	add    ecx,DWORD PTR [rax]
     727:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     729:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     72b:	49 13 02             	adc    rax,QWORD PTR [r10]
     72e:	18 00                	sbb    BYTE PTR [rax],al
     730:	00 0b                	add    BYTE PTR [rbx],cl
     732:	2e 00 3f             	add    BYTE PTR cs:[rdi],bh
     735:	19 03                	sbb    DWORD PTR [rbx],eax
     737:	0e                   	(bad)  
     738:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     73a:	3b 05 11 01 12 07    	cmp    eax,DWORD PTR [rip+0x7120111]        # 7120851 <kernel_end+0x6104859>
     740:	40 18 96 42 19 00 00 	sbb    BYTE PTR [rsi+0x1942],dl
     747:	0c 21                	or     al,0x21
     749:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
     74c:	2f                   	(bad)  
     74d:	05 00 00 0d 34       	add    eax,0x340d0000
     752:	00 03                	add    BYTE PTR [rbx],al
     754:	0e                   	(bad)  
     755:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     757:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     759:	49 13 3f             	adc    rdi,QWORD PTR [r15]
     75c:	19 02                	sbb    DWORD PTR [rdx],eax
     75e:	18 00                	sbb    BYTE PTR [rax],al
     760:	00 0e                	add    BYTE PTR [rsi],cl
     762:	26 00 49 13          	add    BYTE PTR es:[rcx+0x13],cl
     766:	00 00                	add    BYTE PTR [rax],al
     768:	00 01                	add    BYTE PTR [rcx],al
     76a:	11 01                	adc    DWORD PTR [rcx],eax
     76c:	25 0e 13 0b 03       	and    eax,0x30b130e
     771:	0e                   	(bad)  
     772:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
     774:	11 01                	adc    DWORD PTR [rcx],eax
     776:	12 07                	adc    al,BYTE PTR [rdi]
     778:	10 17                	adc    BYTE PTR [rdi],dl
     77a:	00 00                	add    BYTE PTR [rax],al
     77c:	02 24 00             	add    ah,BYTE PTR [rax+rax*1]
     77f:	0b 0b                	or     ecx,DWORD PTR [rbx]
     781:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
     784:	0e                   	(bad)  
     785:	00 00                	add    BYTE PTR [rax],al
     787:	03 24 00             	add    esp,DWORD PTR [rax+rax*1]
     78a:	0b 0b                	or     ecx,DWORD PTR [rbx]
     78c:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
     78f:	08 00                	or     BYTE PTR [rax],al
     791:	00 04 16             	add    BYTE PTR [rsi+rdx*1],al
     794:	00 03                	add    BYTE PTR [rbx],al
     796:	0e                   	(bad)  
     797:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     799:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     79b:	49 13 00             	adc    rax,QWORD PTR [r8]
     79e:	00 05 13 01 03 0e    	add    BYTE PTR [rip+0xe030113],al        # e0308b7 <kernel_end+0xd0148bf>
     7a4:	0b 0b                	or     ecx,DWORD PTR [rbx]
     7a6:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     7a8:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     7aa:	01 13                	add    DWORD PTR [rbx],edx
     7ac:	00 00                	add    BYTE PTR [rax],al
     7ae:	06                   	(bad)  
     7af:	0d 00 03 0e 3a       	or     eax,0x3a0e0300
     7b4:	0b 3b                	or     edi,DWORD PTR [rbx]
     7b6:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     7b9:	38 0b                	cmp    BYTE PTR [rbx],cl
     7bb:	00 00                	add    BYTE PTR [rax],al
     7bd:	07                   	(bad)  
     7be:	0f 00 0b             	str    WORD PTR [rbx]
     7c1:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     7c4:	00 00                	add    BYTE PTR [rax],al
     7c6:	08 13                	or     BYTE PTR [rbx],dl
     7c8:	01 0b                	add    DWORD PTR [rbx],ecx
     7ca:	0b 3a                	or     edi,DWORD PTR [rdx]
     7cc:	0b 3b                	or     edi,DWORD PTR [rbx]
     7ce:	0b 01                	or     eax,DWORD PTR [rcx]
     7d0:	13 00                	adc    eax,DWORD PTR [rax]
     7d2:	00 09                	add    BYTE PTR [rcx],cl
     7d4:	0d 00 03 08 3a       	or     eax,0x3a080300
     7d9:	0b 3b                	or     edi,DWORD PTR [rbx]
     7db:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     7de:	38 0b                	cmp    BYTE PTR [rbx],cl
     7e0:	00 00                	add    BYTE PTR [rax],al
     7e2:	0a 2e                	or     ch,BYTE PTR [rsi]
     7e4:	01 03                	add    DWORD PTR [rbx],eax
     7e6:	0e                   	(bad)  
     7e7:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     7e9:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     7eb:	27                   	(bad)  
     7ec:	19 49 13             	sbb    DWORD PTR [rcx+0x13],ecx
     7ef:	11 01                	adc    DWORD PTR [rcx],eax
     7f1:	12 07                	adc    al,BYTE PTR [rdi]
     7f3:	40 18 97 42 19 01 13 	sbb    BYTE PTR [rdi+0x13011942],dl
     7fa:	00 00                	add    BYTE PTR [rax],al
     7fc:	0b 05 00 03 0e 3a    	or     eax,DWORD PTR [rip+0x3a0e0300]        # 3a0e0b02 <MULTIBOOT_LOADED_MAGIC+0x336a879>
     802:	0b 3b                	or     edi,DWORD PTR [rbx]
     804:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     807:	02 18                	add    bl,BYTE PTR [rax]
     809:	00 00                	add    BYTE PTR [rax],al
     80b:	0c 34                	or     al,0x34
     80d:	00 03                	add    BYTE PTR [rbx],al
     80f:	0e                   	(bad)  
     810:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     812:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     814:	49 13 02             	adc    rax,QWORD PTR [r10]
     817:	18 00                	sbb    BYTE PTR [rax],al
     819:	00 0d 2e 01 03 0e    	add    BYTE PTR [rip+0xe03012e],cl        # e03094d <kernel_end+0xd014955>
     81f:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     821:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     823:	27                   	(bad)  
     824:	19 49 13             	sbb    DWORD PTR [rcx+0x13],ecx
     827:	11 01                	adc    DWORD PTR [rcx],eax
     829:	12 07                	adc    al,BYTE PTR [rdi]
     82b:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
     832:	00 00                	add    BYTE PTR [rax],al
     834:	0e                   	(bad)  
     835:	05 00 03 08 3a       	add    eax,0x3a080300
     83a:	0b 3b                	or     edi,DWORD PTR [rbx]
     83c:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     83f:	02 18                	add    bl,BYTE PTR [rax]
     841:	00 00                	add    BYTE PTR [rax],al
     843:	0f 34                	sysenter 
     845:	00 03                	add    BYTE PTR [rbx],al
     847:	08 3a                	or     BYTE PTR [rdx],bh
     849:	0b 3b                	or     edi,DWORD PTR [rbx]
     84b:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     84e:	02 18                	add    bl,BYTE PTR [rax]
     850:	00 00                	add    BYTE PTR [rax],al
     852:	10 0b                	adc    BYTE PTR [rbx],cl
     854:	01 11                	add    DWORD PTR [rcx],edx
     856:	01 12                	add    DWORD PTR [rdx],edx
     858:	07                   	(bad)  
     859:	01 13                	add    DWORD PTR [rbx],edx
     85b:	00 00                	add    BYTE PTR [rax],al
     85d:	11 0b                	adc    DWORD PTR [rbx],ecx
     85f:	01 11                	add    DWORD PTR [rcx],edx
     861:	01 12                	add    DWORD PTR [rdx],edx
     863:	07                   	(bad)  
     864:	00 00                	add    BYTE PTR [rax],al
     866:	12 2e                	adc    ch,BYTE PTR [rsi]
     868:	01 03                	add    DWORD PTR [rbx],eax
     86a:	0e                   	(bad)  
     86b:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     86d:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     86f:	27                   	(bad)  
     870:	19 11                	sbb    DWORD PTR [rcx],edx
     872:	01 12                	add    DWORD PTR [rdx],edx
     874:	07                   	(bad)  
     875:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
     87c:	00 00                	add    BYTE PTR [rax],al
     87e:	13 2e                	adc    ebp,DWORD PTR [rsi]
     880:	01 03                	add    DWORD PTR [rbx],eax
     882:	0e                   	(bad)  
     883:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     885:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     887:	49 13 11             	adc    rdx,QWORD PTR [r9]
     88a:	01 12                	add    DWORD PTR [rdx],edx
     88c:	07                   	(bad)  
     88d:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
     894:	00 00                	add    BYTE PTR [rax],al
     896:	14 01                	adc    al,0x1
     898:	01 49 13             	add    DWORD PTR [rcx+0x13],ecx
     89b:	01 13                	add    DWORD PTR [rbx],edx
     89d:	00 00                	add    BYTE PTR [rax],al
     89f:	15 21 00 49 13       	adc    eax,0x13490021
     8a4:	2f                   	(bad)  
     8a5:	0b 00                	or     eax,DWORD PTR [rax]
     8a7:	00 16                	add    BYTE PTR [rsi],dl
     8a9:	2e 01 03             	add    DWORD PTR cs:[rbx],eax
     8ac:	0e                   	(bad)  
     8ad:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     8af:	3b 05 49 13 11 01    	cmp    eax,DWORD PTR [rip+0x1111349]        # 1111bfe <kernel_end+0xf5c06>
     8b5:	12 07                	adc    al,BYTE PTR [rdi]
     8b7:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
     8be:	00 00                	add    BYTE PTR [rax],al
     8c0:	17                   	(bad)  
     8c1:	34 00                	xor    al,0x0
     8c3:	03 0e                	add    ecx,DWORD PTR [rsi]
     8c5:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     8c7:	3b 05 49 13 02 18    	cmp    eax,DWORD PTR [rip+0x18021349]        # 18021c16 <kernel_end+0x17005c1e>
     8cd:	00 00                	add    BYTE PTR [rax],al
     8cf:	18 34 00             	sbb    BYTE PTR [rax+rax*1],dh
     8d2:	03 08                	add    ecx,DWORD PTR [rax]
     8d4:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     8d6:	3b 05 49 13 02 18    	cmp    eax,DWORD PTR [rip+0x18021349]        # 18021c25 <kernel_end+0x17005c2d>
     8dc:	00 00                	add    BYTE PTR [rax],al
     8de:	19 2e                	sbb    DWORD PTR [rsi],ebp
     8e0:	01 03                	add    DWORD PTR [rbx],eax
     8e2:	0e                   	(bad)  
     8e3:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     8e5:	3b 05 27 19 49 13    	cmp    eax,DWORD PTR [rip+0x13491927]        # 13492212 <kernel_end+0x1247621a>
     8eb:	11 01                	adc    DWORD PTR [rcx],eax
     8ed:	12 07                	adc    al,BYTE PTR [rdi]
     8ef:	40 18 97 42 19 01 13 	sbb    BYTE PTR [rdi+0x13011942],dl
     8f6:	00 00                	add    BYTE PTR [rax],al
     8f8:	1a 05 00 03 08 3a    	sbb    al,BYTE PTR [rip+0x3a080300]        # 3a080bfe <MULTIBOOT_LOADED_MAGIC+0x330a975>
     8fe:	0b 3b                	or     edi,DWORD PTR [rbx]
     900:	05 49 13 02 18       	add    eax,0x18021349
     905:	00 00                	add    BYTE PTR [rax],al
     907:	1b 2e                	sbb    ebp,DWORD PTR [rsi]
     909:	00 3f                	add    BYTE PTR [rdi],bh
     90b:	19 03                	sbb    DWORD PTR [rbx],eax
     90d:	0e                   	(bad)  
     90e:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     910:	3b 05 27 19 11 01    	cmp    eax,DWORD PTR [rip+0x1111927]        # 111223d <kernel_end+0xf6245>
     916:	12 07                	adc    al,BYTE PTR [rdi]
     918:	40 18 96 42 19 00 00 	sbb    BYTE PTR [rsi+0x1942],dl
     91f:	00 01                	add    BYTE PTR [rcx],al
     921:	11 01                	adc    DWORD PTR [rcx],eax
     923:	25 0e 13 0b 03       	and    eax,0x30b130e
     928:	0e                   	(bad)  
     929:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
     92b:	11 01                	adc    DWORD PTR [rcx],eax
     92d:	12 07                	adc    al,BYTE PTR [rdi]
     92f:	10 17                	adc    BYTE PTR [rdi],dl
     931:	00 00                	add    BYTE PTR [rax],al
     933:	02 24 00             	add    ah,BYTE PTR [rax+rax*1]
     936:	0b 0b                	or     ecx,DWORD PTR [rbx]
     938:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
     93b:	0e                   	(bad)  
     93c:	00 00                	add    BYTE PTR [rax],al
     93e:	03 16                	add    edx,DWORD PTR [rsi]
     940:	00 03                	add    BYTE PTR [rbx],al
     942:	0e                   	(bad)  
     943:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     945:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     947:	49 13 00             	adc    rax,QWORD PTR [r8]
     94a:	00 04 24             	add    BYTE PTR [rsp],al
     94d:	00 0b                	add    BYTE PTR [rbx],cl
     94f:	0b 3e                	or     edi,DWORD PTR [rsi]
     951:	0b 03                	or     eax,DWORD PTR [rbx]
     953:	08 00                	or     BYTE PTR [rax],al
     955:	00 05 13 01 03 0e    	add    BYTE PTR [rip+0xe030113],al        # e030a6e <kernel_end+0xd014a76>
     95b:	0b 0b                	or     ecx,DWORD PTR [rbx]
     95d:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     95f:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     961:	01 13                	add    DWORD PTR [rbx],edx
     963:	00 00                	add    BYTE PTR [rax],al
     965:	06                   	(bad)  
     966:	0d 00 03 0e 3a       	or     eax,0x3a0e0300
     96b:	0b 3b                	or     edi,DWORD PTR [rbx]
     96d:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     970:	38 0b                	cmp    BYTE PTR [rbx],cl
     972:	00 00                	add    BYTE PTR [rax],al
     974:	07                   	(bad)  
     975:	0f 00 0b             	str    WORD PTR [rbx]
     978:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     97b:	00 00                	add    BYTE PTR [rax],al
     97d:	08 13                	or     BYTE PTR [rbx],dl
     97f:	01 0b                	add    DWORD PTR [rbx],ecx
     981:	0b 3a                	or     edi,DWORD PTR [rdx]
     983:	0b 3b                	or     edi,DWORD PTR [rbx]
     985:	0b 01                	or     eax,DWORD PTR [rcx]
     987:	13 00                	adc    eax,DWORD PTR [rax]
     989:	00 09                	add    BYTE PTR [rcx],cl
     98b:	0d 00 03 08 3a       	or     eax,0x3a080300
     990:	0b 3b                	or     edi,DWORD PTR [rbx]
     992:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     995:	38 0b                	cmp    BYTE PTR [rbx],cl
     997:	00 00                	add    BYTE PTR [rax],al
     999:	0a 2e                	or     ch,BYTE PTR [rsi]
     99b:	01 03                	add    DWORD PTR [rbx],eax
     99d:	0e                   	(bad)  
     99e:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     9a0:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     9a2:	27                   	(bad)  
     9a3:	19 49 13             	sbb    DWORD PTR [rcx+0x13],ecx
     9a6:	11 01                	adc    DWORD PTR [rcx],eax
     9a8:	12 07                	adc    al,BYTE PTR [rdi]
     9aa:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
     9b1:	00 00                	add    BYTE PTR [rax],al
     9b3:	0b 05 00 03 08 3a    	or     eax,DWORD PTR [rip+0x3a080300]        # 3a080cb9 <MULTIBOOT_LOADED_MAGIC+0x330aa30>
     9b9:	0b 3b                	or     edi,DWORD PTR [rbx]
     9bb:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     9be:	02 18                	add    bl,BYTE PTR [rax]
     9c0:	00 00                	add    BYTE PTR [rax],al
     9c2:	0c 34                	or     al,0x34
     9c4:	00 03                	add    BYTE PTR [rbx],al
     9c6:	08 3a                	or     BYTE PTR [rdx],bh
     9c8:	0b 3b                	or     edi,DWORD PTR [rbx]
     9ca:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     9cd:	02 18                	add    bl,BYTE PTR [rax]
     9cf:	00 00                	add    BYTE PTR [rax],al
     9d1:	0d 2e 01 03 0e       	or     eax,0xe03012e
     9d6:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     9d8:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     9da:	27                   	(bad)  
     9db:	19 49 13             	sbb    DWORD PTR [rcx+0x13],ecx
     9de:	11 01                	adc    DWORD PTR [rcx],eax
     9e0:	12 07                	adc    al,BYTE PTR [rdi]
     9e2:	40 18 97 42 19 01 13 	sbb    BYTE PTR [rdi+0x13011942],dl
     9e9:	00 00                	add    BYTE PTR [rax],al
     9eb:	0e                   	(bad)  
     9ec:	05 00 03 0e 3a       	add    eax,0x3a0e0300
     9f1:	0b 3b                	or     edi,DWORD PTR [rbx]
     9f3:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     9f6:	02 18                	add    bl,BYTE PTR [rax]
     9f8:	00 00                	add    BYTE PTR [rax],al
     9fa:	0f 34                	sysenter 
     9fc:	00 03                	add    BYTE PTR [rbx],al
     9fe:	0e                   	(bad)  
     9ff:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     a01:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     a03:	49 13 02             	adc    rax,QWORD PTR [r10]
     a06:	18 00                	sbb    BYTE PTR [rax],al
     a08:	00 10                	add    BYTE PTR [rax],dl
     a0a:	2e 01 03             	add    DWORD PTR cs:[rbx],eax
     a0d:	0e                   	(bad)  
     a0e:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     a10:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     a12:	49 13 11             	adc    rdx,QWORD PTR [r9]
     a15:	01 12                	add    DWORD PTR [rdx],edx
     a17:	07                   	(bad)  
     a18:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
     a1f:	00 00                	add    BYTE PTR [rax],al
     a21:	11 01                	adc    DWORD PTR [rcx],eax
     a23:	01 49 13             	add    DWORD PTR [rcx+0x13],ecx
     a26:	01 13                	add    DWORD PTR [rbx],edx
     a28:	00 00                	add    BYTE PTR [rax],al
     a2a:	12 21                	adc    ah,BYTE PTR [rcx]
     a2c:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
     a2f:	2f                   	(bad)  
     a30:	0b 00                	or     eax,DWORD PTR [rax]
     a32:	00 13                	add    BYTE PTR [rbx],dl
     a34:	34 00                	xor    al,0x0
     a36:	03 0e                	add    ecx,DWORD PTR [rsi]
     a38:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     a3a:	3b 05 49 13 02 18    	cmp    eax,DWORD PTR [rip+0x18021349]        # 18021d89 <kernel_end+0x17005d91>
     a40:	00 00                	add    BYTE PTR [rax],al
     a42:	14 2e                	adc    al,0x2e
     a44:	01 03                	add    DWORD PTR [rbx],eax
     a46:	0e                   	(bad)  
     a47:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     a49:	3b 05 49 13 11 01    	cmp    eax,DWORD PTR [rip+0x1111349]        # 1111d98 <kernel_end+0xf5da0>
     a4f:	12 07                	adc    al,BYTE PTR [rdi]
     a51:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
     a58:	00 00                	add    BYTE PTR [rax],al
     a5a:	15 34 00 03 08       	adc    eax,0x8030034
     a5f:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     a61:	3b 05 49 13 02 18    	cmp    eax,DWORD PTR [rip+0x18021349]        # 18021db0 <kernel_end+0x17005db8>
     a67:	00 00                	add    BYTE PTR [rax],al
     a69:	16                   	(bad)  
     a6a:	0b 01                	or     eax,DWORD PTR [rcx]
     a6c:	11 01                	adc    DWORD PTR [rcx],eax
     a6e:	12 07                	adc    al,BYTE PTR [rdi]
     a70:	01 13                	add    DWORD PTR [rbx],edx
     a72:	00 00                	add    BYTE PTR [rax],al
     a74:	17                   	(bad)  
     a75:	0b 01                	or     eax,DWORD PTR [rcx]
     a77:	11 01                	adc    DWORD PTR [rcx],eax
     a79:	12 07                	adc    al,BYTE PTR [rdi]
     a7b:	00 00                	add    BYTE PTR [rax],al
     a7d:	18 2e                	sbb    BYTE PTR [rsi],ch
     a7f:	01 3f                	add    DWORD PTR [rdi],edi
     a81:	19 03                	sbb    DWORD PTR [rbx],eax
     a83:	0e                   	(bad)  
     a84:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     a86:	3b 05 27 19 11 01    	cmp    eax,DWORD PTR [rip+0x1111927]        # 11123b3 <kernel_end+0xf63bb>
     a8c:	12 07                	adc    al,BYTE PTR [rdi]
     a8e:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
     a95:	00 00                	add    BYTE PTR [rax],al
     a97:	19 21                	sbb    DWORD PTR [rcx],esp
     a99:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
     a9c:	2f                   	(bad)  
     a9d:	05 00 00 00 01       	add    eax,0x1000000
     aa2:	11 01                	adc    DWORD PTR [rcx],eax
     aa4:	25 0e 13 0b 03       	and    eax,0x30b130e
     aa9:	0e                   	(bad)  
     aaa:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
     aac:	11 01                	adc    DWORD PTR [rcx],eax
     aae:	12 07                	adc    al,BYTE PTR [rdi]
     ab0:	10 17                	adc    BYTE PTR [rdi],dl
     ab2:	00 00                	add    BYTE PTR [rax],al
     ab4:	02 24 00             	add    ah,BYTE PTR [rax+rax*1]
     ab7:	0b 0b                	or     ecx,DWORD PTR [rbx]
     ab9:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
     abc:	0e                   	(bad)  
     abd:	00 00                	add    BYTE PTR [rax],al
     abf:	03 24 00             	add    esp,DWORD PTR [rax+rax*1]
     ac2:	0b 0b                	or     ecx,DWORD PTR [rbx]
     ac4:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
     ac7:	08 00                	or     BYTE PTR [rax],al
     ac9:	00 04 0f             	add    BYTE PTR [rdi+rcx*1],al
     acc:	00 0b                	add    BYTE PTR [rbx],cl
     ace:	0b 00                	or     eax,DWORD PTR [rax]
     ad0:	00 05 16 00 03 0e    	add    BYTE PTR [rip+0xe030016],al        # e030aec <kernel_end+0xd014af4>
     ad6:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     ad8:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     ada:	49 13 00             	adc    rax,QWORD PTR [r8]
     add:	00 06                	add    BYTE PTR [rsi],al
     adf:	13 01                	adc    eax,DWORD PTR [rcx]
     ae1:	0b 0b                	or     ecx,DWORD PTR [rbx]
     ae3:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     ae5:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     ae7:	01 13                	add    DWORD PTR [rbx],edx
     ae9:	00 00                	add    BYTE PTR [rax],al
     aeb:	07                   	(bad)  
     aec:	0d 00 03 0e 3a       	or     eax,0x3a0e0300
     af1:	0b 3b                	or     edi,DWORD PTR [rbx]
     af3:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     af6:	38 0b                	cmp    BYTE PTR [rbx],cl
     af8:	00 00                	add    BYTE PTR [rax],al
     afa:	08 0f                	or     BYTE PTR [rdi],cl
     afc:	00 0b                	add    BYTE PTR [rbx],cl
     afe:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     b01:	00 00                	add    BYTE PTR [rax],al
     b03:	09 2e                	or     DWORD PTR [rsi],ebp
     b05:	00 03                	add    BYTE PTR [rbx],al
     b07:	0e                   	(bad)  
     b08:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     b0a:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     b0c:	11 01                	adc    DWORD PTR [rcx],eax
     b0e:	12 07                	adc    al,BYTE PTR [rdi]
     b10:	40 18 96 42 19 00 00 	sbb    BYTE PTR [rsi+0x1942],dl
     b17:	0a 2e                	or     ch,BYTE PTR [rsi]
     b19:	01 03                	add    DWORD PTR [rbx],eax
     b1b:	0e                   	(bad)  
     b1c:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     b1e:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     b20:	27                   	(bad)  
     b21:	19 11                	sbb    DWORD PTR [rcx],edx
     b23:	01 12                	add    DWORD PTR [rdx],edx
     b25:	07                   	(bad)  
     b26:	40 18 97 42 19 01 13 	sbb    BYTE PTR [rdi+0x13011942],dl
     b2d:	00 00                	add    BYTE PTR [rax],al
     b2f:	0b 05 00 03 08 3a    	or     eax,DWORD PTR [rip+0x3a080300]        # 3a080e35 <MULTIBOOT_LOADED_MAGIC+0x330abac>
     b35:	0b 3b                	or     edi,DWORD PTR [rbx]
     b37:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     b3a:	02 18                	add    bl,BYTE PTR [rax]
     b3c:	00 00                	add    BYTE PTR [rax],al
     b3e:	0c 0b                	or     al,0xb
     b40:	01 11                	add    DWORD PTR [rcx],edx
     b42:	01 12                	add    DWORD PTR [rdx],edx
     b44:	07                   	(bad)  
     b45:	00 00                	add    BYTE PTR [rax],al
     b47:	0d 34 00 03 08       	or     eax,0x8030034
     b4c:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     b4e:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     b50:	49 13 02             	adc    rax,QWORD PTR [r10]
     b53:	18 00                	sbb    BYTE PTR [rax],al
     b55:	00 0e                	add    BYTE PTR [rsi],cl
     b57:	2e 01 03             	add    DWORD PTR cs:[rbx],eax
     b5a:	0e                   	(bad)  
     b5b:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     b5d:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     b5f:	49 13 11             	adc    rdx,QWORD PTR [r9]
     b62:	01 12                	add    DWORD PTR [rdx],edx
     b64:	07                   	(bad)  
     b65:	40 18 97 42 19 01 13 	sbb    BYTE PTR [rdi+0x13011942],dl
     b6c:	00 00                	add    BYTE PTR [rax],al
     b6e:	0f 2e 01             	ucomiss xmm0,DWORD PTR [rcx]
     b71:	03 0e                	add    ecx,DWORD PTR [rsi]
     b73:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     b75:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     b77:	11 01                	adc    DWORD PTR [rcx],eax
     b79:	12 07                	adc    al,BYTE PTR [rdi]
     b7b:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
     b82:	00 00                	add    BYTE PTR [rax],al
     b84:	10 2e                	adc    BYTE PTR [rsi],ch
     b86:	01 03                	add    DWORD PTR [rbx],eax
     b88:	0e                   	(bad)  
     b89:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     b8b:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     b8d:	27                   	(bad)  
     b8e:	19 11                	sbb    DWORD PTR [rcx],edx
     b90:	01 12                	add    DWORD PTR [rdx],edx
     b92:	07                   	(bad)  
     b93:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
     b9a:	00 00                	add    BYTE PTR [rax],al
     b9c:	11 05 00 03 0e 3a    	adc    DWORD PTR [rip+0x3a0e0300],eax        # 3a0e0ea2 <MULTIBOOT_LOADED_MAGIC+0x336ac19>
     ba2:	0b 3b                	or     edi,DWORD PTR [rbx]
     ba4:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     ba7:	02 18                	add    bl,BYTE PTR [rax]
     ba9:	00 00                	add    BYTE PTR [rax],al
     bab:	12 34 00             	adc    dh,BYTE PTR [rax+rax*1]
     bae:	03 0e                	add    ecx,DWORD PTR [rsi]
     bb0:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     bb2:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     bb4:	49 13 02             	adc    rax,QWORD PTR [r10]
     bb7:	18 00                	sbb    BYTE PTR [rax],al
     bb9:	00 13                	add    BYTE PTR [rbx],dl
     bbb:	2e 01 3f             	add    DWORD PTR cs:[rdi],edi
     bbe:	19 03                	sbb    DWORD PTR [rbx],eax
     bc0:	0e                   	(bad)  
     bc1:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     bc3:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     bc5:	27                   	(bad)  
     bc6:	19 11                	sbb    DWORD PTR [rcx],edx
     bc8:	01 12                	add    DWORD PTR [rdx],edx
     bca:	07                   	(bad)  
     bcb:	40 18 97 42 19 01 13 	sbb    BYTE PTR [rdi+0x13011942],dl
     bd2:	00 00                	add    BYTE PTR [rax],al
     bd4:	14 0b                	adc    al,0xb
     bd6:	01 11                	add    DWORD PTR [rcx],edx
     bd8:	01 12                	add    DWORD PTR [rdx],edx
     bda:	07                   	(bad)  
     bdb:	01 13                	add    DWORD PTR [rbx],edx
     bdd:	00 00                	add    BYTE PTR [rax],al
     bdf:	15 2e 01 3f 19       	adc    eax,0x193f012e
     be4:	03 0e                	add    ecx,DWORD PTR [rsi]
     be6:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     be8:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     bea:	11 01                	adc    DWORD PTR [rcx],eax
     bec:	12 07                	adc    al,BYTE PTR [rdi]
     bee:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
     bf5:	00 00                	add    BYTE PTR [rax],al
     bf7:	16                   	(bad)  
     bf8:	2e 01 3f             	add    DWORD PTR cs:[rdi],edi
     bfb:	19 03                	sbb    DWORD PTR [rbx],eax
     bfd:	0e                   	(bad)  
     bfe:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     c00:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     c02:	27                   	(bad)  
     c03:	19 49 13             	sbb    DWORD PTR [rcx+0x13],ecx
     c06:	11 01                	adc    DWORD PTR [rcx],eax
     c08:	12 07                	adc    al,BYTE PTR [rdi]
     c0a:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
     c11:	00 00                	add    BYTE PTR [rax],al
     c13:	17                   	(bad)  
     c14:	2e 01 3f             	add    DWORD PTR cs:[rdi],edi
     c17:	19 03                	sbb    DWORD PTR [rbx],eax
     c19:	0e                   	(bad)  
     c1a:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     c1c:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     c1e:	27                   	(bad)  
     c1f:	19 11                	sbb    DWORD PTR [rcx],edx
     c21:	01 12                	add    DWORD PTR [rdx],edx
     c23:	07                   	(bad)  
     c24:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
     c2b:	00 00                	add    BYTE PTR [rax],al
     c2d:	18 01                	sbb    BYTE PTR [rcx],al
     c2f:	01 49 13             	add    DWORD PTR [rcx+0x13],ecx
     c32:	01 13                	add    DWORD PTR [rbx],edx
     c34:	00 00                	add    BYTE PTR [rax],al
     c36:	19 21                	sbb    DWORD PTR [rcx],esp
     c38:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
     c3b:	2f                   	(bad)  
     c3c:	0b 00                	or     eax,DWORD PTR [rax]
     c3e:	00 00                	add    BYTE PTR [rax],al
     c40:	01 11                	add    DWORD PTR [rcx],edx
     c42:	01 25 0e 13 0b 03    	add    DWORD PTR [rip+0x30b130e],esp        # 30b1f56 <kernel_end+0x2095f5e>
     c48:	0e                   	(bad)  
     c49:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
     c4b:	11 01                	adc    DWORD PTR [rcx],eax
     c4d:	12 07                	adc    al,BYTE PTR [rdi]
     c4f:	10 17                	adc    BYTE PTR [rdi],dl
     c51:	00 00                	add    BYTE PTR [rax],al
     c53:	02 24 00             	add    ah,BYTE PTR [rax+rax*1]
     c56:	0b 0b                	or     ecx,DWORD PTR [rbx]
     c58:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
     c5b:	0e                   	(bad)  
     c5c:	00 00                	add    BYTE PTR [rax],al
     c5e:	03 16                	add    edx,DWORD PTR [rsi]
     c60:	00 03                	add    BYTE PTR [rbx],al
     c62:	0e                   	(bad)  
     c63:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     c65:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     c67:	49 13 00             	adc    rax,QWORD PTR [r8]
     c6a:	00 04 24             	add    BYTE PTR [rsp],al
     c6d:	00 0b                	add    BYTE PTR [rbx],cl
     c6f:	0b 3e                	or     edi,DWORD PTR [rsi]
     c71:	0b 03                	or     eax,DWORD PTR [rbx]
     c73:	08 00                	or     BYTE PTR [rax],al
     c75:	00 05 0f 00 0b 0b    	add    BYTE PTR [rip+0xb0b000f],al        # b0b0c8a <kernel_end+0xa094c92>
     c7b:	00 00                	add    BYTE PTR [rax],al
     c7d:	06                   	(bad)  
     c7e:	13 01                	adc    eax,DWORD PTR [rcx]
     c80:	0b 0b                	or     ecx,DWORD PTR [rbx]
     c82:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     c84:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     c86:	01 13                	add    DWORD PTR [rbx],edx
     c88:	00 00                	add    BYTE PTR [rax],al
     c8a:	07                   	(bad)  
     c8b:	0d 00 03 0e 3a       	or     eax,0x3a0e0300
     c90:	0b 3b                	or     edi,DWORD PTR [rbx]
     c92:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     c95:	38 0b                	cmp    BYTE PTR [rbx],cl
     c97:	00 00                	add    BYTE PTR [rax],al
     c99:	08 0d 00 03 08 3a    	or     BYTE PTR [rip+0x3a080300],cl        # 3a080f9f <MULTIBOOT_LOADED_MAGIC+0x330ad16>
     c9f:	0b 3b                	or     edi,DWORD PTR [rbx]
     ca1:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     ca4:	38 0b                	cmp    BYTE PTR [rbx],cl
     ca6:	00 00                	add    BYTE PTR [rax],al
     ca8:	09 26                	or     DWORD PTR [rsi],esp
     caa:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
     cad:	00 00                	add    BYTE PTR [rax],al
     caf:	0a 2e                	or     ch,BYTE PTR [rsi]
     cb1:	01 03                	add    DWORD PTR [rbx],eax
     cb3:	0e                   	(bad)  
     cb4:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     cb6:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     cb8:	27                   	(bad)  
     cb9:	19 49 13             	sbb    DWORD PTR [rcx+0x13],ecx
     cbc:	11 01                	adc    DWORD PTR [rcx],eax
     cbe:	12 07                	adc    al,BYTE PTR [rdi]
     cc0:	40 18 97 42 19 01 13 	sbb    BYTE PTR [rdi+0x13011942],dl
     cc7:	00 00                	add    BYTE PTR [rax],al
     cc9:	0b 05 00 03 08 3a    	or     eax,DWORD PTR [rip+0x3a080300]        # 3a080fcf <MULTIBOOT_LOADED_MAGIC+0x330ad46>
     ccf:	0b 3b                	or     edi,DWORD PTR [rbx]
     cd1:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     cd4:	02 18                	add    bl,BYTE PTR [rax]
     cd6:	00 00                	add    BYTE PTR [rax],al
     cd8:	0c 05                	or     al,0x5
     cda:	00 03                	add    BYTE PTR [rbx],al
     cdc:	0e                   	(bad)  
     cdd:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     cdf:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     ce1:	49 13 02             	adc    rax,QWORD PTR [r10]
     ce4:	18 00                	sbb    BYTE PTR [rax],al
     ce6:	00 0d 2e 01 3f 19    	add    BYTE PTR [rip+0x193f012e],cl        # 193f0e1a <kernel_end+0x183d4e22>
     cec:	03 0e                	add    ecx,DWORD PTR [rsi]
     cee:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     cf0:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     cf2:	27                   	(bad)  
     cf3:	19 11                	sbb    DWORD PTR [rcx],edx
     cf5:	01 12                	add    DWORD PTR [rdx],edx
     cf7:	07                   	(bad)  
     cf8:	40 18 97 42 19 01 13 	sbb    BYTE PTR [rdi+0x13011942],dl
     cff:	00 00                	add    BYTE PTR [rax],al
     d01:	0e                   	(bad)  
     d02:	2e 01 3f             	add    DWORD PTR cs:[rdi],edi
     d05:	19 03                	sbb    DWORD PTR [rbx],eax
     d07:	0e                   	(bad)  
     d08:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     d0a:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     d0c:	27                   	(bad)  
     d0d:	19 11                	sbb    DWORD PTR [rcx],edx
     d0f:	01 12                	add    DWORD PTR [rdx],edx
     d11:	07                   	(bad)  
     d12:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
     d19:	00 00                	add    BYTE PTR [rax],al
     d1b:	0f 15 00             	unpckhps xmm0,XMMWORD PTR [rax]
     d1e:	27                   	(bad)  
     d1f:	19 00                	sbb    DWORD PTR [rax],eax
     d21:	00 10                	add    BYTE PTR [rax],dl
     d23:	0f 00 0b             	str    WORD PTR [rbx]
     d26:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     d29:	00 00                	add    BYTE PTR [rax],al
     d2b:	11 15 01 27 19 01    	adc    DWORD PTR [rip+0x1192701],edx        # 1193432 <kernel_end+0x17743a>
     d31:	13 00                	adc    eax,DWORD PTR [rax]
     d33:	00 12                	add    BYTE PTR [rdx],dl
     d35:	05 00 49 13 00       	add    eax,0x134900
     d3a:	00 13                	add    BYTE PTR [rbx],dl
     d3c:	2e 00 03             	add    BYTE PTR cs:[rbx],al
     d3f:	0e                   	(bad)  
     d40:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     d42:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     d44:	11 01                	adc    DWORD PTR [rcx],eax
     d46:	12 07                	adc    al,BYTE PTR [rdi]
     d48:	40 18 96 42 19 00 00 	sbb    BYTE PTR [rsi+0x1942],dl
     d4f:	14 2e                	adc    al,0x2e
     d51:	01 3f                	add    DWORD PTR [rdi],edi
     d53:	19 03                	sbb    DWORD PTR [rbx],eax
     d55:	0e                   	(bad)  
     d56:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     d58:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     d5a:	27                   	(bad)  
     d5b:	19 49 13             	sbb    DWORD PTR [rcx+0x13],ecx
     d5e:	11 01                	adc    DWORD PTR [rcx],eax
     d60:	12 07                	adc    al,BYTE PTR [rdi]
     d62:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
     d69:	00 00                	add    BYTE PTR [rax],al
     d6b:	15 34 00 03 08       	adc    eax,0x8030034
     d70:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     d72:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     d74:	49 13 02             	adc    rax,QWORD PTR [r10]
     d77:	18 00                	sbb    BYTE PTR [rax],al
     d79:	00 16                	add    BYTE PTR [rsi],dl
     d7b:	34 00                	xor    al,0x0
     d7d:	03 0e                	add    ecx,DWORD PTR [rsi]
     d7f:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     d81:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     d83:	49 13 02             	adc    rax,QWORD PTR [r10]
     d86:	18 00                	sbb    BYTE PTR [rax],al
     d88:	00 17                	add    BYTE PTR [rdi],dl
     d8a:	0b 01                	or     eax,DWORD PTR [rcx]
     d8c:	11 01                	adc    DWORD PTR [rcx],eax
     d8e:	12 07                	adc    al,BYTE PTR [rdi]
     d90:	00 00                	add    BYTE PTR [rax],al
     d92:	18 01                	sbb    BYTE PTR [rcx],al
     d94:	01 49 13             	add    DWORD PTR [rcx+0x13],ecx
     d97:	01 13                	add    DWORD PTR [rbx],edx
     d99:	00 00                	add    BYTE PTR [rax],al
     d9b:	19 21                	sbb    DWORD PTR [rcx],esp
     d9d:	00 00                	add    BYTE PTR [rax],al
     d9f:	00 1a                	add    BYTE PTR [rdx],bl
     da1:	34 00                	xor    al,0x0
     da3:	03 0e                	add    ecx,DWORD PTR [rsi]
     da5:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     da7:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     da9:	49 13 3f             	adc    rdi,QWORD PTR [r15]
     dac:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
     daf:	00 00                	add    BYTE PTR [rax],al
     db1:	1b 21                	sbb    esp,DWORD PTR [rcx]
     db3:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
     db6:	2f                   	(bad)  
     db7:	0b 00                	or     eax,DWORD PTR [rax]
     db9:	00 00                	add    BYTE PTR [rax],al
     dbb:	01 11                	add    DWORD PTR [rcx],edx
     dbd:	01 25 0e 13 0b 03    	add    DWORD PTR [rip+0x30b130e],esp        # 30b20d1 <kernel_end+0x20960d9>
     dc3:	0e                   	(bad)  
     dc4:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
     dc6:	11 01                	adc    DWORD PTR [rcx],eax
     dc8:	12 07                	adc    al,BYTE PTR [rdi]
     dca:	10 17                	adc    BYTE PTR [rdi],dl
     dcc:	00 00                	add    BYTE PTR [rax],al
     dce:	02 24 00             	add    ah,BYTE PTR [rax+rax*1]
     dd1:	0b 0b                	or     ecx,DWORD PTR [rbx]
     dd3:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
     dd6:	0e                   	(bad)  
     dd7:	00 00                	add    BYTE PTR [rax],al
     dd9:	03 24 00             	add    esp,DWORD PTR [rax+rax*1]
     ddc:	0b 0b                	or     ecx,DWORD PTR [rbx]
     dde:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
     de1:	08 00                	or     BYTE PTR [rax],al
     de3:	00 04 0f             	add    BYTE PTR [rdi+rcx*1],al
     de6:	00 0b                	add    BYTE PTR [rbx],cl
     de8:	0b 00                	or     eax,DWORD PTR [rax]
     dea:	00 05 16 00 03 0e    	add    BYTE PTR [rip+0xe030016],al        # e030e06 <kernel_end+0xd014e0e>
     df0:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     df2:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     df4:	49 13 00             	adc    rax,QWORD PTR [r8]
     df7:	00 06                	add    BYTE PTR [rsi],al
     df9:	2e 01 3f             	add    DWORD PTR cs:[rdi],edi
     dfc:	19 03                	sbb    DWORD PTR [rbx],eax
     dfe:	0e                   	(bad)  
     dff:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     e01:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     e03:	27                   	(bad)  
     e04:	19 11                	sbb    DWORD PTR [rcx],edx
     e06:	01 12                	add    DWORD PTR [rdx],edx
     e08:	07                   	(bad)  
     e09:	40 18 97 42 19 01 13 	sbb    BYTE PTR [rdi+0x13011942],dl
     e10:	00 00                	add    BYTE PTR [rax],al
     e12:	07                   	(bad)  
     e13:	05 00 03 0e 3a       	add    eax,0x3a0e0300
     e18:	0b 3b                	or     edi,DWORD PTR [rbx]
     e1a:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     e1d:	02 18                	add    bl,BYTE PTR [rax]
     e1f:	00 00                	add    BYTE PTR [rax],al
     e21:	08 34 00             	or     BYTE PTR [rax+rax*1],dh
     e24:	03 0e                	add    ecx,DWORD PTR [rsi]
     e26:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     e28:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     e2a:	49 13 02             	adc    rax,QWORD PTR [r10]
     e2d:	18 00                	sbb    BYTE PTR [rax],al
     e2f:	00 09                	add    BYTE PTR [rcx],cl
     e31:	26 00 49 13          	add    BYTE PTR es:[rcx+0x13],cl
     e35:	00 00                	add    BYTE PTR [rax],al
     e37:	0a 05 00 03 08 3a    	or     al,BYTE PTR [rip+0x3a080300]        # 3a08113d <MULTIBOOT_LOADED_MAGIC+0x330aeb4>
     e3d:	0b 3b                	or     edi,DWORD PTR [rbx]
     e3f:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     e42:	02 18                	add    bl,BYTE PTR [rax]
     e44:	00 00                	add    BYTE PTR [rax],al
     e46:	0b 2e                	or     ebp,DWORD PTR [rsi]
     e48:	01 3f                	add    DWORD PTR [rdi],edi
     e4a:	19 03                	sbb    DWORD PTR [rbx],eax
     e4c:	0e                   	(bad)  
     e4d:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     e4f:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     e51:	27                   	(bad)  
     e52:	19 49 13             	sbb    DWORD PTR [rcx+0x13],ecx
     e55:	11 01                	adc    DWORD PTR [rcx],eax
     e57:	12 07                	adc    al,BYTE PTR [rdi]
     e59:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
     e60:	00 00                	add    BYTE PTR [rax],al
     e62:	0c 2e                	or     al,0x2e
     e64:	01 3f                	add    DWORD PTR [rdi],edi
     e66:	19 03                	sbb    DWORD PTR [rbx],eax
     e68:	0e                   	(bad)  
     e69:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     e6b:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     e6d:	27                   	(bad)  
     e6e:	19 11                	sbb    DWORD PTR [rcx],edx
     e70:	01 12                	add    DWORD PTR [rdx],edx
     e72:	07                   	(bad)  
     e73:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
     e7a:	00 00                	add    BYTE PTR [rax],al
     e7c:	0d 2e 00 3f 19       	or     eax,0x193f002e
     e81:	03 0e                	add    ecx,DWORD PTR [rsi]
     e83:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     e85:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     e87:	11 01                	adc    DWORD PTR [rcx],eax
     e89:	12 07                	adc    al,BYTE PTR [rdi]
     e8b:	40 18 96 42 19 00 00 	sbb    BYTE PTR [rsi+0x1942],dl
     e92:	0e                   	(bad)  
     e93:	01 01                	add    DWORD PTR [rcx],eax
     e95:	49 13 01             	adc    rax,QWORD PTR [r9]
     e98:	13 00                	adc    eax,DWORD PTR [rax]
     e9a:	00 0f                	add    BYTE PTR [rdi],cl
     e9c:	21 00                	and    DWORD PTR [rax],eax
     e9e:	49 13 2f             	adc    rbp,QWORD PTR [r15]
     ea1:	05 00 00 10 34       	add    eax,0x34100000
     ea6:	00 03                	add    BYTE PTR [rbx],al
     ea8:	0e                   	(bad)  
     ea9:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     eab:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     ead:	49 13 3f             	adc    rdi,QWORD PTR [r15]
     eb0:	19 02                	sbb    DWORD PTR [rdx],eax
     eb2:	18 00                	sbb    BYTE PTR [rax],al
     eb4:	00 00                	add    BYTE PTR [rax],al
     eb6:	01 11                	add    DWORD PTR [rcx],edx
     eb8:	01 25 0e 13 0b 03    	add    DWORD PTR [rip+0x30b130e],esp        # 30b21cc <kernel_end+0x20961d4>
     ebe:	0e                   	(bad)  
     ebf:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
     ec1:	10 17                	adc    BYTE PTR [rdi],dl
     ec3:	00 00                	add    BYTE PTR [rax],al
     ec5:	02 24 00             	add    ah,BYTE PTR [rax+rax*1]
     ec8:	0b 0b                	or     ecx,DWORD PTR [rbx]
     eca:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
     ecd:	0e                   	(bad)  
     ece:	00 00                	add    BYTE PTR [rax],al
     ed0:	03 24 00             	add    esp,DWORD PTR [rax+rax*1]
     ed3:	0b 0b                	or     ecx,DWORD PTR [rbx]
     ed5:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
     ed8:	08 00                	or     BYTE PTR [rax],al
     eda:	00 04 16             	add    BYTE PTR [rsi+rdx*1],al
     edd:	00 03                	add    BYTE PTR [rbx],al
     edf:	0e                   	(bad)  
     ee0:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     ee2:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     ee4:	49 13 00             	adc    rax,QWORD PTR [r8]
     ee7:	00 05 13 01 0b 0b    	add    BYTE PTR [rip+0xb0b0113],al        # b0b1000 <kernel_end+0xa095008>
     eed:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     eef:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     ef1:	01 13                	add    DWORD PTR [rbx],edx
     ef3:	00 00                	add    BYTE PTR [rax],al
     ef5:	06                   	(bad)  
     ef6:	0d 00 03 0e 3a       	or     eax,0x3a0e0300
     efb:	0b 3b                	or     edi,DWORD PTR [rbx]
     efd:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     f00:	38 0b                	cmp    BYTE PTR [rbx],cl
     f02:	00 00                	add    BYTE PTR [rax],al
     f04:	07                   	(bad)  
     f05:	01 01                	add    DWORD PTR [rcx],eax
     f07:	49 13 01             	adc    rax,QWORD PTR [r9]
     f0a:	13 00                	adc    eax,DWORD PTR [rax]
     f0c:	00 08                	add    BYTE PTR [rax],cl
     f0e:	21 00                	and    DWORD PTR [rax],eax
     f10:	49 13 2f             	adc    rbp,QWORD PTR [r15]
     f13:	0b 00                	or     eax,DWORD PTR [rax]
     f15:	00 09                	add    BYTE PTR [rcx],cl
     f17:	34 00                	xor    al,0x0
     f19:	03 0e                	add    ecx,DWORD PTR [rsi]
     f1b:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     f1d:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     f1f:	49 13 3f             	adc    rdi,QWORD PTR [r15]
     f22:	19 02                	sbb    DWORD PTR [rdx],eax
     f24:	18 00                	sbb    BYTE PTR [rax],al
     f26:	00 0a                	add    BYTE PTR [rdx],cl
     f28:	21 00                	and    DWORD PTR [rax],eax
     f2a:	49 13 2f             	adc    rbp,QWORD PTR [r15]
     f2d:	05 00 00 0b 0f       	add    eax,0xf0b0000
     f32:	00 0b                	add    BYTE PTR [rbx],cl
     f34:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     f37:	00 00                	add    BYTE PTR [rax],al
     f39:	0c 15                	or     al,0x15
     f3b:	01 27                	add    DWORD PTR [rdi],esp
     f3d:	19 01                	sbb    DWORD PTR [rcx],eax
     f3f:	13 00                	adc    eax,DWORD PTR [rax]
     f41:	00 0d 05 00 49 13    	add    BYTE PTR [rip+0x13490005],cl        # 13490f4c <kernel_end+0x12474f54>
     f47:	00 00                	add    BYTE PTR [rax],al
     f49:	00 01                	add    BYTE PTR [rcx],al
     f4b:	11 01                	adc    DWORD PTR [rcx],eax
     f4d:	25 0e 13 0b 03       	and    eax,0x30b130e
     f52:	0e                   	(bad)  
     f53:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
     f55:	11 01                	adc    DWORD PTR [rcx],eax
     f57:	12 07                	adc    al,BYTE PTR [rdi]
     f59:	10 17                	adc    BYTE PTR [rdi],dl
     f5b:	00 00                	add    BYTE PTR [rax],al
     f5d:	02 24 00             	add    ah,BYTE PTR [rax+rax*1]
     f60:	0b 0b                	or     ecx,DWORD PTR [rbx]
     f62:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
     f65:	0e                   	(bad)  
     f66:	00 00                	add    BYTE PTR [rax],al
     f68:	03 24 00             	add    esp,DWORD PTR [rax+rax*1]
     f6b:	0b 0b                	or     ecx,DWORD PTR [rbx]
     f6d:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
     f70:	08 00                	or     BYTE PTR [rax],al
     f72:	00 04 16             	add    BYTE PTR [rsi+rdx*1],al
     f75:	00 03                	add    BYTE PTR [rbx],al
     f77:	0e                   	(bad)  
     f78:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     f7a:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     f7c:	49 13 00             	adc    rax,QWORD PTR [r8]
     f7f:	00 05 13 01 03 0e    	add    BYTE PTR [rip+0xe030113],al        # e031098 <kernel_end+0xd0150a0>
     f85:	0b 0b                	or     ecx,DWORD PTR [rbx]
     f87:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     f89:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     f8b:	01 13                	add    DWORD PTR [rbx],edx
     f8d:	00 00                	add    BYTE PTR [rax],al
     f8f:	06                   	(bad)  
     f90:	0d 00 03 0e 3a       	or     eax,0x3a0e0300
     f95:	0b 3b                	or     edi,DWORD PTR [rbx]
     f97:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     f9a:	38 0b                	cmp    BYTE PTR [rbx],cl
     f9c:	00 00                	add    BYTE PTR [rax],al
     f9e:	07                   	(bad)  
     f9f:	0d 00 03 08 3a       	or     eax,0x3a080300
     fa4:	0b 3b                	or     edi,DWORD PTR [rbx]
     fa6:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     fa9:	38 0b                	cmp    BYTE PTR [rbx],cl
     fab:	00 00                	add    BYTE PTR [rax],al
     fad:	08 0f                	or     BYTE PTR [rdi],cl
     faf:	00 0b                	add    BYTE PTR [rbx],cl
     fb1:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     fb4:	00 00                	add    BYTE PTR [rax],al
     fb6:	09 13                	or     DWORD PTR [rbx],edx
     fb8:	01 0b                	add    DWORD PTR [rbx],ecx
     fba:	0b 3a                	or     edi,DWORD PTR [rdx]
     fbc:	0b 3b                	or     edi,DWORD PTR [rbx]
     fbe:	0b 01                	or     eax,DWORD PTR [rcx]
     fc0:	13 00                	adc    eax,DWORD PTR [rax]
     fc2:	00 0a                	add    BYTE PTR [rdx],cl
     fc4:	01 01                	add    DWORD PTR [rcx],eax
     fc6:	49 13 01             	adc    rax,QWORD PTR [r9]
     fc9:	13 00                	adc    eax,DWORD PTR [rax]
     fcb:	00 0b                	add    BYTE PTR [rbx],cl
     fcd:	21 00                	and    DWORD PTR [rax],eax
     fcf:	49 13 2f             	adc    rbp,QWORD PTR [r15]
     fd2:	0b 00                	or     eax,DWORD PTR [rax]
     fd4:	00 0c 2e             	add    BYTE PTR [rsi+rbp*1],cl
     fd7:	01 03                	add    DWORD PTR [rbx],eax
     fd9:	0e                   	(bad)  
     fda:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     fdc:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     fde:	27                   	(bad)  
     fdf:	19 49 13             	sbb    DWORD PTR [rcx+0x13],ecx
     fe2:	11 01                	adc    DWORD PTR [rcx],eax
     fe4:	12 07                	adc    al,BYTE PTR [rdi]
     fe6:	40 18 97 42 19 01 13 	sbb    BYTE PTR [rdi+0x13011942],dl
     fed:	00 00                	add    BYTE PTR [rax],al
     fef:	0d 05 00 03 08       	or     eax,0x8030005
     ff4:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     ff6:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     ff8:	49 13 02             	adc    rax,QWORD PTR [r10]
     ffb:	18 00                	sbb    BYTE PTR [rax],al
     ffd:	00 0e                	add    BYTE PTR [rsi],cl
     fff:	05 00 03 0e 3a       	add    eax,0x3a0e0300
    1004:	0b 3b                	or     edi,DWORD PTR [rbx]
    1006:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    1009:	02 18                	add    bl,BYTE PTR [rax]
    100b:	00 00                	add    BYTE PTR [rax],al
    100d:	0f 2e 01             	ucomiss xmm0,DWORD PTR [rcx]
    1010:	03 0e                	add    ecx,DWORD PTR [rsi]
    1012:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1014:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1016:	27                   	(bad)  
    1017:	19 11                	sbb    DWORD PTR [rcx],edx
    1019:	01 12                	add    DWORD PTR [rdx],edx
    101b:	07                   	(bad)  
    101c:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
    1023:	00 00                	add    BYTE PTR [rax],al
    1025:	10 34 00             	adc    BYTE PTR [rax+rax*1],dh
    1028:	03 08                	add    ecx,DWORD PTR [rax]
    102a:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    102c:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    102e:	49 13 02             	adc    rax,QWORD PTR [r10]
    1031:	18 00                	sbb    BYTE PTR [rax],al
    1033:	00 11                	add    BYTE PTR [rcx],dl
    1035:	2e 00 03             	add    BYTE PTR cs:[rbx],al
    1038:	0e                   	(bad)  
    1039:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    103b:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    103d:	11 01                	adc    DWORD PTR [rcx],eax
    103f:	12 07                	adc    al,BYTE PTR [rdi]
    1041:	40 18 96 42 19 00 00 	sbb    BYTE PTR [rsi+0x1942],dl
    1048:	12 2e                	adc    ch,BYTE PTR [rsi]
    104a:	01 3f                	add    DWORD PTR [rdi],edi
    104c:	19 03                	sbb    DWORD PTR [rbx],eax
    104e:	0e                   	(bad)  
    104f:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1051:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1053:	27                   	(bad)  
    1054:	19 49 13             	sbb    DWORD PTR [rcx+0x13],ecx
    1057:	11 01                	adc    DWORD PTR [rcx],eax
    1059:	12 07                	adc    al,BYTE PTR [rdi]
    105b:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
    1062:	00 00                	add    BYTE PTR [rax],al
    1064:	13 34 00             	adc    esi,DWORD PTR [rax+rax*1]
    1067:	03 0e                	add    ecx,DWORD PTR [rsi]
    1069:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    106b:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    106d:	49 13 02             	adc    rax,QWORD PTR [r10]
    1070:	18 00                	sbb    BYTE PTR [rax],al
    1072:	00 14 34             	add    BYTE PTR [rsp+rsi*1],dl
    1075:	00 03                	add    BYTE PTR [rbx],al
    1077:	0e                   	(bad)  
    1078:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    107a:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    107c:	49 13 3f             	adc    rdi,QWORD PTR [r15]
    107f:	19 02                	sbb    DWORD PTR [rdx],eax
    1081:	18 00                	sbb    BYTE PTR [rax],al
    1083:	00 15 21 00 00 00    	add    BYTE PTR [rip+0x21],dl        # 10aa <MULTIBOOT_HEADER_SIZE+0x1052>
    1089:	16                   	(bad)  
    108a:	34 00                	xor    al,0x0
    108c:	03 0e                	add    ecx,DWORD PTR [rsi]
    108e:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1090:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1092:	49 13 3f             	adc    rdi,QWORD PTR [r15]
    1095:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
    1098:	00 00                	add    BYTE PTR [rax],al
    109a:	00 01                	add    BYTE PTR [rcx],al
    109c:	11 01                	adc    DWORD PTR [rcx],eax
    109e:	25 0e 13 0b 03       	and    eax,0x30b130e
    10a3:	0e                   	(bad)  
    10a4:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
    10a6:	11 01                	adc    DWORD PTR [rcx],eax
    10a8:	12 07                	adc    al,BYTE PTR [rdi]
    10aa:	10 17                	adc    BYTE PTR [rdi],dl
    10ac:	00 00                	add    BYTE PTR [rax],al
    10ae:	02 24 00             	add    ah,BYTE PTR [rax+rax*1]
    10b1:	0b 0b                	or     ecx,DWORD PTR [rbx]
    10b3:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
    10b6:	0e                   	(bad)  
    10b7:	00 00                	add    BYTE PTR [rax],al
    10b9:	03 24 00             	add    esp,DWORD PTR [rax+rax*1]
    10bc:	0b 0b                	or     ecx,DWORD PTR [rbx]
    10be:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
    10c1:	08 00                	or     BYTE PTR [rax],al
    10c3:	00 04 16             	add    BYTE PTR [rsi+rdx*1],al
    10c6:	00 03                	add    BYTE PTR [rbx],al
    10c8:	0e                   	(bad)  
    10c9:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    10cb:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    10cd:	00 00                	add    BYTE PTR [rax],al
    10cf:	05 16 00 03 0e       	add    eax,0xe030016
    10d4:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    10d6:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    10d8:	49 13 00             	adc    rax,QWORD PTR [r8]
    10db:	00 06                	add    BYTE PTR [rsi],al
    10dd:	2e 00 3f             	add    BYTE PTR cs:[rdi],bh
    10e0:	19 03                	sbb    DWORD PTR [rbx],eax
    10e2:	0e                   	(bad)  
    10e3:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    10e5:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    10e7:	11 01                	adc    DWORD PTR [rcx],eax
    10e9:	12 07                	adc    al,BYTE PTR [rdi]
    10eb:	40 18 96 42 19 00 00 	sbb    BYTE PTR [rsi+0x1942],dl
    10f2:	07                   	(bad)  
    10f3:	2e 01 3f             	add    DWORD PTR cs:[rdi],edi
    10f6:	19 03                	sbb    DWORD PTR [rbx],eax
    10f8:	0e                   	(bad)  
    10f9:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    10fb:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    10fd:	27                   	(bad)  
    10fe:	19 11                	sbb    DWORD PTR [rcx],edx
    1100:	01 12                	add    DWORD PTR [rdx],edx
    1102:	07                   	(bad)  
    1103:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
    110a:	00 00                	add    BYTE PTR [rax],al
    110c:	08 05 00 03 08 3a    	or     BYTE PTR [rip+0x3a080300],al        # 3a081412 <MULTIBOOT_LOADED_MAGIC+0x330b189>
    1112:	0b 3b                	or     edi,DWORD PTR [rbx]
    1114:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    1117:	02 18                	add    bl,BYTE PTR [rax]
    1119:	00 00                	add    BYTE PTR [rax],al
    111b:	09 0f                	or     DWORD PTR [rdi],ecx
    111d:	00 0b                	add    BYTE PTR [rbx],cl
    111f:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    1122:	00 00                	add    BYTE PTR [rax],al
    1124:	0a 26                	or     ah,BYTE PTR [rsi]
    1126:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
    1129:	00 00                	add    BYTE PTR [rax],al
    112b:	0b 05 00 03 0e 3a    	or     eax,DWORD PTR [rip+0x3a0e0300]        # 3a0e1431 <MULTIBOOT_LOADED_MAGIC+0x336b1a8>
    1131:	0b 3b                	or     edi,DWORD PTR [rbx]
    1133:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    1136:	02 18                	add    bl,BYTE PTR [rax]
    1138:	00 00                	add    BYTE PTR [rax],al
    113a:	0c 34                	or     al,0x34
    113c:	00 03                	add    BYTE PTR [rbx],al
    113e:	08 3a                	or     BYTE PTR [rdx],bh
    1140:	0b 3b                	or     edi,DWORD PTR [rbx]
    1142:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    1145:	02 18                	add    bl,BYTE PTR [rax]
    1147:	00 00                	add    BYTE PTR [rax],al
    1149:	0d 34 00 03 0e       	or     eax,0xe030034
    114e:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1150:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1152:	49 13 02             	adc    rax,QWORD PTR [r10]
    1155:	18 00                	sbb    BYTE PTR [rax],al
    1157:	00 0e                	add    BYTE PTR [rsi],cl
    1159:	0b 01                	or     eax,DWORD PTR [rcx]
    115b:	55                   	push   rbp
    115c:	17                   	(bad)  
    115d:	00 00                	add    BYTE PTR [rax],al
    115f:	0f 01 01             	sgdt   [rcx]
    1162:	49 13 01             	adc    rax,QWORD PTR [r9]
    1165:	13 00                	adc    eax,DWORD PTR [rax]
    1167:	00 10                	add    BYTE PTR [rax],dl
    1169:	21 00                	and    DWORD PTR [rax],eax
    116b:	49 13 2f             	adc    rbp,QWORD PTR [r15]
    116e:	0b 00                	or     eax,DWORD PTR [rax]
    1170:	00 11                	add    BYTE PTR [rcx],dl
    1172:	2e 00 3f             	add    BYTE PTR cs:[rdi],bh
    1175:	19 03                	sbb    DWORD PTR [rbx],eax
    1177:	0e                   	(bad)  
    1178:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    117a:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    117c:	27                   	(bad)  
    117d:	19 11                	sbb    DWORD PTR [rcx],edx
    117f:	01 12                	add    DWORD PTR [rdx],edx
    1181:	07                   	(bad)  
    1182:	40 18 96 42 19 00 00 	sbb    BYTE PTR [rsi+0x1942],dl
    1189:	12 18                	adc    bl,BYTE PTR [rax]
    118b:	00 00                	add    BYTE PTR [rax],al
    118d:	00 13                	add    BYTE PTR [rbx],dl
    118f:	34 00                	xor    al,0x0
    1191:	03 0e                	add    ecx,DWORD PTR [rsi]
    1193:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1195:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1197:	49 13 3f             	adc    rdi,QWORD PTR [r15]
    119a:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
    119d:	00 00                	add    BYTE PTR [rax],al
    119f:	00 01                	add    BYTE PTR [rcx],al
    11a1:	11 01                	adc    DWORD PTR [rcx],eax
    11a3:	25 0e 13 0b 03       	and    eax,0x30b130e
    11a8:	0e                   	(bad)  
    11a9:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
    11ab:	10 17                	adc    BYTE PTR [rdi],dl
    11ad:	00 00                	add    BYTE PTR [rax],al
    11af:	02 24 00             	add    ah,BYTE PTR [rax+rax*1]
    11b2:	0b 0b                	or     ecx,DWORD PTR [rbx]
    11b4:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
    11b7:	0e                   	(bad)  
    11b8:	00 00                	add    BYTE PTR [rax],al
    11ba:	03 24 00             	add    esp,DWORD PTR [rax+rax*1]
    11bd:	0b 0b                	or     ecx,DWORD PTR [rbx]
    11bf:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
    11c2:	08 00                	or     BYTE PTR [rax],al
    11c4:	00 00                	add    BYTE PTR [rax],al
    11c6:	01 11                	add    DWORD PTR [rcx],edx
    11c8:	01 25 0e 13 0b 03    	add    DWORD PTR [rip+0x30b130e],esp        # 30b24dc <kernel_end+0x20964e4>
    11ce:	0e                   	(bad)  
    11cf:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
    11d1:	11 01                	adc    DWORD PTR [rcx],eax
    11d3:	12 07                	adc    al,BYTE PTR [rdi]
    11d5:	10 17                	adc    BYTE PTR [rdi],dl
    11d7:	00 00                	add    BYTE PTR [rax],al
    11d9:	02 24 00             	add    ah,BYTE PTR [rax+rax*1]
    11dc:	0b 0b                	or     ecx,DWORD PTR [rbx]
    11de:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
    11e1:	0e                   	(bad)  
    11e2:	00 00                	add    BYTE PTR [rax],al
    11e4:	03 24 00             	add    esp,DWORD PTR [rax+rax*1]
    11e7:	0b 0b                	or     ecx,DWORD PTR [rbx]
    11e9:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
    11ec:	08 00                	or     BYTE PTR [rax],al
    11ee:	00 04 16             	add    BYTE PTR [rsi+rdx*1],al
    11f1:	00 03                	add    BYTE PTR [rbx],al
    11f3:	0e                   	(bad)  
    11f4:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    11f6:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    11f8:	49 13 00             	adc    rax,QWORD PTR [r8]
    11fb:	00 05 13 01 0b 0b    	add    BYTE PTR [rip+0xb0b0113],al        # b0b1314 <kernel_end+0xa09531c>
    1201:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1203:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1205:	01 13                	add    DWORD PTR [rbx],edx
    1207:	00 00                	add    BYTE PTR [rax],al
    1209:	06                   	(bad)  
    120a:	0d 00 03 08 3a       	or     eax,0x3a080300
    120f:	0b 3b                	or     edi,DWORD PTR [rbx]
    1211:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    1214:	38 0b                	cmp    BYTE PTR [rbx],cl
    1216:	00 00                	add    BYTE PTR [rax],al
    1218:	07                   	(bad)  
    1219:	2e 01 3f             	add    DWORD PTR cs:[rdi],edi
    121c:	19 03                	sbb    DWORD PTR [rbx],eax
    121e:	0e                   	(bad)  
    121f:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1221:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1223:	27                   	(bad)  
    1224:	19 11                	sbb    DWORD PTR [rcx],edx
    1226:	01 12                	add    DWORD PTR [rdx],edx
    1228:	07                   	(bad)  
    1229:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
    1230:	00 00                	add    BYTE PTR [rax],al
    1232:	08 05 00 03 0e 3a    	or     BYTE PTR [rip+0x3a0e0300],al        # 3a0e1538 <MULTIBOOT_LOADED_MAGIC+0x336b2af>
    1238:	0b 3b                	or     edi,DWORD PTR [rbx]
    123a:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    123d:	02 18                	add    bl,BYTE PTR [rax]
    123f:	00 00                	add    BYTE PTR [rax],al
    1241:	09 0f                	or     DWORD PTR [rdi],ecx
    1243:	00 0b                	add    BYTE PTR [rbx],cl
    1245:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    1248:	00 00                	add    BYTE PTR [rax],al
    124a:	0a 2e                	or     ch,BYTE PTR [rsi]
    124c:	01 3f                	add    DWORD PTR [rdi],edi
    124e:	19 03                	sbb    DWORD PTR [rbx],eax
    1250:	0e                   	(bad)  
    1251:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1253:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1255:	27                   	(bad)  
    1256:	19 11                	sbb    DWORD PTR [rcx],edx
    1258:	01 12                	add    DWORD PTR [rdx],edx
    125a:	07                   	(bad)  
    125b:	40 18 97 42 19 00 00 	sbb    BYTE PTR [rdi+0x1942],dl
    1262:	00 01                	add    BYTE PTR [rcx],al
    1264:	11 01                	adc    DWORD PTR [rcx],eax
    1266:	25 0e 13 0b 03       	and    eax,0x30b130e
    126b:	0e                   	(bad)  
    126c:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
    126e:	11 01                	adc    DWORD PTR [rcx],eax
    1270:	12 07                	adc    al,BYTE PTR [rdi]
    1272:	10 17                	adc    BYTE PTR [rdi],dl
    1274:	00 00                	add    BYTE PTR [rax],al
    1276:	02 24 00             	add    ah,BYTE PTR [rax+rax*1]
    1279:	0b 0b                	or     ecx,DWORD PTR [rbx]
    127b:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
    127e:	0e                   	(bad)  
    127f:	00 00                	add    BYTE PTR [rax],al
    1281:	03 24 00             	add    esp,DWORD PTR [rax+rax*1]
    1284:	0b 0b                	or     ecx,DWORD PTR [rbx]
    1286:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
    1289:	08 00                	or     BYTE PTR [rax],al
    128b:	00 04 16             	add    BYTE PTR [rsi+rdx*1],al
    128e:	00 03                	add    BYTE PTR [rbx],al
    1290:	0e                   	(bad)  
    1291:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1293:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1295:	49 13 00             	adc    rax,QWORD PTR [r8]
    1298:	00 05 0f 00 0b 0b    	add    BYTE PTR [rip+0xb0b000f],al        # b0b12ad <kernel_end+0xa0952b5>
    129e:	00 00                	add    BYTE PTR [rax],al
    12a0:	06                   	(bad)  
    12a1:	13 01                	adc    eax,DWORD PTR [rcx]
    12a3:	03 0e                	add    ecx,DWORD PTR [rsi]
    12a5:	0b 0b                	or     ecx,DWORD PTR [rbx]
    12a7:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    12a9:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    12ab:	01 13                	add    DWORD PTR [rbx],edx
    12ad:	00 00                	add    BYTE PTR [rax],al
    12af:	07                   	(bad)  
    12b0:	0d 00 03 0e 3a       	or     eax,0x3a0e0300
    12b5:	0b 3b                	or     edi,DWORD PTR [rbx]
    12b7:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    12ba:	38 0b                	cmp    BYTE PTR [rbx],cl
    12bc:	00 00                	add    BYTE PTR [rax],al
    12be:	08 0f                	or     BYTE PTR [rdi],cl
    12c0:	00 0b                	add    BYTE PTR [rbx],cl
    12c2:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    12c5:	00 00                	add    BYTE PTR [rax],al
    12c7:	09 13                	or     DWORD PTR [rbx],edx
    12c9:	01 0b                	add    DWORD PTR [rbx],ecx
    12cb:	0b 3a                	or     edi,DWORD PTR [rdx]
    12cd:	0b 3b                	or     edi,DWORD PTR [rbx]
    12cf:	0b 01                	or     eax,DWORD PTR [rcx]
    12d1:	13 00                	adc    eax,DWORD PTR [rax]
    12d3:	00 0a                	add    BYTE PTR [rdx],cl
    12d5:	01 01                	add    DWORD PTR [rcx],eax
    12d7:	49 13 01             	adc    rax,QWORD PTR [r9]
    12da:	13 00                	adc    eax,DWORD PTR [rax]
    12dc:	00 0b                	add    BYTE PTR [rbx],cl
    12de:	21 00                	and    DWORD PTR [rax],eax
    12e0:	49 13 2f             	adc    rbp,QWORD PTR [r15]
    12e3:	0b 00                	or     eax,DWORD PTR [rax]
    12e5:	00 0c 2e             	add    BYTE PTR [rsi+rbp*1],cl
    12e8:	01 3f                	add    DWORD PTR [rdi],edi
    12ea:	19 03                	sbb    DWORD PTR [rbx],eax
    12ec:	0e                   	(bad)  
    12ed:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    12ef:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    12f1:	27                   	(bad)  
    12f2:	19 11                	sbb    DWORD PTR [rcx],edx
    12f4:	01 12                	add    DWORD PTR [rdx],edx
    12f6:	07                   	(bad)  
    12f7:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
    12fe:	00 00                	add    BYTE PTR [rax],al
    1300:	0d 05 00 03 0e       	or     eax,0xe030005
    1305:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1307:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1309:	49 13 02             	adc    rax,QWORD PTR [r10]
    130c:	18 00                	sbb    BYTE PTR [rax],al
    130e:	00 0e                	add    BYTE PTR [rsi],cl
    1310:	34 00                	xor    al,0x0
    1312:	03 0e                	add    ecx,DWORD PTR [rsi]
    1314:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1316:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1318:	49 13 02             	adc    rax,QWORD PTR [r10]
    131b:	18 00                	sbb    BYTE PTR [rax],al
    131d:	00 0f                	add    BYTE PTR [rdi],cl
    131f:	0b 01                	or     eax,DWORD PTR [rcx]
    1321:	11 01                	adc    DWORD PTR [rcx],eax
    1323:	12 07                	adc    al,BYTE PTR [rdi]
    1325:	01 13                	add    DWORD PTR [rbx],edx
    1327:	00 00                	add    BYTE PTR [rax],al
    1329:	10 34 00             	adc    BYTE PTR [rax+rax*1],dh
    132c:	03 08                	add    ecx,DWORD PTR [rax]
    132e:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1330:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1332:	49 13 02             	adc    rax,QWORD PTR [r10]
    1335:	18 00                	sbb    BYTE PTR [rax],al
    1337:	00 11                	add    BYTE PTR [rcx],dl
    1339:	0b 01                	or     eax,DWORD PTR [rcx]
    133b:	11 01                	adc    DWORD PTR [rcx],eax
    133d:	12 07                	adc    al,BYTE PTR [rdi]
    133f:	00 00                	add    BYTE PTR [rax],al
    1341:	12 21                	adc    ah,BYTE PTR [rcx]
    1343:	00 00                	add    BYTE PTR [rax],al
    1345:	00 13                	add    BYTE PTR [rbx],dl
    1347:	34 00                	xor    al,0x0
    1349:	03 0e                	add    ecx,DWORD PTR [rsi]
    134b:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    134d:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    134f:	49 13 3f             	adc    rdi,QWORD PTR [r15]
    1352:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
    1355:	00 00                	add    BYTE PTR [rax],al
    1357:	00 01                	add    BYTE PTR [rcx],al
    1359:	11 01                	adc    DWORD PTR [rcx],eax
    135b:	25 0e 13 0b 03       	and    eax,0x30b130e
    1360:	0e                   	(bad)  
    1361:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
    1363:	11 01                	adc    DWORD PTR [rcx],eax
    1365:	12 07                	adc    al,BYTE PTR [rdi]
    1367:	10 17                	adc    BYTE PTR [rdi],dl
    1369:	00 00                	add    BYTE PTR [rax],al
    136b:	02 24 00             	add    ah,BYTE PTR [rax+rax*1]
    136e:	0b 0b                	or     ecx,DWORD PTR [rbx]
    1370:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
    1373:	0e                   	(bad)  
    1374:	00 00                	add    BYTE PTR [rax],al
    1376:	03 24 00             	add    esp,DWORD PTR [rax+rax*1]
    1379:	0b 0b                	or     ecx,DWORD PTR [rbx]
    137b:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
    137e:	08 00                	or     BYTE PTR [rax],al
    1380:	00 04 0f             	add    BYTE PTR [rdi+rcx*1],al
    1383:	00 0b                	add    BYTE PTR [rbx],cl
    1385:	0b 00                	or     eax,DWORD PTR [rax]
    1387:	00 05 16 00 03 0e    	add    BYTE PTR [rip+0xe030016],al        # e0313a3 <kernel_end+0xd0153ab>
    138d:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    138f:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1391:	49 13 00             	adc    rax,QWORD PTR [r8]
    1394:	00 06                	add    BYTE PTR [rsi],al
    1396:	13 01                	adc    eax,DWORD PTR [rcx]
    1398:	03 0e                	add    ecx,DWORD PTR [rsi]
    139a:	0b 0b                	or     ecx,DWORD PTR [rbx]
    139c:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    139e:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    13a0:	01 13                	add    DWORD PTR [rbx],edx
    13a2:	00 00                	add    BYTE PTR [rax],al
    13a4:	07                   	(bad)  
    13a5:	0d 00 03 0e 3a       	or     eax,0x3a0e0300
    13aa:	0b 3b                	or     edi,DWORD PTR [rbx]
    13ac:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    13af:	38 0b                	cmp    BYTE PTR [rbx],cl
    13b1:	00 00                	add    BYTE PTR [rax],al
    13b3:	08 0f                	or     BYTE PTR [rdi],cl
    13b5:	00 0b                	add    BYTE PTR [rbx],cl
    13b7:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    13ba:	00 00                	add    BYTE PTR [rax],al
    13bc:	09 13                	or     DWORD PTR [rbx],edx
    13be:	01 0b                	add    DWORD PTR [rbx],ecx
    13c0:	0b 3a                	or     edi,DWORD PTR [rdx]
    13c2:	0b 3b                	or     edi,DWORD PTR [rbx]
    13c4:	0b 01                	or     eax,DWORD PTR [rcx]
    13c6:	13 00                	adc    eax,DWORD PTR [rax]
    13c8:	00 0a                	add    BYTE PTR [rdx],cl
    13ca:	2e 01 3f             	add    DWORD PTR cs:[rdi],edi
    13cd:	19 03                	sbb    DWORD PTR [rbx],eax
    13cf:	0e                   	(bad)  
    13d0:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    13d2:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    13d4:	27                   	(bad)  
    13d5:	19 11                	sbb    DWORD PTR [rcx],edx
    13d7:	01 12                	add    DWORD PTR [rdx],edx
    13d9:	07                   	(bad)  
    13da:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
    13e1:	00 00                	add    BYTE PTR [rax],al
    13e3:	0b 05 00 03 0e 3a    	or     eax,DWORD PTR [rip+0x3a0e0300]        # 3a0e16e9 <MULTIBOOT_LOADED_MAGIC+0x336b460>
    13e9:	0b 3b                	or     edi,DWORD PTR [rbx]
    13eb:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    13ee:	02 18                	add    bl,BYTE PTR [rax]
    13f0:	00 00                	add    BYTE PTR [rax],al
    13f2:	0c 0b                	or     al,0xb
    13f4:	01 11                	add    DWORD PTR [rcx],edx
    13f6:	01 12                	add    DWORD PTR [rdx],edx
    13f8:	07                   	(bad)  
    13f9:	00 00                	add    BYTE PTR [rax],al
    13fb:	0d 34 00 03 08       	or     eax,0x8030034
    1400:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1402:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1404:	49 13 02             	adc    rax,QWORD PTR [r10]
    1407:	18 00                	sbb    BYTE PTR [rax],al
    1409:	00 0e                	add    BYTE PTR [rsi],cl
    140b:	34 00                	xor    al,0x0
    140d:	03 0e                	add    ecx,DWORD PTR [rsi]
    140f:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1411:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1413:	49 13 02             	adc    rax,QWORD PTR [r10]
    1416:	18 00                	sbb    BYTE PTR [rax],al
    1418:	00 0f                	add    BYTE PTR [rdi],cl
    141a:	2e 01 3f             	add    DWORD PTR cs:[rdi],edi
    141d:	19 03                	sbb    DWORD PTR [rbx],eax
    141f:	0e                   	(bad)  
    1420:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1422:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1424:	49 13 11             	adc    rdx,QWORD PTR [r9]
    1427:	01 12                	add    DWORD PTR [rdx],edx
    1429:	07                   	(bad)  
    142a:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
    1431:	00 00                	add    BYTE PTR [rax],al
    1433:	10 2e                	adc    BYTE PTR [rsi],ch
    1435:	01 3f                	add    DWORD PTR [rdi],edi
    1437:	19 03                	sbb    DWORD PTR [rbx],eax
    1439:	0e                   	(bad)  
    143a:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    143c:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    143e:	27                   	(bad)  
    143f:	19 11                	sbb    DWORD PTR [rcx],edx
    1441:	01 12                	add    DWORD PTR [rdx],edx
    1443:	07                   	(bad)  
    1444:	40 18 97 42 19 01 13 	sbb    BYTE PTR [rdi+0x13011942],dl
    144b:	00 00                	add    BYTE PTR [rax],al
    144d:	11 34 00             	adc    DWORD PTR [rax+rax*1],esi
    1450:	03 0e                	add    ecx,DWORD PTR [rsi]
    1452:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1454:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1456:	49 13 3f             	adc    rdi,QWORD PTR [r15]
    1459:	19 02                	sbb    DWORD PTR [rdx],eax
    145b:	18 00                	sbb    BYTE PTR [rax],al
    145d:	00 00                	add    BYTE PTR [rax],al
    145f:	01 11                	add    DWORD PTR [rcx],edx
    1461:	01 25 0e 13 0b 03    	add    DWORD PTR [rip+0x30b130e],esp        # 30b2775 <kernel_end+0x209677d>
    1467:	0e                   	(bad)  
    1468:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
    146a:	11 01                	adc    DWORD PTR [rcx],eax
    146c:	12 07                	adc    al,BYTE PTR [rdi]
    146e:	10 17                	adc    BYTE PTR [rdi],dl
    1470:	00 00                	add    BYTE PTR [rax],al
    1472:	02 24 00             	add    ah,BYTE PTR [rax+rax*1]
    1475:	0b 0b                	or     ecx,DWORD PTR [rbx]
    1477:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
    147a:	0e                   	(bad)  
    147b:	00 00                	add    BYTE PTR [rax],al
    147d:	03 24 00             	add    esp,DWORD PTR [rax+rax*1]
    1480:	0b 0b                	or     ecx,DWORD PTR [rbx]
    1482:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
    1485:	08 00                	or     BYTE PTR [rax],al
    1487:	00 04 16             	add    BYTE PTR [rsi+rdx*1],al
    148a:	00 03                	add    BYTE PTR [rbx],al
    148c:	0e                   	(bad)  
    148d:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    148f:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1491:	49 13 00             	adc    rax,QWORD PTR [r8]
    1494:	00 05 2e 01 3f 19    	add    BYTE PTR [rip+0x193f012e],al        # 193f15c8 <kernel_end+0x183d55d0>
    149a:	03 0e                	add    ecx,DWORD PTR [rsi]
    149c:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    149e:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    14a0:	27                   	(bad)  
    14a1:	19 11                	sbb    DWORD PTR [rcx],edx
    14a3:	01 12                	add    DWORD PTR [rdx],edx
    14a5:	07                   	(bad)  
    14a6:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
    14ad:	00 00                	add    BYTE PTR [rax],al
    14af:	06                   	(bad)  
    14b0:	05 00 03 0e 3a       	add    eax,0x3a0e0300
    14b5:	0b 3b                	or     edi,DWORD PTR [rbx]
    14b7:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    14ba:	02 18                	add    bl,BYTE PTR [rax]
    14bc:	00 00                	add    BYTE PTR [rax],al
    14be:	07                   	(bad)  
    14bf:	15 01 27 19 01       	adc    eax,0x1192701
    14c4:	13 00                	adc    eax,DWORD PTR [rax]
    14c6:	00 08                	add    BYTE PTR [rax],cl
    14c8:	05 00 49 13 00       	add    eax,0x134900
    14cd:	00 09                	add    BYTE PTR [rcx],cl
    14cf:	0f 00 0b             	str    WORD PTR [rbx]
    14d2:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    14d5:	00 00                	add    BYTE PTR [rax],al
    14d7:	0a 2e                	or     ch,BYTE PTR [rsi]
    14d9:	00 3f                	add    BYTE PTR [rdi],bh
    14db:	19 03                	sbb    DWORD PTR [rbx],eax
    14dd:	0e                   	(bad)  
    14de:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    14e0:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    14e2:	11 01                	adc    DWORD PTR [rcx],eax
    14e4:	12 07                	adc    al,BYTE PTR [rdi]
    14e6:	40 18 96 42 19 00 00 	sbb    BYTE PTR [rsi+0x1942],dl
	...

Disassembly of section .debug_aranges:

0000000000000000 <.debug_aranges>:
   0:	2c 00                	sub    al,0x0
   2:	00 00                	add    BYTE PTR [rax],al
   4:	02 00                	add    al,BYTE PTR [rax]
   6:	00 00                	add    BYTE PTR [rax],al
   8:	00 00                	add    BYTE PTR [rax],al
   a:	08 00                	or     BYTE PTR [rax],al
   c:	00 00                	add    BYTE PTR [rax],al
   e:	00 00                	add    BYTE PTR [rax],al
  10:	00 60 00             	add    BYTE PTR [rax+0x0],ah
  13:	01 00                	add    DWORD PTR [rax],eax
  15:	00 00                	add    BYTE PTR [rax],al
  17:	00 34 01             	add    BYTE PTR [rcx+rax*1],dh
	...
  2e:	00 00                	add    BYTE PTR [rax],al
  30:	2c 00                	sub    al,0x0
  32:	00 00                	add    BYTE PTR [rax],al
  34:	02 00                	add    al,BYTE PTR [rax]
  36:	95                   	xchg   ebp,eax
  37:	01 00                	add    DWORD PTR [rax],eax
  39:	00 08                	add    BYTE PTR [rax],cl
  3b:	00 00                	add    BYTE PTR [rax],al
  3d:	00 00                	add    BYTE PTR [rax],al
  3f:	00 34 61             	add    BYTE PTR [rcx+riz*2],dh
  42:	00 01                	add    BYTE PTR [rcx],al
  44:	00 00                	add    BYTE PTR [rax],al
  46:	00 00                	add    BYTE PTR [rax],al
  48:	ca 00 00             	retf   0x0
	...
  5f:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
  62:	00 00                	add    BYTE PTR [rax],al
  64:	02 00                	add    al,BYTE PTR [rax]
  66:	b3 02                	mov    bl,0x2
  68:	00 00                	add    BYTE PTR [rax],al
  6a:	08 00                	or     BYTE PTR [rax],al
  6c:	00 00                	add    BYTE PTR [rax],al
  6e:	00 00                	add    BYTE PTR [rax],al
  70:	fe                   	(bad)  
  71:	61                   	(bad)  
  72:	00 01                	add    BYTE PTR [rcx],al
  74:	00 00                	add    BYTE PTR [rax],al
  76:	00 00                	add    BYTE PTR [rax],al
  78:	66 00 00             	data16 add BYTE PTR [rax],al
	...
  8f:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
  92:	00 00                	add    BYTE PTR [rax],al
  94:	02 00                	add    al,BYTE PTR [rax]
  96:	d8 03                	fadd   DWORD PTR [rbx]
  98:	00 00                	add    BYTE PTR [rax],al
  9a:	08 00                	or     BYTE PTR [rax],al
  9c:	00 00                	add    BYTE PTR [rax],al
  9e:	00 00                	add    BYTE PTR [rax],al
  a0:	64 62                	fs (bad) 
  a2:	00 01                	add    BYTE PTR [rcx],al
  a4:	00 00                	add    BYTE PTR [rax],al
  a6:	00 00                	add    BYTE PTR [rax],al
  a8:	64 0f 00 00          	sldt   WORD PTR fs:[rax]
	...
  c0:	2c 00                	sub    al,0x0
  c2:	00 00                	add    BYTE PTR [rax],al
  c4:	02 00                	add    al,BYTE PTR [rax]
  c6:	ab                   	stos   DWORD PTR es:[rdi],eax
  c7:	0b 00                	or     eax,DWORD PTR [rax]
  c9:	00 08                	add    BYTE PTR [rax],cl
  cb:	00 00                	add    BYTE PTR [rax],al
  cd:	00 00                	add    BYTE PTR [rax],al
  cf:	00 c8                	add    al,cl
  d1:	71 00                	jno    d3 <MULTIBOOT_HEADER_SIZE+0x7b>
  d3:	01 00                	add    DWORD PTR [rax],eax
  d5:	00 00                	add    BYTE PTR [rax],al
  d7:	00 88 05 00 00 00    	add    BYTE PTR [rax+0x5],cl
	...
  ed:	00 00                	add    BYTE PTR [rax],al
  ef:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
  f2:	00 00                	add    BYTE PTR [rax],al
  f4:	02 00                	add    al,BYTE PTR [rax]
  f6:	e4 10                	in     al,0x10
  f8:	00 00                	add    BYTE PTR [rax],al
  fa:	08 00                	or     BYTE PTR [rax],al
  fc:	00 00                	add    BYTE PTR [rax],al
  fe:	00 00                	add    BYTE PTR [rax],al
 100:	50                   	push   rax
 101:	77 00                	ja     103 <MULTIBOOT_HEADER_SIZE+0xab>
 103:	01 00                	add    DWORD PTR [rax],eax
 105:	00 00                	add    BYTE PTR [rax],al
 107:	00 ac 06 00 00 00 00 	add    BYTE PTR [rsi+rax*1+0x0],ch
	...
 11e:	00 00                	add    BYTE PTR [rax],al
 120:	2c 00                	sub    al,0x0
 122:	00 00                	add    BYTE PTR [rax],al
 124:	02 00                	add    al,BYTE PTR [rax]
 126:	05 17 00 00 08       	add    eax,0x8000017
 12b:	00 00                	add    BYTE PTR [rax],al
 12d:	00 00                	add    BYTE PTR [rax],al
 12f:	00 fc                	add    ah,bh
 131:	7d 00                	jge    133 <MULTIBOOT_HEADER_SIZE+0xdb>
 133:	01 00                	add    DWORD PTR [rax],eax
 135:	00 00                	add    BYTE PTR [rax],al
 137:	00 1c 0f             	add    BYTE PTR [rdi+rcx*1],bl
	...
 14e:	00 00                	add    BYTE PTR [rax],al
 150:	2c 00                	sub    al,0x0
 152:	00 00                	add    BYTE PTR [rax],al
 154:	02 00                	add    al,BYTE PTR [rax]
 156:	5f                   	pop    rdi
 157:	1e                   	(bad)  
 158:	00 00                	add    BYTE PTR [rax],al
 15a:	08 00                	or     BYTE PTR [rax],al
 15c:	00 00                	add    BYTE PTR [rax],al
 15e:	00 00                	add    BYTE PTR [rax],al
 160:	18 8d 00 01 00 00    	sbb    BYTE PTR [rbp+0x100],cl
 166:	00 00                	add    BYTE PTR [rax],al
 168:	15 14 00 00 00       	adc    eax,0x14
	...
 17d:	00 00                	add    BYTE PTR [rax],al
 17f:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
 182:	00 00                	add    BYTE PTR [rax],al
 184:	02 00                	add    al,BYTE PTR [rax]
 186:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
 187:	25 00 00 08 00       	and    eax,0x80000
 18c:	00 00                	add    BYTE PTR [rax],al
 18e:	00 00                	add    BYTE PTR [rax],al
 190:	2d a1 00 01 00       	sub    eax,0x100a1
 195:	00 00                	add    BYTE PTR [rax],al
 197:	00 b2 2f 00 00 00    	add    BYTE PTR [rdx+0x2f],dh
	...
 1ad:	00 00                	add    BYTE PTR [rax],al
 1af:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
 1b2:	00 00                	add    BYTE PTR [rax],al
 1b4:	02 00                	add    al,BYTE PTR [rax]
 1b6:	94                   	xchg   esp,eax
 1b7:	32 00                	xor    al,BYTE PTR [rax]
 1b9:	00 08                	add    BYTE PTR [rax],cl
 1bb:	00 00                	add    BYTE PTR [rax],al
 1bd:	00 00                	add    BYTE PTR [rax],al
 1bf:	00 df                	add    bh,bl
 1c1:	d0 00                	rol    BYTE PTR [rax],1
 1c3:	01 00                	add    DWORD PTR [rax],eax
 1c5:	00 00                	add    BYTE PTR [rax],al
 1c7:	00 3c 04             	add    BYTE PTR [rsp+rax*1],bh
	...
 1de:	00 00                	add    BYTE PTR [rax],al
 1e0:	2c 00                	sub    al,0x0
 1e2:	00 00                	add    BYTE PTR [rax],al
 1e4:	02 00                	add    al,BYTE PTR [rax]
 1e6:	e9 36 00 00 08       	jmp    8000221 <kernel_end+0x6fe4229>
 1eb:	00 00                	add    BYTE PTR [rax],al
 1ed:	00 00                	add    BYTE PTR [rax],al
 1ef:	00 1b                	add    BYTE PTR [rbx],bl
 1f1:	d5                   	(bad)  
 1f2:	00 01                	add    BYTE PTR [rcx],al
 1f4:	00 00                	add    BYTE PTR [rax],al
 1f6:	00 00                	add    BYTE PTR [rax],al
 1f8:	05 07 00 00 00       	add    eax,0x7
	...
 20d:	00 00                	add    BYTE PTR [rax],al
 20f:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
 212:	00 00                	add    BYTE PTR [rax],al
 214:	02 00                	add    al,BYTE PTR [rax]
 216:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
 217:	3b 00                	cmp    eax,DWORD PTR [rax]
 219:	00 08                	add    BYTE PTR [rax],cl
 21b:	00 00                	add    BYTE PTR [rax],al
 21d:	00 00                	add    BYTE PTR [rax],al
 21f:	00 20                	add    BYTE PTR [rax],ah
 221:	dc 00                	fadd   QWORD PTR [rax]
 223:	01 00                	add    DWORD PTR [rax],eax
 225:	00 00                	add    BYTE PTR [rax],al
 227:	00 64 04 00          	add    BYTE PTR [rsp+rax*1+0x0],ah
	...
 23f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 242:	00 00                	add    BYTE PTR [rax],al
 244:	02 00                	add    al,BYTE PTR [rax]
 246:	b0 3e                	mov    al,0x3e
 248:	00 00                	add    BYTE PTR [rax],al
 24a:	08 00                	or     BYTE PTR [rax],al
	...
 260:	2c 00                	sub    al,0x0
 262:	00 00                	add    BYTE PTR [rax],al
 264:	02 00                	add    al,BYTE PTR [rax]
 266:	5e                   	pop    rsi
 267:	40 00 00             	add    BYTE PTR [rax],al
 26a:	08 00                	or     BYTE PTR [rax],al
 26c:	00 00                	add    BYTE PTR [rax],al
 26e:	00 00                	add    BYTE PTR [rax],al
 270:	84 e0                	test   al,ah
 272:	00 01                	add    BYTE PTR [rcx],al
 274:	00 00                	add    BYTE PTR [rax],al
 276:	00 00                	add    BYTE PTR [rax],al
 278:	fe 02                	inc    BYTE PTR [rdx]
	...
 28e:	00 00                	add    BYTE PTR [rax],al
 290:	2c 00                	sub    al,0x0
 292:	00 00                	add    BYTE PTR [rax],al
 294:	02 00                	add    al,BYTE PTR [rax]
 296:	4c                   	rex.WR
 297:	44 00 00             	add    BYTE PTR [rax],r8b
 29a:	08 00                	or     BYTE PTR [rax],al
 29c:	00 00                	add    BYTE PTR [rax],al
 29e:	00 00                	add    BYTE PTR [rax],al
 2a0:	82                   	(bad)  
 2a1:	e3 00                	jrcxz  2a3 <MULTIBOOT_HEADER_SIZE+0x24b>
 2a3:	01 00                	add    DWORD PTR [rax],eax
 2a5:	00 00                	add    BYTE PTR [rax],al
 2a7:	00 4b 06             	add    BYTE PTR [rbx+0x6],cl
	...
 2be:	00 00                	add    BYTE PTR [rax],al
 2c0:	1c 00                	sbb    al,0x0
 2c2:	00 00                	add    BYTE PTR [rax],al
 2c4:	02 00                	add    al,BYTE PTR [rax]
 2c6:	10 48 00             	adc    BYTE PTR [rax+0x0],cl
 2c9:	00 08                	add    BYTE PTR [rax],cl
	...
 2df:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
 2e2:	00 00                	add    BYTE PTR [rax],al
 2e4:	02 00                	add    al,BYTE PTR [rax]
 2e6:	7b 48                	jnp    330 <MULTIBOOT_HEADER_SIZE+0x2d8>
 2e8:	00 00                	add    BYTE PTR [rax],al
 2ea:	08 00                	or     BYTE PTR [rax],al
 2ec:	00 00                	add    BYTE PTR [rax],al
 2ee:	00 00                	add    BYTE PTR [rax],al
 2f0:	cd e9                	int    0xe9
 2f2:	00 01                	add    BYTE PTR [rcx],al
 2f4:	00 00                	add    BYTE PTR [rax],al
 2f6:	00 00                	add    BYTE PTR [rax],al
 2f8:	51                   	push   rcx
	...
 30d:	00 00                	add    BYTE PTR [rax],al
 30f:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
 312:	00 00                	add    BYTE PTR [rax],al
 314:	02 00                	add    al,BYTE PTR [rax]
 316:	82                   	(bad)  
 317:	49 00 00             	rex.WB add BYTE PTR [r8],al
 31a:	08 00                	or     BYTE PTR [rax],al
 31c:	00 00                	add    BYTE PTR [rax],al
 31e:	00 00                	add    BYTE PTR [rax],al
 320:	1e                   	(bad)  
 321:	ea                   	(bad)  
 322:	00 01                	add    BYTE PTR [rcx],al
 324:	00 00                	add    BYTE PTR [rax],al
 326:	00 00                	add    BYTE PTR [rax],al
 328:	37                   	(bad)  
 329:	02 00                	add    al,BYTE PTR [rax]
	...
 33f:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
 342:	00 00                	add    BYTE PTR [rax],al
 344:	02 00                	add    al,BYTE PTR [rax]
 346:	b7 4c                	mov    bh,0x4c
 348:	00 00                	add    BYTE PTR [rax],al
 34a:	08 00                	or     BYTE PTR [rax],al
 34c:	00 00                	add    BYTE PTR [rax],al
 34e:	00 00                	add    BYTE PTR [rax],al
 350:	55                   	push   rbp
 351:	ec                   	in     al,dx
 352:	00 01                	add    BYTE PTR [rcx],al
 354:	00 00                	add    BYTE PTR [rax],al
 356:	00 00                	add    BYTE PTR [rax],al
 358:	68 01 00 00 00       	push   0x1
	...
 36d:	00 00                	add    BYTE PTR [rax],al
 36f:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
 372:	00 00                	add    BYTE PTR [rax],al
 374:	02 00                	add    al,BYTE PTR [rax]
 376:	4c                   	rex.WR
 377:	4f 00 00             	rex.WRXB add BYTE PTR [r8],r8b
 37a:	08 00                	or     BYTE PTR [rax],al
 37c:	00 00                	add    BYTE PTR [rax],al
 37e:	00 00                	add    BYTE PTR [rax],al
 380:	bd ed 00 01 00       	mov    ebp,0x100ed
 385:	00 00                	add    BYTE PTR [rax],al
 387:	00 6e 00             	add    BYTE PTR [rsi+0x0],ch
	...

Disassembly of section .debug_line:

0000000000000000 <.debug_line>:
       0:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
       1:	00 00                	add    BYTE PTR [rax],al
       3:	00 02                	add    BYTE PTR [rdx],al
       5:	00 48 00             	add    BYTE PTR [rax+0x0],cl
       8:	00 00                	add    BYTE PTR [rax],al
       a:	01 01                	add    DWORD PTR [rcx],eax
       c:	fb                   	sti    
       d:	0e                   	(bad)  
       e:	0d 00 01 01 01       	or     eax,0x1010100
      13:	01 00                	add    DWORD PTR [rax],eax
      15:	00 00                	add    BYTE PTR [rax],al
      17:	01 00                	add    DWORD PTR [rax],eax
      19:	00 01                	add    BYTE PTR [rcx],al
      1b:	73 72                	jae    8f <MULTIBOOT_HEADER_SIZE+0x37>
      1d:	63 2f                	movsxd ebp,DWORD PTR [rdi]
      1f:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
      22:	6d                   	ins    DWORD PTR es:[rdi],dx
      23:	6f                   	outs   dx,DWORD PTR ds:[rsi]
      24:	6e                   	outs   dx,BYTE PTR ds:[rsi]
      25:	2f                   	(bad)  
      26:	6c                   	ins    BYTE PTR es:[rdi],dx
      27:	69 62 2f 73 74 64 00 	imul   esp,DWORD PTR [rdx+0x2f],0x647473
      2e:	2f                   	(bad)  
      2f:	75 73                	jne    a4 <MULTIBOOT_HEADER_SIZE+0x4c>
      31:	72 2f                	jb     62 <MULTIBOOT_HEADER_SIZE+0xa>
      33:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
      3a:	00 00                	add    BYTE PTR [rax],al
      3c:	6d                   	ins    DWORD PTR es:[rdi],dx
      3d:	65 6d                	gs ins DWORD PTR es:[rdi],dx
      3f:	2e 63 00             	movsxd eax,DWORD PTR cs:[rax]
      42:	01 00                	add    DWORD PTR [rax],eax
      44:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
      47:	64 69 6e 74 2e 68 00 	imul   ebp,DWORD PTR fs:[rsi+0x74],0x200682e
      4e:	02 
      4f:	00 00                	add    BYTE PTR [rax],al
      51:	00 00                	add    BYTE PTR [rax],al
      53:	09 02                	or     DWORD PTR [rdx],eax
      55:	00 60 00             	add    BYTE PTR [rax+0x0],ah
      58:	01 00                	add    DWORD PTR [rax],eax
      5a:	00 00                	add    BYTE PTR [rax],al
      5c:	00 03                	add    BYTE PTR [rbx],al
      5e:	0a 01                	or     al,BYTE PTR [rcx]
      60:	08 3d 00 02 04 01    	or     BYTE PTR [rip+0x1040200],bh        # 1040266 <kernel_end+0x2426e>
      66:	06                   	(bad)  
      67:	74 06                	je     6f <MULTIBOOT_HEADER_SIZE+0x17>
      69:	76 83                	jbe    ffffffffffffffee <MULTIBOOT_CHECK_SUM+0xe852511c>
      6b:	83 2f 08             	sub    DWORD PTR [rdi],0x8
      6e:	b9 00 02 04 02       	mov    ecx,0x2040200
      73:	08 14 37             	or     BYTE PTR [rdi+rsi*1],dl
      76:	26 31 08             	xor    DWORD PTR es:[rax],ecx
      79:	4b 76 2f             	rex.WXB jbe ab <MULTIBOOT_HEADER_SIZE+0x53>
      7c:	08 1f                	or     BYTE PTR [rdi],bl
      7e:	00 02                	add    BYTE PTR [rdx],al
      80:	04 02                	add    al,0x2
      82:	08 14 39             	or     BYTE PTR [rcx+rdi*1],dl
      85:	24 31                	and    al,0x31
      87:	08 3d 00 02 04 01    	or     BYTE PTR [rip+0x1040200],bh        # 104028d <kernel_end+0x24295>
      8d:	06                   	(bad)  
      8e:	74 06                	je     96 <MULTIBOOT_HEADER_SIZE+0x3e>
      90:	76 a0                	jbe    32 <MULTIBOOT_ADDRESS_TAG_SIZE+0x1a>
      92:	08 84 83 83 2f 08 65 	or     BYTE PTR [rbx+rax*4+0x65082f83],al
      99:	00 02                	add    BYTE PTR [rdx],al
      9b:	04 02                	add    al,0x2
      9d:	08 14 03             	or     BYTE PTR [rbx+rax*1],dl
      a0:	77 3c                	ja     de <MULTIBOOT_HEADER_SIZE+0x86>
      a2:	03 0a                	add    ecx,DWORD PTR [rdx]
      a4:	20 02                	and    BYTE PTR [rdx],al
      a6:	02 00                	add    al,BYTE PTR [rax]
      a8:	01 01                	add    DWORD PTR [rcx],eax
      aa:	7c 00                	jl     ac <MULTIBOOT_HEADER_SIZE+0x54>
      ac:	00 00                	add    BYTE PTR [rax],al
      ae:	02 00                	add    al,BYTE PTR [rax]
      b0:	48 00 00             	rex.W add BYTE PTR [rax],al
      b3:	00 01                	add    BYTE PTR [rcx],al
      b5:	01 fb                	add    ebx,edi
      b7:	0e                   	(bad)  
      b8:	0d 00 01 01 01       	or     eax,0x1010100
      bd:	01 00                	add    DWORD PTR [rax],eax
      bf:	00 00                	add    BYTE PTR [rax],al
      c1:	01 00                	add    DWORD PTR [rax],eax
      c3:	00 01                	add    BYTE PTR [rcx],al
      c5:	73 72                	jae    139 <MULTIBOOT_HEADER_SIZE+0xe1>
      c7:	63 2f                	movsxd ebp,DWORD PTR [rdi]
      c9:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
      cc:	6d                   	ins    DWORD PTR es:[rdi],dx
      cd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
      ce:	6e                   	outs   dx,BYTE PTR ds:[rsi]
      cf:	2f                   	(bad)  
      d0:	6c                   	ins    BYTE PTR es:[rdi],dx
      d1:	69 62 2f 73 74 64 00 	imul   esp,DWORD PTR [rdx+0x2f],0x647473
      d8:	2f                   	(bad)  
      d9:	75 73                	jne    14e <MULTIBOOT_HEADER_SIZE+0xf6>
      db:	72 2f                	jb     10c <MULTIBOOT_HEADER_SIZE+0xb4>
      dd:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
      e4:	00 00                	add    BYTE PTR [rax],al
      e6:	73 74                	jae    15c <MULTIBOOT_HEADER_SIZE+0x104>
      e8:	72 2e                	jb     118 <MULTIBOOT_HEADER_SIZE+0xc0>
      ea:	63 00                	movsxd eax,DWORD PTR [rax]
      ec:	01 00                	add    DWORD PTR [rax],eax
      ee:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
      f1:	64 69 6e 74 2e 68 00 	imul   ebp,DWORD PTR fs:[rsi+0x74],0x200682e
      f8:	02 
      f9:	00 00                	add    BYTE PTR [rax],al
      fb:	00 00                	add    BYTE PTR [rax],al
      fd:	09 02                	or     DWORD PTR [rdx],eax
      ff:	34 61                	xor    al,0x61
     101:	00 01                	add    BYTE PTR [rcx],al
     103:	00 00                	add    BYTE PTR [rax],al
     105:	00 00                	add    BYTE PTR [rax],al
     107:	1a bb 83 75 77 59    	sbb    bh,BYTE PTR [rbx+0x59777583]
     10d:	55                   	push   rbp
     10e:	b1 4b                	mov    cl,0x4b
     110:	31 f3                	xor    ebx,esi
     112:	00 02                	add    BYTE PTR [rdx],al
     114:	04 01                	add    al,0x1
     116:	06                   	(bad)  
     117:	74 06                	je     11f <MULTIBOOT_HEADER_SIZE+0xc7>
     119:	75 75                	jne    190 <MULTIBOOT_HEADER_SIZE+0x138>
     11b:	f3 08 21             	repz or BYTE PTR [rcx],ah
     11e:	77 08                	ja     128 <MULTIBOOT_HEADER_SIZE+0xd0>
     120:	e5 71                	in     eax,0x71
     122:	08 17                	or     BYTE PTR [rdi],dl
     124:	59                   	pop    rcx
     125:	02 02                	add    al,BYTE PTR [rdx]
     127:	00 01                	add    BYTE PTR [rcx],al
     129:	01 6d 00             	add    DWORD PTR [rbp+0x0],ebp
     12c:	00 00                	add    BYTE PTR [rax],al
     12e:	02 00                	add    al,BYTE PTR [rax]
     130:	49 00 00             	rex.WB add BYTE PTR [r8],al
     133:	00 01                	add    BYTE PTR [rcx],al
     135:	01 fb                	add    ebx,edi
     137:	0e                   	(bad)  
     138:	0d 00 01 01 01       	or     eax,0x1010100
     13d:	01 00                	add    DWORD PTR [rax],eax
     13f:	00 00                	add    BYTE PTR [rax],al
     141:	01 00                	add    DWORD PTR [rax],eax
     143:	00 01                	add    BYTE PTR [rcx],al
     145:	73 72                	jae    1b9 <MULTIBOOT_HEADER_SIZE+0x161>
     147:	63 2f                	movsxd ebp,DWORD PTR [rdi]
     149:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
     14c:	6d                   	ins    DWORD PTR es:[rdi],dx
     14d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     14e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     14f:	2f                   	(bad)  
     150:	6c                   	ins    BYTE PTR es:[rdi],dx
     151:	69 62 2f 73 74 64 00 	imul   esp,DWORD PTR [rdx+0x2f],0x647473
     158:	2f                   	(bad)  
     159:	75 73                	jne    1ce <MULTIBOOT_HEADER_SIZE+0x176>
     15b:	72 2f                	jb     18c <MULTIBOOT_HEADER_SIZE+0x134>
     15d:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
     164:	00 00                	add    BYTE PTR [rax],al
     166:	72 61                	jb     1c9 <MULTIBOOT_HEADER_SIZE+0x171>
     168:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     169:	64 2e 63 00          	fs movsxd eax,DWORD PTR cs:[rax]
     16d:	01 00                	add    DWORD PTR [rax],eax
     16f:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
     172:	64 69 6e 74 2e 68 00 	imul   ebp,DWORD PTR fs:[rsi+0x74],0x200682e
     179:	02 
     17a:	00 00                	add    BYTE PTR [rax],al
     17c:	00 00                	add    BYTE PTR [rax],al
     17e:	09 02                	or     DWORD PTR [rdx],eax
     180:	fe                   	(bad)  
     181:	61                   	(bad)  
     182:	00 01                	add    BYTE PTR [rcx],al
     184:	00 00                	add    BYTE PTR [rax],al
     186:	00 00                	add    BYTE PTR [rax],al
     188:	03 0b                	add    ecx,DWORD PTR [rbx]
     18a:	01 4b 08             	add    DWORD PTR [rbx+0x8],ecx
     18d:	67 08 9f 31 ad 91 3f 	or     BYTE PTR [edi+0x3f91ad31],bl
     194:	ad                   	lods   eax,DWORD PTR ds:[rsi]
     195:	91                   	xchg   ecx,eax
     196:	02 03                	add    al,BYTE PTR [rbx]
     198:	00 01                	add    BYTE PTR [rcx],al
     19a:	01 e7                	add    edi,esp
     19c:	02 00                	add    al,BYTE PTR [rax]
     19e:	00 02                	add    BYTE PTR [rdx],al
     1a0:	00 a0 00 00 00 01    	add    BYTE PTR [rax+0x1000000],ah
     1a6:	01 fb                	add    ebx,edi
     1a8:	0e                   	(bad)  
     1a9:	0d 00 01 01 01       	or     eax,0x1010100
     1ae:	01 00                	add    DWORD PTR [rax],eax
     1b0:	00 00                	add    BYTE PTR [rax],al
     1b2:	01 00                	add    DWORD PTR [rax],eax
     1b4:	00 01                	add    BYTE PTR [rcx],al
     1b6:	73 72                	jae    22a <MULTIBOOT_HEADER_SIZE+0x1d2>
     1b8:	63 2f                	movsxd ebp,DWORD PTR [rdi]
     1ba:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
     1bd:	6d                   	ins    DWORD PTR es:[rdi],dx
     1be:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     1bf:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     1c0:	2f                   	(bad)  
     1c1:	6c                   	ins    BYTE PTR es:[rdi],dx
     1c2:	69 62 2f 73 74 64 2f 	imul   esp,DWORD PTR [rdx+0x2f],0x2f647473
     1c9:	69 6e 63 00 73 72 63 	imul   ebp,DWORD PTR [rsi+0x63],0x63727300
     1d0:	2f                   	(bad)  
     1d1:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
     1d4:	6d                   	ins    DWORD PTR es:[rdi],dx
     1d5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     1d6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     1d7:	2f                   	(bad)  
     1d8:	6c                   	ins    BYTE PTR es:[rdi],dx
     1d9:	69 62 2f 61 76 6c 5f 	imul   esp,DWORD PTR [rdx+0x2f],0x5f6c7661
     1e0:	74 72                	je     254 <MULTIBOOT_HEADER_SIZE+0x1fc>
     1e2:	65 65 00 73 72       	gs add BYTE PTR gs:[rbx+0x72],dh
     1e7:	63 2f                	movsxd ebp,DWORD PTR [rdi]
     1e9:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
     1ec:	6d                   	ins    DWORD PTR es:[rdi],dx
     1ed:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     1ee:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     1ef:	2f                   	(bad)  
     1f0:	6c                   	ins    BYTE PTR es:[rdi],dx
     1f1:	69 62 2f 61 76 6c 5f 	imul   esp,DWORD PTR [rdx+0x2f],0x5f6c7661
     1f8:	74 72                	je     26c <MULTIBOOT_HEADER_SIZE+0x214>
     1fa:	65 65 2f             	gs gs (bad) 
     1fd:	69 6e 63 00 2f 75 73 	imul   ebp,DWORD PTR [rsi+0x63],0x73752f00
     204:	72 2f                	jb     235 <MULTIBOOT_HEADER_SIZE+0x1dd>
     206:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
     20d:	00 00                	add    BYTE PTR [rax],al
     20f:	73 74                	jae    285 <MULTIBOOT_HEADER_SIZE+0x22d>
     211:	64 5f                	fs pop rdi
     213:	6c                   	ins    BYTE PTR es:[rdi],dx
     214:	69 62 2e 68 00 01 00 	imul   esp,DWORD PTR [rdx+0x2e],0x10068
     21b:	00 61 76             	add    BYTE PTR [rcx+0x76],ah
     21e:	6c                   	ins    BYTE PTR es:[rdi],dx
     21f:	5f                   	pop    rdi
     220:	74 72                	je     294 <MULTIBOOT_HEADER_SIZE+0x23c>
     222:	65 65 2e 63 00       	gs gs movsxd eax,DWORD PTR cs:[rax]
     227:	02 00                	add    al,BYTE PTR [rax]
     229:	00 61 76             	add    BYTE PTR [rcx+0x76],ah
     22c:	6c                   	ins    BYTE PTR es:[rdi],dx
     22d:	5f                   	pop    rdi
     22e:	74 72                	je     2a2 <MULTIBOOT_HEADER_SIZE+0x24a>
     230:	65 65 2e 68 00 03 00 	gs gs cs push 0x300
     237:	00 
     238:	73 74                	jae    2ae <MULTIBOOT_HEADER_SIZE+0x256>
     23a:	64 69 6e 74 2e 68 00 	imul   ebp,DWORD PTR fs:[rsi+0x74],0x400682e
     241:	04 
     242:	00 00                	add    BYTE PTR [rax],al
     244:	00 00                	add    BYTE PTR [rax],al
     246:	09 02                	or     DWORD PTR [rdx],eax
     248:	64 62                	fs (bad) 
     24a:	00 01                	add    BYTE PTR [rcx],al
     24c:	00 00                	add    BYTE PTR [rax],al
     24e:	00 00                	add    BYTE PTR [rax],al
     250:	03 35 01 d7 9f 04    	add    esi,DWORD PTR [rip+0x49fd701]        # 49fd957 <kernel_end+0x39e195f>
     256:	02 03                	add    al,BYTE PTR [rbx]
     258:	52                   	push   rdx
     259:	2e bb 00 02 04 01    	cs mov ebx,0x1040200
     25f:	06                   	(bad)  
     260:	74 00                	je     262 <MULTIBOOT_HEADER_SIZE+0x20a>
     262:	02 04 02             	add    al,BYTE PTR [rdx+rax*1]
     265:	90                   	nop
     266:	00 02                	add    BYTE PTR [rdx],al
     268:	04 05                	add    al,0x5
     26a:	06                   	(bad)  
     26b:	59                   	pop    rcx
     26c:	31 c9                	xor    ecx,ecx
     26e:	75 75                	jne    2e5 <MULTIBOOT_HEADER_SIZE+0x28d>
     270:	02 25 13 77 c9 ae    	add    ah,BYTE PTR [rip+0xffffffffaec97713]        # ffffffffaec97989 <MULTIBOOT_CHECK_SUM+0x971bcab7>
     276:	f3 bb c9 f4 08 21    	repz mov ebx,0x2108f4c9
     27c:	bc 02 34 13 02       	mov    esp,0x2133402
     281:	34 13                	xor    al,0x13
     283:	4b 77 c9             	rex.WXB ja 24f <MULTIBOOT_HEADER_SIZE+0x1f7>
     286:	bc f3 bb bb e6       	mov    esp,0xe6bbbbf3
     28b:	08 2f                	or     BYTE PTR [rdi],ch
     28d:	ae                   	scas   al,BYTE PTR es:[rdi]
     28e:	02 34 13             	add    dh,BYTE PTR [rbx+rdx*1]
     291:	02 34 13             	add    dh,BYTE PTR [rbx+rdx*1]
     294:	4b 77 bb             	rex.WXB ja 252 <MULTIBOOT_HEADER_SIZE+0x1fa>
     297:	e6 68                	out    0x68,al
     299:	08 21                	or     BYTE PTR [rcx],ah
     29b:	68 08 16 08 83       	push   0xffffffff83081608
     2a0:	d9 68 08             	fldcw  WORD PTR [rax+0x8]
     2a3:	2f                   	(bad)  
     2a4:	69 db 08 9f da 4c    	imul   ebx,ebx,0x4cda9f08
     2aa:	31 08                	xor    DWORD PTR [rax],ecx
     2ac:	83 00 02             	add    DWORD PTR [rax],0x2
     2af:	04 01                	add    al,0x1
     2b1:	06                   	(bad)  
     2b2:	74 06                	je     2ba <MULTIBOOT_HEADER_SIZE+0x262>
     2b4:	75 91                	jne    247 <MULTIBOOT_HEADER_SIZE+0x1ef>
     2b6:	76 bb                	jbe    273 <MULTIBOOT_HEADER_SIZE+0x21b>
     2b8:	93                   	xchg   ebx,eax
     2b9:	08 67 67             	or     BYTE PTR [rdi+0x67],ah
     2bc:	02 29                	add    ch,BYTE PTR [rcx]
     2be:	13 67 68             	adc    esp,DWORD PTR [rdi+0x68]
     2c1:	02 25 14 02 34 14    	add    ah,BYTE PTR [rip+0x14340214]        # 143404db <kernel_end+0x133244e3>
     2c7:	bb 77 f3 00 02       	mov    ebx,0x200f377
     2cc:	04 01                	add    al,0x1
     2ce:	06                   	(bad)  
     2cf:	ac                   	lods   al,BYTE PTR ds:[rsi]
     2d0:	06                   	(bad)  
     2d1:	ae                   	scas   al,BYTE PTR es:[rdi]
     2d2:	83 83 84 00 02 04 01 	add    DWORD PTR [rbx+0x4020084],0x1
     2d9:	06                   	(bad)  
     2da:	c8 06 d8 83          	enter  0xd806,0x83
     2de:	a0 00 02 04 01 06 c8 	movabs al,ds:0xd806c80601040200
     2e5:	06 d8 
     2e7:	83 85 00 02 04 01 06 	add    DWORD PTR [rbp+0x1040200],0x6
     2ee:	ac                   	lods   al,BYTE PTR ds:[rsi]
     2ef:	06                   	(bad)  
     2f0:	af                   	scas   eax,DWORD PTR es:[rdi]
     2f1:	ca 08 13             	retf   0x1308
     2f4:	08 14 f5 00 02 04 01 	or     BYTE PTR [rsi*8+0x1040200],dl
     2fb:	06                   	(bad)  
     2fc:	ba 06 ca e6 00       	mov    edx,0xe6ca06
     301:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     304:	06                   	(bad)  
     305:	c8 06 d8 f5          	enter  0xd806,0xf5
     309:	bb e5 c9 f4 f3       	mov    ebx,0xf3f4c9e5
     30e:	bb cd d7 ae bb       	mov    ebx,0xbbaed7cd
     313:	f3 03 76 ba          	repz add esi,DWORD PTR [rsi-0x46]
     317:	03 11                	add    edx,DWORD PTR [rcx]
     319:	58                   	pop    rax
     31a:	f3 bc ad d7 03 6a    	repz mov esp,0x6a03d7ad
     320:	ac                   	lods   al,BYTE PTR ds:[rsi]
     321:	03 1d 58 bb e5 c9    	add    ebx,DWORD PTR [rip+0xffffffffc9e5bb58]        # ffffffffc9e5be7f <MULTIBOOT_CHECK_SUM+0xb2380fad>
     327:	f4                   	hlt    
     328:	bb e5 c9 f4 ca       	mov    ebx,0xcaf4c9e5
     32d:	08 13                	or     BYTE PTR [rbx],dl
     32f:	08 14 f5 ca 08 13 08 	or     BYTE PTR [rsi*8+0x81308ca],dl
     336:	14 f6                	adc    al,0xf6
     338:	bb f3 bc ad d7       	mov    ebx,0xd7adbcf3
     33d:	ae                   	scas   al,BYTE PTR es:[rdi]
     33e:	bb f3 be 9f d7       	mov    ebx,0xd79fbef3
     343:	9f                   	lahf   
     344:	03 8c 7f 3c 03 f5 00 	add    ecx,DWORD PTR [rdi+rdi*2+0xf5033c]
     34b:	20 32                	and    BYTE PTR [rdx],dh
     34d:	08 4b 00             	or     BYTE PTR [rbx+0x0],cl
     350:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     353:	06                   	(bad)  
     354:	74 00                	je     356 <MULTIBOOT_HEADER_SIZE+0x2fe>
     356:	02 04 02             	add    al,BYTE PTR [rdx+rax*1]
     359:	74 06                	je     361 <MULTIBOOT_HEADER_SIZE+0x309>
     35b:	75 91                	jne    2ee <MULTIBOOT_HEADER_SIZE+0x296>
     35d:	08 67 67             	or     BYTE PTR [rdi+0x67],ah
     360:	02 2b                	add    ch,BYTE PTR [rbx]
     362:	13 67 02             	adc    esp,DWORD PTR [rdi+0x2]
     365:	29 16                	sub    DWORD PTR [rsi],edx
     367:	00 02                	add    BYTE PTR [rdx],al
     369:	04 01                	add    al,0x1
     36b:	06                   	(bad)  
     36c:	ba 06 ca 00 02       	mov    edx,0x200ca06
     371:	04 01                	add    al,0x1
     373:	06                   	(bad)  
     374:	ba 00 02 04 02       	mov    edx,0x2040200
     379:	90                   	nop
     37a:	00 02                	add    BYTE PTR [rdx],al
     37c:	04 04                	add    al,0x4
     37e:	82                   	(bad)  
     37f:	00 02                	add    BYTE PTR [rdx],al
     381:	04 04                	add    al,0x4
     383:	06                   	(bad)  
     384:	4c 76 7d             	rex.WR jbe 404 <MULTIBOOT_HEADER_SIZE+0x3ac>
     387:	03 09                	add    ecx,DWORD PTR [rcx]
     389:	2e f3 03 76 82       	repz add esi,DWORD PTR cs:[rsi-0x7e]
     38e:	03 11                	add    edx,DWORD PTR [rcx]
     390:	2e f4                	cs hlt 
     392:	08 31                	or     BYTE PTR [rcx],dh
     394:	02 26                	add    ah,BYTE PTR [rsi]
     396:	14 85                	adc    al,0x85
     398:	75 67                	jne    401 <MULTIBOOT_HEADER_SIZE+0x3a9>
     39a:	02 34 13             	add    dh,BYTE PTR [rbx+rdx*1]
     39d:	f3 4b 78 08          	repz rex.WXB js 3a9 <MULTIBOOT_HEADER_SIZE+0x351>
     3a1:	3d 00 02 04 01       	cmp    eax,0x1040200
     3a6:	06                   	(bad)  
     3a7:	74 06                	je     3af <MULTIBOOT_HEADER_SIZE+0x357>
     3a9:	75 75                	jne    420 <MULTIBOOT_HEADER_SIZE+0x3c8>
     3ab:	08 67 67             	or     BYTE PTR [rdi+0x67],ah
     3ae:	08 bb 67 68 08 91    	or     BYTE PTR [rbx-0x6ef79799],bh
     3b4:	31 bb 76 ad ad bb    	xor    DWORD PTR [rbx-0x4452528a],edi
     3ba:	bc 2f 32 bb 75       	mov    esp,0x75bb322f
     3bf:	75 ad                	jne    36e <MULTIBOOT_HEADER_SIZE+0x316>
     3c1:	75 76                	jne    439 <MULTIBOOT_HEADER_SIZE+0x3e1>
     3c3:	ab                   	stos   DWORD PTR es:[rdi],eax
     3c4:	bc 4b 31 bb 75       	mov    esp,0x75bb314b
     3c9:	75 ad                	jne    378 <MULTIBOOT_HEADER_SIZE+0x320>
     3cb:	75 76                	jne    443 <MULTIBOOT_HEADER_SIZE+0x3eb>
     3cd:	b9 ca 4b 32 bb       	mov    ecx,0xbb324bca
     3d2:	75 75                	jne    449 <MULTIBOOT_HEADER_SIZE+0x3f1>
     3d4:	83 ca bb             	or     edx,0xffffffbb
     3d7:	2f                   	(bad)  
     3d8:	ab                   	stos   DWORD PTR es:[rdi],eax
     3d9:	bc 6c 08 13 9f       	mov    esp,0x9f13086c
     3de:	b6 ce                	mov    dh,0xce
     3e0:	5a                   	pop    rdx
     3e1:	31 bb 75 75 83 bc    	xor    DWORD PTR [rbx-0x437c8a8b],edi
     3e7:	ad                   	lods   eax,DWORD PTR ds:[rsi]
     3e8:	2f                   	(bad)  
     3e9:	b9 ca 6c 08 21       	mov    ecx,0x21086cca
     3ee:	9f                   	lahf   
     3ef:	b6 ce                	mov    dh,0xce
     3f1:	5a                   	pop    rdx
     3f2:	31 08                	xor    DWORD PTR [rax],ecx
     3f4:	3d 08 91 32 08       	cmp    eax,0x8329108
     3f9:	3d 00 02 04 01       	cmp    eax,0x1040200
     3fe:	06                   	(bad)  
     3ff:	74 06                	je     407 <MULTIBOOT_HEADER_SIZE+0x3af>
     401:	76 bb                	jbe    3be <MULTIBOOT_HEADER_SIZE+0x366>
     403:	02 26                	add    ah,BYTE PTR [rsi]
     405:	14 2f                	adc    al,0x2f
     407:	31 08                	xor    DWORD PTR [rax],ecx
     409:	3d 00 02 04 01       	cmp    eax,0x1040200
     40e:	06                   	(bad)  
     40f:	74 06                	je     417 <MULTIBOOT_HEADER_SIZE+0x3bf>
     411:	76 02                	jbe    415 <MULTIBOOT_HEADER_SIZE+0x3bd>
     413:	24 14                	and    al,0x14
     415:	2f                   	(bad)  
     416:	31 bb 75 75 bb 75    	xor    DWORD PTR [rbx+0x75bb7575],edi
     41c:	75 f3                	jne    411 <MULTIBOOT_HEADER_SIZE+0x3b9>
     41e:	30 4b ef             	xor    BYTE PTR [rbx-0x11],cl
     421:	79 3d                	jns    460 <MULTIBOOT_HEADER_SIZE+0x408>
     423:	31 bb 76 ae 2f 35    	xor    DWORD PTR [rbx+0x352fae76],edi
     429:	c9                   	leave  
     42a:	75 75                	jne    4a1 <MULTIBOOT_HEADER_SIZE+0x449>
     42c:	02 2d 13 77 f3 75    	add    ch,BYTE PTR [rip+0x75f37713]        # 75f37b45 <MULTIBOOT_LOADED_MAGIC+0x3f1c18bc>
     432:	9f                   	lahf   
     433:	00 02                	add    BYTE PTR [rdx],al
     435:	04 01                	add    al,0x1
     437:	06                   	(bad)  
     438:	08 12                	or     BYTE PTR [rdx],dl
     43a:	00 02                	add    BYTE PTR [rdx],al
     43c:	04 02                	add    al,0x2
     43e:	08 12                	or     BYTE PTR [rdx],dl
     440:	06                   	(bad)  
     441:	08 83 9f bc 08 13    	or     BYTE PTR [rbx+0x1308bc9f],al
     447:	a0 ca 08 21 a0 76 00 	movabs al,ds:0x4020076a02108ca
     44e:	02 04 
     450:	01 06                	add    DWORD PTR [rsi],eax
     452:	c8 00 02 04          	enter  0x200,0x4
     456:	03 08                	add    ecx,DWORD PTR [rax]
     458:	ac                   	lods   al,BYTE PTR ds:[rsi]
     459:	00 02                	add    BYTE PTR [rdx],al
     45b:	04 04                	add    al,0x4
     45d:	ba 06 08 9f 76       	mov    edx,0x769f0806
     462:	00 02                	add    BYTE PTR [rdx],al
     464:	04 01                	add    al,0x1
     466:	06                   	(bad)  
     467:	08 90 00 02 04 03    	or     BYTE PTR [rax+0x3040200],dl
     46d:	08 9e 00 02 04 04    	or     BYTE PTR [rsi+0x4040200],bl
     473:	74 00                	je     475 <MULTIBOOT_HEADER_SIZE+0x41d>
     475:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
     478:	58                   	pop    rax
     479:	06                   	(bad)  
     47a:	3d 31 f3 75 75       	cmp    eax,0x7575f331
     47f:	08 59 02             	or     BYTE PTR [rcx+0x2],bl
     482:	02 00                	add    al,BYTE PTR [rax]
     484:	01 01                	add    DWORD PTR [rcx],eax
     486:	89 01                	mov    DWORD PTR [rcx],eax
     488:	00 00                	add    BYTE PTR [rax],al
     48a:	02 00                	add    al,BYTE PTR [rax]
     48c:	72 00                	jb     48e <MULTIBOOT_HEADER_SIZE+0x436>
     48e:	00 00                	add    BYTE PTR [rax],al
     490:	01 01                	add    DWORD PTR [rcx],eax
     492:	fb                   	sti    
     493:	0e                   	(bad)  
     494:	0d 00 01 01 01       	or     eax,0x1010100
     499:	01 00                	add    DWORD PTR [rax],eax
     49b:	00 00                	add    BYTE PTR [rax],al
     49d:	01 00                	add    DWORD PTR [rax],eax
     49f:	00 01                	add    BYTE PTR [rcx],al
     4a1:	73 72                	jae    515 <MULTIBOOT_HEADER_SIZE+0x4bd>
     4a3:	63 2f                	movsxd ebp,DWORD PTR [rdi]
     4a5:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
     4a8:	6d                   	ins    DWORD PTR es:[rdi],dx
     4a9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     4aa:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     4ab:	2f                   	(bad)  
     4ac:	6c                   	ins    BYTE PTR es:[rdi],dx
     4ad:	69 62 2f 73 74 64 2f 	imul   esp,DWORD PTR [rdx+0x2f],0x2f647473
     4b4:	69 6e 63 00 73 72 63 	imul   ebp,DWORD PTR [rsi+0x63],0x63727300
     4bb:	2f                   	(bad)  
     4bc:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
     4bf:	6d                   	ins    DWORD PTR es:[rdi],dx
     4c0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     4c1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     4c2:	2f                   	(bad)  
     4c3:	6c                   	ins    BYTE PTR es:[rdi],dx
     4c4:	69 62 2f 73 61 6c 6c 	imul   esp,DWORD PTR [rdx+0x2f],0x6c6c6173
     4cb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     4cc:	63 00                	movsxd eax,DWORD PTR [rax]
     4ce:	2f                   	(bad)  
     4cf:	75 73                	jne    544 <MULTIBOOT_HEADER_SIZE+0x4ec>
     4d1:	72 2f                	jb     502 <MULTIBOOT_HEADER_SIZE+0x4aa>
     4d3:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
     4da:	00 00                	add    BYTE PTR [rax],al
     4dc:	62                   	(bad)  
     4dd:	69 74 5f 6f 70 73 2e 	imul   esi,DWORD PTR [rdi+rbx*2+0x6f],0x682e7370
     4e4:	68 
     4e5:	00 01                	add    BYTE PTR [rcx],al
     4e7:	00 00                	add    BYTE PTR [rax],al
     4e9:	73 61                	jae    54c <MULTIBOOT_HEADER_SIZE+0x4f4>
     4eb:	6c                   	ins    BYTE PTR es:[rdi],dx
     4ec:	6c                   	ins    BYTE PTR es:[rdi],dx
     4ed:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     4ee:	63 2e                	movsxd ebp,DWORD PTR [rsi]
     4f0:	63 00                	movsxd eax,DWORD PTR [rax]
     4f2:	02 00                	add    al,BYTE PTR [rax]
     4f4:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
     4f7:	64 69 6e 74 2e 68 00 	imul   ebp,DWORD PTR fs:[rsi+0x74],0x300682e
     4fe:	03 
     4ff:	00 00                	add    BYTE PTR [rax],al
     501:	00 00                	add    BYTE PTR [rax],al
     503:	09 02                	or     DWORD PTR [rdx],eax
     505:	c8 71 00 01          	enter  0x71,0x1
     509:	00 00                	add    BYTE PTR [rax],al
     50b:	00 00                	add    BYTE PTR [rax],al
     50d:	03 11                	add    edx,DWORD PTR [rcx]
     50f:	01 ad d7 36 d7 08    	add    DWORD PTR [rbp+0x8d736d7],ebp
     515:	bb 04 02 03 76       	mov    ebx,0x76030204
     51a:	2e e6 4d             	cs out 0x4d,al
     51d:	08 f4                	or     ah,dh
     51f:	08 13                	or     BYTE PTR [rbx],dl
     521:	21 31                	and    DWORD PTR [rcx],esi
     523:	bb 91 31 f3 08       	mov    ebx,0x8f33191
     528:	91                   	xchg   ecx,eax
     529:	77 08                	ja     533 <MULTIBOOT_HEADER_SIZE+0x4db>
     52b:	21 c9                	and    ecx,ecx
     52d:	68 08 96 2c 08       	push   0x82c9608
     532:	ae                   	scas   al,BYTE PTR es:[rdi]
     533:	21 31                	and    DWORD PTR [rcx],esi
     535:	bb ae 85 08 3d       	mov    ebx,0x3d0885ae
     53a:	08 3d e5 00 02 04    	or     BYTE PTR [rip+0x40200e5],bh        # 4020625 <kernel_end+0x300462d>
     540:	01 06                	add    DWORD PTR [rsi],eax
     542:	66 00 02             	data16 add BYTE PTR [rdx],al
     545:	04 02                	add    al,0x2
     547:	ba 00 02 04 04       	mov    edx,0x4040200
     54c:	58                   	pop    rax
     54d:	00 02                	add    BYTE PTR [rdx],al
     54f:	04 04                	add    al,0x4
     551:	06                   	(bad)  
     552:	4b 00 02             	rex.WXB add BYTE PTR [r10],al
     555:	04 01                	add    al,0x1
     557:	06                   	(bad)  
     558:	74 06                	je     560 <MULTIBOOT_HEADER_SIZE+0x508>
     55a:	69 08 3d 08 3d e6    	imul   ecx,DWORD PTR [rax],0xe63d083d
     560:	69 08 59 08 3d 32    	imul   ecx,DWORD PTR [rax],0x323d0859
     566:	68 7a 56 24 3f       	push   0x3f24567a
     56b:	08 67 00             	or     BYTE PTR [rdi+0x0],ah
     56e:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     571:	06                   	(bad)  
     572:	74 00                	je     574 <MULTIBOOT_HEADER_SIZE+0x51c>
     574:	02 04 02             	add    al,BYTE PTR [rdx+rax*1]
     577:	74 06                	je     57f <MULTIBOOT_HEADER_SIZE+0x527>
     579:	75 9f                	jne    51a <MULTIBOOT_HEADER_SIZE+0x4c2>
     57b:	75 85                	jne    502 <MULTIBOOT_HEADER_SIZE+0x4aa>
     57d:	08 3d 08 3d e5 00    	or     BYTE PTR [rip+0xe53d08],bh        # e5428b <MULTIBOOT_HEADER_SIZE+0xe54233>
     583:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     586:	06                   	(bad)  
     587:	08 4a 06             	or     BYTE PTR [rdx+0x6],cl
     58a:	08 84 78 75 4c 68 93 	or     BYTE PTR [rax+rdi*2-0x6c97b38b],al
     591:	31 e5                	xor    ebp,esp
     593:	00 02                	add    BYTE PTR [rdx],al
     595:	04 01                	add    al,0x1
     597:	06                   	(bad)  
     598:	74 06                	je     5a0 <MULTIBOOT_HEADER_SIZE+0x548>
     59a:	68 83 08 13 08       	push   0x8130883
     59f:	59                   	pop    rcx
     5a0:	08 5a 2f             	or     BYTE PTR [rdx+0x2f],bl
     5a3:	31 e5                	xor    ebp,esp
     5a5:	83 00 02             	add    DWORD PTR [rax],0x2
     5a8:	04 01                	add    al,0x1
     5aa:	06                   	(bad)  
     5ab:	ac                   	lods   al,BYTE PTR ds:[rsi]
     5ac:	06                   	(bad)  
     5ad:	a0 91 85 08 3d e5 08 	movabs al,ds:0x3d08e53d088591
     5b4:	3d 00 
     5b6:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     5b9:	06                   	(bad)  
     5ba:	66 06                	data16 (bad) 
     5bc:	86 a2 70 03 09 58    	xchg   BYTE PTR [rdx+0x58090370],ah
     5c2:	00 02                	add    BYTE PTR [rdx],al
     5c4:	04 01                	add    al,0x1
     5c6:	83 00 02             	add    DWORD PTR [rax],0x2
     5c9:	04 01                	add    al,0x1
     5cb:	65 5d                	gs pop rbp
     5cd:	08 a4 08 13 08 59 08 	or     BYTE PTR [rax+rcx*1+0x8590813],ah
     5d4:	5b                   	pop    rbx
     5d5:	08 91 08 bc 08 af    	or     BYTE PTR [rcx-0x50f743f8],dl
     5db:	bb 30 03 60 58       	mov    ebx,0x58600330
     5e0:	03 22                	add    esp,DWORD PTR [rdx]
     5e2:	20 4b 31             	and    BYTE PTR [rbx+0x31],cl
     5e5:	f3 00 02             	repz add BYTE PTR [rdx],al
     5e8:	04 01                	add    al,0x1
     5ea:	06                   	(bad)  
     5eb:	ac                   	lods   al,BYTE PTR ds:[rsi]
     5ec:	06                   	(bad)  
     5ed:	ae                   	scas   al,BYTE PTR es:[rdi]
     5ee:	85 08                	test   DWORD PTR [rax],ecx
     5f0:	3d 08 3d e5 00       	cmp    eax,0xe53d08
     5f5:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     5f8:	06                   	(bad)  
     5f9:	66 06                	data16 (bad) 
     5fb:	d9 08                	(bad)  [rax]
     5fd:	5a                   	pop    rdx
     5fe:	bb 31 6c 76 03       	mov    ebx,0x3766c31
     603:	7a 2e                	jp     633 <MULTIBOOT_HEADER_SIZE+0x5db>
     605:	00 02                	add    BYTE PTR [rdx],al
     607:	04 01                	add    al,0x1
     609:	28 06                	sub    BYTE PTR [rsi],al
     60b:	20 06                	and    BYTE PTR [rsi],al
     60d:	21 02                	and    DWORD PTR [rdx],eax
     60f:	02 00                	add    al,BYTE PTR [rax]
     611:	01 01                	add    DWORD PTR [rcx],eax
     613:	e4 01                	in     al,0x1
     615:	00 00                	add    BYTE PTR [rax],al
     617:	02 00                	add    al,BYTE PTR [rax]
     619:	88 00                	mov    BYTE PTR [rax],al
     61b:	00 00                	add    BYTE PTR [rax],al
     61d:	01 01                	add    DWORD PTR [rcx],eax
     61f:	fb                   	sti    
     620:	0e                   	(bad)  
     621:	0d 00 01 01 01       	or     eax,0x1010100
     626:	01 00                	add    DWORD PTR [rax],eax
     628:	00 00                	add    BYTE PTR [rax],al
     62a:	01 00                	add    DWORD PTR [rax],eax
     62c:	00 01                	add    BYTE PTR [rcx],al
     62e:	73 72                	jae    6a2 <MULTIBOOT_HEADER_SIZE+0x64a>
     630:	63 2f                	movsxd ebp,DWORD PTR [rdi]
     632:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
     635:	6d                   	ins    DWORD PTR es:[rdi],dx
     636:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     637:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     638:	2f                   	(bad)  
     639:	6c                   	ins    BYTE PTR es:[rdi],dx
     63a:	69 62 2f 6c 69 6e 6b 	imul   esp,DWORD PTR [rdx+0x2f],0x6b6e696c
     641:	65 64 5f             	gs fs pop rdi
     644:	6c                   	ins    BYTE PTR es:[rdi],dx
     645:	69 73 74 00 73 72 63 	imul   esi,DWORD PTR [rbx+0x74],0x63727300
     64c:	2f                   	(bad)  
     64d:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
     650:	6d                   	ins    DWORD PTR es:[rdi],dx
     651:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     652:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     653:	2f                   	(bad)  
     654:	6c                   	ins    BYTE PTR es:[rdi],dx
     655:	69 62 2f 6c 69 6e 6b 	imul   esp,DWORD PTR [rdx+0x2f],0x6b6e696c
     65c:	65 64 5f             	gs fs pop rdi
     65f:	6c                   	ins    BYTE PTR es:[rdi],dx
     660:	69 73 74 2f 69 6e 63 	imul   esi,DWORD PTR [rbx+0x74],0x636e692f
     667:	00 2f                	add    BYTE PTR [rdi],ch
     669:	75 73                	jne    6de <MULTIBOOT_HEADER_SIZE+0x686>
     66b:	72 2f                	jb     69c <MULTIBOOT_HEADER_SIZE+0x644>
     66d:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
     674:	00 00                	add    BYTE PTR [rax],al
     676:	6c                   	ins    BYTE PTR es:[rdi],dx
     677:	69 6e 6b 65 64 5f 6c 	imul   ebp,DWORD PTR [rsi+0x6b],0x6c5f6465
     67e:	69 73 74 2e 63 00 01 	imul   esi,DWORD PTR [rbx+0x74],0x100632e
     685:	00 00                	add    BYTE PTR [rax],al
     687:	6c                   	ins    BYTE PTR es:[rdi],dx
     688:	69 6e 6b 65 64 5f 6c 	imul   ebp,DWORD PTR [rsi+0x6b],0x6c5f6465
     68f:	69 73 74 2e 68 00 02 	imul   esi,DWORD PTR [rbx+0x74],0x200682e
     696:	00 00                	add    BYTE PTR [rax],al
     698:	73 74                	jae    70e <MULTIBOOT_HEADER_SIZE+0x6b6>
     69a:	64 69 6e 74 2e 68 00 	imul   ebp,DWORD PTR fs:[rsi+0x74],0x300682e
     6a1:	03 
     6a2:	00 00                	add    BYTE PTR [rax],al
     6a4:	00 00                	add    BYTE PTR [rax],al
     6a6:	09 02                	or     DWORD PTR [rdx],eax
     6a8:	50                   	push   rax
     6a9:	77 00                	ja     6ab <MULTIBOOT_HEADER_SIZE+0x653>
     6ab:	01 00                	add    DWORD PTR [rax],eax
     6ad:	00 00                	add    BYTE PTR [rax],al
     6af:	00 1a                	add    BYTE PTR [rdx],bl
     6b1:	bb 76 bb ae 2f       	mov    ebx,0x2faebb76
     6b6:	31 f3                	xor    ebx,esi
     6b8:	00 02                	add    BYTE PTR [rdx],al
     6ba:	04 01                	add    al,0x1
     6bc:	06                   	(bad)  
     6bd:	74 06                	je     6c5 <MULTIBOOT_HEADER_SIZE+0x66d>
     6bf:	77 bc                	ja     67d <MULTIBOOT_HEADER_SIZE+0x625>
     6c1:	76 b0                	jbe    673 <MULTIBOOT_HEADER_SIZE+0x61b>
     6c3:	bd ad bc 03 70       	mov    ebp,0x7003bcad
     6c8:	3c 03                	cmp    al,0x3
     6ca:	11 20                	adc    DWORD PTR [rax],esp
     6cc:	32 f3                	xor    dh,bl
     6ce:	00 02                	add    BYTE PTR [rdx],al
     6d0:	04 01                	add    al,0x1
     6d2:	06                   	(bad)  
     6d3:	74 06                	je     6db <MULTIBOOT_HEADER_SIZE+0x683>
     6d5:	77 ae                	ja     685 <MULTIBOOT_HEADER_SIZE+0x62d>
     6d7:	76 be                	jbe    697 <MULTIBOOT_HEADER_SIZE+0x63f>
     6d9:	af                   	scas   eax,DWORD PTR es:[rdi]
     6da:	bb ae 03 70 3c       	mov    ebx,0x3c7003ae
     6df:	03 11                	add    edx,DWORD PTR [rcx]
     6e1:	20 31                	and    BYTE PTR [rcx],dh
     6e3:	bb 77 bc 08 31       	mov    ebx,0x3108bc77
     6e8:	ca 08 23             	retf   0x2308
     6eb:	03 74 3c 03          	add    esi,DWORD PTR [rsp+rdi*1+0x3]
     6ef:	0c 3c                	or     al,0x3c
     6f1:	21 31                	and    DWORD PTR [rcx],esi
     6f3:	bb 76 ad bc 2f       	mov    ebx,0x2fbcad76
     6f8:	31 bb 75 75 bb 76    	xor    DWORD PTR [rbx+0x76bb7575],edi
     6fe:	75 ad                	jne    6ad <MULTIBOOT_HEADER_SIZE+0x655>
     700:	bb 30 48 00 02       	mov    ebx,0x2004830
     705:	04 01                	add    al,0x1
     707:	06                   	(bad)  
     708:	9e                   	sahf   
     709:	06                   	(bad)  
     70a:	08 32                	or     BYTE PTR [rdx],dh
     70c:	3d 31 f3 00 02       	cmp    eax,0x200f331
     711:	04 01                	add    al,0x1
     713:	06                   	(bad)  
     714:	74 06                	je     71c <MULTIBOOT_HEADER_SIZE+0x6c4>
     716:	77 bc                	ja     6d4 <MULTIBOOT_HEADER_SIZE+0x67c>
     718:	08 4c 03 7a          	or     BYTE PTR [rbx+rax*1+0x7a],cl
     71c:	3c 27                	cmp    al,0x27
     71e:	31 f3                	xor    ebx,esi
     720:	00 02                	add    BYTE PTR [rdx],al
     722:	04 01                	add    al,0x1
     724:	06                   	(bad)  
     725:	74 06                	je     72d <MULTIBOOT_HEADER_SIZE+0x6d5>
     727:	77 bc                	ja     6e5 <MULTIBOOT_HEADER_SIZE+0x68d>
     729:	08 a0 03 7a 3c 27    	or     BYTE PTR [rax+0x273c7a03],ah
     72f:	31 bb 75 75 08 59    	xor    DWORD PTR [rbx+0x59087575],edi
     735:	31 bb 75 76 08 67    	xor    DWORD PTR [rbx+0x67087675],edi
     73b:	32 08                	xor    cl,BYTE PTR [rax]
     73d:	3d 00 02 04 01       	cmp    eax,0x1040200
     742:	06                   	(bad)  
     743:	ac                   	lods   al,BYTE PTR ds:[rsi]
     744:	06                   	(bad)  
     745:	76 bb                	jbe    702 <MULTIBOOT_HEADER_SIZE+0x6aa>
     747:	79 08                	jns    751 <MULTIBOOT_HEADER_SIZE+0x6f9>
     749:	5a                   	pop    rdx
     74a:	cb                   	retf   
     74b:	bd cf 08 30 cb       	mov    ebp,0xcb3008cf
     750:	03 65 d6             	add    esp,DWORD PTR [rbp-0x2a]
     753:	03 1e                	add    ebx,DWORD PTR [rsi]
     755:	20 31                	and    BYTE PTR [rcx],dh
     757:	08 2f                	or     BYTE PTR [rdi],ch
     759:	00 02                	add    BYTE PTR [rdx],al
     75b:	04 01                	add    al,0x1
     75d:	06                   	(bad)  
     75e:	74 00                	je     760 <MULTIBOOT_HEADER_SIZE+0x708>
     760:	02 04 02             	add    al,BYTE PTR [rdx+rax*1]
     763:	66 06                	data16 (bad) 
     765:	76 08                	jbe    76f <MULTIBOOT_HEADER_SIZE+0x717>
     767:	75 bc                	jne    725 <MULTIBOOT_HEADER_SIZE+0x6cd>
     769:	76 68                	jbe    7d3 <MULTIBOOT_HEADER_SIZE+0x77b>
     76b:	08 52 2b             	or     BYTE PTR [rdx+0x2b],dl
     76e:	08 69 03             	or     BYTE PTR [rcx+0x3],ch
     771:	70 3c                	jo     7af <MULTIBOOT_HEADER_SIZE+0x757>
     773:	03 10                	add    edx,DWORD PTR [rax]
     775:	3c 21                	cmp    al,0x21
     777:	31 e5                	xor    ebp,esp
     779:	00 02                	add    BYTE PTR [rdx],al
     77b:	04 01                	add    al,0x1
     77d:	06                   	(bad)  
     77e:	74 06                	je     786 <MULTIBOOT_HEADER_SIZE+0x72e>
     780:	67 75 08             	addr32 jne 78b <MULTIBOOT_HEADER_SIZE+0x733>
     783:	4c 75 76             	rex.WR jne 7fc <MULTIBOOT_HEADER_SIZE+0x7a4>
     786:	08 2f                	or     BYTE PTR [rdi],ch
     788:	31 f3                	xor    ebx,esi
     78a:	00 02                	add    BYTE PTR [rdx],al
     78c:	04 01                	add    al,0x1
     78e:	06                   	(bad)  
     78f:	74 06                	je     797 <MULTIBOOT_HEADER_SIZE+0x73f>
     791:	75 76                	jne    809 <MULTIBOOT_HEADER_SIZE+0x7b1>
     793:	bc ca e7 bc e7       	mov    esp,0xe7bce7ca
     798:	bc 4b 31 e5 00       	mov    esp,0xe5314b
     79d:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     7a0:	06                   	(bad)  
     7a1:	74 00                	je     7a3 <MULTIBOOT_HEADER_SIZE+0x74b>
     7a3:	02 04 02             	add    al,BYTE PTR [rdx+rax*1]
     7a6:	66 06                	data16 (bad) 
     7a8:	bb 75 ad 00 02       	mov    ebx,0x200ad75
     7ad:	04 02                	add    al,0x2
     7af:	06                   	(bad)  
     7b0:	20 00                	and    BYTE PTR [rax],al
     7b2:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     7b5:	c8 06 08 2f          	enter  0x806,0x2f
     7b9:	4b 31 bb 76 bc 4b 31 	rex.WXB xor QWORD PTR [r11+0x314bbc76],rdi
     7c0:	bb 76 ae 4b 31       	mov    ebx,0x314bae76
     7c5:	bb 83 76 ae 4b       	mov    ebx,0x4bae7683
     7ca:	31 bb 83 76 bc 4b    	xor    DWORD PTR [rbx+0x4bbc7683],edi
     7d0:	31 08                	xor    DWORD PTR [rax],ecx
     7d2:	3d 00 02 04 01       	cmp    eax,0x1040200
     7d7:	06                   	(bad)  
     7d8:	74 06                	je     7e0 <MULTIBOOT_HEADER_SIZE+0x788>
     7da:	75 9f                	jne    77b <MULTIBOOT_HEADER_SIZE+0x723>
     7dc:	75 f3                	jne    7d1 <MULTIBOOT_HEADER_SIZE+0x779>
     7de:	30 76 08             	xor    BYTE PTR [rsi+0x8],dh
     7e1:	76 5d                	jbe    840 <MULTIBOOT_HEADER_SIZE+0x7e8>
     7e3:	00 02                	add    BYTE PTR [rdx],al
     7e5:	04 01                	add    al,0x1
     7e7:	06                   	(bad)  
     7e8:	08 4a 06             	or     BYTE PTR [rdx+0x6],cl
     7eb:	08 30                	or     BYTE PTR [rax],dh
     7ed:	5b                   	pop    rbx
     7ee:	4b 03 6f f2          	rex.WXB add rbp,QWORD PTR [r15-0xe]
     7f2:	03 14 74             	add    edx,DWORD PTR [rsp+rsi*2]
     7f5:	59                   	pop    rcx
     7f6:	02 02                	add    al,BYTE PTR [rdx]
     7f8:	00 01                	add    BYTE PTR [rcx],al
     7fa:	01 9f 06 00 00 02    	add    DWORD PTR [rdi+0x2000006],ebx
     800:	00 48 00             	add    BYTE PTR [rax+0x0],cl
     803:	00 00                	add    BYTE PTR [rax],al
     805:	01 01                	add    DWORD PTR [rcx],eax
     807:	fb                   	sti    
     808:	0e                   	(bad)  
     809:	0d 00 01 01 01       	or     eax,0x1010100
     80e:	01 00                	add    DWORD PTR [rax],eax
     810:	00 00                	add    BYTE PTR [rax],al
     812:	01 00                	add    DWORD PTR [rax],eax
     814:	00 01                	add    BYTE PTR [rcx],al
     816:	73 72                	jae    88a <MULTIBOOT_HEADER_SIZE+0x832>
     818:	63 2f                	movsxd ebp,DWORD PTR [rdi]
     81a:	74 65                	je     881 <MULTIBOOT_HEADER_SIZE+0x829>
     81c:	73 74                	jae    892 <MULTIBOOT_HEADER_SIZE+0x83a>
     81e:	00 2f                	add    BYTE PTR [rdi],ch
     820:	75 73                	jne    895 <MULTIBOOT_HEADER_SIZE+0x83d>
     822:	72 2f                	jb     853 <MULTIBOOT_HEADER_SIZE+0x7fb>
     824:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
     82b:	00 00                	add    BYTE PTR [rax],al
     82d:	6b 5f 73 61          	imul   ebx,DWORD PTR [rdi+0x73],0x61
     831:	6c                   	ins    BYTE PTR es:[rdi],dx
     832:	6c                   	ins    BYTE PTR es:[rdi],dx
     833:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     834:	63 5f 74             	movsxd ebx,DWORD PTR [rdi+0x74]
     837:	65 73 74             	gs jae 8ae <MULTIBOOT_HEADER_SIZE+0x856>
     83a:	2e 63 00             	movsxd eax,DWORD PTR cs:[rax]
     83d:	01 00                	add    DWORD PTR [rax],eax
     83f:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
     842:	64 69 6e 74 2e 68 00 	imul   ebp,DWORD PTR fs:[rsi+0x74],0x200682e
     849:	02 
     84a:	00 00                	add    BYTE PTR [rax],al
     84c:	00 00                	add    BYTE PTR [rax],al
     84e:	09 02                	or     DWORD PTR [rdx],eax
     850:	fc                   	cld    
     851:	7d 00                	jge    853 <MULTIBOOT_HEADER_SIZE+0x7fb>
     853:	01 00                	add    DWORD PTR [rax],eax
     855:	00 00                	add    BYTE PTR [rax],al
     857:	00 03                	add    BYTE PTR [rbx],al
     859:	0e                   	(bad)  
     85a:	01 83 e5 75 4b 08    	add    DWORD PTR [rbx+0x84b75e5],eax
     860:	91                   	xchg   ecx,eax
     861:	31 83 4b e5 00 02    	xor    DWORD PTR [rbx+0x200e54b],eax
     867:	04 01                	add    al,0x1
     869:	06                   	(bad)  
     86a:	66 00 02             	data16 add BYTE PTR [rdx],al
     86d:	04 03                	add    al,0x3
     86f:	08 3c 00             	or     BYTE PTR [rax+rax*1],bh
     872:	02 04 04             	add    al,BYTE PTR [rsp+rax*1]
     875:	74 00                	je     877 <MULTIBOOT_HEADER_SIZE+0x81f>
     877:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
     87a:	58                   	pop    rax
     87b:	00 02                	add    BYTE PTR [rdx],al
     87d:	04 06                	add    al,0x6
     87f:	06                   	(bad)  
     880:	75 00                	jne    882 <MULTIBOOT_HEADER_SIZE+0x82a>
     882:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
     885:	08 ad 00 02 04 06    	or     BYTE PTR [rbp+0x6040200],ch
     88b:	83 00 02             	add    DWORD PTR [rax],0x2
     88e:	04 01                	add    al,0x1
     890:	06                   	(bad)  
     891:	66 00 02             	data16 add BYTE PTR [rdx],al
     894:	04 03                	add    al,0x3
     896:	08 c8                	or     al,cl
     898:	00 02                	add    BYTE PTR [rdx],al
     89a:	04 04                	add    al,0x4
     89c:	74 00                	je     89e <MULTIBOOT_HEADER_SIZE+0x846>
     89e:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
     8a1:	58                   	pop    rax
     8a2:	00 02                	add    BYTE PTR [rdx],al
     8a4:	04 06                	add    al,0x6
     8a6:	06                   	(bad)  
     8a7:	75 00                	jne    8a9 <MULTIBOOT_HEADER_SIZE+0x851>
     8a9:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
     8ac:	4b 31 83 4b e5 00 02 	rex.WXB xor QWORD PTR [r11+0x200e54b],rax
     8b3:	04 01                	add    al,0x1
     8b5:	06                   	(bad)  
     8b6:	66 00 02             	data16 add BYTE PTR [rdx],al
     8b9:	04 03                	add    al,0x3
     8bb:	08 d6                	or     dh,dl
     8bd:	00 02                	add    BYTE PTR [rdx],al
     8bf:	04 04                	add    al,0x4
     8c1:	74 00                	je     8c3 <MULTIBOOT_HEADER_SIZE+0x86b>
     8c3:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
     8c6:	58                   	pop    rax
     8c7:	00 02                	add    BYTE PTR [rdx],al
     8c9:	04 06                	add    al,0x6
     8cb:	06                   	(bad)  
     8cc:	75 00                	jne    8ce <MULTIBOOT_HEADER_SIZE+0x876>
     8ce:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
     8d1:	75 00                	jne    8d3 <MULTIBOOT_HEADER_SIZE+0x87b>
     8d3:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
     8d6:	4b 00 02             	rex.WXB add BYTE PTR [r10],al
     8d9:	04 01                	add    al,0x1
     8db:	06                   	(bad)  
     8dc:	66 00 02             	data16 add BYTE PTR [rdx],al
     8df:	04 03                	add    al,0x3
     8e1:	08 c8                	or     al,cl
     8e3:	00 02                	add    BYTE PTR [rdx],al
     8e5:	04 04                	add    al,0x4
     8e7:	74 00                	je     8e9 <MULTIBOOT_HEADER_SIZE+0x891>
     8e9:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
     8ec:	58                   	pop    rax
     8ed:	00 02                	add    BYTE PTR [rdx],al
     8ef:	04 06                	add    al,0x6
     8f1:	06                   	(bad)  
     8f2:	75 00                	jne    8f4 <MULTIBOOT_HEADER_SIZE+0x89c>
     8f4:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
     8f7:	4b 31 83 4b e5 00 02 	rex.WXB xor QWORD PTR [r11+0x200e54b],rax
     8fe:	04 01                	add    al,0x1
     900:	06                   	(bad)  
     901:	66 00 02             	data16 add BYTE PTR [rdx],al
     904:	04 03                	add    al,0x3
     906:	08 d6                	or     dh,dl
     908:	00 02                	add    BYTE PTR [rdx],al
     90a:	04 04                	add    al,0x4
     90c:	74 00                	je     90e <MULTIBOOT_HEADER_SIZE+0x8b6>
     90e:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
     911:	58                   	pop    rax
     912:	00 02                	add    BYTE PTR [rdx],al
     914:	04 06                	add    al,0x6
     916:	06                   	(bad)  
     917:	75 00                	jne    919 <MULTIBOOT_HEADER_SIZE+0x8c1>
     919:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
     91c:	75 00                	jne    91e <MULTIBOOT_HEADER_SIZE+0x8c6>
     91e:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
     921:	4b 00 02             	rex.WXB add BYTE PTR [r10],al
     924:	04 01                	add    al,0x1
     926:	06                   	(bad)  
     927:	66 00 02             	data16 add BYTE PTR [rdx],al
     92a:	04 03                	add    al,0x3
     92c:	08 c8                	or     al,cl
     92e:	00 02                	add    BYTE PTR [rdx],al
     930:	04 04                	add    al,0x4
     932:	74 00                	je     934 <MULTIBOOT_HEADER_SIZE+0x8dc>
     934:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
     937:	58                   	pop    rax
     938:	00 02                	add    BYTE PTR [rdx],al
     93a:	04 06                	add    al,0x6
     93c:	06                   	(bad)  
     93d:	75 00                	jne    93f <MULTIBOOT_HEADER_SIZE+0x8e7>
     93f:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
     942:	4b 31 83 4b e5 00 02 	rex.WXB xor QWORD PTR [r11+0x200e54b],rax
     949:	04 01                	add    al,0x1
     94b:	06                   	(bad)  
     94c:	66 00 02             	data16 add BYTE PTR [rdx],al
     94f:	04 03                	add    al,0x3
     951:	08 3c 00             	or     BYTE PTR [rax+rax*1],bh
     954:	02 04 04             	add    al,BYTE PTR [rsp+rax*1]
     957:	74 00                	je     959 <MULTIBOOT_HEADER_SIZE+0x901>
     959:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
     95c:	58                   	pop    rax
     95d:	00 02                	add    BYTE PTR [rdx],al
     95f:	04 06                	add    al,0x6
     961:	06                   	(bad)  
     962:	75 00                	jne    964 <MULTIBOOT_HEADER_SIZE+0x90c>
     964:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     967:	06                   	(bad)  
     968:	66 00 02             	data16 add BYTE PTR [rdx],al
     96b:	04 03                	add    al,0x3
     96d:	08 3c 00             	or     BYTE PTR [rax+rax*1],bh
     970:	02 04 04             	add    al,BYTE PTR [rsp+rax*1]
     973:	74 00                	je     975 <MULTIBOOT_HEADER_SIZE+0x91d>
     975:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
     978:	58                   	pop    rax
     979:	00 02                	add    BYTE PTR [rdx],al
     97b:	04 06                	add    al,0x6
     97d:	06                   	(bad)  
     97e:	75 00                	jne    980 <MULTIBOOT_HEADER_SIZE+0x928>
     980:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     983:	06                   	(bad)  
     984:	66 00 02             	data16 add BYTE PTR [rdx],al
     987:	04 03                	add    al,0x3
     989:	08 3c 00             	or     BYTE PTR [rax+rax*1],bh
     98c:	02 04 04             	add    al,BYTE PTR [rsp+rax*1]
     98f:	74 00                	je     991 <MULTIBOOT_HEADER_SIZE+0x939>
     991:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
     994:	58                   	pop    rax
     995:	00 02                	add    BYTE PTR [rdx],al
     997:	04 06                	add    al,0x6
     999:	06                   	(bad)  
     99a:	75 00                	jne    99c <MULTIBOOT_HEADER_SIZE+0x944>
     99c:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
     99f:	ad                   	lods   eax,DWORD PTR ds:[rsi]
     9a0:	00 02                	add    BYTE PTR [rdx],al
     9a2:	04 06                	add    al,0x6
     9a4:	81 00 02 04 06 3e    	add    DWORD PTR [rax],0x3e060402
     9aa:	00 02                	add    BYTE PTR [rdx],al
     9ac:	04 06                	add    al,0x6
     9ae:	80 00 02             	add    BYTE PTR [rax],0x2
     9b1:	04 06                	add    al,0x6
     9b3:	3f                   	(bad)  
     9b4:	00 02                	add    BYTE PTR [rdx],al
     9b6:	04 06                	add    al,0x6
     9b8:	08 39                	or     BYTE PTR [rcx],bh
     9ba:	00 02                	add    BYTE PTR [rdx],al
     9bc:	04 06                	add    al,0x6
     9be:	40 00 02             	add    BYTE PTR [rdx],al
     9c1:	04 06                	add    al,0x6
     9c3:	f3 00 02             	repz add BYTE PTR [rdx],al
     9c6:	04 01                	add    al,0x1
     9c8:	06                   	(bad)  
     9c9:	66 00 02             	data16 add BYTE PTR [rdx],al
     9cc:	04 03                	add    al,0x3
     9ce:	08 c8                	or     al,cl
     9d0:	00 02                	add    BYTE PTR [rdx],al
     9d2:	04 04                	add    al,0x4
     9d4:	74 00                	je     9d6 <MULTIBOOT_HEADER_SIZE+0x97e>
     9d6:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
     9d9:	58                   	pop    rax
     9da:	00 02                	add    BYTE PTR [rdx],al
     9dc:	04 06                	add    al,0x6
     9de:	06                   	(bad)  
     9df:	75 00                	jne    9e1 <MULTIBOOT_HEADER_SIZE+0x989>
     9e1:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
     9e4:	4b 31 84 4b 02 22 13 	xor    QWORD PTR [r11+r9*2+0x8132202],rax
     9eb:	08 
     9ec:	4b 00 02             	rex.WXB add BYTE PTR [r10],al
     9ef:	04 01                	add    al,0x1
     9f1:	06                   	(bad)  
     9f2:	66 00 02             	data16 add BYTE PTR [rdx],al
     9f5:	04 03                	add    al,0x3
     9f7:	74 00                	je     9f9 <MULTIBOOT_HEADER_SIZE+0x9a1>
     9f9:	02 04 04             	add    al,BYTE PTR [rsp+rax*1]
     9fc:	74 00                	je     9fe <MULTIBOOT_HEADER_SIZE+0x9a6>
     9fe:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
     a01:	58                   	pop    rax
     a02:	00 02                	add    BYTE PTR [rdx],al
     a04:	04 06                	add    al,0x6
     a06:	06                   	(bad)  
     a07:	75 00                	jne    a09 <MULTIBOOT_HEADER_SIZE+0x9b1>
     a09:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
     a0c:	08 83 00 02 04 06    	or     BYTE PTR [rbx+0x6040200],al
     a12:	4b 00 02             	rex.WXB add BYTE PTR [r10],al
     a15:	04 01                	add    al,0x1
     a17:	06                   	(bad)  
     a18:	66 00 02             	data16 add BYTE PTR [rdx],al
     a1b:	04 03                	add    al,0x3
     a1d:	08 c8                	or     al,cl
     a1f:	00 02                	add    BYTE PTR [rdx],al
     a21:	04 04                	add    al,0x4
     a23:	74 00                	je     a25 <MULTIBOOT_HEADER_SIZE+0x9cd>
     a25:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
     a28:	58                   	pop    rax
     a29:	00 02                	add    BYTE PTR [rdx],al
     a2b:	04 06                	add    al,0x6
     a2d:	06                   	(bad)  
     a2e:	75 00                	jne    a30 <MULTIBOOT_HEADER_SIZE+0x9d8>
     a30:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
     a33:	4b 32 84 4b e5 08 2f 	rex.WXB xor al,BYTE PTR [r11+r9*2+0x2f08e5]
     a3a:	00 
     a3b:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     a3e:	06                   	(bad)  
     a3f:	66 00 02             	data16 add BYTE PTR [rdx],al
     a42:	04 03                	add    al,0x3
     a44:	74 00                	je     a46 <MULTIBOOT_HEADER_SIZE+0x9ee>
     a46:	02 04 04             	add    al,BYTE PTR [rsp+rax*1]
     a49:	74 00                	je     a4b <MULTIBOOT_HEADER_SIZE+0x9f3>
     a4b:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
     a4e:	58                   	pop    rax
     a4f:	00 02                	add    BYTE PTR [rdx],al
     a51:	04 06                	add    al,0x6
     a53:	06                   	(bad)  
     a54:	76 00                	jbe    a56 <MULTIBOOT_HEADER_SIZE+0x9fe>
     a56:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
     a59:	08 13                	or     BYTE PTR [rbx],dl
     a5b:	00 02                	add    BYTE PTR [rdx],al
     a5d:	04 06                	add    al,0x6
     a5f:	75 00                	jne    a61 <MULTIBOOT_HEADER_SIZE+0xa09>
     a61:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
     a64:	4b 00 02             	rex.WXB add BYTE PTR [r10],al
     a67:	04 01                	add    al,0x1
     a69:	06                   	(bad)  
     a6a:	66 00 02             	data16 add BYTE PTR [rdx],al
     a6d:	04 03                	add    al,0x3
     a6f:	08 c8                	or     al,cl
     a71:	00 02                	add    BYTE PTR [rdx],al
     a73:	04 04                	add    al,0x4
     a75:	74 00                	je     a77 <MULTIBOOT_HEADER_SIZE+0xa1f>
     a77:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
     a7a:	58                   	pop    rax
     a7b:	00 02                	add    BYTE PTR [rdx],al
     a7d:	04 06                	add    al,0x6
     a7f:	06                   	(bad)  
     a80:	75 00                	jne    a82 <MULTIBOOT_HEADER_SIZE+0xa2a>
     a82:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
     a85:	4b 31 84 4b e5 08 c9 	xor    QWORD PTR [r11+r9*2+0xc908e5],rax
     a8c:	00 
     a8d:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     a90:	06                   	(bad)  
     a91:	66 00 02             	data16 add BYTE PTR [rdx],al
     a94:	04 03                	add    al,0x3
     a96:	74 00                	je     a98 <MULTIBOOT_HEADER_SIZE+0xa40>
     a98:	02 04 04             	add    al,BYTE PTR [rsp+rax*1]
     a9b:	74 00                	je     a9d <MULTIBOOT_HEADER_SIZE+0xa45>
     a9d:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
     aa0:	58                   	pop    rax
     aa1:	00 02                	add    BYTE PTR [rdx],al
     aa3:	04 06                	add    al,0x6
     aa5:	06                   	(bad)  
     aa6:	76 00                	jbe    aa8 <MULTIBOOT_HEADER_SIZE+0xa50>
     aa8:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
     aab:	08 13                	or     BYTE PTR [rbx],dl
     aad:	00 02                	add    BYTE PTR [rdx],al
     aaf:	04 06                	add    al,0x6
     ab1:	75 00                	jne    ab3 <MULTIBOOT_HEADER_SIZE+0xa5b>
     ab3:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
     ab6:	4b 00 02             	rex.WXB add BYTE PTR [r10],al
     ab9:	04 01                	add    al,0x1
     abb:	06                   	(bad)  
     abc:	66 00 02             	data16 add BYTE PTR [rdx],al
     abf:	04 03                	add    al,0x3
     ac1:	08 c8                	or     al,cl
     ac3:	00 02                	add    BYTE PTR [rdx],al
     ac5:	04 04                	add    al,0x4
     ac7:	74 00                	je     ac9 <MULTIBOOT_HEADER_SIZE+0xa71>
     ac9:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
     acc:	58                   	pop    rax
     acd:	00 02                	add    BYTE PTR [rdx],al
     acf:	04 06                	add    al,0x6
     ad1:	06                   	(bad)  
     ad2:	75 00                	jne    ad4 <MULTIBOOT_HEADER_SIZE+0xa7c>
     ad4:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
     ad7:	4b 31 84 4b e5 08 2f 	xor    QWORD PTR [r11+r9*2+0x82f08e5],rax
     ade:	08 
     adf:	2f                   	(bad)  
     ae0:	08 2f                	or     BYTE PTR [rdi],ch
     ae2:	08 2f                	or     BYTE PTR [rdi],ch
     ae4:	00 02                	add    BYTE PTR [rdx],al
     ae6:	04 01                	add    al,0x1
     ae8:	06                   	(bad)  
     ae9:	66 00 02             	data16 add BYTE PTR [rdx],al
     aec:	04 03                	add    al,0x3
     aee:	74 00                	je     af0 <MULTIBOOT_HEADER_SIZE+0xa98>
     af0:	02 04 05 74 00 02 04 	add    al,BYTE PTR [rax*1+0x4020074]
     af7:	07                   	(bad)  
     af8:	74 00                	je     afa <MULTIBOOT_HEADER_SIZE+0xaa2>
     afa:	02 04 09             	add    al,BYTE PTR [rcx+rcx*1]
     afd:	74 00                	je     aff <MULTIBOOT_HEADER_SIZE+0xaa7>
     aff:	02 04 0a             	add    al,BYTE PTR [rdx+rcx*1]
     b02:	74 00                	je     b04 <MULTIBOOT_HEADER_SIZE+0xaac>
     b04:	02 04 0c             	add    al,BYTE PTR [rsp+rcx*1]
     b07:	58                   	pop    rax
     b08:	00 02                	add    BYTE PTR [rdx],al
     b0a:	04 0c                	add    al,0xc
     b0c:	06                   	(bad)  
     b0d:	75 00                	jne    b0f <MULTIBOOT_HEADER_SIZE+0xab7>
     b0f:	02 04 0c             	add    al,BYTE PTR [rsp+rcx*1]
     b12:	08 13                	or     BYTE PTR [rbx],dl
     b14:	00 02                	add    BYTE PTR [rdx],al
     b16:	04 0c                	add    al,0xc
     b18:	08 14 00             	or     BYTE PTR [rax+rax*1],dl
     b1b:	02 04 0c             	add    al,BYTE PTR [rsp+rcx*1]
     b1e:	ad                   	lods   eax,DWORD PTR ds:[rsi]
     b1f:	00 02                	add    BYTE PTR [rdx],al
     b21:	04 0c                	add    al,0xc
     b23:	81 00 02 04 0c 3e    	add    DWORD PTR [rax],0x3e0c0402
     b29:	00 02                	add    BYTE PTR [rdx],al
     b2b:	04 0c                	add    al,0xc
     b2d:	80 00 02             	add    BYTE PTR [rax],0x2
     b30:	04 0c                	add    al,0xc
     b32:	3f                   	(bad)  
     b33:	00 02                	add    BYTE PTR [rdx],al
     b35:	04 0c                	add    al,0xc
     b37:	7f 00                	jg     b39 <MULTIBOOT_HEADER_SIZE+0xae1>
     b39:	02 04 0c             	add    al,BYTE PTR [rsp+rcx*1]
     b3c:	40 00 02             	add    BYTE PTR [rdx],al
     b3f:	04 0c                	add    al,0xc
     b41:	08 38                	or     BYTE PTR [rax],bh
     b43:	00 02                	add    BYTE PTR [rdx],al
     b45:	04 0c                	add    al,0xc
     b47:	41 00 02             	add    BYTE PTR [r10],al
     b4a:	04 0c                	add    al,0xc
     b4c:	08 3d 00 02 04 01    	or     BYTE PTR [rip+0x1040200],bh        # 1040d52 <kernel_end+0x24d5a>
     b52:	06                   	(bad)  
     b53:	66 00 02             	data16 add BYTE PTR [rdx],al
     b56:	04 03                	add    al,0x3
     b58:	08 c8                	or     al,cl
     b5a:	00 02                	add    BYTE PTR [rdx],al
     b5c:	04 04                	add    al,0x4
     b5e:	74 00                	je     b60 <MULTIBOOT_HEADER_SIZE+0xb08>
     b60:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
     b63:	58                   	pop    rax
     b64:	00 02                	add    BYTE PTR [rdx],al
     b66:	04 06                	add    al,0x6
     b68:	06                   	(bad)  
     b69:	75 00                	jne    b6b <MULTIBOOT_HEADER_SIZE+0xb13>
     b6b:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
     b6e:	4b 31 84 4b e5 08 2f 	xor    QWORD PTR [r11+r9*2+0x82f08e5],rax
     b75:	08 
     b76:	2f                   	(bad)  
     b77:	08 2f                	or     BYTE PTR [rdi],ch
     b79:	08 2f                	or     BYTE PTR [rdi],ch
     b7b:	00 02                	add    BYTE PTR [rdx],al
     b7d:	04 01                	add    al,0x1
     b7f:	06                   	(bad)  
     b80:	66 00 02             	data16 add BYTE PTR [rdx],al
     b83:	04 03                	add    al,0x3
     b85:	74 00                	je     b87 <MULTIBOOT_HEADER_SIZE+0xb2f>
     b87:	02 04 05 74 00 02 04 	add    al,BYTE PTR [rax*1+0x4020074]
     b8e:	07                   	(bad)  
     b8f:	74 00                	je     b91 <MULTIBOOT_HEADER_SIZE+0xb39>
     b91:	02 04 09             	add    al,BYTE PTR [rcx+rcx*1]
     b94:	74 00                	je     b96 <MULTIBOOT_HEADER_SIZE+0xb3e>
     b96:	02 04 0a             	add    al,BYTE PTR [rdx+rcx*1]
     b99:	74 00                	je     b9b <MULTIBOOT_HEADER_SIZE+0xb43>
     b9b:	02 04 0c             	add    al,BYTE PTR [rsp+rcx*1]
     b9e:	58                   	pop    rax
     b9f:	00 02                	add    BYTE PTR [rdx],al
     ba1:	04 0c                	add    al,0xc
     ba3:	06                   	(bad)  
     ba4:	75 00                	jne    ba6 <MULTIBOOT_HEADER_SIZE+0xb4e>
     ba6:	02 04 0c             	add    al,BYTE PTR [rsp+rcx*1]
     ba9:	08 14 00             	or     BYTE PTR [rax+rax*1],dl
     bac:	02 04 0c             	add    al,BYTE PTR [rsp+rcx*1]
     baf:	ad                   	lods   eax,DWORD PTR ds:[rsi]
     bb0:	00 02                	add    BYTE PTR [rdx],al
     bb2:	04 0c                	add    al,0xc
     bb4:	81 00 02 04 0c 3e    	add    DWORD PTR [rax],0x3e0c0402
     bba:	00 02                	add    BYTE PTR [rdx],al
     bbc:	04 0c                	add    al,0xc
     bbe:	80 00 02             	add    BYTE PTR [rax],0x2
     bc1:	04 0c                	add    al,0xc
     bc3:	3f                   	(bad)  
     bc4:	00 02                	add    BYTE PTR [rdx],al
     bc6:	04 0c                	add    al,0xc
     bc8:	08 39                	or     BYTE PTR [rcx],bh
     bca:	00 02                	add    BYTE PTR [rdx],al
     bcc:	04 0c                	add    al,0xc
     bce:	40 00 02             	add    BYTE PTR [rdx],al
     bd1:	04 0c                	add    al,0xc
     bd3:	f3 00 02             	repz add BYTE PTR [rdx],al
     bd6:	04 01                	add    al,0x1
     bd8:	06                   	(bad)  
     bd9:	66 00 02             	data16 add BYTE PTR [rdx],al
     bdc:	04 03                	add    al,0x3
     bde:	08 c8                	or     al,cl
     be0:	00 02                	add    BYTE PTR [rdx],al
     be2:	04 04                	add    al,0x4
     be4:	74 00                	je     be6 <MULTIBOOT_HEADER_SIZE+0xb8e>
     be6:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
     be9:	58                   	pop    rax
     bea:	00 02                	add    BYTE PTR [rdx],al
     bec:	04 06                	add    al,0x6
     bee:	06                   	(bad)  
     bef:	75 00                	jne    bf1 <MULTIBOOT_HEADER_SIZE+0xb99>
     bf1:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
     bf4:	4b 31 84 4b e5 08 2f 	xor    QWORD PTR [r11+r9*2+0x82f08e5],rax
     bfb:	08 
     bfc:	2f                   	(bad)  
     bfd:	08 2f                	or     BYTE PTR [rdi],ch
     bff:	08 2f                	or     BYTE PTR [rdi],ch
     c01:	00 02                	add    BYTE PTR [rdx],al
     c03:	04 01                	add    al,0x1
     c05:	06                   	(bad)  
     c06:	66 00 02             	data16 add BYTE PTR [rdx],al
     c09:	04 03                	add    al,0x3
     c0b:	74 00                	je     c0d <MULTIBOOT_HEADER_SIZE+0xbb5>
     c0d:	02 04 05 74 00 02 04 	add    al,BYTE PTR [rax*1+0x4020074]
     c14:	07                   	(bad)  
     c15:	74 00                	je     c17 <MULTIBOOT_HEADER_SIZE+0xbbf>
     c17:	02 04 09             	add    al,BYTE PTR [rcx+rcx*1]
     c1a:	74 00                	je     c1c <MULTIBOOT_HEADER_SIZE+0xbc4>
     c1c:	02 04 0a             	add    al,BYTE PTR [rdx+rcx*1]
     c1f:	74 00                	je     c21 <MULTIBOOT_HEADER_SIZE+0xbc9>
     c21:	02 04 0c             	add    al,BYTE PTR [rsp+rcx*1]
     c24:	58                   	pop    rax
     c25:	00 02                	add    BYTE PTR [rdx],al
     c27:	04 0c                	add    al,0xc
     c29:	06                   	(bad)  
     c2a:	75 00                	jne    c2c <MULTIBOOT_HEADER_SIZE+0xbd4>
     c2c:	02 04 0c             	add    al,BYTE PTR [rsp+rcx*1]
     c2f:	08 13                	or     BYTE PTR [rbx],dl
     c31:	00 02                	add    BYTE PTR [rdx],al
     c33:	04 0c                	add    al,0xc
     c35:	08 14 00             	or     BYTE PTR [rax+rax*1],dl
     c38:	02 04 0c             	add    al,BYTE PTR [rsp+rcx*1]
     c3b:	c9                   	leave  
     c3c:	00 02                	add    BYTE PTR [rdx],al
     c3e:	04 0c                	add    al,0xc
     c40:	81 00 02 04 0c 3e    	add    DWORD PTR [rax],0x3e0c0402
     c46:	00 02                	add    BYTE PTR [rdx],al
     c48:	04 0c                	add    al,0xc
     c4a:	80 00 02             	add    BYTE PTR [rax],0x2
     c4d:	04 0c                	add    al,0xc
     c4f:	3f                   	(bad)  
     c50:	00 02                	add    BYTE PTR [rdx],al
     c52:	04 0c                	add    al,0xc
     c54:	08 39                	or     BYTE PTR [rcx],bh
     c56:	00 02                	add    BYTE PTR [rdx],al
     c58:	04 0c                	add    al,0xc
     c5a:	40 00 02             	add    BYTE PTR [rdx],al
     c5d:	04 0c                	add    al,0xc
     c5f:	f3 00 02             	repz add BYTE PTR [rdx],al
     c62:	04 01                	add    al,0x1
     c64:	06                   	(bad)  
     c65:	66 00 02             	data16 add BYTE PTR [rdx],al
     c68:	04 03                	add    al,0x3
     c6a:	08 c8                	or     al,cl
     c6c:	00 02                	add    BYTE PTR [rdx],al
     c6e:	04 04                	add    al,0x4
     c70:	74 00                	je     c72 <MULTIBOOT_HEADER_SIZE+0xc1a>
     c72:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
     c75:	58                   	pop    rax
     c76:	00 02                	add    BYTE PTR [rdx],al
     c78:	04 06                	add    al,0x6
     c7a:	06                   	(bad)  
     c7b:	75 00                	jne    c7d <MULTIBOOT_HEADER_SIZE+0xc25>
     c7d:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
     c80:	4b 31 84 4b e5 08 2f 	xor    QWORD PTR [r11+r9*2+0x82f08e5],rax
     c87:	08 
     c88:	2f                   	(bad)  
     c89:	08 2f                	or     BYTE PTR [rdi],ch
     c8b:	08 2f                	or     BYTE PTR [rdi],ch
     c8d:	00 02                	add    BYTE PTR [rdx],al
     c8f:	04 01                	add    al,0x1
     c91:	06                   	(bad)  
     c92:	66 00 02             	data16 add BYTE PTR [rdx],al
     c95:	04 03                	add    al,0x3
     c97:	74 00                	je     c99 <MULTIBOOT_HEADER_SIZE+0xc41>
     c99:	02 04 05 74 00 02 04 	add    al,BYTE PTR [rax*1+0x4020074]
     ca0:	07                   	(bad)  
     ca1:	74 00                	je     ca3 <MULTIBOOT_HEADER_SIZE+0xc4b>
     ca3:	02 04 09             	add    al,BYTE PTR [rcx+rcx*1]
     ca6:	74 00                	je     ca8 <MULTIBOOT_HEADER_SIZE+0xc50>
     ca8:	02 04 0a             	add    al,BYTE PTR [rdx+rcx*1]
     cab:	74 00                	je     cad <MULTIBOOT_HEADER_SIZE+0xc55>
     cad:	02 04 0c             	add    al,BYTE PTR [rsp+rcx*1]
     cb0:	58                   	pop    rax
     cb1:	00 02                	add    BYTE PTR [rdx],al
     cb3:	04 0c                	add    al,0xc
     cb5:	06                   	(bad)  
     cb6:	75 00                	jne    cb8 <MULTIBOOT_HEADER_SIZE+0xc60>
     cb8:	02 04 0c             	add    al,BYTE PTR [rsp+rcx*1]
     cbb:	08 13                	or     BYTE PTR [rbx],dl
     cbd:	00 02                	add    BYTE PTR [rdx],al
     cbf:	04 0c                	add    al,0xc
     cc1:	08 14 00             	or     BYTE PTR [rax+rax*1],dl
     cc4:	02 04 0c             	add    al,BYTE PTR [rsp+rcx*1]
     cc7:	ad                   	lods   eax,DWORD PTR ds:[rsi]
     cc8:	00 02                	add    BYTE PTR [rdx],al
     cca:	04 0c                	add    al,0xc
     ccc:	9d                   	popf   
     ccd:	00 02                	add    BYTE PTR [rdx],al
     ccf:	04 0c                	add    al,0xc
     cd1:	3e 00 02             	add    BYTE PTR ds:[rdx],al
     cd4:	04 0c                	add    al,0xc
     cd6:	80 00 02             	add    BYTE PTR [rax],0x2
     cd9:	04 0c                	add    al,0xc
     cdb:	3f                   	(bad)  
     cdc:	00 02                	add    BYTE PTR [rdx],al
     cde:	04 0c                	add    al,0xc
     ce0:	08 39                	or     BYTE PTR [rcx],bh
     ce2:	00 02                	add    BYTE PTR [rdx],al
     ce4:	04 0c                	add    al,0xc
     ce6:	40 00 02             	add    BYTE PTR [rdx],al
     ce9:	04 0c                	add    al,0xc
     ceb:	f3 00 02             	repz add BYTE PTR [rdx],al
     cee:	04 01                	add    al,0x1
     cf0:	06                   	(bad)  
     cf1:	66 00 02             	data16 add BYTE PTR [rdx],al
     cf4:	04 03                	add    al,0x3
     cf6:	08 c8                	or     al,cl
     cf8:	00 02                	add    BYTE PTR [rdx],al
     cfa:	04 04                	add    al,0x4
     cfc:	74 00                	je     cfe <MULTIBOOT_HEADER_SIZE+0xca6>
     cfe:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
     d01:	58                   	pop    rax
     d02:	00 02                	add    BYTE PTR [rdx],al
     d04:	04 06                	add    al,0x6
     d06:	06                   	(bad)  
     d07:	75 00                	jne    d09 <MULTIBOOT_HEADER_SIZE+0xcb1>
     d09:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
     d0c:	4b 31 84 4b e5 08 2f 	xor    QWORD PTR [r11+r9*2+0x82f08e5],rax
     d13:	08 
     d14:	2f                   	(bad)  
     d15:	08 2f                	or     BYTE PTR [rdi],ch
     d17:	08 2f                	or     BYTE PTR [rdi],ch
     d19:	08 2f                	or     BYTE PTR [rdi],ch
     d1b:	00 02                	add    BYTE PTR [rdx],al
     d1d:	04 01                	add    al,0x1
     d1f:	06                   	(bad)  
     d20:	66 00 02             	data16 add BYTE PTR [rdx],al
     d23:	04 03                	add    al,0x3
     d25:	74 00                	je     d27 <MULTIBOOT_HEADER_SIZE+0xccf>
     d27:	02 04 05 74 00 02 04 	add    al,BYTE PTR [rax*1+0x4020074]
     d2e:	07                   	(bad)  
     d2f:	74 00                	je     d31 <MULTIBOOT_HEADER_SIZE+0xcd9>
     d31:	02 04 09             	add    al,BYTE PTR [rcx+rcx*1]
     d34:	74 00                	je     d36 <MULTIBOOT_HEADER_SIZE+0xcde>
     d36:	02 04 0b             	add    al,BYTE PTR [rbx+rcx*1]
     d39:	74 00                	je     d3b <MULTIBOOT_HEADER_SIZE+0xce3>
     d3b:	02 04 0c             	add    al,BYTE PTR [rsp+rcx*1]
     d3e:	74 00                	je     d40 <MULTIBOOT_HEADER_SIZE+0xce8>
     d40:	02 04 0e             	add    al,BYTE PTR [rsi+rcx*1]
     d43:	58                   	pop    rax
     d44:	00 02                	add    BYTE PTR [rdx],al
     d46:	04 0e                	add    al,0xe
     d48:	06                   	(bad)  
     d49:	75 00                	jne    d4b <MULTIBOOT_HEADER_SIZE+0xcf3>
     d4b:	02 04 0e             	add    al,BYTE PTR [rsi+rcx*1]
     d4e:	08 13                	or     BYTE PTR [rbx],dl
     d50:	00 02                	add    BYTE PTR [rdx],al
     d52:	04 0e                	add    al,0xe
     d54:	08 14 00             	or     BYTE PTR [rax+rax*1],dl
     d57:	02 04 0e             	add    al,BYTE PTR [rsi+rcx*1]
     d5a:	ad                   	lods   eax,DWORD PTR ds:[rsi]
     d5b:	00 02                	add    BYTE PTR [rdx],al
     d5d:	04 0e                	add    al,0xe
     d5f:	81 00 02 04 0e 3e    	add    DWORD PTR [rax],0x3e0e0402
     d65:	00 02                	add    BYTE PTR [rdx],al
     d67:	04 0e                	add    al,0xe
     d69:	80 00 02             	add    BYTE PTR [rax],0x2
     d6c:	04 0e                	add    al,0xe
     d6e:	3f                   	(bad)  
     d6f:	00 02                	add    BYTE PTR [rdx],al
     d71:	04 0e                	add    al,0xe
     d73:	7f 00                	jg     d75 <MULTIBOOT_HEADER_SIZE+0xd1d>
     d75:	02 04 0e             	add    al,BYTE PTR [rsi+rcx*1]
     d78:	40 00 02             	add    BYTE PTR [rdx],al
     d7b:	04 0e                	add    al,0xe
     d7d:	7e 00                	jle    d7f <MULTIBOOT_HEADER_SIZE+0xd27>
     d7f:	02 04 0e             	add    al,BYTE PTR [rsi+rcx*1]
     d82:	41 00 02             	add    BYTE PTR [r10],al
     d85:	04 0e                	add    al,0xe
     d87:	08 45 00             	or     BYTE PTR [rbp+0x0],al
     d8a:	02 04 0e             	add    al,BYTE PTR [rsi+rcx*1]
     d8d:	42 00 02             	rex.X add BYTE PTR [rdx],al
     d90:	04 0e                	add    al,0xe
     d92:	08 75 00             	or     BYTE PTR [rbp+0x0],dh
     d95:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     d98:	06                   	(bad)  
     d99:	66 00 02             	data16 add BYTE PTR [rdx],al
     d9c:	04 03                	add    al,0x3
     d9e:	08 c8                	or     al,cl
     da0:	00 02                	add    BYTE PTR [rdx],al
     da2:	04 04                	add    al,0x4
     da4:	74 00                	je     da6 <MULTIBOOT_HEADER_SIZE+0xd4e>
     da6:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
     da9:	58                   	pop    rax
     daa:	00 02                	add    BYTE PTR [rdx],al
     dac:	04 06                	add    al,0x6
     dae:	06                   	(bad)  
     daf:	76 00                	jbe    db1 <MULTIBOOT_HEADER_SIZE+0xd59>
     db1:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
     db4:	08 14 00             	or     BYTE PTR [rax+rax*1],dl
     db7:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
     dba:	ad                   	lods   eax,DWORD PTR ds:[rsi]
     dbb:	00 02                	add    BYTE PTR [rdx],al
     dbd:	04 06                	add    al,0x6
     dbf:	d5                   	(bad)  
     dc0:	00 02                	add    BYTE PTR [rdx],al
     dc2:	04 06                	add    al,0x6
     dc4:	3e 00 02             	add    BYTE PTR ds:[rdx],al
     dc7:	04 06                	add    al,0x6
     dc9:	80 00 02             	add    BYTE PTR [rax],0x2
     dcc:	04 06                	add    al,0x6
     dce:	3f                   	(bad)  
     dcf:	00 02                	add    BYTE PTR [rdx],al
     dd1:	04 06                	add    al,0x6
     dd3:	08 47 00             	or     BYTE PTR [rdi+0x0],al
     dd6:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
     dd9:	40 00 02             	add    BYTE PTR [rdx],al
     ddc:	04 06                	add    al,0x6
     dde:	f3 00 02             	repz add BYTE PTR [rdx],al
     de1:	04 01                	add    al,0x1
     de3:	06                   	(bad)  
     de4:	66 00 02             	data16 add BYTE PTR [rdx],al
     de7:	04 03                	add    al,0x3
     de9:	08 c8                	or     al,cl
     deb:	00 02                	add    BYTE PTR [rdx],al
     ded:	04 04                	add    al,0x4
     def:	74 00                	je     df1 <MULTIBOOT_HEADER_SIZE+0xd99>
     df1:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
     df4:	58                   	pop    rax
     df5:	00 02                	add    BYTE PTR [rdx],al
     df7:	04 06                	add    al,0x6
     df9:	06                   	(bad)  
     dfa:	75 00                	jne    dfc <MULTIBOOT_HEADER_SIZE+0xda4>
     dfc:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
     dff:	4b 31 84 4b e5 08 2f 	xor    QWORD PTR [r11+r9*2+0x82f08e5],rax
     e06:	08 
     e07:	2f                   	(bad)  
     e08:	08 2f                	or     BYTE PTR [rdi],ch
     e0a:	08 2f                	or     BYTE PTR [rdi],ch
     e0c:	00 02                	add    BYTE PTR [rdx],al
     e0e:	04 01                	add    al,0x1
     e10:	06                   	(bad)  
     e11:	66 00 02             	data16 add BYTE PTR [rdx],al
     e14:	04 03                	add    al,0x3
     e16:	74 00                	je     e18 <MULTIBOOT_HEADER_SIZE+0xdc0>
     e18:	02 04 05 74 00 02 04 	add    al,BYTE PTR [rax*1+0x4020074]
     e1f:	07                   	(bad)  
     e20:	74 00                	je     e22 <MULTIBOOT_HEADER_SIZE+0xdca>
     e22:	02 04 09             	add    al,BYTE PTR [rcx+rcx*1]
     e25:	74 00                	je     e27 <MULTIBOOT_HEADER_SIZE+0xdcf>
     e27:	02 04 0a             	add    al,BYTE PTR [rdx+rcx*1]
     e2a:	74 00                	je     e2c <MULTIBOOT_HEADER_SIZE+0xdd4>
     e2c:	02 04 0c             	add    al,BYTE PTR [rsp+rcx*1]
     e2f:	58                   	pop    rax
     e30:	00 02                	add    BYTE PTR [rdx],al
     e32:	04 0c                	add    al,0xc
     e34:	06                   	(bad)  
     e35:	75 00                	jne    e37 <MULTIBOOT_HEADER_SIZE+0xddf>
     e37:	02 04 0c             	add    al,BYTE PTR [rsp+rcx*1]
     e3a:	08 13                	or     BYTE PTR [rbx],dl
     e3c:	00 02                	add    BYTE PTR [rdx],al
     e3e:	04 0c                	add    al,0xc
     e40:	08 13                	or     BYTE PTR [rbx],dl
     e42:	00 02                	add    BYTE PTR [rdx],al
     e44:	04 0c                	add    al,0xc
     e46:	08 13                	or     BYTE PTR [rbx],dl
     e48:	00 02                	add    BYTE PTR [rdx],al
     e4a:	04 0c                	add    al,0xc
     e4c:	08 14 00             	or     BYTE PTR [rax+rax*1],dl
     e4f:	02 04 0c             	add    al,BYTE PTR [rsp+rcx*1]
     e52:	75 00                	jne    e54 <MULTIBOOT_HEADER_SIZE+0xdfc>
     e54:	02 04 0c             	add    al,BYTE PTR [rsp+rcx*1]
     e57:	4b 00 02             	rex.WXB add BYTE PTR [r10],al
     e5a:	04 01                	add    al,0x1
     e5c:	06                   	(bad)  
     e5d:	66 00 02             	data16 add BYTE PTR [rdx],al
     e60:	04 03                	add    al,0x3
     e62:	08 c8                	or     al,cl
     e64:	00 02                	add    BYTE PTR [rdx],al
     e66:	04 04                	add    al,0x4
     e68:	74 00                	je     e6a <MULTIBOOT_HEADER_SIZE+0xe12>
     e6a:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
     e6d:	58                   	pop    rax
     e6e:	00 02                	add    BYTE PTR [rdx],al
     e70:	04 06                	add    al,0x6
     e72:	06                   	(bad)  
     e73:	75 00                	jne    e75 <MULTIBOOT_HEADER_SIZE+0xe1d>
     e75:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
     e78:	4b 32 4b a0          	rex.WXB xor cl,BYTE PTR [r11-0x60]
     e7c:	08 84 08 83 08 83 08 	or     BYTE PTR [rax+rcx*1+0x8830883],al
     e83:	83 08 83             	or     DWORD PTR [rax],0xffffff83
     e86:	08 84 08 83 08 83 08 	or     BYTE PTR [rax+rcx*1+0x8830883],al
     e8d:	83 08 83             	or     DWORD PTR [rax],0xffffff83
     e90:	08 83 08 83 08 83    	or     BYTE PTR [rbx-0x7cf77cf8],al
     e96:	08 84 9f 02 03 00 01 	or     BYTE PTR [rdi+rbx*4+0x1000302],al
     e9d:	01 4c 05 00          	add    DWORD PTR [rbp+rax*1+0x0],ecx
     ea1:	00 02                	add    BYTE PTR [rdx],al
     ea3:	00 7d 00             	add    BYTE PTR [rbp+0x0],bh
     ea6:	00 00                	add    BYTE PTR [rax],al
     ea8:	01 01                	add    DWORD PTR [rcx],eax
     eaa:	fb                   	sti    
     eab:	0e                   	(bad)  
     eac:	0d 00 01 01 01       	or     eax,0x1010100
     eb1:	01 00                	add    DWORD PTR [rax],eax
     eb3:	00 00                	add    BYTE PTR [rax],al
     eb5:	01 00                	add    DWORD PTR [rax],eax
     eb7:	00 01                	add    BYTE PTR [rcx],al
     eb9:	73 72                	jae    f2d <MULTIBOOT_HEADER_SIZE+0xed5>
     ebb:	63 2f                	movsxd ebp,DWORD PTR [rdi]
     ebd:	74 65                	je     f24 <MULTIBOOT_HEADER_SIZE+0xecc>
     ebf:	73 74                	jae    f35 <MULTIBOOT_HEADER_SIZE+0xedd>
     ec1:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
     ec4:	63 2f                	movsxd ebp,DWORD PTR [rdi]
     ec6:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
     ec9:	6d                   	ins    DWORD PTR es:[rdi],dx
     eca:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     ecb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     ecc:	2f                   	(bad)  
     ecd:	6c                   	ins    BYTE PTR es:[rdi],dx
     ece:	69 62 2f 6c 69 6e 6b 	imul   esp,DWORD PTR [rdx+0x2f],0x6b6e696c
     ed5:	65 64 5f             	gs fs pop rdi
     ed8:	6c                   	ins    BYTE PTR es:[rdi],dx
     ed9:	69 73 74 2f 69 6e 63 	imul   esi,DWORD PTR [rbx+0x74],0x636e692f
     ee0:	00 2f                	add    BYTE PTR [rdi],ch
     ee2:	75 73                	jne    f57 <MULTIBOOT_HEADER_SIZE+0xeff>
     ee4:	72 2f                	jb     f15 <MULTIBOOT_HEADER_SIZE+0xebd>
     ee6:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
     eed:	00 00                	add    BYTE PTR [rax],al
     eef:	6b 5f 6c 69          	imul   ebx,DWORD PTR [rdi+0x6c],0x69
     ef3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     ef4:	6b 65 64 5f          	imul   esp,DWORD PTR [rbp+0x64],0x5f
     ef8:	6c                   	ins    BYTE PTR es:[rdi],dx
     ef9:	69 73 74 5f 74 65 73 	imul   esi,DWORD PTR [rbx+0x74],0x7365745f
     f00:	74 2e                	je     f30 <MULTIBOOT_HEADER_SIZE+0xed8>
     f02:	63 00                	movsxd eax,DWORD PTR [rax]
     f04:	01 00                	add    DWORD PTR [rax],eax
     f06:	00 6c 69 6e          	add    BYTE PTR [rcx+rbp*2+0x6e],ch
     f0a:	6b 65 64 5f          	imul   esp,DWORD PTR [rbp+0x64],0x5f
     f0e:	6c                   	ins    BYTE PTR es:[rdi],dx
     f0f:	69 73 74 2e 68 00 02 	imul   esi,DWORD PTR [rbx+0x74],0x200682e
     f16:	00 00                	add    BYTE PTR [rax],al
     f18:	73 74                	jae    f8e <MULTIBOOT_HEADER_SIZE+0xf36>
     f1a:	64 69 6e 74 2e 68 00 	imul   ebp,DWORD PTR fs:[rsi+0x74],0x300682e
     f21:	03 
     f22:	00 00                	add    BYTE PTR [rax],al
     f24:	00 00                	add    BYTE PTR [rax],al
     f26:	09 02                	or     DWORD PTR [rdx],eax
     f28:	18 8d 00 01 00 00    	sbb    BYTE PTR [rbp+0x100],cl
     f2e:	00 00                	add    BYTE PTR [rax],al
     f30:	03 0c 01             	add    ecx,DWORD PTR [rcx+rax*1]
     f33:	bb 4c bc 00 02       	mov    ebx,0x200bc4c
     f38:	04 01                	add    al,0x1
     f3a:	06                   	(bad)  
     f3b:	66 00 02             	data16 add BYTE PTR [rdx],al
     f3e:	04 03                	add    al,0x3
     f40:	e4 00                	in     al,0x0
     f42:	02 04 04             	add    al,BYTE PTR [rsp+rax*1]
     f45:	74 00                	je     f47 <MULTIBOOT_HEADER_SIZE+0xeef>
     f47:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
     f4a:	58                   	pop    rax
     f4b:	06                   	(bad)  
     f4c:	94                   	xchg   esp,eax
     f4d:	00 02                	add    BYTE PTR [rdx],al
     f4f:	04 01                	add    al,0x1
     f51:	06                   	(bad)  
     f52:	66 00 02             	data16 add BYTE PTR [rdx],al
     f55:	04 03                	add    al,0x3
     f57:	c8 00 02 04          	enter  0x200,0x4
     f5b:	04 74                	add    al,0x74
     f5d:	00 02                	add    BYTE PTR [rdx],al
     f5f:	04 06                	add    al,0x6
     f61:	58                   	pop    rax
     f62:	06                   	(bad)  
     f63:	77 ca                	ja     f2f <MULTIBOOT_HEADER_SIZE+0xed7>
     f65:	00 02                	add    BYTE PTR [rdx],al
     f67:	04 01                	add    al,0x1
     f69:	06                   	(bad)  
     f6a:	66 00 02             	data16 add BYTE PTR [rdx],al
     f6d:	04 03                	add    al,0x3
     f6f:	08 12                	or     BYTE PTR [rdx],dl
     f71:	00 02                	add    BYTE PTR [rdx],al
     f73:	04 04                	add    al,0x4
     f75:	74 00                	je     f77 <MULTIBOOT_HEADER_SIZE+0xf1f>
     f77:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
     f7a:	58                   	pop    rax
     f7b:	06                   	(bad)  
     f7c:	94                   	xchg   esp,eax
     f7d:	00 02                	add    BYTE PTR [rdx],al
     f7f:	04 01                	add    al,0x1
     f81:	06                   	(bad)  
     f82:	66 00 02             	data16 add BYTE PTR [rdx],al
     f85:	04 03                	add    al,0x3
     f87:	ba 00 02 04 04       	mov    edx,0x4040200
     f8c:	74 00                	je     f8e <MULTIBOOT_HEADER_SIZE+0xf36>
     f8e:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
     f91:	58                   	pop    rax
     f92:	06                   	(bad)  
     f93:	77 4b                	ja     fe0 <MULTIBOOT_HEADER_SIZE+0xf88>
     f95:	32 08                	xor    cl,BYTE PTR [rax]
     f97:	2f                   	(bad)  
     f98:	f3 76 08             	repz jbe fa3 <MULTIBOOT_HEADER_SIZE+0xf4b>
     f9b:	2f                   	(bad)  
     f9c:	a2 83 08 f4 a0 4b 03 	movabs ds:0xf278034ba0f40883,al
     fa3:	78 f2 
     fa5:	00 02                	add    BYTE PTR [rdx],al
     fa7:	04 01                	add    al,0x1
     fa9:	06                   	(bad)  
     faa:	74 06                	je     fb2 <MULTIBOOT_HEADER_SIZE+0xf5a>
     fac:	03 0b                	add    ecx,DWORD PTR [rbx]
     fae:	82                   	(bad)  
     faf:	84 77 f3             	test   BYTE PTR [rdi-0xd],dh
     fb2:	30 83 08 f4 76 4b    	xor    BYTE PTR [rbx+0x4b76f408],al
     fb8:	03 78 f2             	add    edi,DWORD PTR [rax-0xe]
     fbb:	00 02                	add    BYTE PTR [rdx],al
     fbd:	04 01                	add    al,0x1
     fbf:	06                   	(bad)  
     fc0:	74 06                	je     fc8 <MULTIBOOT_HEADER_SIZE+0xf70>
     fc2:	03 0b                	add    ecx,DWORD PTR [rbx]
     fc4:	66 75 03             	data16 jne fca <MULTIBOOT_HEADER_SIZE+0xf72>
     fc7:	19 2e                	sbb    DWORD PTR [rsi],ebp
     fc9:	08 21                	or     BYTE PTR [rcx],ah
     fcb:	d7                   	xlat   BYTE PTR ds:[rbx]
     fcc:	9f                   	lahf   
     fcd:	08 4b 3f             	or     BYTE PTR [rbx+0x3f],cl
     fd0:	e5 d7                	in     eax,0xd7
     fd2:	9f                   	lahf   
     fd3:	08 2f                	or     BYTE PTR [rdi],ch
     fd5:	3f                   	(bad)  
     fd6:	e5 d7                	in     eax,0xd7
     fd8:	9f                   	lahf   
     fd9:	08 2f                	or     BYTE PTR [rdi],ch
     fdb:	40 84 bb 08 59 08 59 	test   BYTE PTR [rbx+0x59085908],dil
     fe2:	08 59 08             	or     BYTE PTR [rcx+0x8],bl
     fe5:	5b                   	pop    rbx
     fe6:	08 ad 08 75 31 84    	or     BYTE PTR [rbp-0x7bce8af8],ch
     fec:	bc 08 59 08 59       	mov    esp,0x59085908
     ff1:	08 5a 08             	or     BYTE PTR [rdx+0x8],bl
     ff4:	59                   	pop    rcx
     ff5:	08 59 08             	or     BYTE PTR [rcx+0x8],bl
     ff8:	5a                   	pop    rdx
     ff9:	02 2a                	add    ch,BYTE PTR [rdx]
     ffb:	13 08                	adc    ecx,DWORD PTR [rax]
     ffd:	75 31                	jne    1030 <MULTIBOOT_HEADER_SIZE+0xfd8>
     fff:	84 bc 08 59 08 59 08 	test   BYTE PTR [rax+rcx*1+0x8590859],bh
    1006:	59                   	pop    rcx
    1007:	08 5a 08             	or     BYTE PTR [rdx+0x8],bl
    100a:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    100b:	08 75 31             	or     BYTE PTR [rbp+0x31],dh
    100e:	84 bc 08 59 08 59 08 	test   BYTE PTR [rax+rcx*1+0x8590859],bh
    1015:	59                   	pop    rcx
    1016:	08 5b 08             	or     BYTE PTR [rbx+0x8],bl
    1019:	59                   	pop    rcx
    101a:	08 59 08             	or     BYTE PTR [rcx+0x8],bl
    101d:	5b                   	pop    rbx
    101e:	08 59 08             	or     BYTE PTR [rcx+0x8],bl
    1021:	59                   	pop    rcx
    1022:	08 5b 08             	or     BYTE PTR [rbx+0x8],bl
    1025:	3d 08 4b 08 76       	cmp    eax,0x76084b08
    102a:	08 ad 08 75 32 84    	or     BYTE PTR [rbp-0x7bcd8af8],ch
    1030:	bb 08 59 08 59       	mov    ebx,0x59085908
    1035:	08 59 08             	or     BYTE PTR [rcx+0x8],bl
    1038:	5a                   	pop    rdx
    1039:	08 13                	or     BYTE PTR [rbx],dl
    103b:	08 15 d7 08 75 31    	or     BYTE PTR [rip+0x317508d7],dl        # 31751918 <kernel_end+0x30735920>
    1041:	84 bc 08 59 08 59 08 	test   BYTE PTR [rax+rcx*1+0x8590859],bh
    1048:	5a                   	pop    rdx
    1049:	08 59 08             	or     BYTE PTR [rcx+0x8],bl
    104c:	59                   	pop    rcx
    104d:	08 5a 08             	or     BYTE PTR [rdx+0x8],bl
    1050:	13 08                	adc    ecx,DWORD PTR [rax]
    1052:	15 08 ad 08 75       	adc    eax,0x7508ad08
    1057:	31 84 bc 08 59 08 59 	xor    DWORD PTR [rsp+rdi*4+0x59085908],eax
    105e:	08 59 08             	or     BYTE PTR [rcx+0x8],bl
    1061:	5a                   	pop    rdx
    1062:	08 13                	or     BYTE PTR [rbx],dl
    1064:	08 14 d7             	or     BYTE PTR [rdi+rdx*8],dl
    1067:	08 75 31             	or     BYTE PTR [rbp+0x31],dh
    106a:	83 4c bc 08 59       	or     DWORD PTR [rsp+rdi*4+0x8],0x59
    106f:	08 59 08             	or     BYTE PTR [rcx+0x8],bl
    1072:	59                   	pop    rcx
    1073:	08 5a 08             	or     BYTE PTR [rdx+0x8],bl
    1076:	13 08                	adc    ecx,DWORD PTR [rax]
    1078:	13 08                	adc    ecx,DWORD PTR [rax]
    107a:	13 08                	adc    ecx,DWORD PTR [rax]
    107c:	14 00                	adc    al,0x0
    107e:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1081:	06                   	(bad)  
    1082:	66 00 02             	data16 add BYTE PTR [rdx],al
    1085:	04 03                	add    al,0x3
    1087:	08 90 00 02 04 04    	or     BYTE PTR [rax+0x4040200],dl
    108d:	74 00                	je     108f <MULTIBOOT_HEADER_SIZE+0x1037>
    108f:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    1092:	58                   	pop    rax
    1093:	00 02                	add    BYTE PTR [rdx],al
    1095:	04 06                	add    al,0x6
    1097:	06                   	(bad)  
    1098:	76 00                	jbe    109a <MULTIBOOT_HEADER_SIZE+0x1042>
    109a:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    109d:	08 59 00             	or     BYTE PTR [rcx+0x0],bl
    10a0:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    10a3:	08 59 00             	or     BYTE PTR [rcx+0x0],bl
    10a6:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    10a9:	08 59 00             	or     BYTE PTR [rcx+0x0],bl
    10ac:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    10af:	08 5a 00             	or     BYTE PTR [rdx+0x0],bl
    10b2:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    10b5:	08 13                	or     BYTE PTR [rbx],dl
    10b7:	00 02                	add    BYTE PTR [rdx],al
    10b9:	04 06                	add    al,0x6
    10bb:	08 13                	or     BYTE PTR [rbx],dl
    10bd:	00 02                	add    BYTE PTR [rdx],al
    10bf:	04 06                	add    al,0x6
    10c1:	08 13                	or     BYTE PTR [rbx],dl
    10c3:	00 02                	add    BYTE PTR [rdx],al
    10c5:	04 06                	add    al,0x6
    10c7:	08 14 00             	or     BYTE PTR [rax+rax*1],dl
    10ca:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    10cd:	06                   	(bad)  
    10ce:	66 00 02             	data16 add BYTE PTR [rdx],al
    10d1:	04 03                	add    al,0x3
    10d3:	08 90 00 02 04 04    	or     BYTE PTR [rax+0x4040200],dl
    10d9:	74 00                	je     10db <MULTIBOOT_HEADER_SIZE+0x1083>
    10db:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    10de:	58                   	pop    rax
    10df:	00 02                	add    BYTE PTR [rdx],al
    10e1:	04 06                	add    al,0x6
    10e3:	06                   	(bad)  
    10e4:	76 00                	jbe    10e6 <MULTIBOOT_HEADER_SIZE+0x108e>
    10e6:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    10e9:	08 59 00             	or     BYTE PTR [rcx+0x0],bl
    10ec:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    10ef:	08 59 00             	or     BYTE PTR [rcx+0x0],bl
    10f2:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    10f5:	08 59 00             	or     BYTE PTR [rcx+0x0],bl
    10f8:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    10fb:	08 5a 00             	or     BYTE PTR [rdx+0x0],bl
    10fe:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    1101:	08 13                	or     BYTE PTR [rbx],dl
    1103:	00 02                	add    BYTE PTR [rdx],al
    1105:	04 06                	add    al,0x6
    1107:	08 13                	or     BYTE PTR [rbx],dl
    1109:	00 02                	add    BYTE PTR [rdx],al
    110b:	04 06                	add    al,0x6
    110d:	08 13                	or     BYTE PTR [rbx],dl
    110f:	00 02                	add    BYTE PTR [rdx],al
    1111:	04 06                	add    al,0x6
    1113:	08 14 00             	or     BYTE PTR [rax+rax*1],dl
    1116:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1119:	06                   	(bad)  
    111a:	66 00 02             	data16 add BYTE PTR [rdx],al
    111d:	04 03                	add    al,0x3
    111f:	08 90 00 02 04 04    	or     BYTE PTR [rax+0x4040200],dl
    1125:	74 00                	je     1127 <MULTIBOOT_HEADER_SIZE+0x10cf>
    1127:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    112a:	58                   	pop    rax
    112b:	00 02                	add    BYTE PTR [rdx],al
    112d:	04 06                	add    al,0x6
    112f:	06                   	(bad)  
    1130:	76 00                	jbe    1132 <MULTIBOOT_HEADER_SIZE+0x10da>
    1132:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    1135:	4b 31 84 bc 08 59 08 	xor    QWORD PTR [r12+r15*4+0x59085908],rax
    113c:	59 
    113d:	08 59 08             	or     BYTE PTR [rcx+0x8],bl
    1140:	5b                   	pop    rbx
    1141:	08 13                	or     BYTE PTR [rbx],dl
    1143:	08 13                	or     BYTE PTR [rbx],dl
    1145:	08 15 08 13 08 13    	or     BYTE PTR [rip+0x13081308],dl        # 13082453 <kernel_end+0x1206645b>
    114b:	08 15 e5 08 13 08    	or     BYTE PTR [rip+0x81308e5],dl        # 8131a36 <kernel_end+0x7115a3e>
    1151:	15 08 ad 08 75       	adc    eax,0x7508ad08
    1156:	31 83 4c bc bc 08    	xor    DWORD PTR [rbx+0x8bcbc4c],eax
    115c:	59                   	pop    rcx
    115d:	08 59 08             	or     BYTE PTR [rcx+0x8],bl
    1160:	59                   	pop    rcx
    1161:	08 5a 00             	or     BYTE PTR [rdx+0x0],bl
    1164:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1167:	06                   	(bad)  
    1168:	66 00 02             	data16 add BYTE PTR [rdx],al
    116b:	04 03                	add    al,0x3
    116d:	08 12                	or     BYTE PTR [rdx],dl
    116f:	00 02                	add    BYTE PTR [rdx],al
    1171:	04 05                	add    al,0x5
    1173:	f2 00 02             	repnz add BYTE PTR [rdx],al
    1176:	04 07                	add    al,0x7
    1178:	e4 00                	in     al,0x0
    117a:	02 04 08             	add    al,BYTE PTR [rax+rcx*1]
    117d:	74 00                	je     117f <MULTIBOOT_HEADER_SIZE+0x1127>
    117f:	02 04 0a             	add    al,BYTE PTR [rdx+rcx*1]
    1182:	58                   	pop    rax
    1183:	00 02                	add    BYTE PTR [rdx],al
    1185:	04 0a                	add    al,0xa
    1187:	06                   	(bad)  
    1188:	75 00                	jne    118a <MULTIBOOT_HEADER_SIZE+0x1132>
    118a:	02 04 0a             	add    al,BYTE PTR [rdx+rcx*1]
    118d:	08 ad 00 02 04 01    	or     BYTE PTR [rbp+0x1040200],ch
    1193:	06                   	(bad)  
    1194:	66 00 02             	data16 add BYTE PTR [rdx],al
    1197:	04 03                	add    al,0x3
    1199:	08 ac 00 02 04 04 74 	or     BYTE PTR [rax+rax*1+0x74040402],ch
    11a0:	00 02                	add    BYTE PTR [rdx],al
    11a2:	04 06                	add    al,0x6
    11a4:	58                   	pop    rax
    11a5:	00 02                	add    BYTE PTR [rdx],al
    11a7:	04 06                	add    al,0x6
    11a9:	06                   	(bad)  
    11aa:	75 00                	jne    11ac <MULTIBOOT_HEADER_SIZE+0x1154>
    11ac:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    11af:	4b 31 83 4c bc 08 13 	rex.WXB xor QWORD PTR [r11+0x1308bc4c],rax
    11b6:	08 13                	or     BYTE PTR [rbx],dl
    11b8:	08 13                	or     BYTE PTR [rbx],dl
    11ba:	08 15 08 ad 00 02    	or     BYTE PTR [rip+0x200ad08],dl        # 200bec8 <kernel_end+0xfefed0>
    11c0:	04 01                	add    al,0x1
    11c2:	06                   	(bad)  
    11c3:	66 00 02             	data16 add BYTE PTR [rdx],al
    11c6:	04 03                	add    al,0x3
    11c8:	08 ac 00 02 04 04 74 	or     BYTE PTR [rax+rax*1+0x74040402],ch
    11cf:	00 02                	add    BYTE PTR [rdx],al
    11d1:	04 06                	add    al,0x6
    11d3:	58                   	pop    rax
    11d4:	00 02                	add    BYTE PTR [rdx],al
    11d6:	04 06                	add    al,0x6
    11d8:	06                   	(bad)  
    11d9:	76 00                	jbe    11db <MULTIBOOT_HEADER_SIZE+0x1183>
    11db:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    11de:	bc 00 02 04 06       	mov    esp,0x6040200
    11e3:	08 4b 00             	or     BYTE PTR [rbx+0x0],cl
    11e6:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    11e9:	06                   	(bad)  
    11ea:	66 00 02             	data16 add BYTE PTR [rdx],al
    11ed:	04 03                	add    al,0x3
    11ef:	08 ac 00 02 04 04 74 	or     BYTE PTR [rax+rax*1+0x74040402],ch
    11f6:	00 02                	add    BYTE PTR [rdx],al
    11f8:	04 06                	add    al,0x6
    11fa:	58                   	pop    rax
    11fb:	00 02                	add    BYTE PTR [rdx],al
    11fd:	04 06                	add    al,0x6
    11ff:	06                   	(bad)  
    1200:	76 00                	jbe    1202 <MULTIBOOT_HEADER_SIZE+0x11aa>
    1202:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    1205:	bb 00 02 04 06       	mov    ebx,0x6040200
    120a:	bb 00 02 04 06       	mov    ebx,0x6040200
    120f:	bc 00 02 04 01       	mov    esp,0x1040200
    1214:	06                   	(bad)  
    1215:	66 00 02             	data16 add BYTE PTR [rdx],al
    1218:	04 03                	add    al,0x3
    121a:	08 90 00 02 04 04    	or     BYTE PTR [rax+0x4040200],dl
    1220:	74 00                	je     1222 <MULTIBOOT_HEADER_SIZE+0x11ca>
    1222:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    1225:	58                   	pop    rax
    1226:	00 02                	add    BYTE PTR [rdx],al
    1228:	04 06                	add    al,0x6
    122a:	06                   	(bad)  
    122b:	75 00                	jne    122d <MULTIBOOT_HEADER_SIZE+0x11d5>
    122d:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    1230:	4b 31 83 4c bc 08 13 	rex.WXB xor QWORD PTR [r11+0x1308bc4c],rax
    1237:	08 13                	or     BYTE PTR [rbx],dl
    1239:	08 13                	or     BYTE PTR [rbx],dl
    123b:	08 15 08 ad 00 02    	or     BYTE PTR [rip+0x200ad08],dl        # 200bf49 <kernel_end+0xfeff51>
    1241:	04 01                	add    al,0x1
    1243:	06                   	(bad)  
    1244:	66 00 02             	data16 add BYTE PTR [rdx],al
    1247:	04 03                	add    al,0x3
    1249:	08 ac 00 02 04 04 74 	or     BYTE PTR [rax+rax*1+0x74040402],ch
    1250:	00 02                	add    BYTE PTR [rdx],al
    1252:	04 06                	add    al,0x6
    1254:	58                   	pop    rax
    1255:	00 02                	add    BYTE PTR [rdx],al
    1257:	04 06                	add    al,0x6
    1259:	06                   	(bad)  
    125a:	76 00                	jbe    125c <MULTIBOOT_HEADER_SIZE+0x1204>
    125c:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    125f:	bc 00 02 04 06       	mov    esp,0x6040200
    1264:	08 4b 00             	or     BYTE PTR [rbx+0x0],cl
    1267:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    126a:	06                   	(bad)  
    126b:	66 00 02             	data16 add BYTE PTR [rdx],al
    126e:	04 03                	add    al,0x3
    1270:	08 ac 00 02 04 04 74 	or     BYTE PTR [rax+rax*1+0x74040402],ch
    1277:	00 02                	add    BYTE PTR [rdx],al
    1279:	04 06                	add    al,0x6
    127b:	58                   	pop    rax
    127c:	00 02                	add    BYTE PTR [rdx],al
    127e:	04 06                	add    al,0x6
    1280:	06                   	(bad)  
    1281:	76 00                	jbe    1283 <MULTIBOOT_HEADER_SIZE+0x122b>
    1283:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    1286:	bb 00 02 04 06       	mov    ebx,0x6040200
    128b:	bb 00 02 04 06       	mov    ebx,0x6040200
    1290:	bc 00 02 04 01       	mov    esp,0x1040200
    1295:	06                   	(bad)  
    1296:	66 00 02             	data16 add BYTE PTR [rdx],al
    1299:	04 03                	add    al,0x3
    129b:	08 90 00 02 04 04    	or     BYTE PTR [rax+0x4040200],dl
    12a1:	74 00                	je     12a3 <MULTIBOOT_HEADER_SIZE+0x124b>
    12a3:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    12a6:	58                   	pop    rax
    12a7:	00 02                	add    BYTE PTR [rdx],al
    12a9:	04 06                	add    al,0x6
    12ab:	06                   	(bad)  
    12ac:	75 00                	jne    12ae <MULTIBOOT_HEADER_SIZE+0x1256>
    12ae:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    12b1:	4b 31 f3             	rex.WXB xor r11,rsi
    12b4:	08 3d 31 83 4c bc    	or     BYTE PTR [rip+0xffffffffbc4c8331],bh        # ffffffffbc4c95eb <MULTIBOOT_CHECK_SUM+0xa49ee719>
    12ba:	08 13                	or     BYTE PTR [rbx],dl
    12bc:	08 13                	or     BYTE PTR [rbx],dl
    12be:	08 13                	or     BYTE PTR [rbx],dl
    12c0:	08 14 08             	or     BYTE PTR [rax+rcx*1],dl
    12c3:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    12c4:	00 02                	add    BYTE PTR [rdx],al
    12c6:	04 01                	add    al,0x1
    12c8:	06                   	(bad)  
    12c9:	66 00 02             	data16 add BYTE PTR [rdx],al
    12cc:	04 03                	add    al,0x3
    12ce:	08 ac 00 02 04 04 74 	or     BYTE PTR [rax+rax*1+0x74040402],ch
    12d5:	00 02                	add    BYTE PTR [rdx],al
    12d7:	04 06                	add    al,0x6
    12d9:	58                   	pop    rax
    12da:	00 02                	add    BYTE PTR [rdx],al
    12dc:	04 06                	add    al,0x6
    12de:	06                   	(bad)  
    12df:	76 00                	jbe    12e1 <MULTIBOOT_HEADER_SIZE+0x1289>
    12e1:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    12e4:	06                   	(bad)  
    12e5:	66 00 02             	data16 add BYTE PTR [rdx],al
    12e8:	04 03                	add    al,0x3
    12ea:	08 9e 00 02 04 04    	or     BYTE PTR [rsi+0x4040200],bl
    12f0:	74 00                	je     12f2 <MULTIBOOT_HEADER_SIZE+0x129a>
    12f2:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    12f5:	58                   	pop    rax
    12f6:	00 02                	add    BYTE PTR [rdx],al
    12f8:	04 06                	add    al,0x6
    12fa:	06                   	(bad)  
    12fb:	75 00                	jne    12fd <MULTIBOOT_HEADER_SIZE+0x12a5>
    12fd:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1300:	06                   	(bad)  
    1301:	66 00 02             	data16 add BYTE PTR [rdx],al
    1304:	04 03                	add    al,0x3
    1306:	08 9e 00 02 04 04    	or     BYTE PTR [rsi+0x4040200],bl
    130c:	74 00                	je     130e <MULTIBOOT_HEADER_SIZE+0x12b6>
    130e:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    1311:	58                   	pop    rax
    1312:	00 02                	add    BYTE PTR [rdx],al
    1314:	04 06                	add    al,0x6
    1316:	06                   	(bad)  
    1317:	75 00                	jne    1319 <MULTIBOOT_HEADER_SIZE+0x12c1>
    1319:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    131c:	06                   	(bad)  
    131d:	66 00 02             	data16 add BYTE PTR [rdx],al
    1320:	04 03                	add    al,0x3
    1322:	08 9e 00 02 04 04    	or     BYTE PTR [rsi+0x4040200],bl
    1328:	74 00                	je     132a <MULTIBOOT_HEADER_SIZE+0x12d2>
    132a:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    132d:	58                   	pop    rax
    132e:	00 02                	add    BYTE PTR [rdx],al
    1330:	04 06                	add    al,0x6
    1332:	06                   	(bad)  
    1333:	75 00                	jne    1335 <MULTIBOOT_HEADER_SIZE+0x12dd>
    1335:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1338:	06                   	(bad)  
    1339:	66 00 02             	data16 add BYTE PTR [rdx],al
    133c:	04 03                	add    al,0x3
    133e:	08 90 00 02 04 04    	or     BYTE PTR [rax+0x4040200],dl
    1344:	74 00                	je     1346 <MULTIBOOT_HEADER_SIZE+0x12ee>
    1346:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    1349:	58                   	pop    rax
    134a:	00 02                	add    BYTE PTR [rdx],al
    134c:	04 06                	add    al,0x6
    134e:	06                   	(bad)  
    134f:	76 00                	jbe    1351 <MULTIBOOT_HEADER_SIZE+0x12f9>
    1351:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1354:	06                   	(bad)  
    1355:	66 00 02             	data16 add BYTE PTR [rdx],al
    1358:	04 03                	add    al,0x3
    135a:	08 9e 00 02 04 04    	or     BYTE PTR [rsi+0x4040200],bl
    1360:	74 00                	je     1362 <MULTIBOOT_HEADER_SIZE+0x130a>
    1362:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    1365:	58                   	pop    rax
    1366:	00 02                	add    BYTE PTR [rdx],al
    1368:	04 06                	add    al,0x6
    136a:	06                   	(bad)  
    136b:	75 00                	jne    136d <MULTIBOOT_HEADER_SIZE+0x1315>
    136d:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1370:	06                   	(bad)  
    1371:	66 00 02             	data16 add BYTE PTR [rdx],al
    1374:	04 03                	add    al,0x3
    1376:	08 82 00 02 04 04    	or     BYTE PTR [rdx+0x4040200],al
    137c:	74 00                	je     137e <MULTIBOOT_HEADER_SIZE+0x1326>
    137e:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    1381:	58                   	pop    rax
    1382:	00 02                	add    BYTE PTR [rdx],al
    1384:	04 06                	add    al,0x6
    1386:	06                   	(bad)  
    1387:	76 00                	jbe    1389 <MULTIBOOT_HEADER_SIZE+0x1331>
    1389:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    138c:	08 4b 00             	or     BYTE PTR [rbx+0x0],cl
    138f:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1392:	06                   	(bad)  
    1393:	66 00 02             	data16 add BYTE PTR [rdx],al
    1396:	04 03                	add    al,0x3
    1398:	08 ba 00 02 04 04    	or     BYTE PTR [rdx+0x4040200],bh
    139e:	74 00                	je     13a0 <MULTIBOOT_HEADER_SIZE+0x1348>
    13a0:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    13a3:	58                   	pop    rax
    13a4:	00 02                	add    BYTE PTR [rdx],al
    13a6:	04 06                	add    al,0x6
    13a8:	06                   	(bad)  
    13a9:	77 00                	ja     13ab <MULTIBOOT_HEADER_SIZE+0x1353>
    13ab:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    13ae:	06                   	(bad)  
    13af:	66 00 02             	data16 add BYTE PTR [rdx],al
    13b2:	04 03                	add    al,0x3
    13b4:	08 ac 00 02 04 04 74 	or     BYTE PTR [rax+rax*1+0x74040402],ch
    13bb:	00 02                	add    BYTE PTR [rdx],al
    13bd:	04 06                	add    al,0x6
    13bf:	58                   	pop    rax
    13c0:	00 02                	add    BYTE PTR [rdx],al
    13c2:	04 06                	add    al,0x6
    13c4:	06                   	(bad)  
    13c5:	76 00                	jbe    13c7 <MULTIBOOT_HEADER_SIZE+0x136f>
    13c7:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    13ca:	4b 32 4b 9f          	rex.WXB xor cl,BYTE PTR [r11-0x61]
    13ce:	08 83 08 83 08 83    	or     BYTE PTR [rbx-0x7cf77cf8],al
    13d4:	08 84 08 83 08 83 08 	or     BYTE PTR [rax+rcx*1+0x8830883],al
    13db:	83 08 84             	or     DWORD PTR [rax],0xffffff84
    13de:	08 84 08 84 08 83 08 	or     BYTE PTR [rax+rcx*1+0x8830884],al
    13e5:	84 08                	test   BYTE PTR [rax],cl
    13e7:	83 9f 02 03 00 01 01 	sbb    DWORD PTR [rdi+0x1000302],0x1
    13ee:	2f                   	(bad)  
    13ef:	0c 00                	or     al,0x0
    13f1:	00 02                	add    BYTE PTR [rdx],al
    13f3:	00 74 00 00          	add    BYTE PTR [rax+rax*1+0x0],dh
    13f7:	00 01                	add    BYTE PTR [rcx],al
    13f9:	01 fb                	add    ebx,edi
    13fb:	0e                   	(bad)  
    13fc:	0d 00 01 01 01       	or     eax,0x1010100
    1401:	01 00                	add    DWORD PTR [rax],eax
    1403:	00 00                	add    BYTE PTR [rax],al
    1405:	01 00                	add    DWORD PTR [rax],eax
    1407:	00 01                	add    BYTE PTR [rcx],al
    1409:	73 72                	jae    147d <MULTIBOOT_HEADER_SIZE+0x1425>
    140b:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    140d:	74 65                	je     1474 <MULTIBOOT_HEADER_SIZE+0x141c>
    140f:	73 74                	jae    1485 <MULTIBOOT_HEADER_SIZE+0x142d>
    1411:	00 2f                	add    BYTE PTR [rdi],ch
    1413:	75 73                	jne    1488 <MULTIBOOT_HEADER_SIZE+0x1430>
    1415:	72 2f                	jb     1446 <MULTIBOOT_HEADER_SIZE+0x13ee>
    1417:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
    141e:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
    1421:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    1423:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
    1426:	6d                   	ins    DWORD PTR es:[rdi],dx
    1427:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1428:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1429:	2f                   	(bad)  
    142a:	6c                   	ins    BYTE PTR es:[rdi],dx
    142b:	69 62 2f 61 76 6c 5f 	imul   esp,DWORD PTR [rdx+0x2f],0x5f6c7661
    1432:	74 72                	je     14a6 <MULTIBOOT_HEADER_SIZE+0x144e>
    1434:	65 65 2f             	gs gs (bad) 
    1437:	69 6e 63 00 00 6b 5f 	imul   ebp,DWORD PTR [rsi+0x63],0x5f6b0000
    143e:	61                   	(bad)  
    143f:	76 6c                	jbe    14ad <MULTIBOOT_HEADER_SIZE+0x1455>
    1441:	5f                   	pop    rdi
    1442:	74 72                	je     14b6 <MULTIBOOT_HEADER_SIZE+0x145e>
    1444:	65 65 5f             	gs gs pop rdi
    1447:	74 65                	je     14ae <MULTIBOOT_HEADER_SIZE+0x1456>
    1449:	73 74                	jae    14bf <MULTIBOOT_HEADER_SIZE+0x1467>
    144b:	2e 63 00             	movsxd eax,DWORD PTR cs:[rax]
    144e:	01 00                	add    DWORD PTR [rax],eax
    1450:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    1453:	64 69 6e 74 2e 68 00 	imul   ebp,DWORD PTR fs:[rsi+0x74],0x200682e
    145a:	02 
    145b:	00 00                	add    BYTE PTR [rax],al
    145d:	61                   	(bad)  
    145e:	76 6c                	jbe    14cc <MULTIBOOT_HEADER_SIZE+0x1474>
    1460:	5f                   	pop    rdi
    1461:	74 72                	je     14d5 <MULTIBOOT_HEADER_SIZE+0x147d>
    1463:	65 65 2e 68 00 03 00 	gs gs cs push 0x300
    146a:	00 
    146b:	00 00                	add    BYTE PTR [rax],al
    146d:	09 02                	or     DWORD PTR [rdx],eax
    146f:	2d a1 00 01 00       	sub    eax,0x100a1
    1474:	00 00                	add    BYTE PTR [rax],al
    1476:	00 03                	add    BYTE PTR [rbx],al
    1478:	0a 01                	or     al,BYTE PTR [rcx]
    147a:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    147b:	d7                   	xlat   BYTE PTR ds:[rbx]
    147c:	9f                   	lahf   
    147d:	4b 31 f3             	rex.WXB xor r11,rsi
    1480:	83 83 08 21 03 16 2e 	add    DWORD PTR [rbx+0x16032108],0x2e
    1487:	08 2f                	or     BYTE PTR [rdi],ch
    1489:	75 9f                	jne    142a <MULTIBOOT_HEADER_SIZE+0x13d2>
    148b:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    148c:	a0 4b 83 02 24 14 4c 	movabs al,ds:0xe54c142402834b
    1493:	e5 00 
    1495:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1498:	06                   	(bad)  
    1499:	66 00 02             	data16 add BYTE PTR [rdx],al
    149c:	04 03                	add    al,0x3
    149e:	08 ba 00 02 04 04    	or     BYTE PTR [rdx+0x4040200],bh
    14a4:	74 00                	je     14a6 <MULTIBOOT_HEADER_SIZE+0x144e>
    14a6:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    14a9:	58                   	pop    rax
    14aa:	00 02                	add    BYTE PTR [rdx],al
    14ac:	04 06                	add    al,0x6
    14ae:	06                   	(bad)  
    14af:	75 00                	jne    14b1 <MULTIBOOT_HEADER_SIZE+0x1459>
    14b1:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    14b4:	06                   	(bad)  
    14b5:	66 00 02             	data16 add BYTE PTR [rdx],al
    14b8:	04 03                	add    al,0x3
    14ba:	08 c8                	or     al,cl
    14bc:	00 02                	add    BYTE PTR [rdx],al
    14be:	04 04                	add    al,0x4
    14c0:	74 00                	je     14c2 <MULTIBOOT_HEADER_SIZE+0x146a>
    14c2:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    14c5:	58                   	pop    rax
    14c6:	00 02                	add    BYTE PTR [rdx],al
    14c8:	04 06                	add    al,0x6
    14ca:	06                   	(bad)  
    14cb:	75 4b                	jne    1518 <MULTIBOOT_HEADER_SIZE+0x14c0>
    14cd:	31 08                	xor    DWORD PTR [rax],ecx
    14cf:	2f                   	(bad)  
    14d0:	9f                   	lahf   
    14d1:	08 83 33 89 4c bc    	or     BYTE PTR [rbx-0x43b376cd],al
    14d7:	08 f3                	or     bl,dh
    14d9:	08 f3                	or     bl,dh
    14db:	d7                   	xlat   BYTE PTR ds:[rbx]
    14dc:	00 02                	add    BYTE PTR [rdx],al
    14de:	04 01                	add    al,0x1
    14e0:	06                   	(bad)  
    14e1:	66 00 02             	data16 add BYTE PTR [rdx],al
    14e4:	04 03                	add    al,0x3
    14e6:	08 ac 00 02 04 04 74 	or     BYTE PTR [rax+rax*1+0x74040402],ch
    14ed:	00 02                	add    BYTE PTR [rdx],al
    14ef:	04 06                	add    al,0x6
    14f1:	58                   	pop    rax
    14f2:	00 02                	add    BYTE PTR [rdx],al
    14f4:	04 06                	add    al,0x6
    14f6:	06                   	(bad)  
    14f7:	76 00                	jbe    14f9 <MULTIBOOT_HEADER_SIZE+0x14a1>
    14f9:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    14fc:	08 f4                	or     ah,dh
    14fe:	00 02                	add    BYTE PTR [rdx],al
    1500:	04 06                	add    al,0x6
    1502:	08 4b 00             	or     BYTE PTR [rbx+0x0],cl
    1505:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1508:	06                   	(bad)  
    1509:	66 00 02             	data16 add BYTE PTR [rdx],al
    150c:	04 03                	add    al,0x3
    150e:	08 ac 00 02 04 04 74 	or     BYTE PTR [rax+rax*1+0x74040402],ch
    1515:	00 02                	add    BYTE PTR [rdx],al
    1517:	04 06                	add    al,0x6
    1519:	58                   	pop    rax
    151a:	00 02                	add    BYTE PTR [rdx],al
    151c:	04 06                	add    al,0x6
    151e:	06                   	(bad)  
    151f:	75 00                	jne    1521 <MULTIBOOT_HEADER_SIZE+0x14c9>
    1521:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1524:	06                   	(bad)  
    1525:	66 00 02             	data16 add BYTE PTR [rdx],al
    1528:	04 03                	add    al,0x3
    152a:	08 4a 00             	or     BYTE PTR [rdx+0x0],cl
    152d:	02 04 04             	add    al,BYTE PTR [rsp+rax*1]
    1530:	74 00                	je     1532 <MULTIBOOT_HEADER_SIZE+0x14da>
    1532:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    1535:	58                   	pop    rax
    1536:	00 02                	add    BYTE PTR [rdx],al
    1538:	04 06                	add    al,0x6
    153a:	06                   	(bad)  
    153b:	3d 31 89 4c bc       	cmp    eax,0xbc4c8931
    1540:	08 f3                	or     bl,dh
    1542:	08 f3                	or     bl,dh
    1544:	d7                   	xlat   BYTE PTR ds:[rbx]
    1545:	00 02                	add    BYTE PTR [rdx],al
    1547:	04 01                	add    al,0x1
    1549:	06                   	(bad)  
    154a:	66 00 02             	data16 add BYTE PTR [rdx],al
    154d:	04 03                	add    al,0x3
    154f:	08 ac 00 02 04 04 74 	or     BYTE PTR [rax+rax*1+0x74040402],ch
    1556:	00 02                	add    BYTE PTR [rdx],al
    1558:	04 06                	add    al,0x6
    155a:	58                   	pop    rax
    155b:	00 02                	add    BYTE PTR [rdx],al
    155d:	04 06                	add    al,0x6
    155f:	06                   	(bad)  
    1560:	76 00                	jbe    1562 <MULTIBOOT_HEADER_SIZE+0x150a>
    1562:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    1565:	08 f4                	or     ah,dh
    1567:	00 02                	add    BYTE PTR [rdx],al
    1569:	04 06                	add    al,0x6
    156b:	08 4b 00             	or     BYTE PTR [rbx+0x0],cl
    156e:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1571:	06                   	(bad)  
    1572:	66 00 02             	data16 add BYTE PTR [rdx],al
    1575:	04 03                	add    al,0x3
    1577:	08 ac 00 02 04 04 74 	or     BYTE PTR [rax+rax*1+0x74040402],ch
    157e:	00 02                	add    BYTE PTR [rdx],al
    1580:	04 06                	add    al,0x6
    1582:	58                   	pop    rax
    1583:	00 02                	add    BYTE PTR [rdx],al
    1585:	04 06                	add    al,0x6
    1587:	06                   	(bad)  
    1588:	75 00                	jne    158a <MULTIBOOT_HEADER_SIZE+0x1532>
    158a:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    158d:	06                   	(bad)  
    158e:	66 00 02             	data16 add BYTE PTR [rdx],al
    1591:	04 03                	add    al,0x3
    1593:	08 4a 00             	or     BYTE PTR [rdx+0x0],cl
    1596:	02 04 04             	add    al,BYTE PTR [rsp+rax*1]
    1599:	74 00                	je     159b <MULTIBOOT_HEADER_SIZE+0x1543>
    159b:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    159e:	58                   	pop    rax
    159f:	00 02                	add    BYTE PTR [rdx],al
    15a1:	04 06                	add    al,0x6
    15a3:	06                   	(bad)  
    15a4:	3d 31 88 4c bc       	cmp    eax,0xbc4c8831
    15a9:	08 f3                	or     bl,dh
    15ab:	08 f3                	or     bl,dh
    15ad:	d7                   	xlat   BYTE PTR ds:[rbx]
    15ae:	00 02                	add    BYTE PTR [rdx],al
    15b0:	04 01                	add    al,0x1
    15b2:	06                   	(bad)  
    15b3:	66 00 02             	data16 add BYTE PTR [rdx],al
    15b6:	04 03                	add    al,0x3
    15b8:	08 ac 00 02 04 04 74 	or     BYTE PTR [rax+rax*1+0x74040402],ch
    15bf:	00 02                	add    BYTE PTR [rdx],al
    15c1:	04 06                	add    al,0x6
    15c3:	58                   	pop    rax
    15c4:	00 02                	add    BYTE PTR [rdx],al
    15c6:	04 06                	add    al,0x6
    15c8:	06                   	(bad)  
    15c9:	76 00                	jbe    15cb <MULTIBOOT_HEADER_SIZE+0x1573>
    15cb:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    15ce:	08 f4                	or     ah,dh
    15d0:	00 02                	add    BYTE PTR [rdx],al
    15d2:	04 06                	add    al,0x6
    15d4:	08 4b 00             	or     BYTE PTR [rbx+0x0],cl
    15d7:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    15da:	06                   	(bad)  
    15db:	66 00 02             	data16 add BYTE PTR [rdx],al
    15de:	04 03                	add    al,0x3
    15e0:	08 ac 00 02 04 04 74 	or     BYTE PTR [rax+rax*1+0x74040402],ch
    15e7:	00 02                	add    BYTE PTR [rdx],al
    15e9:	04 06                	add    al,0x6
    15eb:	58                   	pop    rax
    15ec:	00 02                	add    BYTE PTR [rdx],al
    15ee:	04 06                	add    al,0x6
    15f0:	06                   	(bad)  
    15f1:	75 00                	jne    15f3 <MULTIBOOT_HEADER_SIZE+0x159b>
    15f3:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    15f6:	06                   	(bad)  
    15f7:	66 00 02             	data16 add BYTE PTR [rdx],al
    15fa:	04 03                	add    al,0x3
    15fc:	08 4a 00             	or     BYTE PTR [rdx+0x0],cl
    15ff:	02 04 04             	add    al,BYTE PTR [rsp+rax*1]
    1602:	74 00                	je     1604 <MULTIBOOT_HEADER_SIZE+0x15ac>
    1604:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    1607:	58                   	pop    rax
    1608:	00 02                	add    BYTE PTR [rdx],al
    160a:	04 06                	add    al,0x6
    160c:	06                   	(bad)  
    160d:	3d 31 88 4c bc       	cmp    eax,0xbc4c8831
    1612:	08 f3                	or     bl,dh
    1614:	08 f3                	or     bl,dh
    1616:	d7                   	xlat   BYTE PTR ds:[rbx]
    1617:	00 02                	add    BYTE PTR [rdx],al
    1619:	04 01                	add    al,0x1
    161b:	06                   	(bad)  
    161c:	66 00 02             	data16 add BYTE PTR [rdx],al
    161f:	04 03                	add    al,0x3
    1621:	08 ac 00 02 04 04 74 	or     BYTE PTR [rax+rax*1+0x74040402],ch
    1628:	00 02                	add    BYTE PTR [rdx],al
    162a:	04 06                	add    al,0x6
    162c:	58                   	pop    rax
    162d:	00 02                	add    BYTE PTR [rdx],al
    162f:	04 06                	add    al,0x6
    1631:	06                   	(bad)  
    1632:	76 00                	jbe    1634 <MULTIBOOT_HEADER_SIZE+0x15dc>
    1634:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    1637:	08 f4                	or     ah,dh
    1639:	00 02                	add    BYTE PTR [rdx],al
    163b:	04 06                	add    al,0x6
    163d:	08 4b 00             	or     BYTE PTR [rbx+0x0],cl
    1640:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1643:	06                   	(bad)  
    1644:	66 00 02             	data16 add BYTE PTR [rdx],al
    1647:	04 03                	add    al,0x3
    1649:	08 ac 00 02 04 04 74 	or     BYTE PTR [rax+rax*1+0x74040402],ch
    1650:	00 02                	add    BYTE PTR [rdx],al
    1652:	04 06                	add    al,0x6
    1654:	58                   	pop    rax
    1655:	00 02                	add    BYTE PTR [rdx],al
    1657:	04 06                	add    al,0x6
    1659:	06                   	(bad)  
    165a:	75 00                	jne    165c <MULTIBOOT_HEADER_SIZE+0x1604>
    165c:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    165f:	06                   	(bad)  
    1660:	66 00 02             	data16 add BYTE PTR [rdx],al
    1663:	04 03                	add    al,0x3
    1665:	08 4a 00             	or     BYTE PTR [rdx+0x0],cl
    1668:	02 04 04             	add    al,BYTE PTR [rsp+rax*1]
    166b:	74 00                	je     166d <MULTIBOOT_HEADER_SIZE+0x1615>
    166d:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    1670:	58                   	pop    rax
    1671:	00 02                	add    BYTE PTR [rdx],al
    1673:	04 06                	add    al,0x6
    1675:	06                   	(bad)  
    1676:	3d 31 8a 4c bc       	cmp    eax,0xbc4c8a31
    167b:	08 f3                	or     bl,dh
    167d:	08 f3                	or     bl,dh
    167f:	08 f3                	or     bl,dh
    1681:	08 f3                	or     bl,dh
    1683:	08 f3                	or     bl,dh
    1685:	02 23                	add    ah,BYTE PTR [rbx]
    1687:	13 00                	adc    eax,DWORD PTR [rax]
    1689:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    168c:	06                   	(bad)  
    168d:	66 00 02             	data16 add BYTE PTR [rdx],al
    1690:	04 03                	add    al,0x3
    1692:	08 ac 00 02 04 04 74 	or     BYTE PTR [rax+rax*1+0x74040402],ch
    1699:	00 02                	add    BYTE PTR [rdx],al
    169b:	04 06                	add    al,0x6
    169d:	58                   	pop    rax
    169e:	00 02                	add    BYTE PTR [rdx],al
    16a0:	04 06                	add    al,0x6
    16a2:	06                   	(bad)  
    16a3:	76 00                	jbe    16a5 <MULTIBOOT_HEADER_SIZE+0x164d>
    16a5:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    16a8:	08 f4                	or     ah,dh
    16aa:	00 02                	add    BYTE PTR [rdx],al
    16ac:	04 06                	add    al,0x6
    16ae:	02 2a                	add    ch,BYTE PTR [rdx]
    16b0:	13 00                	adc    eax,DWORD PTR [rax]
    16b2:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    16b5:	06                   	(bad)  
    16b6:	66 00 02             	data16 add BYTE PTR [rdx],al
    16b9:	04 03                	add    al,0x3
    16bb:	08 ac 00 02 04 04 74 	or     BYTE PTR [rax+rax*1+0x74040402],ch
    16c2:	00 02                	add    BYTE PTR [rdx],al
    16c4:	04 06                	add    al,0x6
    16c6:	58                   	pop    rax
    16c7:	00 02                	add    BYTE PTR [rdx],al
    16c9:	04 06                	add    al,0x6
    16cb:	06                   	(bad)  
    16cc:	75 00                	jne    16ce <MULTIBOOT_HEADER_SIZE+0x1676>
    16ce:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    16d1:	06                   	(bad)  
    16d2:	66 00 02             	data16 add BYTE PTR [rdx],al
    16d5:	04 03                	add    al,0x3
    16d7:	08 4a 00             	or     BYTE PTR [rdx+0x0],cl
    16da:	02 04 04             	add    al,BYTE PTR [rsp+rax*1]
    16dd:	74 00                	je     16df <MULTIBOOT_HEADER_SIZE+0x1687>
    16df:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    16e2:	58                   	pop    rax
    16e3:	00 02                	add    BYTE PTR [rdx],al
    16e5:	04 06                	add    al,0x6
    16e7:	06                   	(bad)  
    16e8:	3d 31 8a 4c bc       	cmp    eax,0xbc4c8a31
    16ed:	08 f3                	or     bl,dh
    16ef:	08 f3                	or     bl,dh
    16f1:	08 f3                	or     bl,dh
    16f3:	08 f3                	or     bl,dh
    16f5:	08 f3                	or     bl,dh
    16f7:	02 23                	add    ah,BYTE PTR [rbx]
    16f9:	13 00                	adc    eax,DWORD PTR [rax]
    16fb:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    16fe:	06                   	(bad)  
    16ff:	66 00 02             	data16 add BYTE PTR [rdx],al
    1702:	04 03                	add    al,0x3
    1704:	08 ac 00 02 04 04 74 	or     BYTE PTR [rax+rax*1+0x74040402],ch
    170b:	00 02                	add    BYTE PTR [rdx],al
    170d:	04 06                	add    al,0x6
    170f:	58                   	pop    rax
    1710:	00 02                	add    BYTE PTR [rdx],al
    1712:	04 06                	add    al,0x6
    1714:	06                   	(bad)  
    1715:	76 00                	jbe    1717 <MULTIBOOT_HEADER_SIZE+0x16bf>
    1717:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    171a:	08 f4                	or     ah,dh
    171c:	00 02                	add    BYTE PTR [rdx],al
    171e:	04 06                	add    al,0x6
    1720:	02 2a                	add    ch,BYTE PTR [rdx]
    1722:	13 00                	adc    eax,DWORD PTR [rax]
    1724:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1727:	06                   	(bad)  
    1728:	66 00 02             	data16 add BYTE PTR [rdx],al
    172b:	04 03                	add    al,0x3
    172d:	08 ac 00 02 04 04 74 	or     BYTE PTR [rax+rax*1+0x74040402],ch
    1734:	00 02                	add    BYTE PTR [rdx],al
    1736:	04 06                	add    al,0x6
    1738:	58                   	pop    rax
    1739:	00 02                	add    BYTE PTR [rdx],al
    173b:	04 06                	add    al,0x6
    173d:	06                   	(bad)  
    173e:	75 00                	jne    1740 <MULTIBOOT_HEADER_SIZE+0x16e8>
    1740:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1743:	06                   	(bad)  
    1744:	66 00 02             	data16 add BYTE PTR [rdx],al
    1747:	04 03                	add    al,0x3
    1749:	08 4a 00             	or     BYTE PTR [rdx+0x0],cl
    174c:	02 04 04             	add    al,BYTE PTR [rsp+rax*1]
    174f:	74 00                	je     1751 <MULTIBOOT_HEADER_SIZE+0x16f9>
    1751:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    1754:	58                   	pop    rax
    1755:	00 02                	add    BYTE PTR [rdx],al
    1757:	04 06                	add    al,0x6
    1759:	06                   	(bad)  
    175a:	3d 31 03 0a 82       	cmp    eax,0x820a0331
    175f:	4c bc 08 f3 08 f3 08 	rex.WR movabs rsp,0xf308f308f308f308
    1766:	f3 08 f3 
    1769:	08 f3                	or     bl,dh
    176b:	08 f3                	or     bl,dh
    176d:	08 f3                	or     bl,dh
    176f:	08 f3                	or     bl,dh
    1771:	08 f3                	or     bl,dh
    1773:	08 f3                	or     bl,dh
    1775:	02 46 13             	add    al,BYTE PTR [rsi+0x13]
    1778:	00 02                	add    BYTE PTR [rdx],al
    177a:	04 01                	add    al,0x1
    177c:	06                   	(bad)  
    177d:	66 00 02             	data16 add BYTE PTR [rdx],al
    1780:	04 03                	add    al,0x3
    1782:	08 ac 00 02 04 04 74 	or     BYTE PTR [rax+rax*1+0x74040402],ch
    1789:	00 02                	add    BYTE PTR [rdx],al
    178b:	04 06                	add    al,0x6
    178d:	58                   	pop    rax
    178e:	00 02                	add    BYTE PTR [rdx],al
    1790:	04 06                	add    al,0x6
    1792:	06                   	(bad)  
    1793:	76 00                	jbe    1795 <MULTIBOOT_HEADER_SIZE+0x173d>
    1795:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    1798:	08 f4                	or     ah,dh
    179a:	00 02                	add    BYTE PTR [rdx],al
    179c:	04 06                	add    al,0x6
    179e:	02 4d 13             	add    cl,BYTE PTR [rbp+0x13]
    17a1:	00 02                	add    BYTE PTR [rdx],al
    17a3:	04 01                	add    al,0x1
    17a5:	06                   	(bad)  
    17a6:	66 00 02             	data16 add BYTE PTR [rdx],al
    17a9:	04 03                	add    al,0x3
    17ab:	08 ac 00 02 04 04 74 	or     BYTE PTR [rax+rax*1+0x74040402],ch
    17b2:	00 02                	add    BYTE PTR [rdx],al
    17b4:	04 06                	add    al,0x6
    17b6:	58                   	pop    rax
    17b7:	00 02                	add    BYTE PTR [rdx],al
    17b9:	04 06                	add    al,0x6
    17bb:	06                   	(bad)  
    17bc:	75 00                	jne    17be <MULTIBOOT_HEADER_SIZE+0x1766>
    17be:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    17c1:	06                   	(bad)  
    17c2:	66 00 02             	data16 add BYTE PTR [rdx],al
    17c5:	04 03                	add    al,0x3
    17c7:	08 4a 00             	or     BYTE PTR [rdx+0x0],cl
    17ca:	02 04 04             	add    al,BYTE PTR [rsp+rax*1]
    17cd:	74 00                	je     17cf <MULTIBOOT_HEADER_SIZE+0x1777>
    17cf:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    17d2:	58                   	pop    rax
    17d3:	00 02                	add    BYTE PTR [rdx],al
    17d5:	04 06                	add    al,0x6
    17d7:	06                   	(bad)  
    17d8:	3d 31 03 0a 82       	cmp    eax,0x820a0331
    17dd:	4c bc 08 f3 08 f3 08 	rex.WR movabs rsp,0xf308f308f308f308
    17e4:	f3 08 f3 
    17e7:	08 f3                	or     bl,dh
    17e9:	08 f3                	or     bl,dh
    17eb:	08 f3                	or     bl,dh
    17ed:	08 f3                	or     bl,dh
    17ef:	08 f3                	or     bl,dh
    17f1:	08 f3                	or     bl,dh
    17f3:	02 46 13             	add    al,BYTE PTR [rsi+0x13]
    17f6:	00 02                	add    BYTE PTR [rdx],al
    17f8:	04 01                	add    al,0x1
    17fa:	06                   	(bad)  
    17fb:	66 00 02             	data16 add BYTE PTR [rdx],al
    17fe:	04 03                	add    al,0x3
    1800:	08 ac 00 02 04 04 74 	or     BYTE PTR [rax+rax*1+0x74040402],ch
    1807:	00 02                	add    BYTE PTR [rdx],al
    1809:	04 06                	add    al,0x6
    180b:	58                   	pop    rax
    180c:	00 02                	add    BYTE PTR [rdx],al
    180e:	04 06                	add    al,0x6
    1810:	06                   	(bad)  
    1811:	76 00                	jbe    1813 <MULTIBOOT_HEADER_SIZE+0x17bb>
    1813:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    1816:	08 f4                	or     ah,dh
    1818:	00 02                	add    BYTE PTR [rdx],al
    181a:	04 06                	add    al,0x6
    181c:	02 4d 13             	add    cl,BYTE PTR [rbp+0x13]
    181f:	00 02                	add    BYTE PTR [rdx],al
    1821:	04 01                	add    al,0x1
    1823:	06                   	(bad)  
    1824:	66 00 02             	data16 add BYTE PTR [rdx],al
    1827:	04 03                	add    al,0x3
    1829:	08 ac 00 02 04 04 74 	or     BYTE PTR [rax+rax*1+0x74040402],ch
    1830:	00 02                	add    BYTE PTR [rdx],al
    1832:	04 06                	add    al,0x6
    1834:	58                   	pop    rax
    1835:	00 02                	add    BYTE PTR [rdx],al
    1837:	04 06                	add    al,0x6
    1839:	06                   	(bad)  
    183a:	75 00                	jne    183c <MULTIBOOT_HEADER_SIZE+0x17e4>
    183c:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    183f:	06                   	(bad)  
    1840:	66 00 02             	data16 add BYTE PTR [rdx],al
    1843:	04 03                	add    al,0x3
    1845:	08 4a 00             	or     BYTE PTR [rdx+0x0],cl
    1848:	02 04 04             	add    al,BYTE PTR [rsp+rax*1]
    184b:	74 00                	je     184d <MULTIBOOT_HEADER_SIZE+0x17f5>
    184d:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    1850:	58                   	pop    rax
    1851:	00 02                	add    BYTE PTR [rdx],al
    1853:	04 06                	add    al,0x6
    1855:	06                   	(bad)  
    1856:	3d 31 03 0a 82       	cmp    eax,0x820a0331
    185b:	4c bc 08 f3 08 f3 08 	rex.WR movabs rsp,0xf308f308f308f308
    1862:	f3 08 f3 
    1865:	08 f3                	or     bl,dh
    1867:	08 f3                	or     bl,dh
    1869:	08 f3                	or     bl,dh
    186b:	08 f3                	or     bl,dh
    186d:	08 f3                	or     bl,dh
    186f:	08 f3                	or     bl,dh
    1871:	02 46 13             	add    al,BYTE PTR [rsi+0x13]
    1874:	00 02                	add    BYTE PTR [rdx],al
    1876:	04 01                	add    al,0x1
    1878:	06                   	(bad)  
    1879:	66 00 02             	data16 add BYTE PTR [rdx],al
    187c:	04 03                	add    al,0x3
    187e:	08 ac 00 02 04 04 74 	or     BYTE PTR [rax+rax*1+0x74040402],ch
    1885:	00 02                	add    BYTE PTR [rdx],al
    1887:	04 06                	add    al,0x6
    1889:	58                   	pop    rax
    188a:	00 02                	add    BYTE PTR [rdx],al
    188c:	04 06                	add    al,0x6
    188e:	06                   	(bad)  
    188f:	76 00                	jbe    1891 <MULTIBOOT_HEADER_SIZE+0x1839>
    1891:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    1894:	08 f3                	or     bl,dh
    1896:	00 02                	add    BYTE PTR [rdx],al
    1898:	04 06                	add    al,0x6
    189a:	08 f3                	or     bl,dh
    189c:	00 02                	add    BYTE PTR [rdx],al
    189e:	04 06                	add    al,0x6
    18a0:	08 f3                	or     bl,dh
    18a2:	00 02                	add    BYTE PTR [rdx],al
    18a4:	04 06                	add    al,0x6
    18a6:	08 f4                	or     ah,dh
    18a8:	00 02                	add    BYTE PTR [rdx],al
    18aa:	04 01                	add    al,0x1
    18ac:	06                   	(bad)  
    18ad:	66 00 02             	data16 add BYTE PTR [rdx],al
    18b0:	04 03                	add    al,0x3
    18b2:	08 ac 00 02 04 04 74 	or     BYTE PTR [rax+rax*1+0x74040402],ch
    18b9:	00 02                	add    BYTE PTR [rdx],al
    18bb:	04 06                	add    al,0x6
    18bd:	58                   	pop    rax
    18be:	00 02                	add    BYTE PTR [rdx],al
    18c0:	04 06                	add    al,0x6
    18c2:	06                   	(bad)  
    18c3:	75 00                	jne    18c5 <MULTIBOOT_HEADER_SIZE+0x186d>
    18c5:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    18c8:	06                   	(bad)  
    18c9:	66 00 02             	data16 add BYTE PTR [rdx],al
    18cc:	04 03                	add    al,0x3
    18ce:	08 4a 00             	or     BYTE PTR [rdx+0x0],cl
    18d1:	02 04 04             	add    al,BYTE PTR [rsp+rax*1]
    18d4:	74 00                	je     18d6 <MULTIBOOT_HEADER_SIZE+0x187e>
    18d6:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    18d9:	58                   	pop    rax
    18da:	00 02                	add    BYTE PTR [rdx],al
    18dc:	04 06                	add    al,0x6
    18de:	06                   	(bad)  
    18df:	3d 32 89 4c bc       	cmp    eax,0xbc4c8932
    18e4:	d8 08                	fmul   DWORD PTR [rax]
    18e6:	f3 08 f3             	repz or bl,dh
    18e9:	08 75 08             	or     BYTE PTR [rbp+0x8],dh
    18ec:	f3 08 ad 00 02 04 01 	repz or BYTE PTR [rbp+0x1040200],ch
    18f3:	06                   	(bad)  
    18f4:	66 00 02             	data16 add BYTE PTR [rdx],al
    18f7:	04 03                	add    al,0x3
    18f9:	08 ac 00 02 04 04 74 	or     BYTE PTR [rax+rax*1+0x74040402],ch
    1900:	00 02                	add    BYTE PTR [rdx],al
    1902:	04 06                	add    al,0x6
    1904:	58                   	pop    rax
    1905:	00 02                	add    BYTE PTR [rdx],al
    1907:	04 06                	add    al,0x6
    1909:	06                   	(bad)  
    190a:	76 00                	jbe    190c <MULTIBOOT_HEADER_SIZE+0x18b4>
    190c:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    190f:	08 76 00             	or     BYTE PTR [rsi+0x0],dh
    1912:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    1915:	08 4b 00             	or     BYTE PTR [rbx+0x0],cl
    1918:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    191b:	06                   	(bad)  
    191c:	66 00 02             	data16 add BYTE PTR [rdx],al
    191f:	04 03                	add    al,0x3
    1921:	08 ac 00 02 04 04 74 	or     BYTE PTR [rax+rax*1+0x74040402],ch
    1928:	00 02                	add    BYTE PTR [rdx],al
    192a:	04 06                	add    al,0x6
    192c:	58                   	pop    rax
    192d:	00 02                	add    BYTE PTR [rdx],al
    192f:	04 06                	add    al,0x6
    1931:	06                   	(bad)  
    1932:	75 00                	jne    1934 <MULTIBOOT_HEADER_SIZE+0x18dc>
    1934:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1937:	06                   	(bad)  
    1938:	66 00 02             	data16 add BYTE PTR [rdx],al
    193b:	04 03                	add    al,0x3
    193d:	08 4a 00             	or     BYTE PTR [rdx+0x0],cl
    1940:	02 04 04             	add    al,BYTE PTR [rsp+rax*1]
    1943:	74 00                	je     1945 <MULTIBOOT_HEADER_SIZE+0x18ed>
    1945:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    1948:	58                   	pop    rax
    1949:	00 02                	add    BYTE PTR [rdx],al
    194b:	04 06                	add    al,0x6
    194d:	06                   	(bad)  
    194e:	3d 31 89 4c bc       	cmp    eax,0xbc4c8931
    1953:	d8 08                	fmul   DWORD PTR [rax]
    1955:	f3 08 f3             	repz or bl,dh
    1958:	08 75 08             	or     BYTE PTR [rbp+0x8],dh
    195b:	f3 08 ad 00 02 04 01 	repz or BYTE PTR [rbp+0x1040200],ch
    1962:	06                   	(bad)  
    1963:	66 00 02             	data16 add BYTE PTR [rdx],al
    1966:	04 03                	add    al,0x3
    1968:	08 ac 00 02 04 04 74 	or     BYTE PTR [rax+rax*1+0x74040402],ch
    196f:	00 02                	add    BYTE PTR [rdx],al
    1971:	04 06                	add    al,0x6
    1973:	58                   	pop    rax
    1974:	00 02                	add    BYTE PTR [rdx],al
    1976:	04 06                	add    al,0x6
    1978:	06                   	(bad)  
    1979:	76 00                	jbe    197b <MULTIBOOT_HEADER_SIZE+0x1923>
    197b:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    197e:	08 76 00             	or     BYTE PTR [rsi+0x0],dh
    1981:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    1984:	08 4b 00             	or     BYTE PTR [rbx+0x0],cl
    1987:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    198a:	06                   	(bad)  
    198b:	66 00 02             	data16 add BYTE PTR [rdx],al
    198e:	04 03                	add    al,0x3
    1990:	08 ac 00 02 04 04 74 	or     BYTE PTR [rax+rax*1+0x74040402],ch
    1997:	00 02                	add    BYTE PTR [rdx],al
    1999:	04 06                	add    al,0x6
    199b:	58                   	pop    rax
    199c:	00 02                	add    BYTE PTR [rdx],al
    199e:	04 06                	add    al,0x6
    19a0:	06                   	(bad)  
    19a1:	75 00                	jne    19a3 <MULTIBOOT_HEADER_SIZE+0x194b>
    19a3:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    19a6:	06                   	(bad)  
    19a7:	66 00 02             	data16 add BYTE PTR [rdx],al
    19aa:	04 03                	add    al,0x3
    19ac:	08 4a 00             	or     BYTE PTR [rdx+0x0],cl
    19af:	02 04 04             	add    al,BYTE PTR [rsp+rax*1]
    19b2:	74 00                	je     19b4 <MULTIBOOT_HEADER_SIZE+0x195c>
    19b4:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    19b7:	58                   	pop    rax
    19b8:	00 02                	add    BYTE PTR [rdx],al
    19ba:	04 06                	add    al,0x6
    19bc:	06                   	(bad)  
    19bd:	3d 31 88 4c bc       	cmp    eax,0xbc4c8831
    19c2:	d8 08                	fmul   DWORD PTR [rax]
    19c4:	f3 08 f3             	repz or bl,dh
    19c7:	08 75 08             	or     BYTE PTR [rbp+0x8],dh
    19ca:	f3 08 ad 00 02 04 01 	repz or BYTE PTR [rbp+0x1040200],ch
    19d1:	06                   	(bad)  
    19d2:	66 00 02             	data16 add BYTE PTR [rdx],al
    19d5:	04 03                	add    al,0x3
    19d7:	08 ac 00 02 04 04 74 	or     BYTE PTR [rax+rax*1+0x74040402],ch
    19de:	00 02                	add    BYTE PTR [rdx],al
    19e0:	04 06                	add    al,0x6
    19e2:	58                   	pop    rax
    19e3:	00 02                	add    BYTE PTR [rdx],al
    19e5:	04 06                	add    al,0x6
    19e7:	06                   	(bad)  
    19e8:	76 00                	jbe    19ea <MULTIBOOT_HEADER_SIZE+0x1992>
    19ea:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    19ed:	08 76 00             	or     BYTE PTR [rsi+0x0],dh
    19f0:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    19f3:	08 4b 00             	or     BYTE PTR [rbx+0x0],cl
    19f6:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    19f9:	06                   	(bad)  
    19fa:	66 00 02             	data16 add BYTE PTR [rdx],al
    19fd:	04 03                	add    al,0x3
    19ff:	08 ac 00 02 04 04 74 	or     BYTE PTR [rax+rax*1+0x74040402],ch
    1a06:	00 02                	add    BYTE PTR [rdx],al
    1a08:	04 06                	add    al,0x6
    1a0a:	58                   	pop    rax
    1a0b:	00 02                	add    BYTE PTR [rdx],al
    1a0d:	04 06                	add    al,0x6
    1a0f:	06                   	(bad)  
    1a10:	75 00                	jne    1a12 <MULTIBOOT_HEADER_SIZE+0x19ba>
    1a12:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1a15:	06                   	(bad)  
    1a16:	66 00 02             	data16 add BYTE PTR [rdx],al
    1a19:	04 03                	add    al,0x3
    1a1b:	08 4a 00             	or     BYTE PTR [rdx+0x0],cl
    1a1e:	02 04 04             	add    al,BYTE PTR [rsp+rax*1]
    1a21:	74 00                	je     1a23 <MULTIBOOT_HEADER_SIZE+0x19cb>
    1a23:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    1a26:	58                   	pop    rax
    1a27:	00 02                	add    BYTE PTR [rdx],al
    1a29:	04 06                	add    al,0x6
    1a2b:	06                   	(bad)  
    1a2c:	3d 31 88 4c bc       	cmp    eax,0xbc4c8831
    1a31:	d8 08                	fmul   DWORD PTR [rax]
    1a33:	f3 08 f3             	repz or bl,dh
    1a36:	08 75 08             	or     BYTE PTR [rbp+0x8],dh
    1a39:	f3 08 ad 00 02 04 01 	repz or BYTE PTR [rbp+0x1040200],ch
    1a40:	06                   	(bad)  
    1a41:	66 00 02             	data16 add BYTE PTR [rdx],al
    1a44:	04 03                	add    al,0x3
    1a46:	08 ac 00 02 04 04 74 	or     BYTE PTR [rax+rax*1+0x74040402],ch
    1a4d:	00 02                	add    BYTE PTR [rdx],al
    1a4f:	04 06                	add    al,0x6
    1a51:	58                   	pop    rax
    1a52:	00 02                	add    BYTE PTR [rdx],al
    1a54:	04 06                	add    al,0x6
    1a56:	06                   	(bad)  
    1a57:	76 00                	jbe    1a59 <MULTIBOOT_HEADER_SIZE+0x1a01>
    1a59:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    1a5c:	08 76 00             	or     BYTE PTR [rsi+0x0],dh
    1a5f:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    1a62:	08 4b 00             	or     BYTE PTR [rbx+0x0],cl
    1a65:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1a68:	06                   	(bad)  
    1a69:	66 00 02             	data16 add BYTE PTR [rdx],al
    1a6c:	04 03                	add    al,0x3
    1a6e:	08 ac 00 02 04 04 74 	or     BYTE PTR [rax+rax*1+0x74040402],ch
    1a75:	00 02                	add    BYTE PTR [rdx],al
    1a77:	04 06                	add    al,0x6
    1a79:	58                   	pop    rax
    1a7a:	00 02                	add    BYTE PTR [rdx],al
    1a7c:	04 06                	add    al,0x6
    1a7e:	06                   	(bad)  
    1a7f:	75 00                	jne    1a81 <MULTIBOOT_HEADER_SIZE+0x1a29>
    1a81:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1a84:	06                   	(bad)  
    1a85:	66 00 02             	data16 add BYTE PTR [rdx],al
    1a88:	04 03                	add    al,0x3
    1a8a:	08 4a 00             	or     BYTE PTR [rdx+0x0],cl
    1a8d:	02 04 04             	add    al,BYTE PTR [rsp+rax*1]
    1a90:	74 00                	je     1a92 <MULTIBOOT_HEADER_SIZE+0x1a3a>
    1a92:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    1a95:	58                   	pop    rax
    1a96:	00 02                	add    BYTE PTR [rdx],al
    1a98:	04 06                	add    al,0x6
    1a9a:	06                   	(bad)  
    1a9b:	3d 31 03 0a 82       	cmp    eax,0x820a0331
    1aa0:	4c bc d8 08 75 75 00 	rex.WR movabs rsp,0x1040200757508d8
    1aa7:	02 04 01 
    1aaa:	06                   	(bad)  
    1aab:	66 00 02             	data16 add BYTE PTR [rdx],al
    1aae:	04 03                	add    al,0x3
    1ab0:	08 ac 00 02 04 04 74 	or     BYTE PTR [rax+rax*1+0x74040402],ch
    1ab7:	00 02                	add    BYTE PTR [rdx],al
    1ab9:	04 06                	add    al,0x6
    1abb:	58                   	pop    rax
    1abc:	00 02                	add    BYTE PTR [rdx],al
    1abe:	04 06                	add    al,0x6
    1ac0:	06                   	(bad)  
    1ac1:	76 00                	jbe    1ac3 <MULTIBOOT_HEADER_SIZE+0x1a6b>
    1ac3:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    1ac6:	08 76 00             	or     BYTE PTR [rsi+0x0],dh
    1ac9:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1acc:	06                   	(bad)  
    1acd:	66 00 02             	data16 add BYTE PTR [rdx],al
    1ad0:	04 03                	add    al,0x3
    1ad2:	08 ac 00 02 04 04 74 	or     BYTE PTR [rax+rax*1+0x74040402],ch
    1ad9:	00 02                	add    BYTE PTR [rdx],al
    1adb:	04 06                	add    al,0x6
    1add:	58                   	pop    rax
    1ade:	00 02                	add    BYTE PTR [rdx],al
    1ae0:	04 06                	add    al,0x6
    1ae2:	06                   	(bad)  
    1ae3:	75 00                	jne    1ae5 <MULTIBOOT_HEADER_SIZE+0x1a8d>
    1ae5:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1ae8:	06                   	(bad)  
    1ae9:	66 00 02             	data16 add BYTE PTR [rdx],al
    1aec:	04 03                	add    al,0x3
    1aee:	08 4a 00             	or     BYTE PTR [rdx+0x0],cl
    1af1:	02 04 04             	add    al,BYTE PTR [rsp+rax*1]
    1af4:	74 00                	je     1af6 <MULTIBOOT_HEADER_SIZE+0x1a9e>
    1af6:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    1af9:	58                   	pop    rax
    1afa:	00 02                	add    BYTE PTR [rdx],al
    1afc:	04 06                	add    al,0x6
    1afe:	06                   	(bad)  
    1aff:	3d 31 03 15 82       	cmp    eax,0x82150331
    1b04:	4c bc d8 08 75 08 f3 	rex.WR movabs rsp,0x8f308f3087508d8
    1b0b:	08 f3 08 
    1b0e:	f3 08 f3             	repz or bl,dh
    1b11:	02 23                	add    ah,BYTE PTR [rbx]
    1b13:	13 00                	adc    eax,DWORD PTR [rax]
    1b15:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1b18:	06                   	(bad)  
    1b19:	66 00 02             	data16 add BYTE PTR [rdx],al
    1b1c:	04 03                	add    al,0x3
    1b1e:	08 ac 00 02 04 04 74 	or     BYTE PTR [rax+rax*1+0x74040402],ch
    1b25:	00 02                	add    BYTE PTR [rdx],al
    1b27:	04 06                	add    al,0x6
    1b29:	58                   	pop    rax
    1b2a:	00 02                	add    BYTE PTR [rdx],al
    1b2c:	04 06                	add    al,0x6
    1b2e:	06                   	(bad)  
    1b2f:	76 00                	jbe    1b31 <MULTIBOOT_HEADER_SIZE+0x1ad9>
    1b31:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    1b34:	08 76 00             	or     BYTE PTR [rsi+0x0],dh
    1b37:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    1b3a:	08 ad 00 02 04 01    	or     BYTE PTR [rbp+0x1040200],ch
    1b40:	06                   	(bad)  
    1b41:	66 00 02             	data16 add BYTE PTR [rdx],al
    1b44:	04 03                	add    al,0x3
    1b46:	08 ac 00 02 04 04 74 	or     BYTE PTR [rax+rax*1+0x74040402],ch
    1b4d:	00 02                	add    BYTE PTR [rdx],al
    1b4f:	04 06                	add    al,0x6
    1b51:	58                   	pop    rax
    1b52:	00 02                	add    BYTE PTR [rdx],al
    1b54:	04 06                	add    al,0x6
    1b56:	06                   	(bad)  
    1b57:	75 00                	jne    1b59 <MULTIBOOT_HEADER_SIZE+0x1b01>
    1b59:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1b5c:	06                   	(bad)  
    1b5d:	66 00 02             	data16 add BYTE PTR [rdx],al
    1b60:	04 03                	add    al,0x3
    1b62:	08 4a 00             	or     BYTE PTR [rdx+0x0],cl
    1b65:	02 04 04             	add    al,BYTE PTR [rsp+rax*1]
    1b68:	74 00                	je     1b6a <MULTIBOOT_HEADER_SIZE+0x1b12>
    1b6a:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    1b6d:	58                   	pop    rax
    1b6e:	00 02                	add    BYTE PTR [rdx],al
    1b70:	04 06                	add    al,0x6
    1b72:	06                   	(bad)  
    1b73:	3d 31 03 11 82       	cmp    eax,0x82110331
    1b78:	4c bc d8 08 f3 08 75 	rex.WR movabs rsp,0x8f3087508f308d8
    1b7f:	08 f3 08 
    1b82:	f3 08 f3             	repz or bl,dh
    1b85:	08 f3                	or     bl,dh
    1b87:	02 2a                	add    ch,BYTE PTR [rdx]
    1b89:	13 00                	adc    eax,DWORD PTR [rax]
    1b8b:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1b8e:	06                   	(bad)  
    1b8f:	66 00 02             	data16 add BYTE PTR [rdx],al
    1b92:	04 03                	add    al,0x3
    1b94:	08 ac 00 02 04 04 74 	or     BYTE PTR [rax+rax*1+0x74040402],ch
    1b9b:	00 02                	add    BYTE PTR [rdx],al
    1b9d:	04 06                	add    al,0x6
    1b9f:	58                   	pop    rax
    1ba0:	00 02                	add    BYTE PTR [rdx],al
    1ba2:	04 06                	add    al,0x6
    1ba4:	06                   	(bad)  
    1ba5:	76 00                	jbe    1ba7 <MULTIBOOT_HEADER_SIZE+0x1b4f>
    1ba7:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    1baa:	08 76 00             	or     BYTE PTR [rsi+0x0],dh
    1bad:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    1bb0:	02 23                	add    ah,BYTE PTR [rbx]
    1bb2:	13 00                	adc    eax,DWORD PTR [rax]
    1bb4:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1bb7:	06                   	(bad)  
    1bb8:	66 00 02             	data16 add BYTE PTR [rdx],al
    1bbb:	04 03                	add    al,0x3
    1bbd:	08 ac 00 02 04 04 74 	or     BYTE PTR [rax+rax*1+0x74040402],ch
    1bc4:	00 02                	add    BYTE PTR [rdx],al
    1bc6:	04 06                	add    al,0x6
    1bc8:	58                   	pop    rax
    1bc9:	00 02                	add    BYTE PTR [rdx],al
    1bcb:	04 06                	add    al,0x6
    1bcd:	06                   	(bad)  
    1bce:	75 00                	jne    1bd0 <MULTIBOOT_HEADER_SIZE+0x1b78>
    1bd0:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1bd3:	06                   	(bad)  
    1bd4:	66 00 02             	data16 add BYTE PTR [rdx],al
    1bd7:	04 03                	add    al,0x3
    1bd9:	08 4a 00             	or     BYTE PTR [rdx+0x0],cl
    1bdc:	02 04 04             	add    al,BYTE PTR [rsp+rax*1]
    1bdf:	74 00                	je     1be1 <MULTIBOOT_HEADER_SIZE+0x1b89>
    1be1:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    1be4:	58                   	pop    rax
    1be5:	00 02                	add    BYTE PTR [rdx],al
    1be7:	04 06                	add    al,0x6
    1be9:	06                   	(bad)  
    1bea:	3d 31 03 10 82       	cmp    eax,0x82100331
    1bef:	4c bc d7 d7 d7 d7 d9 	rex.WR movabs rsp,0x8f308d9d7d7d7d7
    1bf6:	08 f3 08 
    1bf9:	75 08                	jne    1c03 <MULTIBOOT_HEADER_SIZE+0x1bab>
    1bfb:	75 08                	jne    1c05 <MULTIBOOT_HEADER_SIZE+0x1bad>
    1bfd:	75 08                	jne    1c07 <MULTIBOOT_HEADER_SIZE+0x1baf>
    1bff:	75 08                	jne    1c09 <MULTIBOOT_HEADER_SIZE+0x1bb1>
    1c01:	76 02                	jbe    1c05 <MULTIBOOT_HEADER_SIZE+0x1bad>
    1c03:	2a 13                	sub    dl,BYTE PTR [rbx]
    1c05:	00 02                	add    BYTE PTR [rdx],al
    1c07:	04 01                	add    al,0x1
    1c09:	06                   	(bad)  
    1c0a:	66 00 02             	data16 add BYTE PTR [rdx],al
    1c0d:	04 03                	add    al,0x3
    1c0f:	08 ac 00 02 04 04 74 	or     BYTE PTR [rax+rax*1+0x74040402],ch
    1c16:	00 02                	add    BYTE PTR [rdx],al
    1c18:	04 06                	add    al,0x6
    1c1a:	58                   	pop    rax
    1c1b:	00 02                	add    BYTE PTR [rdx],al
    1c1d:	04 06                	add    al,0x6
    1c1f:	06                   	(bad)  
    1c20:	76 00                	jbe    1c22 <MULTIBOOT_HEADER_SIZE+0x1bca>
    1c22:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    1c25:	08 75 00             	or     BYTE PTR [rbp+0x0],dh
    1c28:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    1c2b:	08 75 00             	or     BYTE PTR [rbp+0x0],dh
    1c2e:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    1c31:	08 75 00             	or     BYTE PTR [rbp+0x0],dh
    1c34:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    1c37:	08 75 00             	or     BYTE PTR [rbp+0x0],dh
    1c3a:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    1c3d:	08 76 00             	or     BYTE PTR [rsi+0x0],dh
    1c40:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    1c43:	75 00                	jne    1c45 <MULTIBOOT_HEADER_SIZE+0x1bed>
    1c45:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1c48:	06                   	(bad)  
    1c49:	66 00 02             	data16 add BYTE PTR [rdx],al
    1c4c:	04 03                	add    al,0x3
    1c4e:	08 ac 00 02 04 04 74 	or     BYTE PTR [rax+rax*1+0x74040402],ch
    1c55:	00 02                	add    BYTE PTR [rdx],al
    1c57:	04 06                	add    al,0x6
    1c59:	58                   	pop    rax
    1c5a:	00 02                	add    BYTE PTR [rdx],al
    1c5c:	04 06                	add    al,0x6
    1c5e:	06                   	(bad)  
    1c5f:	75 00                	jne    1c61 <MULTIBOOT_HEADER_SIZE+0x1c09>
    1c61:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1c64:	06                   	(bad)  
    1c65:	66 00 02             	data16 add BYTE PTR [rdx],al
    1c68:	04 03                	add    al,0x3
    1c6a:	08 4a 00             	or     BYTE PTR [rdx+0x0],cl
    1c6d:	02 04 04             	add    al,BYTE PTR [rsp+rax*1]
    1c70:	74 00                	je     1c72 <MULTIBOOT_HEADER_SIZE+0x1c1a>
    1c72:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    1c75:	58                   	pop    rax
    1c76:	00 02                	add    BYTE PTR [rdx],al
    1c78:	04 06                	add    al,0x6
    1c7a:	06                   	(bad)  
    1c7b:	3d 31 03 1a 82       	cmp    eax,0x821a0331
    1c80:	4c bc d8 08 f3 08 f3 	rex.WR movabs rsp,0x8f308f308f308d8
    1c87:	08 f3 08 
    1c8a:	f3 08 f3             	repz or bl,dh
    1c8d:	08 f3                	or     bl,dh
    1c8f:	08 f3                	or     bl,dh
    1c91:	08 f3                	or     bl,dh
    1c93:	08 f3                	or     bl,dh
    1c95:	08 f3                	or     bl,dh
    1c97:	08 75 08             	or     BYTE PTR [rbp+0x8],dh
    1c9a:	f3 02 54 13 00       	repz add dl,BYTE PTR [rbx+rdx*1+0x0]
    1c9f:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1ca2:	06                   	(bad)  
    1ca3:	66 00 02             	data16 add BYTE PTR [rdx],al
    1ca6:	04 03                	add    al,0x3
    1ca8:	08 ac 00 02 04 04 74 	or     BYTE PTR [rax+rax*1+0x74040402],ch
    1caf:	00 02                	add    BYTE PTR [rdx],al
    1cb1:	04 06                	add    al,0x6
    1cb3:	58                   	pop    rax
    1cb4:	00 02                	add    BYTE PTR [rdx],al
    1cb6:	04 06                	add    al,0x6
    1cb8:	06                   	(bad)  
    1cb9:	76 00                	jbe    1cbb <MULTIBOOT_HEADER_SIZE+0x1c63>
    1cbb:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    1cbe:	08 76 00             	or     BYTE PTR [rsi+0x0],dh
    1cc1:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    1cc4:	02 4d 13             	add    cl,BYTE PTR [rbp+0x13]
    1cc7:	00 02                	add    BYTE PTR [rdx],al
    1cc9:	04 01                	add    al,0x1
    1ccb:	06                   	(bad)  
    1ccc:	66 00 02             	data16 add BYTE PTR [rdx],al
    1ccf:	04 03                	add    al,0x3
    1cd1:	08 ac 00 02 04 04 74 	or     BYTE PTR [rax+rax*1+0x74040402],ch
    1cd8:	00 02                	add    BYTE PTR [rdx],al
    1cda:	04 06                	add    al,0x6
    1cdc:	58                   	pop    rax
    1cdd:	00 02                	add    BYTE PTR [rdx],al
    1cdf:	04 06                	add    al,0x6
    1ce1:	06                   	(bad)  
    1ce2:	75 00                	jne    1ce4 <MULTIBOOT_HEADER_SIZE+0x1c8c>
    1ce4:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1ce7:	06                   	(bad)  
    1ce8:	66 00 02             	data16 add BYTE PTR [rdx],al
    1ceb:	04 03                	add    al,0x3
    1ced:	08 4a 00             	or     BYTE PTR [rdx+0x0],cl
    1cf0:	02 04 04             	add    al,BYTE PTR [rsp+rax*1]
    1cf3:	74 00                	je     1cf5 <MULTIBOOT_HEADER_SIZE+0x1c9d>
    1cf5:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    1cf8:	58                   	pop    rax
    1cf9:	00 02                	add    BYTE PTR [rdx],al
    1cfb:	04 06                	add    al,0x6
    1cfd:	06                   	(bad)  
    1cfe:	3d 31 03 1a 82       	cmp    eax,0x821a0331
    1d03:	4c bc d8 08 f3 08 f3 	rex.WR movabs rsp,0x8f308f308f308d8
    1d0a:	08 f3 08 
    1d0d:	f3 08 f3             	repz or bl,dh
    1d10:	08 f3                	or     bl,dh
    1d12:	08 f3                	or     bl,dh
    1d14:	08 f3                	or     bl,dh
    1d16:	08 75 08             	or     BYTE PTR [rbp+0x8],dh
    1d19:	f3 08 f3             	repz or bl,dh
    1d1c:	08 f3                	or     bl,dh
    1d1e:	02 54 13 00          	add    dl,BYTE PTR [rbx+rdx*1+0x0]
    1d22:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1d25:	06                   	(bad)  
    1d26:	66 00 02             	data16 add BYTE PTR [rdx],al
    1d29:	04 03                	add    al,0x3
    1d2b:	08 ac 00 02 04 04 74 	or     BYTE PTR [rax+rax*1+0x74040402],ch
    1d32:	00 02                	add    BYTE PTR [rdx],al
    1d34:	04 06                	add    al,0x6
    1d36:	58                   	pop    rax
    1d37:	00 02                	add    BYTE PTR [rdx],al
    1d39:	04 06                	add    al,0x6
    1d3b:	06                   	(bad)  
    1d3c:	76 00                	jbe    1d3e <MULTIBOOT_HEADER_SIZE+0x1ce6>
    1d3e:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    1d41:	08 76 00             	or     BYTE PTR [rsi+0x0],dh
    1d44:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    1d47:	02 4d 13             	add    cl,BYTE PTR [rbp+0x13]
    1d4a:	00 02                	add    BYTE PTR [rdx],al
    1d4c:	04 01                	add    al,0x1
    1d4e:	06                   	(bad)  
    1d4f:	66 00 02             	data16 add BYTE PTR [rdx],al
    1d52:	04 03                	add    al,0x3
    1d54:	08 ac 00 02 04 04 74 	or     BYTE PTR [rax+rax*1+0x74040402],ch
    1d5b:	00 02                	add    BYTE PTR [rdx],al
    1d5d:	04 06                	add    al,0x6
    1d5f:	58                   	pop    rax
    1d60:	00 02                	add    BYTE PTR [rdx],al
    1d62:	04 06                	add    al,0x6
    1d64:	06                   	(bad)  
    1d65:	75 00                	jne    1d67 <MULTIBOOT_HEADER_SIZE+0x1d0f>
    1d67:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1d6a:	06                   	(bad)  
    1d6b:	66 00 02             	data16 add BYTE PTR [rdx],al
    1d6e:	04 03                	add    al,0x3
    1d70:	08 4a 00             	or     BYTE PTR [rdx+0x0],cl
    1d73:	02 04 04             	add    al,BYTE PTR [rsp+rax*1]
    1d76:	74 00                	je     1d78 <MULTIBOOT_HEADER_SIZE+0x1d20>
    1d78:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    1d7b:	58                   	pop    rax
    1d7c:	00 02                	add    BYTE PTR [rdx],al
    1d7e:	04 06                	add    al,0x6
    1d80:	06                   	(bad)  
    1d81:	3d 31 03 1a 82       	cmp    eax,0x821a0331
    1d86:	4c bc d8 08 f3 08 f3 	rex.WR movabs rsp,0x8f308f308f308d8
    1d8d:	08 f3 08 
    1d90:	75 08                	jne    1d9a <MULTIBOOT_HEADER_SIZE+0x1d42>
    1d92:	f3 08 f3             	repz or bl,dh
    1d95:	08 f3                	or     bl,dh
    1d97:	08 f3                	or     bl,dh
    1d99:	08 f3                	or     bl,dh
    1d9b:	08 f3                	or     bl,dh
    1d9d:	08 f3                	or     bl,dh
    1d9f:	08 f3                	or     bl,dh
    1da1:	02 54 13 00          	add    dl,BYTE PTR [rbx+rdx*1+0x0]
    1da5:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1da8:	06                   	(bad)  
    1da9:	66 00 02             	data16 add BYTE PTR [rdx],al
    1dac:	04 03                	add    al,0x3
    1dae:	08 ac 00 02 04 04 74 	or     BYTE PTR [rax+rax*1+0x74040402],ch
    1db5:	00 02                	add    BYTE PTR [rdx],al
    1db7:	04 06                	add    al,0x6
    1db9:	58                   	pop    rax
    1dba:	00 02                	add    BYTE PTR [rdx],al
    1dbc:	04 06                	add    al,0x6
    1dbe:	06                   	(bad)  
    1dbf:	76 00                	jbe    1dc1 <MULTIBOOT_HEADER_SIZE+0x1d69>
    1dc1:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    1dc4:	08 76 00             	or     BYTE PTR [rsi+0x0],dh
    1dc7:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    1dca:	02 4d 13             	add    cl,BYTE PTR [rbp+0x13]
    1dcd:	00 02                	add    BYTE PTR [rdx],al
    1dcf:	04 01                	add    al,0x1
    1dd1:	06                   	(bad)  
    1dd2:	66 00 02             	data16 add BYTE PTR [rdx],al
    1dd5:	04 03                	add    al,0x3
    1dd7:	08 ac 00 02 04 04 74 	or     BYTE PTR [rax+rax*1+0x74040402],ch
    1dde:	00 02                	add    BYTE PTR [rdx],al
    1de0:	04 06                	add    al,0x6
    1de2:	58                   	pop    rax
    1de3:	00 02                	add    BYTE PTR [rdx],al
    1de5:	04 06                	add    al,0x6
    1de7:	06                   	(bad)  
    1de8:	75 00                	jne    1dea <MULTIBOOT_HEADER_SIZE+0x1d92>
    1dea:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1ded:	06                   	(bad)  
    1dee:	66 00 02             	data16 add BYTE PTR [rdx],al
    1df1:	04 03                	add    al,0x3
    1df3:	08 4a 00             	or     BYTE PTR [rdx+0x0],cl
    1df6:	02 04 04             	add    al,BYTE PTR [rsp+rax*1]
    1df9:	74 00                	je     1dfb <MULTIBOOT_HEADER_SIZE+0x1da3>
    1dfb:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    1dfe:	58                   	pop    rax
    1dff:	00 02                	add    BYTE PTR [rdx],al
    1e01:	04 06                	add    al,0x6
    1e03:	06                   	(bad)  
    1e04:	3d 31 03 13 82       	cmp    eax,0x82130331
    1e09:	4c bc d7 d8 08 f3 08 	rex.WR movabs rsp,0xf308f308f308d8d7
    1e10:	f3 08 f3 
    1e13:	08 f3                	or     bl,dh
    1e15:	08 f3                	or     bl,dh
    1e17:	08 f4                	or     ah,dh
    1e19:	02 2a                	add    ch,BYTE PTR [rdx]
    1e1b:	13 00                	adc    eax,DWORD PTR [rax]
    1e1d:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1e20:	06                   	(bad)  
    1e21:	66 00 02             	data16 add BYTE PTR [rdx],al
    1e24:	04 03                	add    al,0x3
    1e26:	08 ac 00 02 04 04 74 	or     BYTE PTR [rax+rax*1+0x74040402],ch
    1e2d:	00 02                	add    BYTE PTR [rdx],al
    1e2f:	04 06                	add    al,0x6
    1e31:	58                   	pop    rax
    1e32:	00 02                	add    BYTE PTR [rdx],al
    1e34:	04 06                	add    al,0x6
    1e36:	06                   	(bad)  
    1e37:	76 00                	jbe    1e39 <MULTIBOOT_HEADER_SIZE+0x1de1>
    1e39:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    1e3c:	08 75 00             	or     BYTE PTR [rbp+0x0],dh
    1e3f:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    1e42:	08 75 00             	or     BYTE PTR [rbp+0x0],dh
    1e45:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1e48:	06                   	(bad)  
    1e49:	66 00 02             	data16 add BYTE PTR [rdx],al
    1e4c:	04 03                	add    al,0x3
    1e4e:	08 ac 00 02 04 04 74 	or     BYTE PTR [rax+rax*1+0x74040402],ch
    1e55:	00 02                	add    BYTE PTR [rdx],al
    1e57:	04 06                	add    al,0x6
    1e59:	58                   	pop    rax
    1e5a:	00 02                	add    BYTE PTR [rdx],al
    1e5c:	04 06                	add    al,0x6
    1e5e:	06                   	(bad)  
    1e5f:	75 00                	jne    1e61 <MULTIBOOT_HEADER_SIZE+0x1e09>
    1e61:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1e64:	06                   	(bad)  
    1e65:	66 00 02             	data16 add BYTE PTR [rdx],al
    1e68:	04 03                	add    al,0x3
    1e6a:	08 4a 00             	or     BYTE PTR [rdx+0x0],cl
    1e6d:	02 04 04             	add    al,BYTE PTR [rsp+rax*1]
    1e70:	74 00                	je     1e72 <MULTIBOOT_HEADER_SIZE+0x1e1a>
    1e72:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    1e75:	58                   	pop    rax
    1e76:	00 02                	add    BYTE PTR [rdx],al
    1e78:	04 06                	add    al,0x6
    1e7a:	06                   	(bad)  
    1e7b:	3d 35 83 4c bd       	cmp    eax,0xbd4c8335
    1e80:	bc 02 23 13 30       	mov    esp,0x30132302
    1e85:	02 63 10             	add    ah,BYTE PTR [rbx+0x10]
    1e88:	00 02                	add    BYTE PTR [rdx],al
    1e8a:	04 02                	add    al,0x2
    1e8c:	02 38                	add    bh,BYTE PTR [rax]
    1e8e:	16                   	(bad)  
    1e8f:	00 02                	add    BYTE PTR [rdx],al
    1e91:	04 02                	add    al,0x2
    1e93:	03 79 02             	add    edi,DWORD PTR [rcx+0x2]
    1e96:	2f                   	(bad)  
    1e97:	01 00                	add    DWORD PTR [rax],eax
    1e99:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1e9c:	06                   	(bad)  
    1e9d:	4a 06                	rex.WX (bad) 
    1e9f:	03 0b                	add    ecx,DWORD PTR [rbx]
    1ea1:	c8 00 02 04          	enter  0x200,0x4
    1ea5:	01 06                	add    DWORD PTR [rsi],eax
    1ea7:	66 00 02             	data16 add BYTE PTR [rdx],al
    1eaa:	04 03                	add    al,0x3
    1eac:	08 4a 00             	or     BYTE PTR [rdx+0x0],cl
    1eaf:	02 04 04             	add    al,BYTE PTR [rsp+rax*1]
    1eb2:	74 00                	je     1eb4 <MULTIBOOT_HEADER_SIZE+0x1e5c>
    1eb4:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    1eb7:	58                   	pop    rax
    1eb8:	00 02                	add    BYTE PTR [rdx],al
    1eba:	04 06                	add    al,0x6
    1ebc:	06                   	(bad)  
    1ebd:	75 00                	jne    1ebf <MULTIBOOT_HEADER_SIZE+0x1e67>
    1ebf:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1ec2:	06                   	(bad)  
    1ec3:	66 00 02             	data16 add BYTE PTR [rdx],al
    1ec6:	04 03                	add    al,0x3
    1ec8:	08 2e                	or     BYTE PTR [rsi],ch
    1eca:	00 02                	add    BYTE PTR [rdx],al
    1ecc:	04 04                	add    al,0x4
    1ece:	74 00                	je     1ed0 <MULTIBOOT_HEADER_SIZE+0x1e78>
    1ed0:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    1ed3:	58                   	pop    rax
    1ed4:	00 02                	add    BYTE PTR [rdx],al
    1ed6:	04 06                	add    al,0x6
    1ed8:	06                   	(bad)  
    1ed9:	77 00                	ja     1edb <MULTIBOOT_HEADER_SIZE+0x1e83>
    1edb:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    1ede:	f3 00 02             	repz add BYTE PTR [rdx],al
    1ee1:	04 06                	add    al,0x6
    1ee3:	75 00                	jne    1ee5 <MULTIBOOT_HEADER_SIZE+0x1e8d>
    1ee5:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    1ee8:	75 00                	jne    1eea <MULTIBOOT_HEADER_SIZE+0x1e92>
    1eea:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    1eed:	9f                   	lahf   
    1eee:	30 84 4b 30 4b f3 67 	xor    BYTE PTR [rbx+rcx*2+0x67f34b30],al
    1ef5:	76 03                	jbe    1efa <MULTIBOOT_HEADER_SIZE+0x1ea2>
    1ef7:	74 9e                	je     1e97 <MULTIBOOT_HEADER_SIZE+0x1e3f>
    1ef9:	03 10                	add    edx,DWORD PTR [rax]
    1efb:	74 00                	je     1efd <MULTIBOOT_HEADER_SIZE+0x1ea5>
    1efd:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1f00:	06                   	(bad)  
    1f01:	66 00 02             	data16 add BYTE PTR [rdx],al
    1f04:	04 03                	add    al,0x3
    1f06:	90                   	nop
    1f07:	00 02                	add    BYTE PTR [rdx],al
    1f09:	04 04                	add    al,0x4
    1f0b:	74 00                	je     1f0d <MULTIBOOT_HEADER_SIZE+0x1eb5>
    1f0d:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    1f10:	58                   	pop    rax
    1f11:	00 02                	add    BYTE PTR [rdx],al
    1f13:	04 06                	add    al,0x6
    1f15:	06                   	(bad)  
    1f16:	77 00                	ja     1f18 <MULTIBOOT_HEADER_SIZE+0x1ec0>
    1f18:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    1f1b:	f3 00 02             	repz add BYTE PTR [rdx],al
    1f1e:	04 06                	add    al,0x6
    1f20:	75 00                	jne    1f22 <MULTIBOOT_HEADER_SIZE+0x1eca>
    1f22:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    1f25:	9f                   	lahf   
    1f26:	00 02                	add    BYTE PTR [rdx],al
    1f28:	04 06                	add    al,0x6
    1f2a:	67 30 84 4b 30 4b f3 	xor    BYTE PTR [ebx+ecx*2+0x67f34b30],al
    1f31:	67 
    1f32:	76 03                	jbe    1f37 <MULTIBOOT_HEADER_SIZE+0x1edf>
    1f34:	74 9e                	je     1ed4 <MULTIBOOT_HEADER_SIZE+0x1e7c>
    1f36:	03 10                	add    edx,DWORD PTR [rax]
    1f38:	74 00                	je     1f3a <MULTIBOOT_HEADER_SIZE+0x1ee2>
    1f3a:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1f3d:	06                   	(bad)  
    1f3e:	66 00 02             	data16 add BYTE PTR [rdx],al
    1f41:	04 03                	add    al,0x3
    1f43:	90                   	nop
    1f44:	00 02                	add    BYTE PTR [rdx],al
    1f46:	04 04                	add    al,0x4
    1f48:	74 00                	je     1f4a <MULTIBOOT_HEADER_SIZE+0x1ef2>
    1f4a:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    1f4d:	58                   	pop    rax
    1f4e:	00 02                	add    BYTE PTR [rdx],al
    1f50:	04 06                	add    al,0x6
    1f52:	06                   	(bad)  
    1f53:	78 bc                	js     1f11 <MULTIBOOT_HEADER_SIZE+0x1eb9>
    1f55:	00 02                	add    BYTE PTR [rdx],al
    1f57:	04 01                	add    al,0x1
    1f59:	06                   	(bad)  
    1f5a:	66 00 02             	data16 add BYTE PTR [rdx],al
    1f5d:	04 03                	add    al,0x3
    1f5f:	02 34 12             	add    dh,BYTE PTR [rdx+rdx*1]
    1f62:	00 02                	add    BYTE PTR [rdx],al
    1f64:	04 04                	add    al,0x4
    1f66:	74 00                	je     1f68 <MULTIBOOT_HEADER_SIZE+0x1f10>
    1f68:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    1f6b:	58                   	pop    rax
    1f6c:	00 02                	add    BYTE PTR [rdx],al
    1f6e:	04 06                	add    al,0x6
    1f70:	06                   	(bad)  
    1f71:	75 00                	jne    1f73 <MULTIBOOT_HEADER_SIZE+0x1f1b>
    1f73:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    1f76:	02 2f                	add    ch,BYTE PTR [rdi]
    1f78:	13 00                	adc    eax,DWORD PTR [rax]
    1f7a:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1f7d:	06                   	(bad)  
    1f7e:	66 00 02             	data16 add BYTE PTR [rdx],al
    1f81:	04 03                	add    al,0x3
    1f83:	02 34 12             	add    dh,BYTE PTR [rdx+rdx*1]
    1f86:	00 02                	add    BYTE PTR [rdx],al
    1f88:	04 04                	add    al,0x4
    1f8a:	74 00                	je     1f8c <MULTIBOOT_HEADER_SIZE+0x1f34>
    1f8c:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    1f8f:	58                   	pop    rax
    1f90:	00 02                	add    BYTE PTR [rdx],al
    1f92:	04 06                	add    al,0x6
    1f94:	06                   	(bad)  
    1f95:	75 00                	jne    1f97 <MULTIBOOT_HEADER_SIZE+0x1f3f>
    1f97:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1f9a:	06                   	(bad)  
    1f9b:	66 00 02             	data16 add BYTE PTR [rdx],al
    1f9e:	04 03                	add    al,0x3
    1fa0:	08 4a 00             	or     BYTE PTR [rdx+0x0],cl
    1fa3:	02 04 04             	add    al,BYTE PTR [rsp+rax*1]
    1fa6:	74 00                	je     1fa8 <MULTIBOOT_HEADER_SIZE+0x1f50>
    1fa8:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    1fab:	58                   	pop    rax
    1fac:	00 02                	add    BYTE PTR [rdx],al
    1fae:	04 06                	add    al,0x6
    1fb0:	06                   	(bad)  
    1fb1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1fb2:	00 02                	add    BYTE PTR [rdx],al
    1fb4:	04 02                	add    al,0x2
    1fb6:	06                   	(bad)  
    1fb7:	4a 06                	rex.WX (bad) 
    1fb9:	d0 00                	rol    BYTE PTR [rax],1
    1fbb:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1fbe:	06                   	(bad)  
    1fbf:	66 00 02             	data16 add BYTE PTR [rdx],al
    1fc2:	04 03                	add    al,0x3
    1fc4:	f2 00 02             	repnz add BYTE PTR [rdx],al
    1fc7:	04 04                	add    al,0x4
    1fc9:	74 00                	je     1fcb <MULTIBOOT_HEADER_SIZE+0x1f73>
    1fcb:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    1fce:	58                   	pop    rax
    1fcf:	00 02                	add    BYTE PTR [rdx],al
    1fd1:	04 06                	add    al,0x6
    1fd3:	06                   	(bad)  
    1fd4:	75 00                	jne    1fd6 <MULTIBOOT_HEADER_SIZE+0x1f7e>
    1fd6:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    1fd9:	4b 32 83 a1 08 83 08 	rex.WXB xor al,BYTE PTR [r11+0x88308a1]
    1fe0:	83 08 83             	or     DWORD PTR [rax],0xffffff83
    1fe3:	08 85 08 83 08 83    	or     BYTE PTR [rbp-0x7cf77cf8],al
    1fe9:	08 83 08 85 08 85    	or     BYTE PTR [rbx-0x7af77af8],al
    1fef:	08 83 08 83 08 83    	or     BYTE PTR [rbx-0x7cf77cf8],al
    1ff5:	08 85 08 83 08 83    	or     BYTE PTR [rbp-0x7cf77cf8],al
    1ffb:	08 83 08 83 08 83    	or     BYTE PTR [rbx-0x7cf77cf8],al
    2001:	08 83 08 85 08 84    	or     BYTE PTR [rbx-0x7bf77af8],al
    2007:	a0 00 02 04 03 92 00 	movabs al,ds:0x402009203040200
    200e:	02 04 
    2010:	03 08                	add    ecx,DWORD PTR [rax]
    2012:	80 00 02             	add    BYTE PTR [rax],0x2
    2015:	04 01                	add    al,0x1
    2017:	06                   	(bad)  
    2018:	4a 06                	rex.WX (bad) 
    201a:	6b 9f 02 03 00 01 01 	imul   ebx,DWORD PTR [rdi+0x1000302],0x1
    2021:	92                   	xchg   edx,eax
    2022:	01 00                	add    DWORD PTR [rax],eax
    2024:	00 02                	add    BYTE PTR [rdx],al
    2026:	00 48 00             	add    BYTE PTR [rax+0x0],cl
    2029:	00 00                	add    BYTE PTR [rax],al
    202b:	01 01                	add    DWORD PTR [rcx],eax
    202d:	fb                   	sti    
    202e:	0e                   	(bad)  
    202f:	0d 00 01 01 01       	or     eax,0x1010100
    2034:	01 00                	add    DWORD PTR [rax],eax
    2036:	00 00                	add    BYTE PTR [rax],al
    2038:	01 00                	add    DWORD PTR [rax],eax
    203a:	00 01                	add    BYTE PTR [rcx],al
    203c:	73 72                	jae    20b0 <MULTIBOOT_HEADER_SIZE+0x2058>
    203e:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    2040:	74 65                	je     20a7 <MULTIBOOT_HEADER_SIZE+0x204f>
    2042:	73 74                	jae    20b8 <MULTIBOOT_HEADER_SIZE+0x2060>
    2044:	00 2f                	add    BYTE PTR [rdi],ch
    2046:	75 73                	jne    20bb <MULTIBOOT_HEADER_SIZE+0x2063>
    2048:	72 2f                	jb     2079 <MULTIBOOT_HEADER_SIZE+0x2021>
    204a:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
    2051:	00 00                	add    BYTE PTR [rax],al
    2053:	6b 5f 74 65          	imul   ebx,DWORD PTR [rdi+0x74],0x65
    2057:	73 74                	jae    20cd <MULTIBOOT_HEADER_SIZE+0x2075>
    2059:	5f                   	pop    rdi
    205a:	64 72 69             	fs jb  20c6 <MULTIBOOT_HEADER_SIZE+0x206e>
    205d:	76 65                	jbe    20c4 <MULTIBOOT_HEADER_SIZE+0x206c>
    205f:	72 2e                	jb     208f <MULTIBOOT_HEADER_SIZE+0x2037>
    2061:	63 00                	movsxd eax,DWORD PTR [rax]
    2063:	01 00                	add    DWORD PTR [rax],eax
    2065:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    2068:	64 69 6e 74 2e 68 00 	imul   ebp,DWORD PTR fs:[rsi+0x74],0x200682e
    206f:	02 
    2070:	00 00                	add    BYTE PTR [rax],al
    2072:	00 00                	add    BYTE PTR [rax],al
    2074:	09 02                	or     DWORD PTR [rdx],eax
    2076:	df d0                	fnop   
    2078:	00 01                	add    BYTE PTR [rcx],al
    207a:	00 00                	add    BYTE PTR [rax],al
    207c:	00 00                	add    BYTE PTR [rax],al
    207e:	03 13                	add    edx,DWORD PTR [rbx]
    2080:	01 4b 08             	add    DWORD PTR [rbx+0x8],ecx
    2083:	83 3f 4b             	cmp    DWORD PTR [rdi],0x4b
    2086:	08 83 3f 4b 08 83    	or     BYTE PTR [rbx-0x7cf7b4c1],al
    208c:	3f                   	(bad)  
    208d:	bb 92 08 22 08       	mov    ebx,0x8220892
    2092:	13 00                	adc    eax,DWORD PTR [rax]
    2094:	02 04 02             	add    al,BYTE PTR [rdx+rax*1]
    2097:	29 00                	sub    DWORD PTR [rax],eax
    2099:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    209c:	06                   	(bad)  
    209d:	4a 06                	rex.WX (bad) 
    209f:	98                   	cwde   
    20a0:	31 83 92 08 22 00    	xor    DWORD PTR [rbx+0x220892],eax
    20a6:	02 04 02             	add    al,BYTE PTR [rdx+rax*1]
    20a9:	70 00                	jo     20ab <MULTIBOOT_HEADER_SIZE+0x2053>
    20ab:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    20ae:	06                   	(bad)  
    20af:	4a 06                	rex.WX (bad) 
    20b1:	97                   	xchg   edi,eax
    20b2:	59                   	pop    rcx
    20b3:	31 83 92 08 22 08    	xor    DWORD PTR [rbx+0x8220892],eax
    20b9:	4b 00 02             	rex.WXB add BYTE PTR [r10],al
    20bc:	04 02                	add    al,0x2
    20be:	fb                   	sti    
    20bf:	00 02                	add    BYTE PTR [rdx],al
    20c1:	04 01                	add    al,0x1
    20c3:	06                   	(bad)  
    20c4:	4a 06                	rex.WX (bad) 
    20c6:	98                   	cwde   
    20c7:	3f                   	(bad)  
    20c8:	08 13                	or     BYTE PTR [rbx],dl
    20ca:	00 02                	add    BYTE PTR [rdx],al
    20cc:	04 01                	add    al,0x1
    20ce:	06                   	(bad)  
    20cf:	74 00                	je     20d1 <MULTIBOOT_HEADER_SIZE+0x2079>
    20d1:	02 04 02             	add    al,BYTE PTR [rdx+rax*1]
    20d4:	66 00 02             	data16 add BYTE PTR [rdx],al
    20d7:	04 04                	add    al,0x4
    20d9:	58                   	pop    rax
    20da:	00 02                	add    BYTE PTR [rdx],al
    20dc:	04 04                	add    al,0x4
    20de:	06                   	(bad)  
    20df:	4b 92                	rex.WXB xchg r10,rax
    20e1:	08 84 08 67 08 59 08 	or     BYTE PTR [rax+rcx*1+0x8590867],al
    20e8:	21 00                	and    DWORD PTR [rax],eax
    20ea:	02 04 02             	add    al,BYTE PTR [rdx+rax*1]
    20ed:	03 79 2e             	add    edi,DWORD PTR [rcx+0x2e]
    20f0:	00 02                	add    BYTE PTR [rdx],al
    20f2:	04 01                	add    al,0x1
    20f4:	06                   	(bad)  
    20f5:	4a 06                	rex.WX (bad) 
    20f7:	03 0a                	add    ecx,DWORD PTR [rdx]
    20f9:	66 9f                	data16 lahf 
    20fb:	08 59 31             	or     BYTE PTR [rcx+0x31],bl
    20fe:	bb 00 02 04 01       	mov    ebx,0x1040200
    2103:	06                   	(bad)  
    2104:	74 00                	je     2106 <MULTIBOOT_HEADER_SIZE+0x20ae>
    2106:	02 04 02             	add    al,BYTE PTR [rdx+rax*1]
    2109:	66 00 02             	data16 add BYTE PTR [rdx],al
    210c:	04 04                	add    al,0x4
    210e:	58                   	pop    rax
    210f:	00 02                	add    BYTE PTR [rdx],al
    2111:	04 04                	add    al,0x4
    2113:	06                   	(bad)  
    2114:	75 00                	jne    2116 <MULTIBOOT_HEADER_SIZE+0x20be>
    2116:	02 04 03             	add    al,BYTE PTR [rbx+rax*1]
    2119:	92                   	xchg   edx,eax
    211a:	00 02                	add    BYTE PTR [rdx],al
    211c:	04 03                	add    al,0x3
    211e:	fe 00                	inc    BYTE PTR [rax]
    2120:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    2123:	06                   	(bad)  
    2124:	4a 06                	rex.WX (bad) 
    2126:	94                   	xchg   esp,eax
    2127:	00 02                	add    BYTE PTR [rdx],al
    2129:	04 03                	add    al,0x3
    212b:	92                   	xchg   edx,eax
    212c:	00 02                	add    BYTE PTR [rdx],al
    212e:	04 03                	add    al,0x3
    2130:	08 1e                	or     BYTE PTR [rsi],bl
    2132:	00 02                	add    BYTE PTR [rdx],al
    2134:	04 01                	add    al,0x1
    2136:	06                   	(bad)  
    2137:	4a 06                	rex.WX (bad) 
    2139:	6a 3f                	push   0x3f
    213b:	83 9f 08 4b 92 08 5a 	sbb    DWORD PTR [rdi+0x8924b08],0x5a
    2142:	4b 08 5a 6a          	rex.WXB or BYTE PTR [r10+0x6a],bl
    2146:	00 02                	add    BYTE PTR [rdx],al
    2148:	04 02                	add    al,0x2
    214a:	03 75 4a             	add    esi,DWORD PTR [rbp+0x4a]
    214d:	00 02                	add    BYTE PTR [rdx],al
    214f:	04 01                	add    al,0x1
    2151:	06                   	(bad)  
    2152:	4a 06                	rex.WX (bad) 
    2154:	03 0f                	add    ecx,DWORD PTR [rdi]
    2156:	66 9f                	data16 lahf 
    2158:	00 02                	add    BYTE PTR [rdx],al
    215a:	04 01                	add    al,0x1
    215c:	06                   	(bad)  
    215d:	66 00 02             	data16 add BYTE PTR [rdx],al
    2160:	04 02                	add    al,0x2
    2162:	74 00                	je     2164 <MULTIBOOT_HEADER_SIZE+0x210c>
    2164:	02 04 04             	add    al,BYTE PTR [rsp+rax*1]
    2167:	58                   	pop    rax
    2168:	00 02                	add    BYTE PTR [rdx],al
    216a:	04 04                	add    al,0x4
    216c:	06                   	(bad)  
    216d:	08 21                	or     BYTE PTR [rcx],ah
    216f:	00 02                	add    BYTE PTR [rdx],al
    2171:	04 04                	add    al,0x4
    2173:	08 91 68 92 00 02    	or     BYTE PTR [rcx+0x2009268],dl
    2179:	04 01                	add    al,0x1
    217b:	06                   	(bad)  
    217c:	08 58 06             	or     BYTE PTR [rax+0x6],bl
    217f:	08 84 00 02 04 02 02 	or     BYTE PTR [rax+rax*1+0x2020402],al
    2186:	24 0e                	and    al,0xe
    2188:	00 02                	add    BYTE PTR [rdx],al
    218a:	04 01                	add    al,0x1
    218c:	06                   	(bad)  
    218d:	4a 06                	rex.WX (bad) 
    218f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2190:	00 02                	add    BYTE PTR [rdx],al
    2192:	04 03                	add    al,0x3
    2194:	92                   	xchg   edx,eax
    2195:	00 02                	add    BYTE PTR [rdx],al
    2197:	04 03                	add    al,0x3
    2199:	08 1e                	or     BYTE PTR [rsi],bl
    219b:	00 02                	add    BYTE PTR [rdx],al
    219d:	04 01                	add    al,0x1
    219f:	06                   	(bad)  
    21a0:	4a 06                	rex.WX (bad) 
    21a2:	6a 3f                	push   0x3f
    21a4:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    21a5:	08 14 d7             	or     BYTE PTR [rdi+rdx*8],dl
    21a8:	bb 6a 9f e6 59       	mov    ebx,0x59e69f6a
    21ad:	31 08                	xor    DWORD PTR [rax],ecx
    21af:	13 08                	adc    ecx,DWORD PTR [rax]
    21b1:	21 02                	and    DWORD PTR [rdx],eax
    21b3:	03 00                	add    eax,DWORD PTR [rax]
    21b5:	01 01                	add    DWORD PTR [rcx],eax
    21b7:	e9 01 00 00 02       	jmp    20021bd <kernel_end+0xfe61c5>
    21bc:	00 a8 00 00 00 01    	add    BYTE PTR [rax+0x1000000],ch
    21c2:	01 fb                	add    ebx,edi
    21c4:	0e                   	(bad)  
    21c5:	0d 00 01 01 01       	or     eax,0x1010100
    21ca:	01 00                	add    DWORD PTR [rax],eax
    21cc:	00 00                	add    BYTE PTR [rax],al
    21ce:	01 00                	add    DWORD PTR [rax],eax
    21d0:	00 01                	add    BYTE PTR [rcx],al
    21d2:	73 72                	jae    2246 <MULTIBOOT_HEADER_SIZE+0x21ee>
    21d4:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    21d6:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
    21d9:	6d                   	ins    DWORD PTR es:[rdi],dx
    21da:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    21db:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    21dc:	2f                   	(bad)  
    21dd:	6c                   	ins    BYTE PTR es:[rdi],dx
    21de:	69 62 2f 73 74 64 2f 	imul   esp,DWORD PTR [rdx+0x2f],0x2f647473
    21e5:	69 6e 63 00 73 72 63 	imul   ebp,DWORD PTR [rsi+0x63],0x63727300
    21ec:	2f                   	(bad)  
    21ed:	68 61 6c 2f 69       	push   0x692f6c61
    21f2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    21f3:	63 00                	movsxd eax,DWORD PTR [rax]
    21f5:	73 72                	jae    2269 <MULTIBOOT_HEADER_SIZE+0x2211>
    21f7:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    21f9:	68 61 6c 00 2f       	push   0x2f006c61
    21fe:	75 73                	jne    2273 <MULTIBOOT_HEADER_SIZE+0x221b>
    2200:	72 2f                	jb     2231 <MULTIBOOT_HEADER_SIZE+0x21d9>
    2202:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
    2209:	00 00                	add    BYTE PTR [rax],al
    220b:	62                   	(bad)  
    220c:	69 74 5f 6f 70 73 2e 	imul   esi,DWORD PTR [rdi+rbx*2+0x6f],0x682e7370
    2213:	68 
    2214:	00 01                	add    BYTE PTR [rcx],al
    2216:	00 00                	add    BYTE PTR [rax],al
    2218:	68 61 6c 5f 6d       	push   0x6d5f6c61
    221d:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    221f:	2e 68 00 02 00 00    	cs push 0x200
    2225:	68 61 6c 5f 69       	push   0x695f6c61
    222a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    222b:	74 72                	je     229f <MULTIBOOT_HEADER_SIZE+0x2247>
    222d:	2e 63 00             	movsxd eax,DWORD PTR cs:[rax]
    2230:	03 00                	add    eax,DWORD PTR [rax]
    2232:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    2235:	64 69 6e 74 2e 68 00 	imul   ebp,DWORD PTR fs:[rsi+0x74],0x400682e
    223c:	04 
    223d:	00 00                	add    BYTE PTR [rax],al
    223f:	68 61 6c 5f 61       	push   0x615f6c61
    2244:	72 63                	jb     22a9 <MULTIBOOT_HEADER_SIZE+0x2251>
    2246:	68 2e 68 00 02       	push   0x200682e
    224b:	00 00                	add    BYTE PTR [rax],al
    224d:	68 61 6c 5f 69       	push   0x695f6c61
    2252:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2253:	74 72                	je     22c7 <MULTIBOOT_HEADER_SIZE+0x226f>
    2255:	2e 68 00 02 00 00    	cs push 0x200
    225b:	68 61 6c 5f 76       	push   0x765f6c61
    2260:	61                   	(bad)  
    2261:	72 2e                	jb     2291 <MULTIBOOT_HEADER_SIZE+0x2239>
    2263:	68 00 02 00 00       	push   0x200
    2268:	00 00                	add    BYTE PTR [rax],al
    226a:	09 02                	or     DWORD PTR [rdx],eax
    226c:	1b d5                	sbb    edx,ebp
    226e:	00 01                	add    BYTE PTR [rcx],al
    2270:	00 00                	add    BYTE PTR [rax],al
    2272:	00 00                	add    BYTE PTR [rax],al
    2274:	03 0c 01             	add    ecx,DWORD PTR [rcx+rax*1]
    2277:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    2278:	f3 31 ad d7 31 d7 02 	repz xor DWORD PTR [rbp+0x2d731d7],ebp
    227f:	26 13 04 02          	adc    eax,DWORD PTR es:[rdx+rax*1]
    2283:	03 79 2e             	add    edi,DWORD PTR [rcx+0x2e]
    2286:	d7                   	xlat   BYTE PTR ds:[rbx]
    2287:	e5 04                	in     eax,0x4
    2289:	03 2b                	add    ebp,DWORD PTR [rbx]
    228b:	08 59 bb             	or     BYTE PTR [rcx-0x45],bl
    228e:	08 21                	or     BYTE PTR [rcx],ah
    2290:	c9                   	leave  
    2291:	f3 c9                	repz leave 
    2293:	f3 08 21             	repz or BYTE PTR [rcx],ah
    2296:	08 21                	or     BYTE PTR [rcx],ah
    2298:	08 21                	or     BYTE PTR [rcx],ah
    229a:	08 21                	or     BYTE PTR [rcx],ah
    229c:	08 21                	or     BYTE PTR [rcx],ah
    229e:	08 21                	or     BYTE PTR [rcx],ah
    22a0:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    22a1:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    22a2:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    22a3:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    22a4:	21 32                	and    DWORD PTR [rdx],esi
    22a6:	f3 76 02             	repz jbe 22ab <MULTIBOOT_HEADER_SIZE+0x2253>
    22a9:	33 15 2f 34 f3 76    	xor    edx,DWORD PTR [rip+0x76f3342f]        # 76f356de <MULTIBOOT_LOADED_MAGIC+0x401bf455>
    22af:	f4                   	hlt    
    22b0:	2f                   	(bad)  
    22b1:	31 bb 76 f4 2f 32    	xor    DWORD PTR [rbx+0x322ff476],edi
    22b7:	f3 76 00             	repz jbe 22ba <MULTIBOOT_HEADER_SIZE+0x2262>
    22ba:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    22bd:	06                   	(bad)  
    22be:	74 00                	je     22c0 <MULTIBOOT_HEADER_SIZE+0x2268>
    22c0:	02 04 02             	add    al,BYTE PTR [rdx+rax*1]
    22c3:	66 00 02             	data16 add BYTE PTR [rdx],al
    22c6:	04 04                	add    al,0x4
    22c8:	58                   	pop    rax
    22c9:	00 02                	add    BYTE PTR [rdx],al
    22cb:	04 04                	add    al,0x4
    22cd:	06                   	(bad)  
    22ce:	08 21                	or     BYTE PTR [rcx],ah
    22d0:	00 02                	add    BYTE PTR [rdx],al
    22d2:	04 04                	add    al,0x4
    22d4:	a0 06 20 06 21 31 08 	movabs al,ds:0x83d083121062006
    22db:	3d 08 
    22dd:	14 08                	adc    al,0x8
    22df:	f8                   	clc    
    22e0:	2c 02                	sub    al,0x2
    22e2:	24 14                	and    al,0x14
    22e4:	21 31                	and    DWORD PTR [rcx],esi
    22e6:	4b e5 e5             	rex.WXB in eax,0xe5
    22e9:	e5 e5                	in     eax,0xe5
    22eb:	e5 e5                	in     eax,0xe5
    22ed:	e5 e5                	in     eax,0xe5
    22ef:	e5 e5                	in     eax,0xe5
    22f1:	e5 e5                	in     eax,0xe5
    22f3:	e5 e5                	in     eax,0xe5
    22f5:	e5 e5                	in     eax,0xe5
    22f7:	e5 e5                	in     eax,0xe5
    22f9:	e6 e5                	out    0xe5,al
    22fb:	e5 e5                	in     eax,0xe5
    22fd:	e5 e5                	in     eax,0xe5
    22ff:	e5 e5                	in     eax,0xe5
    2301:	e6 21                	out    0x21,al
    2303:	31 91 08 ad 75 08    	xor    DWORD PTR [rcx+0x875ad08],edx
    2309:	75 08                	jne    2313 <MULTIBOOT_HEADER_SIZE+0x22bb>
    230b:	4c e5 a2             	rex.WR in eax,0xa2
    230e:	bb 93 00 02 04       	mov    ebx,0x4020093
    2313:	03 a0 00 02 04 03    	add    esp,DWORD PTR [rax+0x3040200]
    2319:	f0 00 02             	lock add BYTE PTR [rdx],al
    231c:	04 01                	add    al,0x1
    231e:	06                   	(bad)  
    231f:	58                   	pop    rax
    2320:	06                   	(bad)  
    2321:	7a a0                	jp     22c3 <MULTIBOOT_HEADER_SIZE+0x226b>
    2323:	a1 e5 e6 83 83 75 08 	movabs eax,ds:0x86708758383e6e5
    232a:	67 08 
    232c:	4b 08 67 08          	rex.WXB or BYTE PTR [r15+0x8],spl
    2330:	59                   	pop    rcx
    2331:	00 02                	add    BYTE PTR [rdx],al
    2333:	04 01                	add    al,0x1
    2335:	06                   	(bad)  
    2336:	08 2e                	or     BYTE PTR [rsi],ch
    2338:	00 02                	add    BYTE PTR [rdx],al
    233a:	04 02                	add    al,0x2
    233c:	74 00                	je     233e <MULTIBOOT_HEADER_SIZE+0x22e6>
    233e:	02 04 04             	add    al,BYTE PTR [rsp+rax*1]
    2341:	58                   	pop    rax
    2342:	00 02                	add    BYTE PTR [rdx],al
    2344:	04 04                	add    al,0x4
    2346:	06                   	(bad)  
    2347:	08 21                	or     BYTE PTR [rcx],ah
    2349:	00 02                	add    BYTE PTR [rdx],al
    234b:	04 01                	add    al,0x1
    234d:	06                   	(bad)  
    234e:	08 2e                	or     BYTE PTR [rsi],ch
    2350:	00 02                	add    BYTE PTR [rdx],al
    2352:	04 02                	add    al,0x2
    2354:	74 00                	je     2356 <MULTIBOOT_HEADER_SIZE+0x22fe>
    2356:	02 04 04             	add    al,BYTE PTR [rsp+rax*1]
    2359:	58                   	pop    rax
    235a:	00 02                	add    BYTE PTR [rdx],al
    235c:	04 04                	add    al,0x4
    235e:	06                   	(bad)  
    235f:	08 21                	or     BYTE PTR [rcx],ah
    2361:	00 02                	add    BYTE PTR [rdx],al
    2363:	04 04                	add    al,0x4
    2365:	08 bc 00 02 04 04 75 	or     BYTE PTR [rax+rax*1+0x75040402],bh
    236c:	00 02                	add    BYTE PTR [rdx],al
    236e:	04 04                	add    al,0x4
    2370:	02 26                	add    ah,BYTE PTR [rsi]
    2372:	13 00                	adc    eax,DWORD PTR [rax]
    2374:	02 04 04             	add    al,BYTE PTR [rsp+rax*1]
    2377:	08 6a 00             	or     BYTE PTR [rdx+0x0],ch
    237a:	02 04 04             	add    al,BYTE PTR [rsp+rax*1]
    237d:	08 57 00             	or     BYTE PTR [rdi+0x0],dl
    2380:	02 04 04             	add    al,BYTE PTR [rsp+rax*1]
    2383:	08 69 00             	or     BYTE PTR [rcx+0x0],ch
    2386:	02 04 04             	add    al,BYTE PTR [rsp+rax*1]
    2389:	08 91 00 02 04 04    	or     BYTE PTR [rcx+0x4040200],dl
    238f:	2f                   	(bad)  
    2390:	00 02                	add    BYTE PTR [rdx],al
    2392:	04 04                	add    al,0x4
    2394:	9f                   	lahf   
    2395:	00 02                	add    BYTE PTR [rdx],al
    2397:	04 04                	add    al,0x4
    2399:	a0 00 02 04 01 59 02 	movabs al,ds:0x7025901040200
    23a0:	07 00 
    23a2:	01 01                	add    DWORD PTR [rcx],eax
    23a4:	f2 00 00             	repnz add BYTE PTR [rax],al
    23a7:	00 02                	add    BYTE PTR [rdx],al
    23a9:	00 41 00             	add    BYTE PTR [rcx+0x0],al
    23ac:	00 00                	add    BYTE PTR [rax],al
    23ae:	01 01                	add    DWORD PTR [rcx],eax
    23b0:	fb                   	sti    
    23b1:	0e                   	(bad)  
    23b2:	0d 00 01 01 01       	or     eax,0x1010100
    23b7:	01 00                	add    DWORD PTR [rax],eax
    23b9:	00 00                	add    BYTE PTR [rax],al
    23bb:	01 00                	add    DWORD PTR [rax],eax
    23bd:	00 01                	add    BYTE PTR [rcx],al
    23bf:	73 72                	jae    2433 <MULTIBOOT_HEADER_SIZE+0x23db>
    23c1:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    23c3:	68 61 6c 00 2f       	push   0x2f006c61
    23c8:	75 73                	jne    243d <MULTIBOOT_HEADER_SIZE+0x23e5>
    23ca:	72 2f                	jb     23fb <MULTIBOOT_HEADER_SIZE+0x23a3>
    23cc:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
    23d3:	00 00                	add    BYTE PTR [rax],al
    23d5:	68 61 6c 5f 6d       	push   0x6d5f6c61
    23da:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    23dc:	2e 63 00             	movsxd eax,DWORD PTR cs:[rax]
    23df:	01 00                	add    DWORD PTR [rax],eax
    23e1:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    23e4:	64 69 6e 74 2e 68 00 	imul   ebp,DWORD PTR fs:[rsi+0x74],0x200682e
    23eb:	02 
    23ec:	00 00                	add    BYTE PTR [rax],al
    23ee:	00 00                	add    BYTE PTR [rax],al
    23f0:	09 02                	or     DWORD PTR [rdx],eax
    23f2:	20 dc                	and    ah,bl
    23f4:	00 01                	add    BYTE PTR [rcx],al
    23f6:	00 00                	add    BYTE PTR [rax],al
    23f8:	00 00                	add    BYTE PTR [rax],al
    23fa:	03 0f                	add    ecx,DWORD PTR [rdi]
    23fc:	01 08                	add    DWORD PTR [rax],ecx
    23fe:	3d ae 08 59 bb       	cmp    eax,0xbb5908ae
    2403:	08 21                	or     BYTE PTR [rcx],ah
    2405:	08 21                	or     BYTE PTR [rcx],ah
    2407:	08 21                	or     BYTE PTR [rcx],ah
    2409:	08 21                	or     BYTE PTR [rcx],ah
    240b:	08 21                	or     BYTE PTR [rcx],ah
    240d:	08 21                	or     BYTE PTR [rcx],ah
    240f:	08 21                	or     BYTE PTR [rcx],ah
    2411:	03 76 3c             	add    esi,DWORD PTR [rsi+0x3c]
    2414:	03 0b                	add    ecx,DWORD PTR [rbx]
    2416:	20 31                	and    BYTE PTR [rcx],dh
    2418:	08 3d ae 08 59 bb    	or     BYTE PTR [rip+0xffffffffbb5908ae],bh        # ffffffffbb592ccc <MULTIBOOT_CHECK_SUM+0xa3ab7dfa>
    241e:	08 21                	or     BYTE PTR [rcx],ah
    2420:	08 21                	or     BYTE PTR [rcx],ah
    2422:	08 21                	or     BYTE PTR [rcx],ah
    2424:	08 21                	or     BYTE PTR [rcx],ah
    2426:	08 21                	or     BYTE PTR [rcx],ah
    2428:	08 21                	or     BYTE PTR [rcx],ah
    242a:	08 21                	or     BYTE PTR [rcx],ah
    242c:	03 76 3c             	add    esi,DWORD PTR [rsi+0x3c]
    242f:	03 0b                	add    ecx,DWORD PTR [rbx]
    2431:	20 31                	and    BYTE PTR [rcx],dh
    2433:	08 3d ae 08 59 bb    	or     BYTE PTR [rip+0xffffffffbb5908ae],bh        # ffffffffbb592ce7 <MULTIBOOT_CHECK_SUM+0xa3ab7e15>
    2439:	08 21                	or     BYTE PTR [rcx],ah
    243b:	08 21                	or     BYTE PTR [rcx],ah
    243d:	08 21                	or     BYTE PTR [rcx],ah
    243f:	08 21                	or     BYTE PTR [rcx],ah
    2441:	08 21                	or     BYTE PTR [rcx],ah
    2443:	08 21                	or     BYTE PTR [rcx],ah
    2445:	08 21                	or     BYTE PTR [rcx],ah
    2447:	03 76 3c             	add    esi,DWORD PTR [rsi+0x3c]
    244a:	03 0b                	add    ecx,DWORD PTR [rbx]
    244c:	20 31                	and    BYTE PTR [rcx],dh
    244e:	08 3d ae 08 59 bb    	or     BYTE PTR [rip+0xffffffffbb5908ae],bh        # ffffffffbb592d02 <MULTIBOOT_CHECK_SUM+0xa3ab7e30>
    2454:	08 21                	or     BYTE PTR [rcx],ah
    2456:	08 21                	or     BYTE PTR [rcx],ah
    2458:	08 21                	or     BYTE PTR [rcx],ah
    245a:	08 21                	or     BYTE PTR [rcx],ah
    245c:	08 21                	or     BYTE PTR [rcx],ah
    245e:	08 21                	or     BYTE PTR [rcx],ah
    2460:	08 21                	or     BYTE PTR [rcx],ah
    2462:	03 76 3c             	add    esi,DWORD PTR [rsi+0x3c]
    2465:	03 0b                	add    ecx,DWORD PTR [rbx]
    2467:	20 32                	and    BYTE PTR [rdx],dh
    2469:	08 59 ae             	or     BYTE PTR [rcx-0x52],bl
    246c:	08 9f b9 3d 91 e3    	or     BYTE PTR [rdi-0x1c6ec247],bl
    2472:	3b 85 bb 08 21 08    	cmp    eax,DWORD PTR [rbp+0x82108bb]
    2478:	21 08                	and    DWORD PTR [rax],ecx
    247a:	21 08                	and    DWORD PTR [rax],ecx
    247c:	21 08                	and    DWORD PTR [rax],ecx
    247e:	21 08                	and    DWORD PTR [rax],ecx
    2480:	21 08                	and    DWORD PTR [rax],ecx
    2482:	21 03                	and    DWORD PTR [rbx],eax
    2484:	74 3c                	je     24c2 <MULTIBOOT_HEADER_SIZE+0x246a>
    2486:	03 0d 20 31 ad e5    	add    ecx,DWORD PTR [rip+0xffffffffe5ad3120]        # ffffffffe5ad55ac <MULTIBOOT_CHECK_SUM+0xcdffa6da>
    248c:	31 bb 08 13 21 31    	xor    DWORD PTR [rbx+0x31211308],edi
    2492:	4b e5 21             	rex.WXB in eax,0x21
    2495:	02 02                	add    al,BYTE PTR [rdx]
    2497:	00 01                	add    BYTE PTR [rcx],al
    2499:	01 61 00             	add    DWORD PTR [rcx+0x0],esp
    249c:	00 00                	add    BYTE PTR [rax],al
    249e:	02 00                	add    al,BYTE PTR [rax]
    24a0:	5b                   	pop    rbx
    24a1:	00 00                	add    BYTE PTR [rax],al
    24a3:	00 01                	add    BYTE PTR [rcx],al
    24a5:	01 fb                	add    ebx,edi
    24a7:	0e                   	(bad)  
    24a8:	0d 00 01 01 01       	or     eax,0x1010100
    24ad:	01 00                	add    DWORD PTR [rax],eax
    24af:	00 00                	add    BYTE PTR [rax],al
    24b1:	01 00                	add    DWORD PTR [rax],eax
    24b3:	00 01                	add    BYTE PTR [rcx],al
    24b5:	2f                   	(bad)  
    24b6:	75 73                	jne    252b <MULTIBOOT_HEADER_SIZE+0x24d3>
    24b8:	72 2f                	jb     24e9 <MULTIBOOT_HEADER_SIZE+0x2491>
    24ba:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
    24c1:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
    24c4:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    24c6:	68 61 6c 2f 69       	push   0x692f6c61
    24cb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    24cc:	63 00                	movsxd eax,DWORD PTR [rax]
    24ce:	73 72                	jae    2542 <MULTIBOOT_HEADER_SIZE+0x24ea>
    24d0:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    24d2:	68 61 6c 00 00       	push   0x6c61
    24d7:	73 74                	jae    254d <MULTIBOOT_HEADER_SIZE+0x24f5>
    24d9:	64 69 6e 74 2e 68 00 	imul   ebp,DWORD PTR fs:[rsi+0x74],0x100682e
    24e0:	01 
    24e1:	00 00                	add    BYTE PTR [rax],al
    24e3:	68 61 6c 5f 61       	push   0x615f6c61
    24e8:	72 63                	jb     254d <MULTIBOOT_HEADER_SIZE+0x24f5>
    24ea:	68 2e 68 00 02       	push   0x200682e
    24ef:	00 00                	add    BYTE PTR [rax],al
    24f1:	68 61 6c 5f 76       	push   0x765f6c61
    24f6:	61                   	(bad)  
    24f7:	72 2e                	jb     2527 <MULTIBOOT_HEADER_SIZE+0x24cf>
    24f9:	63 00                	movsxd eax,DWORD PTR [rax]
    24fb:	03 00                	add    eax,DWORD PTR [rax]
    24fd:	00 00                	add    BYTE PTR [rax],al
    24ff:	65 01 00             	add    DWORD PTR gs:[rax],eax
    2502:	00 02                	add    BYTE PTR [rdx],al
    2504:	00 fc                	add    ah,bh
    2506:	00 00                	add    BYTE PTR [rax],al
    2508:	00 01                	add    BYTE PTR [rcx],al
    250a:	01 fb                	add    ebx,edi
    250c:	0e                   	(bad)  
    250d:	0d 00 01 01 01       	or     eax,0x1010100
    2512:	01 00                	add    DWORD PTR [rax],eax
    2514:	00 00                	add    BYTE PTR [rax],al
    2516:	01 00                	add    DWORD PTR [rax],eax
    2518:	00 01                	add    BYTE PTR [rcx],al
    251a:	73 72                	jae    258e <MULTIBOOT_HEADER_SIZE+0x2536>
    251c:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    251e:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
    2521:	6d                   	ins    DWORD PTR es:[rdi],dx
    2522:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2523:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2524:	2f                   	(bad)  
    2525:	6c                   	ins    BYTE PTR es:[rdi],dx
    2526:	69 62 2f 73 74 64 2f 	imul   esp,DWORD PTR [rdx+0x2f],0x2f647473
    252d:	69 6e 63 00 73 72 63 	imul   ebp,DWORD PTR [rsi+0x63],0x63727300
    2534:	2f                   	(bad)  
    2535:	68 61 6c 2f 69       	push   0x692f6c61
    253a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    253b:	63 00                	movsxd eax,DWORD PTR [rax]
    253d:	73 72                	jae    25b1 <MULTIBOOT_HEADER_SIZE+0x2559>
    253f:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    2541:	68 61 6c 00 2f       	push   0x2f006c61
    2546:	75 73                	jne    25bb <MULTIBOOT_HEADER_SIZE+0x2563>
    2548:	72 2f                	jb     2579 <MULTIBOOT_HEADER_SIZE+0x2521>
    254a:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
    2551:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
    2554:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    2556:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
    2559:	6d                   	ins    DWORD PTR es:[rdi],dx
    255a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    255b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    255c:	2f                   	(bad)  
    255d:	6c                   	ins    BYTE PTR es:[rdi],dx
    255e:	69 62 2f 6c 69 6e 6b 	imul   esp,DWORD PTR [rdx+0x2f],0x6b6e696c
    2565:	65 64 5f             	gs fs pop rdi
    2568:	6c                   	ins    BYTE PTR es:[rdi],dx
    2569:	69 73 74 2f 69 6e 63 	imul   esi,DWORD PTR [rbx+0x74],0x636e692f
    2570:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
    2573:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    2575:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
    2578:	6d                   	ins    DWORD PTR es:[rdi],dx
    2579:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    257a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    257b:	2f                   	(bad)  
    257c:	69 6e 63 00 00 62 69 	imul   ebp,DWORD PTR [rsi+0x63],0x69620000
    2583:	74 5f                	je     25e4 <MULTIBOOT_HEADER_SIZE+0x258c>
    2585:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2586:	70 73                	jo     25fb <MULTIBOOT_HEADER_SIZE+0x25a3>
    2588:	2e 68 00 01 00 00    	cs push 0x100
    258e:	68 61 6c 5f 6d       	push   0x6d5f6c61
    2593:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    2595:	2e 68 00 02 00 00    	cs push 0x200
    259b:	68 61 6c 5f 69       	push   0x695f6c61
    25a0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    25a1:	69 74 2e 63 00 03 00 	imul   esi,DWORD PTR [rsi+rbp*1+0x63],0x300
    25a8:	00 
    25a9:	73 74                	jae    261f <MULTIBOOT_HEADER_SIZE+0x25c7>
    25ab:	64 69 6e 74 2e 68 00 	imul   ebp,DWORD PTR fs:[rsi+0x74],0x400682e
    25b2:	04 
    25b3:	00 00                	add    BYTE PTR [rax],al
    25b5:	68 61 6c 5f 6d       	push   0x6d5f6c61
    25ba:	75 6c                	jne    2628 <MULTIBOOT_HEADER_SIZE+0x25d0>
    25bc:	74 69                	je     2627 <MULTIBOOT_HEADER_SIZE+0x25cf>
    25be:	62                   	(bad)  
    25bf:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    25c0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    25c1:	74 2e                	je     25f1 <MULTIBOOT_HEADER_SIZE+0x2599>
    25c3:	68 00 02 00 00       	push   0x200
    25c8:	6c                   	ins    BYTE PTR es:[rdi],dx
    25c9:	69 6e 6b 65 64 5f 6c 	imul   ebp,DWORD PTR [rsi+0x6b],0x6c5f6465
    25d0:	69 73 74 2e 68 00 05 	imul   esi,DWORD PTR [rbx+0x74],0x500682e
    25d7:	00 00                	add    BYTE PTR [rax],al
    25d9:	68 61 6c 5f 61       	push   0x615f6c61
    25de:	72 63                	jb     2643 <MULTIBOOT_HEADER_SIZE+0x25eb>
    25e0:	68 2e 68 00 02       	push   0x200682e
    25e5:	00 00                	add    BYTE PTR [rax],al
    25e7:	6b 5f 73 79          	imul   ebx,DWORD PTR [rdi+0x73],0x79
    25eb:	73 5f                	jae    264c <MULTIBOOT_HEADER_SIZE+0x25f4>
    25ed:	69 6e 66 6f 2e 68 00 	imul   ebp,DWORD PTR [rsi+0x66],0x682e6f
    25f4:	06                   	(bad)  
    25f5:	00 00                	add    BYTE PTR [rax],al
    25f7:	68 61 6c 5f 76       	push   0x765f6c61
    25fc:	61                   	(bad)  
    25fd:	72 2e                	jb     262d <MULTIBOOT_HEADER_SIZE+0x25d5>
    25ff:	68 00 02 00 00       	push   0x200
    2604:	00 00                	add    BYTE PTR [rax],al
    2606:	09 02                	or     DWORD PTR [rdx],eax
    2608:	84 e0                	test   al,ah
    260a:	00 01                	add    BYTE PTR [rcx],al
    260c:	00 00                	add    BYTE PTR [rax],al
    260e:	00 00                	add    BYTE PTR [rax],al
    2610:	03 16                	add    edx,DWORD PTR [rsi]
    2612:	01 d7                	add    edi,edx
    2614:	02 26                	add    ah,BYTE PTR [rsi]
    2616:	13 04 02             	adc    eax,DWORD PTR [rdx+rax*1]
    2619:	03 79 2e             	add    edi,DWORD PTR [rcx+0x2e]
    261c:	d7                   	xlat   BYTE PTR ds:[rbx]
    261d:	e5 04                	in     eax,0x4
    261f:	03 2b                	add    ebp,DWORD PTR [rbx]
    2621:	bb ae 08 ad 08       	mov    ebx,0x8ad08ae
    2626:	75 08                	jne    2630 <MULTIBOOT_HEADER_SIZE+0x25d8>
    2628:	75 08                	jne    2632 <MULTIBOOT_HEADER_SIZE+0x25da>
    262a:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    262b:	08 ad 03 7a 9e 27    	or     BYTE PTR [rbp+0x279e7a03],ch
    2631:	31 91 af 08 83 08    	xor    DWORD PTR [rcx+0x88308af],edx
    2637:	ca 08 ca             	retf   0xca08
    263a:	08 ca                	or     dl,cl
    263c:	08 cb                	or     bl,cl
    263e:	08 cb                	or     bl,cl
    2640:	08 cb                	or     bl,cl
    2642:	08 cb                	or     bl,cl
    2644:	08 cb                	or     bl,cl
    2646:	bb 91 02 32 13       	mov    ebx,0x13320291
    264b:	85 bb 00 02 04 01    	test   DWORD PTR [rbx+0x1040200],edi
    2651:	06                   	(bad)  
    2652:	74 06                	je     265a <MULTIBOOT_HEADER_SIZE+0x2602>
    2654:	08 c9                	or     cl,cl
    2656:	77 a1                	ja     25f9 <MULTIBOOT_HEADER_SIZE+0x25a1>
    2658:	a1 92 a1 d7 08 5a 03 	movabs eax,ds:0x180035a08d7a192
    265f:	80 01 
    2661:	ba 4b 02 02 00       	mov    edx,0x2024b
    2666:	01 01                	add    DWORD PTR [rcx],eax
    2668:	0d 02 00 00 02       	or     eax,0x2000002
    266d:	00 90 00 00 00 01    	add    BYTE PTR [rax+0x1000000],dl
    2673:	01 fb                	add    ebx,edi
    2675:	0e                   	(bad)  
    2676:	0d 00 01 01 01       	or     eax,0x1010100
    267b:	01 00                	add    DWORD PTR [rax],eax
    267d:	00 00                	add    BYTE PTR [rax],al
    267f:	01 00                	add    DWORD PTR [rax],eax
    2681:	00 01                	add    BYTE PTR [rcx],al
    2683:	73 72                	jae    26f7 <MULTIBOOT_HEADER_SIZE+0x269f>
    2685:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    2687:	68 61 6c 00 2f       	push   0x2f006c61
    268c:	75 73                	jne    2701 <MULTIBOOT_HEADER_SIZE+0x26a9>
    268e:	72 2f                	jb     26bf <MULTIBOOT_HEADER_SIZE+0x2667>
    2690:	6c                   	ins    BYTE PTR es:[rdi],dx
    2691:	69 62 2f 67 63 63 2f 	imul   esp,DWORD PTR [rdx+0x2f],0x2f636367
    2698:	78 38                	js     26d2 <MULTIBOOT_HEADER_SIZE+0x267a>
    269a:	36 5f                	ss pop rdi
    269c:	36 34 2d             	ss xor al,0x2d
    269f:	6c                   	ins    BYTE PTR es:[rdi],dx
    26a0:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [rsi+0x75],0x6e672d78
    26a7:	75 2f                	jne    26d8 <MULTIBOOT_HEADER_SIZE+0x2680>
    26a9:	35 2f 69 6e 63       	xor    eax,0x636e692f
    26ae:	6c                   	ins    BYTE PTR es:[rdi],dx
    26af:	75 64                	jne    2715 <MULTIBOOT_HEADER_SIZE+0x26bd>
    26b1:	65 00 2f             	add    BYTE PTR gs:[rdi],ch
    26b4:	75 73                	jne    2729 <MULTIBOOT_HEADER_SIZE+0x26d1>
    26b6:	72 2f                	jb     26e7 <MULTIBOOT_HEADER_SIZE+0x268f>
    26b8:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
    26bf:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
    26c2:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    26c4:	68 61 6c 2f 69       	push   0x692f6c61
    26c9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    26ca:	63 00                	movsxd eax,DWORD PTR [rax]
    26cc:	00 68 61             	add    BYTE PTR [rax+0x61],ch
    26cf:	6c                   	ins    BYTE PTR es:[rdi],dx
    26d0:	5f                   	pop    rdi
    26d1:	70 72                	jo     2745 <MULTIBOOT_HEADER_SIZE+0x26ed>
    26d3:	69 6e 74 2e 63 00 01 	imul   ebp,DWORD PTR [rsi+0x74],0x100632e
    26da:	00 00                	add    BYTE PTR [rax],al
    26dc:	73 74                	jae    2752 <MULTIBOOT_HEADER_SIZE+0x26fa>
    26de:	64 61                	fs (bad) 
    26e0:	72 67                	jb     2749 <MULTIBOOT_HEADER_SIZE+0x26f1>
    26e2:	2e 68 00 02 00 00    	cs push 0x200
    26e8:	73 74                	jae    275e <MULTIBOOT_HEADER_SIZE+0x2706>
    26ea:	64 69 6e 74 2e 68 00 	imul   ebp,DWORD PTR fs:[rsi+0x74],0x300682e
    26f1:	03 
    26f2:	00 00                	add    BYTE PTR [rax],al
    26f4:	68 61 6c 5f 76       	push   0x765f6c61
    26f9:	61                   	(bad)  
    26fa:	72 2e                	jb     272a <MULTIBOOT_HEADER_SIZE+0x26d2>
    26fc:	68 00 04 00 00       	push   0x400
    2701:	00 00                	add    BYTE PTR [rax],al
    2703:	09 02                	or     DWORD PTR [rdx],eax
    2705:	82                   	(bad)  
    2706:	e3 00                	jrcxz  2708 <MULTIBOOT_HEADER_SIZE+0x26b0>
    2708:	01 00                	add    DWORD PTR [rax],eax
    270a:	00 00                	add    BYTE PTR [rax],al
    270c:	00 03                	add    BYTE PTR [rbx],al
    270e:	0b 01                	or     eax,DWORD PTR [rcx]
    2710:	4b 08 3d 21 31 bb ae 	rex.WXB or BYTE PTR [rip+0xffffffffaebb3121],dil        # ffffffffaebb5838 <MULTIBOOT_CHECK_SUM+0x970da966>
    2717:	5a                   	pop    rdx
    2718:	ae                   	scas   al,BYTE PTR es:[rdi]
    2719:	02 34 13             	add    dh,BYTE PTR [rbx+rdx*1]
    271c:	e7 9f                	out    0x9f,eax
    271e:	08 3d ae 78 e7 9f    	or     BYTE PTR [rip+0xffffffff9fe778ae],bh        # ffffffff9fe79fd2 <MULTIBOOT_CHECK_SUM+0x8839f100>
    2724:	ae                   	scas   al,BYTE PTR es:[rdi]
    2725:	08 91 08 67 59 03    	or     BYTE PTR [rcx+0x3596708],dl
    272b:	67 08 20             	or     BYTE PTR [eax],ah
    272e:	00 02                	add    BYTE PTR [rdx],al
    2730:	04 02                	add    al,0x2
    2732:	03 1c e4             	add    ebx,DWORD PTR [rsp+riz*8]
    2735:	03 63 3c             	add    esp,DWORD PTR [rbx+0x3c]
    2738:	03 1e                	add    ebx,DWORD PTR [rsi]
    273a:	20 31                	and    BYTE PTR [rcx],dh
    273c:	bc 4b 75 77 08       	mov    esp,0x877754b
    2741:	2f                   	(bad)  
    2742:	08 2f                	or     BYTE PTR [rdi],ch
    2744:	83 08 59             	or     DWORD PTR [rax],0x59
    2747:	76 2d                	jbe    2776 <MULTIBOOT_HEADER_SIZE+0x271e>
    2749:	22 08                	and    cl,BYTE PTR [rax]
    274b:	67 21 31             	and    DWORD PTR [ecx],esi
    274e:	bc 4b 75 75 75       	mov    esp,0x7575754b
    2753:	76 75                	jbe    27ca <MULTIBOOT_HEADER_SIZE+0x2772>
    2755:	4e                   	rex.WRX
    2756:	f3 f3 83 08 59       	repz repz or DWORD PTR [rax],0x59
    275b:	76 2d                	jbe    278a <MULTIBOOT_HEADER_SIZE+0x2732>
    275d:	22 68 f4             	and    ch,BYTE PTR [rax-0xc]
    2760:	08 67 21             	or     BYTE PTR [rdi+0x21],ah
    2763:	31 f3                	xor    ebx,esi
    2765:	02 40 13             	add    al,BYTE PTR [rax+0x13]
    2768:	02 40 13             	add    al,BYTE PTR [rax+0x13]
    276b:	00 02                	add    BYTE PTR [rdx],al
    276d:	04 01                	add    al,0x1
    276f:	06                   	(bad)  
    2770:	74 00                	je     2772 <MULTIBOOT_HEADER_SIZE+0x271a>
    2772:	02 04 02             	add    al,BYTE PTR [rdx+rax*1]
    2775:	66 00 02             	data16 add BYTE PTR [rdx],al
    2778:	04 04                	add    al,0x4
    277a:	4a 00 02             	rex.WX add BYTE PTR [rdx],al
    277d:	04 04                	add    al,0x4
    277f:	06                   	(bad)  
    2780:	4c 00 02             	rex.WR add BYTE PTR [rdx],r8b
    2783:	04 04                	add    al,0x4
    2785:	4b 00 02             	rex.WXB add BYTE PTR [r10],al
    2788:	04 04                	add    al,0x4
    278a:	75 77                	jne    2803 <MULTIBOOT_HEADER_SIZE+0x27ab>
    278c:	08 2f                	or     BYTE PTR [rdi],ch
    278e:	08 2f                	or     BYTE PTR [rdi],ch
    2790:	83 08 bb             	or     DWORD PTR [rax],0xffffffbb
    2793:	76 2d                	jbe    27c2 <MULTIBOOT_HEADER_SIZE+0x276a>
    2795:	22 08                	and    cl,BYTE PTR [rax]
    2797:	67 21 31             	and    DWORD PTR [ecx],esi
    279a:	4b ad                	rex.WXB lods rax,QWORD PTR ds:[rsi]
    279c:	08 3d 21 31 08 e6    	or     BYTE PTR [rip+0xffffffffe6083121],bh        # ffffffffe60858c3 <MULTIBOOT_CHECK_SUM+0xce5aa9f1>
    27a2:	08 67 87             	or     BYTE PTR [rdi-0x79],ah
    27a5:	5a                   	pop    rdx
    27a6:	ae                   	scas   al,BYTE PTR es:[rdi]
    27a7:	9f                   	lahf   
    27a8:	bb 5a 59 02 50       	mov    ebx,0x5002595a
    27ad:	15 00 02 04 02       	adc    eax,0x2040200
    27b2:	06                   	(bad)  
    27b3:	82                   	(bad)  
    27b4:	00 02                	add    BYTE PTR [rdx],al
    27b6:	04 01                	add    al,0x1
    27b8:	08 66 00             	or     BYTE PTR [rsi+0x0],ah
    27bb:	02 04 04             	add    al,BYTE PTR [rsp+rax*1]
    27be:	ba 00 02 04 04       	mov    edx,0x4040200
    27c3:	06                   	(bad)  
    27c4:	67 00 02             	add    BYTE PTR [edx],al
    27c7:	04 04                	add    al,0x4
    27c9:	c9                   	leave  
    27ca:	5a                   	pop    rdx
    27cb:	00 02                	add    BYTE PTR [rdx],al
    27cd:	04 02                	add    al,0x2
    27cf:	06                   	(bad)  
    27d0:	82                   	(bad)  
    27d1:	00 02                	add    BYTE PTR [rdx],al
    27d3:	04 01                	add    al,0x1
    27d5:	08 66 00             	or     BYTE PTR [rsi+0x0],ah
    27d8:	02 04 04             	add    al,BYTE PTR [rsp+rax*1]
    27db:	ba 00 02 04 04       	mov    edx,0x4040200
    27e0:	06                   	(bad)  
    27e1:	67 00 02             	add    BYTE PTR [edx],al
    27e4:	04 04                	add    al,0x4
    27e6:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    27e7:	5a                   	pop    rdx
    27e8:	00 02                	add    BYTE PTR [rdx],al
    27ea:	04 02                	add    al,0x2
    27ec:	06                   	(bad)  
    27ed:	82                   	(bad)  
    27ee:	00 02                	add    BYTE PTR [rdx],al
    27f0:	04 01                	add    al,0x1
    27f2:	08 66 00             	or     BYTE PTR [rsi+0x0],ah
    27f5:	02 04 04             	add    al,BYTE PTR [rsp+rax*1]
    27f8:	ba 00 02 04 04       	mov    edx,0x4040200
    27fd:	06                   	(bad)  
    27fe:	75 00                	jne    2800 <MULTIBOOT_HEADER_SIZE+0x27a8>
    2800:	02 04 04             	add    al,BYTE PTR [rsp+rax*1]
    2803:	bb 5a 00 02 04       	mov    ebx,0x402005a
    2808:	02 06                	add    al,BYTE PTR [rsi]
    280a:	82                   	(bad)  
    280b:	00 02                	add    BYTE PTR [rdx],al
    280d:	04 01                	add    al,0x1
    280f:	08 66 00             	or     BYTE PTR [rsi+0x0],ah
    2812:	02 04 04             	add    al,BYTE PTR [rsp+rax*1]
    2815:	ba 00 02 04 04       	mov    edx,0x4040200
    281a:	06                   	(bad)  
    281b:	67 00 02             	add    BYTE PTR [edx],al
    281e:	04 04                	add    al,0x4
    2820:	75 00                	jne    2822 <MULTIBOOT_HEADER_SIZE+0x27ca>
    2822:	02 04 04             	add    al,BYTE PTR [rsp+rax*1]
    2825:	bb 5a 00 02 04       	mov    ebx,0x402005a
    282a:	02 06                	add    al,BYTE PTR [rsi]
    282c:	82                   	(bad)  
    282d:	00 02                	add    BYTE PTR [rdx],al
    282f:	04 01                	add    al,0x1
    2831:	08 66 00             	or     BYTE PTR [rsi+0x0],ah
    2834:	02 04 04             	add    al,BYTE PTR [rsp+rax*1]
    2837:	ba 00 02 04 04       	mov    edx,0x4040200
    283c:	06                   	(bad)  
    283d:	67 00 02             	add    BYTE PTR [edx],al
    2840:	04 04                	add    al,0x4
    2842:	f3 30 00             	repz xor BYTE PTR [rax],al
    2845:	02 04 02             	add    al,BYTE PTR [rdx+rax*1]
    2848:	06                   	(bad)  
    2849:	82                   	(bad)  
    284a:	00 02                	add    BYTE PTR [rdx],al
    284c:	04 01                	add    al,0x1
    284e:	08 66 00             	or     BYTE PTR [rsi+0x0],ah
    2851:	02 04 04             	add    al,BYTE PTR [rsp+rax*1]
    2854:	ba 00 02 04 04       	mov    edx,0x4040200
    2859:	06                   	(bad)  
    285a:	67 00 02             	add    BYTE PTR [edx],al
    285d:	04 04                	add    al,0x4
    285f:	f3 30 4b bb          	repz xor BYTE PTR [rbx-0x45],cl
    2863:	30 4b bb             	xor    BYTE PTR [rbx-0x45],cl
    2866:	59                   	pop    rcx
    2867:	03 54 20 00          	add    edx,DWORD PTR [rax+riz*1+0x0]
    286b:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    286e:	06                   	(bad)  
    286f:	58                   	pop    rax
    2870:	06                   	(bad)  
    2871:	03 2f                	add    ebp,DWORD PTR [rdi]
    2873:	e4 02                	in     al,0x2
    2875:	03 00                	add    eax,DWORD PTR [rax]
    2877:	01 01                	add    DWORD PTR [rcx],eax
    2879:	19 00                	sbb    DWORD PTR [rax],eax
    287b:	00 00                	add    BYTE PTR [rax],al
    287d:	02 00                	add    al,BYTE PTR [rax]
    287f:	13 00                	adc    eax,DWORD PTR [rax]
    2881:	00 00                	add    BYTE PTR [rax],al
    2883:	01 01                	add    DWORD PTR [rcx],eax
    2885:	fb                   	sti    
    2886:	0e                   	(bad)  
    2887:	0d 00 01 01 01       	or     eax,0x1010100
    288c:	01 00                	add    DWORD PTR [rax],eax
    288e:	00 00                	add    BYTE PTR [rax],al
    2890:	01 00                	add    DWORD PTR [rax],eax
    2892:	00 01                	add    BYTE PTR [rcx],al
    2894:	00 00                	add    BYTE PTR [rax],al
    2896:	8a 00                	mov    al,BYTE PTR [rax]
    2898:	00 00                	add    BYTE PTR [rax],al
    289a:	02 00                	add    al,BYTE PTR [rax]
    289c:	62                   	(bad)  
    289d:	00 00                	add    BYTE PTR [rax],al
    289f:	00 01                	add    BYTE PTR [rcx],al
    28a1:	01 fb                	add    ebx,edi
    28a3:	0e                   	(bad)  
    28a4:	0d 00 01 01 01       	or     eax,0x1010100
    28a9:	01 00                	add    DWORD PTR [rax],eax
    28ab:	00 00                	add    BYTE PTR [rax],al
    28ad:	01 00                	add    DWORD PTR [rax],eax
    28af:	00 01                	add    BYTE PTR [rcx],al
    28b1:	73 72                	jae    2925 <MULTIBOOT_HEADER_SIZE+0x28cd>
    28b3:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    28b5:	6b 65 72 6e          	imul   esp,DWORD PTR [rbp+0x72],0x6e
    28b9:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    28bb:	00 2f                	add    BYTE PTR [rdi],ch
    28bd:	75 73                	jne    2932 <MULTIBOOT_HEADER_SIZE+0x28da>
    28bf:	72 2f                	jb     28f0 <MULTIBOOT_HEADER_SIZE+0x2898>
    28c1:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
    28c8:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
    28cb:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    28cd:	6b 65 72 6e          	imul   esp,DWORD PTR [rbp+0x72],0x6e
    28d1:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    28d3:	2f                   	(bad)  
    28d4:	69 6e 63 00 00 6b 5f 	imul   ebp,DWORD PTR [rsi+0x63],0x5f6b0000
    28db:	61                   	(bad)  
    28dc:	74 6f                	je     294d <MULTIBOOT_HEADER_SIZE+0x28f5>
    28de:	6d                   	ins    DWORD PTR es:[rdi],dx
    28df:	69 63 2e 63 00 01 00 	imul   esp,DWORD PTR [rbx+0x2e],0x10063
    28e6:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    28e9:	64 69 6e 74 2e 68 00 	imul   ebp,DWORD PTR fs:[rsi+0x74],0x200682e
    28f0:	02 
    28f1:	00 00                	add    BYTE PTR [rax],al
    28f3:	6b 5f 61 74          	imul   ebx,DWORD PTR [rdi+0x61],0x74
    28f7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    28f8:	6d                   	ins    DWORD PTR es:[rdi],dx
    28f9:	69 63 2e 68 00 03 00 	imul   esp,DWORD PTR [rbx+0x2e],0x30068
    2900:	00 00                	add    BYTE PTR [rax],al
    2902:	00 09                	add    BYTE PTR [rcx],cl
    2904:	02 cd                	add    cl,ch
    2906:	e9 00 01 00 00       	jmp    2a0b <MULTIBOOT_HEADER_SIZE+0x29b3>
    290b:	00 00                	add    BYTE PTR [rax],al
    290d:	16                   	(bad)  
    290e:	bb 76 00 02 04       	mov    ebx,0x4020076
    2913:	01 06                	add    DWORD PTR [rsi],eax
    2915:	20 06                	and    BYTE PTR [rsi],al
    2917:	08 68 2f             	or     BYTE PTR [rax+0x2f],ch
    291a:	31 bb 76 ae 2f 02    	xor    DWORD PTR [rbx+0x22fae76],edi
    2920:	02 00                	add    al,BYTE PTR [rax]
    2922:	01 01                	add    DWORD PTR [rcx],eax
    2924:	24 01                	and    al,0x1
    2926:	00 00                	add    BYTE PTR [rax],al
    2928:	02 00                	add    al,BYTE PTR [rax]
    292a:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    292b:	00 00                	add    BYTE PTR [rax],al
    292d:	00 01                	add    BYTE PTR [rcx],al
    292f:	01 fb                	add    ebx,edi
    2931:	0e                   	(bad)  
    2932:	0d 00 01 01 01       	or     eax,0x1010100
    2937:	01 00                	add    DWORD PTR [rax],eax
    2939:	00 00                	add    BYTE PTR [rax],al
    293b:	01 00                	add    DWORD PTR [rax],eax
    293d:	00 01                	add    BYTE PTR [rcx],al
    293f:	73 72                	jae    29b3 <MULTIBOOT_HEADER_SIZE+0x295b>
    2941:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    2943:	6b 65 72 6e          	imul   esp,DWORD PTR [rbp+0x72],0x6e
    2947:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    2949:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
    294c:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    294e:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
    2951:	6d                   	ins    DWORD PTR es:[rdi],dx
    2952:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2953:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2954:	2f                   	(bad)  
    2955:	6c                   	ins    BYTE PTR es:[rdi],dx
    2956:	69 62 2f 6c 69 6e 6b 	imul   esp,DWORD PTR [rdx+0x2f],0x6b6e696c
    295d:	65 64 5f             	gs fs pop rdi
    2960:	6c                   	ins    BYTE PTR es:[rdi],dx
    2961:	69 73 74 2f 69 6e 63 	imul   esi,DWORD PTR [rbx+0x74],0x636e692f
    2968:	00 2f                	add    BYTE PTR [rdi],ch
    296a:	75 73                	jne    29df <MULTIBOOT_HEADER_SIZE+0x2987>
    296c:	72 2f                	jb     299d <MULTIBOOT_HEADER_SIZE+0x2945>
    296e:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
    2975:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
    2978:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    297a:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
    297d:	6d                   	ins    DWORD PTR es:[rdi],dx
    297e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    297f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2980:	2f                   	(bad)  
    2981:	69 6e 63 00 73 72 63 	imul   ebp,DWORD PTR [rsi+0x63],0x63727300
    2988:	2f                   	(bad)  
    2989:	6b 65 72 6e          	imul   esp,DWORD PTR [rbp+0x72],0x6e
    298d:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    298f:	2f                   	(bad)  
    2990:	69 6e 63 00 00 6b 5f 	imul   ebp,DWORD PTR [rsi+0x63],0x5f6b0000
    2997:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    2999:	74 72                	je     2a0d <MULTIBOOT_HEADER_SIZE+0x29b5>
    299b:	79 2e                	jns    29cb <MULTIBOOT_HEADER_SIZE+0x2973>
    299d:	63 00                	movsxd eax,DWORD PTR [rax]
    299f:	01 00                	add    DWORD PTR [rax],eax
    29a1:	00 6c 69 6e          	add    BYTE PTR [rcx+rbp*2+0x6e],ch
    29a5:	6b 65 64 5f          	imul   esp,DWORD PTR [rbp+0x64],0x5f
    29a9:	6c                   	ins    BYTE PTR es:[rdi],dx
    29aa:	69 73 74 2e 68 00 02 	imul   esi,DWORD PTR [rbx+0x74],0x200682e
    29b1:	00 00                	add    BYTE PTR [rax],al
    29b3:	73 74                	jae    2a29 <MULTIBOOT_HEADER_SIZE+0x29d1>
    29b5:	64 69 6e 74 2e 68 00 	imul   ebp,DWORD PTR fs:[rsi+0x74],0x300682e
    29bc:	03 
    29bd:	00 00                	add    BYTE PTR [rax],al
    29bf:	6b 5f 73 79          	imul   ebx,DWORD PTR [rdi+0x73],0x79
    29c3:	73 5f                	jae    2a24 <MULTIBOOT_HEADER_SIZE+0x29cc>
    29c5:	69 6e 66 6f 2e 68 00 	imul   ebp,DWORD PTR [rsi+0x66],0x682e6f
    29cc:	04 00                	add    al,0x0
    29ce:	00 6b 5f             	add    BYTE PTR [rbx+0x5f],ch
    29d1:	68 61 6c 2e 68       	push   0x682e6c61
    29d6:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 29dc <MULTIBOOT_HEADER_SIZE+0x2984>
    29dc:	09 02                	or     DWORD PTR [rdx],eax
    29de:	1e                   	(bad)  
    29df:	ea                   	(bad)  
    29e0:	00 01                	add    BYTE PTR [rcx],al
    29e2:	00 00                	add    BYTE PTR [rax],al
    29e4:	00 00                	add    BYTE PTR [rax],al
    29e6:	03 0d 01 bb f4 76    	add    ecx,DWORD PTR [rip+0x76f4bb01]        # 76f4e4ed <MULTIBOOT_LOADED_MAGIC+0x401d8264>
    29ec:	e5 5b                	in     eax,0x5b
    29ee:	02 4f 13             	add    cl,BYTE PTR [rdi+0x13]
    29f1:	08 5a 59             	or     BYTE PTR [rdx+0x59],bl
    29f4:	59                   	pop    rcx
    29f5:	5a                   	pop    rdx
    29f6:	e5 5a                	in     eax,0x5a
    29f8:	08 14 08             	or     BYTE PTR [rax+rcx*1],dl
    29fb:	c9                   	leave  
    29fc:	08 c9                	or     cl,cl
    29fe:	00 02                	add    BYTE PTR [rdx],al
    2a00:	04 03                	add    al,0x3
    2a02:	92                   	xchg   edx,eax
    2a03:	00 02                	add    BYTE PTR [rdx],al
    2a05:	04 03                	add    al,0x3
    2a07:	08 e9                	or     cl,ch
    2a09:	00 02                	add    BYTE PTR [rdx],al
    2a0b:	04 03                	add    al,0x3
    2a0d:	03 79 08             	add    edi,DWORD PTR [rcx+0x8]
    2a10:	f2 00 02             	repnz add BYTE PTR [rdx],al
    2a13:	04 01                	add    al,0x1
    2a15:	06                   	(bad)  
    2a16:	4a 06                	rex.WX (bad) 
    2a18:	03 0b                	add    ecx,DWORD PTR [rbx]
    2a1a:	08 74 08 14          	or     BYTE PTR [rax+rcx*1+0x14],dh
    2a1e:	08 c9                	or     cl,cl
    2a20:	00 02                	add    BYTE PTR [rdx],al
    2a22:	04 03                	add    al,0x3
    2a24:	a0 00 02 04 03 02 23 	movabs al,ds:0x17230203040200
    2a2b:	17 00 
    2a2d:	02 04 03             	add    al,BYTE PTR [rbx+rax*1]
    2a30:	81 00 02 04 03 03    	add    DWORD PTR [rax],0x3030402
    2a36:	7a 02                	jp     2a3a <MULTIBOOT_HEADER_SIZE+0x29e2>
    2a38:	33 01                	xor    eax,DWORD PTR [rcx]
    2a3a:	00 02                	add    BYTE PTR [rdx],al
    2a3c:	04 01                	add    al,0x1
    2a3e:	06                   	(bad)  
    2a3f:	58                   	pop    rax
    2a40:	06                   	(bad)  
    2a41:	03 0b                	add    ecx,DWORD PTR [rbx]
    2a43:	08 20                	or     BYTE PTR [rax],ah
    2a45:	e5 59                	in     eax,0x59
    2a47:	02 03                	add    al,BYTE PTR [rbx]
    2a49:	00 01                	add    BYTE PTR [rcx],al
    2a4b:	01 26                	add    DWORD PTR [rsi],esp
    2a4d:	01 00                	add    DWORD PTR [rax],eax
    2a4f:	00 02                	add    BYTE PTR [rdx],al
    2a51:	00 91 00 00 00 01    	add    BYTE PTR [rcx+0x1000000],dl
    2a57:	01 fb                	add    ebx,edi
    2a59:	0e                   	(bad)  
    2a5a:	0d 00 01 01 01       	or     eax,0x1010100
    2a5f:	01 00                	add    DWORD PTR [rax],eax
    2a61:	00 00                	add    BYTE PTR [rax],al
    2a63:	01 00                	add    DWORD PTR [rax],eax
    2a65:	00 01                	add    BYTE PTR [rcx],al
    2a67:	73 72                	jae    2adb <MULTIBOOT_HEADER_SIZE+0x2a83>
    2a69:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    2a6b:	6b 65 72 6e          	imul   esp,DWORD PTR [rbp+0x72],0x6e
    2a6f:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    2a71:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
    2a74:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    2a76:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
    2a79:	6d                   	ins    DWORD PTR es:[rdi],dx
    2a7a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2a7b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2a7c:	2f                   	(bad)  
    2a7d:	6c                   	ins    BYTE PTR es:[rdi],dx
    2a7e:	69 62 2f 6c 69 6e 6b 	imul   esp,DWORD PTR [rdx+0x2f],0x6b6e696c
    2a85:	65 64 5f             	gs fs pop rdi
    2a88:	6c                   	ins    BYTE PTR es:[rdi],dx
    2a89:	69 73 74 2f 69 6e 63 	imul   esi,DWORD PTR [rbx+0x74],0x636e692f
    2a90:	00 2f                	add    BYTE PTR [rdi],ch
    2a92:	75 73                	jne    2b07 <MULTIBOOT_HEADER_SIZE+0x2aaf>
    2a94:	72 2f                	jb     2ac5 <MULTIBOOT_HEADER_SIZE+0x2a6d>
    2a96:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
    2a9d:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
    2aa0:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    2aa2:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
    2aa5:	6d                   	ins    DWORD PTR es:[rdi],dx
    2aa6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2aa7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2aa8:	2f                   	(bad)  
    2aa9:	69 6e 63 00 00 6b 5f 	imul   ebp,DWORD PTR [rsi+0x63],0x5f6b0000
    2ab0:	70 6d                	jo     2b1f <MULTIBOOT_HEADER_SIZE+0x2ac7>
    2ab2:	6d                   	ins    DWORD PTR es:[rdi],dx
    2ab3:	2e 63 00             	movsxd eax,DWORD PTR cs:[rax]
    2ab6:	01 00                	add    DWORD PTR [rax],eax
    2ab8:	00 6c 69 6e          	add    BYTE PTR [rcx+rbp*2+0x6e],ch
    2abc:	6b 65 64 5f          	imul   esp,DWORD PTR [rbp+0x64],0x5f
    2ac0:	6c                   	ins    BYTE PTR es:[rdi],dx
    2ac1:	69 73 74 2e 68 00 02 	imul   esi,DWORD PTR [rbx+0x74],0x200682e
    2ac8:	00 00                	add    BYTE PTR [rax],al
    2aca:	73 74                	jae    2b40 <MULTIBOOT_HEADER_SIZE+0x2ae8>
    2acc:	64 69 6e 74 2e 68 00 	imul   ebp,DWORD PTR fs:[rsi+0x74],0x300682e
    2ad3:	03 
    2ad4:	00 00                	add    BYTE PTR [rax],al
    2ad6:	6b 5f 73 79          	imul   ebx,DWORD PTR [rdi+0x73],0x79
    2ada:	73 5f                	jae    2b3b <MULTIBOOT_HEADER_SIZE+0x2ae3>
    2adc:	69 6e 66 6f 2e 68 00 	imul   ebp,DWORD PTR [rsi+0x66],0x682e6f
    2ae3:	04 00                	add    al,0x0
    2ae5:	00 00                	add    BYTE PTR [rax],al
    2ae7:	00 09                	add    BYTE PTR [rcx],cl
    2ae9:	02 55 ec             	add    dl,BYTE PTR [rbp-0x14]
    2aec:	00 01                	add    BYTE PTR [rcx],al
    2aee:	00 00                	add    BYTE PTR [rax],al
    2af0:	00 00                	add    BYTE PTR [rax],al
    2af2:	03 0e                	add    ecx,DWORD PTR [rsi]
    2af4:	01 f3                	add    ebx,esi
    2af6:	00 02                	add    BYTE PTR [rdx],al
    2af8:	04 01                	add    al,0x1
    2afa:	06                   	(bad)  
    2afb:	ba 00 02 04 03       	mov    edx,0x3040200
    2b00:	ba 00 02 04 04       	mov    edx,0x4040200
    2b05:	74 00                	je     2b07 <MULTIBOOT_HEADER_SIZE+0x2aaf>
    2b07:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    2b0a:	58                   	pop    rax
    2b0b:	00 02                	add    BYTE PTR [rdx],al
    2b0d:	04 06                	add    al,0x6
    2b0f:	06                   	(bad)  
    2b10:	e5 00                	in     eax,0x0
    2b12:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    2b15:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    2b16:	00 02                	add    BYTE PTR [rdx],al
    2b18:	04 06                	add    al,0x6
    2b1a:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    2b1b:	00 02                	add    BYTE PTR [rdx],al
    2b1d:	04 06                	add    al,0x6
    2b1f:	21 31                	and    DWORD PTR [rcx],esi
    2b21:	08 3d 08 75 83 f8    	or     BYTE PTR [rip+0xfffffffff8837508],bh        # fffffffff883a02f <MULTIBOOT_CHECK_SUM+0xe0d5f15d>
    2b27:	00 02                	add    BYTE PTR [rdx],al
    2b29:	04 03                	add    al,0x3
    2b2b:	91                   	xchg   ecx,eax
    2b2c:	00 02                	add    BYTE PTR [rdx],al
    2b2e:	04 03                	add    al,0x3
    2b30:	08 81 00 02 04 01    	or     BYTE PTR [rcx+0x1040200],al
    2b36:	06                   	(bad)  
    2b37:	4a 06                	rex.WX (bad) 
    2b39:	08 2a                	or     BYTE PTR [rdx],ch
    2b3b:	03 0a                	add    ecx,DWORD PTR [rdx]
    2b3d:	20 31                	and    BYTE PTR [rcx],dh
    2b3f:	83 00 02             	add    DWORD PTR [rax],0x2
    2b42:	04 01                	add    al,0x1
    2b44:	06                   	(bad)  
    2b45:	ba 00 02 04 03       	mov    edx,0x3040200
    2b4a:	ba 00 02 04 04       	mov    edx,0x4040200
    2b4f:	74 00                	je     2b51 <MULTIBOOT_HEADER_SIZE+0x2af9>
    2b51:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    2b54:	58                   	pop    rax
    2b55:	00 02                	add    BYTE PTR [rdx],al
    2b57:	04 06                	add    al,0x6
    2b59:	06                   	(bad)  
    2b5a:	e5 08                	in     eax,0x8
    2b5c:	2f                   	(bad)  
    2b5d:	75 00                	jne    2b5f <MULTIBOOT_HEADER_SIZE+0x2b07>
    2b5f:	02 04 03             	add    al,BYTE PTR [rbx+rax*1]
    2b62:	06                   	(bad)  
    2b63:	90                   	nop
    2b64:	00 02                	add    BYTE PTR [rdx],al
    2b66:	04 01                	add    al,0x1
    2b68:	4a 06                	rex.WX (bad) 
    2b6a:	03 10                	add    edx,DWORD PTR [rax]
    2b6c:	08 3c 59             	or     BYTE PTR [rcx+rbx*2],bh
    2b6f:	31 bc 02 03 00 01 01 	xor    DWORD PTR [rdx+rax*1+0x1010003],edi
    2b76:	67 00 00             	add    BYTE PTR [eax],al
    2b79:	00 02                	add    BYTE PTR [rdx],al
    2b7b:	00 43 00             	add    BYTE PTR [rbx+0x0],al
    2b7e:	00 00                	add    BYTE PTR [rax],al
    2b80:	01 01                	add    DWORD PTR [rcx],eax
    2b82:	fb                   	sti    
    2b83:	0e                   	(bad)  
    2b84:	0d 00 01 01 01       	or     eax,0x1010100
    2b89:	01 00                	add    DWORD PTR [rax],eax
    2b8b:	00 00                	add    BYTE PTR [rax],al
    2b8d:	01 00                	add    DWORD PTR [rax],eax
    2b8f:	00 01                	add    BYTE PTR [rcx],al
    2b91:	73 72                	jae    2c05 <MULTIBOOT_HEADER_SIZE+0x2bad>
    2b93:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    2b95:	6b 65 72 6e          	imul   esp,DWORD PTR [rbp+0x72],0x6e
    2b99:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    2b9b:	00 2f                	add    BYTE PTR [rdi],ch
    2b9d:	75 73                	jne    2c12 <MULTIBOOT_HEADER_SIZE+0x2bba>
    2b9f:	72 2f                	jb     2bd0 <MULTIBOOT_HEADER_SIZE+0x2b78>
    2ba1:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
    2ba8:	00 00                	add    BYTE PTR [rax],al
    2baa:	6b 5f 69 6e          	imul   ebx,DWORD PTR [rdi+0x69],0x6e
    2bae:	74 72                	je     2c22 <MULTIBOOT_HEADER_SIZE+0x2bca>
    2bb0:	2e 63 00             	movsxd eax,DWORD PTR cs:[rax]
    2bb3:	01 00                	add    DWORD PTR [rax],eax
    2bb5:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    2bb8:	64 69 6e 74 2e 68 00 	imul   ebp,DWORD PTR fs:[rsi+0x74],0x200682e
    2bbf:	02 
    2bc0:	00 00                	add    BYTE PTR [rax],al
    2bc2:	00 00                	add    BYTE PTR [rax],al
    2bc4:	09 02                	or     DWORD PTR [rdx],eax
    2bc6:	bd ed 00 01 00       	mov    ebp,0x100ed
    2bcb:	00 00                	add    BYTE PTR [rax],al
    2bcd:	00 16                	add    BYTE PTR [rsi],dl
    2bcf:	f3 08 2f             	repz or BYTE PTR [rdi],ch
    2bd2:	3f                   	(bad)  
    2bd3:	f3 08 2f             	repz or BYTE PTR [rdi],ch
    2bd6:	3f                   	(bad)  
    2bd7:	4b 9f                	rex.WXB lahf 
    2bd9:	3f                   	(bad)  
    2bda:	4b 9f                	rex.WXB lahf 
    2bdc:	02 03                	add    al,BYTE PTR [rbx]
    2bde:	00 01                	add    BYTE PTR [rcx],al
    2be0:	01                   	.byte 0x1

Disassembly of section .debug_str:

0000000000000000 <.debug_str>:
       0:	73 72                	jae    74 <MULTIBOOT_HEADER_SIZE+0x1c>
       2:	63 2f                	movsxd ebp,DWORD PTR [rdi]
       4:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
       7:	6d                   	ins    DWORD PTR es:[rdi],dx
       8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
       9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
       a:	2f                   	(bad)  
       b:	6c                   	ins    BYTE PTR es:[rdi],dx
       c:	69 62 2f 73 74 64 2f 	imul   esp,DWORD PTR [rdx+0x2f],0x2f647473
      13:	6d                   	ins    DWORD PTR es:[rdi],dx
      14:	65 6d                	gs ins DWORD PTR es:[rdi],dx
      16:	2e 63 00             	movsxd eax,DWORD PTR cs:[rax]
      19:	6d                   	ins    DWORD PTR es:[rdi],dx
      1a:	65 6d                	gs ins DWORD PTR es:[rdi],dx
      1c:	5f                   	pop    rdi
      1d:	6d                   	ins    DWORD PTR es:[rdi],dx
      1e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
      1f:	76 65                	jbe    86 <MULTIBOOT_HEADER_SIZE+0x2e>
      21:	00 63 53             	add    BYTE PTR [rbx+0x53],ah
      24:	72 63                	jb     89 <MULTIBOOT_HEADER_SIZE+0x31>
      26:	00 47 4e             	add    BYTE PTR [rdi+0x4e],al
      29:	55                   	push   rbp
      2a:	20 43 31             	and    BYTE PTR [rbx+0x31],al
      2d:	31 20                	xor    DWORD PTR [rax],esp
      2f:	35 2e 33 2e 31       	xor    eax,0x312e332e
      34:	20 32                	and    BYTE PTR [rdx],dh
      36:	30 31                	xor    BYTE PTR [rcx],dh
      38:	36 30 34 31          	xor    BYTE PTR ss:[rcx+rsi*1],dh
      3c:	33 20                	xor    esp,DWORD PTR [rax]
      3e:	2d 6d 36 34 20       	sub    eax,0x2034366d
      43:	2d 6d 6e 6f 2d       	sub    eax,0x2d6f6e6d
      48:	72 65                	jb     af <MULTIBOOT_HEADER_SIZE+0x57>
      4a:	64 2d 7a 6f 6e 65    	fs sub eax,0x656e6f7a
      50:	20 2d 6d 6e 6f 2d    	and    BYTE PTR [rip+0x2d6f6e6d],ch        # 2d6f6ec3 <kernel_end+0x2c6daecb>
      56:	6d                   	ins    DWORD PTR es:[rdi],dx
      57:	6d                   	ins    DWORD PTR es:[rdi],dx
      58:	78 20                	js     7a <MULTIBOOT_HEADER_SIZE+0x22>
      5a:	2d 6d 6e 6f 2d       	sub    eax,0x2d6f6e6d
      5f:	73 73                	jae    d4 <MULTIBOOT_HEADER_SIZE+0x7c>
      61:	65 20 2d 6d 6e 6f 2d 	and    BYTE PTR gs:[rip+0x2d6f6e6d],ch        # 2d6f6ed5 <kernel_end+0x2c6daedd>
      68:	73 73                	jae    dd <MULTIBOOT_HEADER_SIZE+0x85>
      6a:	65 32 20             	xor    ah,BYTE PTR gs:[rax]
      6d:	2d 6d 61 73 6d       	sub    eax,0x6d73616d
      72:	3d 69 6e 74 65       	cmp    eax,0x65746e69
      77:	6c                   	ins    BYTE PTR es:[rdi],dx
      78:	20 2d 6d 74 75 6e    	and    BYTE PTR [rip+0x6e75746d],ch        # 6e7574eb <MULTIBOOT_LOADED_MAGIC+0x379e1262>
      7e:	65 3d 67 65 6e 65    	gs cmp eax,0x656e6567
      84:	72 69                	jb     ef <MULTIBOOT_HEADER_SIZE+0x97>
      86:	63 20                	movsxd esp,DWORD PTR [rax]
      88:	2d 6d 61 72 63       	sub    eax,0x6372616d
      8d:	68 3d 78 38 36       	push   0x3638783d
      92:	2d 36 34 20 2d       	sub    eax,0x2d203436
      97:	67 20 2d 73 74 64 3d 	and    BYTE PTR [eip+0x3d647473],ch        # 3d647511 <MULTIBOOT_LOADED_MAGIC+0x68d1288>
      9e:	63 31                	movsxd esi,DWORD PTR [rcx]
      a0:	31 20                	xor    DWORD PTR [rax],esp
      a2:	2d 66 6e 6f 2d       	sub    eax,0x2d6f6e66
      a7:	73 74                	jae    11d <MULTIBOOT_HEADER_SIZE+0xc5>
      a9:	61                   	(bad)  
      aa:	63 6b 2d             	movsxd ebp,DWORD PTR [rbx+0x2d]
      ad:	70 72                	jo     121 <MULTIBOOT_HEADER_SIZE+0xc9>
      af:	6f                   	outs   dx,DWORD PTR ds:[rsi]
      b0:	74 65                	je     117 <MULTIBOOT_HEADER_SIZE+0xbf>
      b2:	63 74 6f 72          	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
      b6:	20 2d 66 6e 6f 2d    	and    BYTE PTR [rip+0x2d6f6e66],ch        # 2d6f6f22 <kernel_end+0x2c6daf2a>
      bc:	62                   	(bad)  
      bd:	75 69                	jne    128 <MULTIBOOT_HEADER_SIZE+0xd0>
      bf:	6c                   	ins    BYTE PTR es:[rdi],dx
      c0:	74 69                	je     12b <MULTIBOOT_HEADER_SIZE+0xd3>
      c2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
      c3:	00 75 6e             	add    BYTE PTR [rbp+0x6e],dh
      c6:	73 69                	jae    131 <MULTIBOOT_HEADER_SIZE+0xd9>
      c8:	67 6e                	outs   dx,BYTE PTR ds:[esi]
      ca:	65 64 20 63 68       	gs and BYTE PTR fs:[rbx+0x68],ah
      cf:	61                   	(bad)  
      d0:	72 00                	jb     d2 <MULTIBOOT_HEADER_SIZE+0x7a>
      d2:	73 68                	jae    13c <MULTIBOOT_HEADER_SIZE+0xe4>
      d4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
      d5:	72 74                	jb     14b <MULTIBOOT_HEADER_SIZE+0xf3>
      d7:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
      da:	73 69                	jae    145 <MULTIBOOT_HEADER_SIZE+0xed>
      dc:	67 6e                	outs   dx,BYTE PTR ds:[esi]
      de:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
      e3:	74 00                	je     e5 <MULTIBOOT_HEADER_SIZE+0x8d>
      e5:	2f                   	(bad)  
      e6:	6d                   	ins    DWORD PTR es:[rdi],dx
      e7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
      e8:	74 2f                	je     119 <MULTIBOOT_HEADER_SIZE+0xc1>
      ea:	68 67 66 73 2f       	push   0x2f736667
      ef:	73 65                	jae    156 <MULTIBOOT_HEADER_SIZE+0xfe>
      f1:	63 58 2f             	movsxd ebx,DWORD PTR [rax+0x2f]
      f4:	78 36                	js     12c <MULTIBOOT_HEADER_SIZE+0xd4>
      f6:	34 00                	xor    al,0x0
      f8:	6d                   	ins    DWORD PTR es:[rdi],dx
      f9:	65 6d                	gs ins DWORD PTR es:[rdi],dx
      fb:	5f                   	pop    rdi
      fc:	73 65                	jae    163 <MULTIBOOT_HEADER_SIZE+0x10b>
      fe:	74 00                	je     100 <MULTIBOOT_HEADER_SIZE+0xa8>
     100:	63 44 73 74          	movsxd eax,DWORD PTR [rbx+rsi*2+0x74]
     104:	00 73 69             	add    BYTE PTR [rbx+0x69],dh
     107:	7a 65                	jp     16e <MULTIBOOT_HEADER_SIZE+0x116>
     109:	74 79                	je     184 <MULTIBOOT_HEADER_SIZE+0x12c>
     10b:	70 65                	jo     172 <MULTIBOOT_HEADER_SIZE+0x11a>
     10d:	00 6c 6f 6e          	add    BYTE PTR [rdi+rbp*2+0x6e],ch
     111:	67 20 6c 6f 6e       	and    BYTE PTR [edi+ebp*2+0x6e],ch
     116:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
     11a:	74 00                	je     11c <MULTIBOOT_HEADER_SIZE+0xc4>
     11c:	73 68                	jae    186 <MULTIBOOT_HEADER_SIZE+0x12e>
     11e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     11f:	72 74                	jb     195 <MULTIBOOT_HEADER_SIZE+0x13d>
     121:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
     124:	74 00                	je     126 <MULTIBOOT_HEADER_SIZE+0xce>
     126:	6d                   	ins    DWORD PTR es:[rdi],dx
     127:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     129:	5f                   	pop    rdi
     12a:	63 70 79             	movsxd esi,DWORD PTR [rax+0x79]
     12d:	00 6c 6f 6e          	add    BYTE PTR [rdi+rbp*2+0x6e],ch
     131:	67 20 64 6f 75       	and    BYTE PTR [edi+ebp*2+0x75],ah
     136:	62                   	(bad)  
     137:	6c                   	ins    BYTE PTR es:[rdi],dx
     138:	65 00 73 72          	add    BYTE PTR gs:[rbx+0x72],dh
     13c:	63 2f                	movsxd ebp,DWORD PTR [rdi]
     13e:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
     141:	6d                   	ins    DWORD PTR es:[rdi],dx
     142:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     143:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     144:	2f                   	(bad)  
     145:	6c                   	ins    BYTE PTR es:[rdi],dx
     146:	69 62 2f 73 74 64 2f 	imul   esp,DWORD PTR [rdx+0x2f],0x2f647473
     14d:	73 74                	jae    1c3 <MULTIBOOT_HEADER_SIZE+0x16b>
     14f:	72 2e                	jb     17f <MULTIBOOT_HEADER_SIZE+0x127>
     151:	63 00                	movsxd eax,DWORD PTR [rax]
     153:	73 74                	jae    1c9 <MULTIBOOT_HEADER_SIZE+0x171>
     155:	72 5f                	jb     1b6 <MULTIBOOT_HEADER_SIZE+0x15e>
     157:	6c                   	ins    BYTE PTR es:[rdi],dx
     158:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     15a:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
     15d:	72 31                	jb     190 <MULTIBOOT_HEADER_SIZE+0x138>
     15f:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
     162:	72 32                	jb     196 <MULTIBOOT_HEADER_SIZE+0x13e>
     164:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
     167:	72 5f                	jb     1c8 <MULTIBOOT_HEADER_SIZE+0x170>
     169:	63 6d 70             	movsxd ebp,DWORD PTR [rbp+0x70]
     16c:	00 6c 65 6e          	add    BYTE PTR [rbp+riz*2+0x6e],ch
     170:	67 74 68             	addr32 je 1db <MULTIBOOT_HEADER_SIZE+0x183>
     173:	00 6d 72             	add    BYTE PTR [rbp+0x72],ch
     176:	61                   	(bad)  
     177:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     178:	64 00 5f 73          	add    BYTE PTR fs:[rdi+0x73],bl
     17c:	65 65 64 00 73 72    	gs gs add BYTE PTR fs:[rbx+0x72],dh
     182:	61                   	(bad)  
     183:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     184:	64 00 5f 6d          	add    BYTE PTR fs:[rdi+0x6d],bl
     188:	61                   	(bad)  
     189:	78 00                	js     18b <MULTIBOOT_HEADER_SIZE+0x133>
     18b:	73 72                	jae    1ff <MULTIBOOT_HEADER_SIZE+0x1a7>
     18d:	63 2f                	movsxd ebp,DWORD PTR [rdi]
     18f:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
     192:	6d                   	ins    DWORD PTR es:[rdi],dx
     193:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     194:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     195:	2f                   	(bad)  
     196:	6c                   	ins    BYTE PTR es:[rdi],dx
     197:	69 62 2f 73 74 64 2f 	imul   esp,DWORD PTR [rdx+0x2f],0x2f647473
     19e:	72 61                	jb     201 <MULTIBOOT_HEADER_SIZE+0x1a9>
     1a0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     1a1:	64 2e 63 00          	fs movsxd eax,DWORD PTR cs:[rax]
     1a5:	61                   	(bad)  
     1a6:	76 6c                	jbe    214 <MULTIBOOT_HEADER_SIZE+0x1bc>
     1a8:	5f                   	pop    rdi
     1a9:	74 72                	je     21d <MULTIBOOT_HEADER_SIZE+0x1c5>
     1ab:	65 65 5f             	gs gs pop rdi
     1ae:	69 6e 69 74 00 63 6f 	imul   ebp,DWORD PTR [rsi+0x69],0x6f630074
     1b5:	6d                   	ins    DWORD PTR es:[rdi],dx
     1b6:	70 00                	jo     1b8 <MULTIBOOT_HEADER_SIZE+0x160>
     1b8:	73 72                	jae    22c <MULTIBOOT_HEADER_SIZE+0x1d4>
     1ba:	63 2f                	movsxd ebp,DWORD PTR [rdi]
     1bc:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
     1bf:	6d                   	ins    DWORD PTR es:[rdi],dx
     1c0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     1c1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     1c2:	2f                   	(bad)  
     1c3:	6c                   	ins    BYTE PTR es:[rdi],dx
     1c4:	69 62 2f 61 76 6c 5f 	imul   esp,DWORD PTR [rdx+0x2f],0x5f6c7661
     1cb:	74 72                	je     23f <MULTIBOOT_HEADER_SIZE+0x1e7>
     1cd:	65 65 2f             	gs gs (bad) 
     1d0:	61                   	(bad)  
     1d1:	76 6c                	jbe    23f <MULTIBOOT_HEADER_SIZE+0x1e7>
     1d3:	5f                   	pop    rdi
     1d4:	74 72                	je     248 <MULTIBOOT_HEADER_SIZE+0x1f0>
     1d6:	65 65 2e 63 00       	gs gs movsxd eax,DWORD PTR cs:[rax]
     1db:	72 69                	jb     246 <MULTIBOOT_HEADER_SIZE+0x1ee>
     1dd:	67 68 74 00 5f 61    	addr32 push 0x615f0074
     1e3:	76 6c                	jbe    251 <MULTIBOOT_HEADER_SIZE+0x1f9>
     1e5:	5f                   	pop    rdi
     1e6:	74 72                	je     25a <MULTIBOOT_HEADER_SIZE+0x202>
     1e8:	65 65 5f             	gs gs pop rdi
     1eb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     1ec:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     1ed:	64 65 5f             	fs gs pop rdi
     1f0:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
     1f3:	63 75 6c             	movsxd esi,DWORD PTR [rbp+0x6c]
     1f6:	61                   	(bad)  
     1f7:	74 65                	je     25e <MULTIBOOT_HEADER_SIZE+0x206>
     1f9:	5f                   	pop    rdi
     1fa:	68 65 69 67 68       	push   0x68676965
     1ff:	74 00                	je     201 <MULTIBOOT_HEADER_SIZE+0x1a9>
     201:	5f                   	pop    rdi
     202:	61                   	(bad)  
     203:	76 6c                	jbe    271 <MULTIBOOT_HEADER_SIZE+0x219>
     205:	5f                   	pop    rdi
     206:	74 72                	je     27a <MULTIBOOT_HEADER_SIZE+0x222>
     208:	65 65 5f             	gs gs pop rdi
     20b:	73 77                	jae    284 <MULTIBOOT_HEADER_SIZE+0x22c>
     20d:	61                   	(bad)  
     20e:	70 5f                	jo     26f <MULTIBOOT_HEADER_SIZE+0x217>
     210:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     211:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     212:	64 65 73 00          	fs gs jae 216 <MULTIBOOT_HEADER_SIZE+0x1be>
     216:	74 65                	je     27d <MULTIBOOT_HEADER_SIZE+0x225>
     218:	6d                   	ins    DWORD PTR es:[rdi],dx
     219:	70 00                	jo     21b <MULTIBOOT_HEADER_SIZE+0x1c3>
     21b:	63 68 69             	movsxd ebp,DWORD PTR [rax+0x69]
     21e:	6c                   	ins    BYTE PTR es:[rdi],dx
     21f:	64 00 61 76          	add    BYTE PTR fs:[rcx+0x76],ah
     223:	6c                   	ins    BYTE PTR es:[rdi],dx
     224:	5f                   	pop    rdi
     225:	74 72                	je     299 <MULTIBOOT_HEADER_SIZE+0x241>
     227:	65 65 5f             	gs gs pop rdi
     22a:	76 61                	jbe    28d <MULTIBOOT_HEADER_SIZE+0x235>
     22c:	6c                   	ins    BYTE PTR es:[rdi],dx
     22d:	69 64 61 74 65 00 61 	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x76610065
     234:	76 
     235:	6c                   	ins    BYTE PTR es:[rdi],dx
     236:	5f                   	pop    rdi
     237:	74 72                	je     2ab <MULTIBOOT_HEADER_SIZE+0x253>
     239:	65 65 5f             	gs gs pop rdi
     23c:	6c                   	ins    BYTE PTR es:[rdi],dx
     23d:	61                   	(bad)  
     23e:	72 67                	jb     2a7 <MULTIBOOT_HEADER_SIZE+0x24f>
     240:	65 72 00             	gs jb  243 <MULTIBOOT_HEADER_SIZE+0x1eb>
     243:	5f                   	pop    rdi
     244:	61                   	(bad)  
     245:	76 6c                	jbe    2b3 <MULTIBOOT_HEADER_SIZE+0x25b>
     247:	5f                   	pop    rdi
     248:	74 72                	je     2bc <MULTIBOOT_HEADER_SIZE+0x264>
     24a:	65 65 5f             	gs gs pop rdi
     24d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     24e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     24f:	64 65 5f             	fs gs pop rdi
     252:	67 65 74 5f          	addr32 gs je 2b5 <MULTIBOOT_HEADER_SIZE+0x25d>
     256:	62 61 6c 61 6e       	(bad)  {k1}
     25b:	63 65 5f             	movsxd esp,DWORD PTR [rbp+0x5f]
     25e:	66 61                	data16 (bad) 
     260:	63 74 6f 72          	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
     264:	00 61 76             	add    BYTE PTR [rcx+0x76],ah
     267:	6c                   	ins    BYTE PTR es:[rdi],dx
     268:	5f                   	pop    rdi
     269:	74 72                	je     2dd <MULTIBOOT_HEADER_SIZE+0x285>
     26b:	65 65 5f             	gs gs pop rdi
     26e:	74 00                	je     270 <MULTIBOOT_HEADER_SIZE+0x218>
     270:	72 69                	jb     2db <MULTIBOOT_HEADER_SIZE+0x283>
     272:	67 68 74 5f 63 68    	addr32 push 0x68635f74
     278:	69 6c 64 72 65 6e 00 	imul   ebp,DWORD PTR [rsp+riz*2+0x72],0x61006e65
     27f:	61 
     280:	76 6c                	jbe    2ee <MULTIBOOT_HEADER_SIZE+0x296>
     282:	5f                   	pop    rdi
     283:	74 72                	je     2f7 <MULTIBOOT_HEADER_SIZE+0x29f>
     285:	65 65 5f             	gs gs pop rdi
     288:	69 6e 73 65 72 74 00 	imul   ebp,DWORD PTR [rsi+0x73],0x747265
     28f:	70 61                	jo     2f2 <MULTIBOOT_HEADER_SIZE+0x29a>
     291:	72 65                	jb     2f8 <MULTIBOOT_HEADER_SIZE+0x2a0>
     293:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     294:	74 00                	je     296 <MULTIBOOT_HEADER_SIZE+0x23e>
     296:	61                   	(bad)  
     297:	76 6c                	jbe    305 <MULTIBOOT_HEADER_SIZE+0x2ad>
     299:	5f                   	pop    rdi
     29a:	74 72                	je     30e <MULTIBOOT_HEADER_SIZE+0x2b6>
     29c:	65 65 5f             	gs gs pop rdi
     29f:	64 65 6c             	fs gs ins BYTE PTR es:[rdi],dx
     2a2:	65 74 65             	gs je  30a <MULTIBOOT_HEADER_SIZE+0x2b2>
     2a5:	00 5f 61             	add    BYTE PTR [rdi+0x61],bl
     2a8:	76 6c                	jbe    316 <MULTIBOOT_HEADER_SIZE+0x2be>
     2aa:	5f                   	pop    rdi
     2ab:	74 72                	je     31f <MULTIBOOT_HEADER_SIZE+0x2c7>
     2ad:	65 65 5f             	gs gs pop rdi
     2b0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     2b1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     2b2:	64 65 5f             	fs gs pop rdi
     2b5:	6c                   	ins    BYTE PTR es:[rdi],dx
     2b6:	65 66 74 5f          	gs data16 je 319 <MULTIBOOT_HEADER_SIZE+0x2c1>
     2ba:	72 6f                	jb     32b <MULTIBOOT_HEADER_SIZE+0x2d3>
     2bc:	74 61                	je     31f <MULTIBOOT_HEADER_SIZE+0x2c7>
     2be:	74 65                	je     325 <MULTIBOOT_HEADER_SIZE+0x2cd>
     2c0:	00 5f 61             	add    BYTE PTR [rdi+0x61],bl
     2c3:	76 6c                	jbe    331 <MULTIBOOT_HEADER_SIZE+0x2d9>
     2c5:	5f                   	pop    rdi
     2c6:	74 72                	je     33a <MULTIBOOT_HEADER_SIZE+0x2e2>
     2c8:	65 65 5f             	gs gs pop rdi
     2cb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     2cc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     2cd:	64 65 5f             	fs gs pop rdi
     2d0:	67 65 74 5f          	addr32 gs je 333 <MULTIBOOT_HEADER_SIZE+0x2db>
     2d4:	68 65 69 67 68       	push   0x68676965
     2d9:	74 00                	je     2db <MULTIBOOT_HEADER_SIZE+0x283>
     2db:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     2dc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     2dd:	64 65 32 00          	fs xor al,BYTE PTR gs:[rax]
     2e1:	74 72                	je     355 <MULTIBOOT_HEADER_SIZE+0x2fd>
     2e3:	65 65 00 61 76       	gs add BYTE PTR gs:[rcx+0x76],ah
     2e8:	6c                   	ins    BYTE PTR es:[rdi],dx
     2e9:	5f                   	pop    rdi
     2ea:	74 72                	je     35e <MULTIBOOT_HEADER_SIZE+0x306>
     2ec:	65 65 5f             	gs gs pop rdi
     2ef:	6c                   	ins    BYTE PTR es:[rdi],dx
     2f0:	61                   	(bad)  
     2f1:	72 67                	jb     35a <MULTIBOOT_HEADER_SIZE+0x302>
     2f3:	65 73 74             	gs jae 36a <MULTIBOOT_HEADER_SIZE+0x312>
     2f6:	00 61 76             	add    BYTE PTR [rcx+0x76],ah
     2f9:	6c                   	ins    BYTE PTR es:[rdi],dx
     2fa:	5f                   	pop    rdi
     2fb:	74 72                	je     36f <MULTIBOOT_HEADER_SIZE+0x317>
     2fd:	65 65 5f             	gs gs pop rdi
     300:	73 65                	jae    367 <MULTIBOOT_HEADER_SIZE+0x30f>
     302:	61                   	(bad)  
     303:	72 63                	jb     368 <MULTIBOOT_HEADER_SIZE+0x310>
     305:	68 00 5f 61 76       	push   0x76615f00
     30a:	6c                   	ins    BYTE PTR es:[rdi],dx
     30b:	5f                   	pop    rdi
     30c:	74 72                	je     380 <MULTIBOOT_HEADER_SIZE+0x328>
     30e:	65 65 5f             	gs gs pop rdi
     311:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     312:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     313:	64 65 5f             	fs gs pop rdi
     316:	74 65                	je     37d <MULTIBOOT_HEADER_SIZE+0x325>
     318:	73 74                	jae    38e <MULTIBOOT_HEADER_SIZE+0x336>
     31a:	00 6d 61             	add    BYTE PTR [rbp+0x61],ch
     31d:	78 5f                	js     37e <MULTIBOOT_HEADER_SIZE+0x326>
     31f:	33 32                	xor    esi,DWORD PTR [rdx]
     321:	00 6c 65 66          	add    BYTE PTR [rbp+riz*2+0x66],ch
     325:	74 00                	je     327 <MULTIBOOT_HEADER_SIZE+0x2cf>
     327:	61                   	(bad)  
     328:	76 6c                	jbe    396 <MULTIBOOT_HEADER_SIZE+0x33e>
     32a:	5f                   	pop    rdi
     32b:	74 72                	je     39f <MULTIBOOT_HEADER_SIZE+0x347>
     32d:	65 65 5f             	gs gs pop rdi
     330:	73 69                	jae    39b <MULTIBOOT_HEADER_SIZE+0x343>
     332:	7a 65                	jp     399 <MULTIBOOT_HEADER_SIZE+0x341>
     334:	00 5f 42             	add    BYTE PTR [rdi+0x42],bl
     337:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     338:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     339:	6c                   	ins    BYTE PTR es:[rdi],dx
     33a:	00 64 61 74          	add    BYTE PTR [rcx+riz*2+0x74],ah
     33e:	61                   	(bad)  
     33f:	00 72 69             	add    BYTE PTR [rdx+0x69],dh
     342:	67 68 74 5f 62 66    	addr32 push 0x66625f74
     348:	00 5f 61             	add    BYTE PTR [rdi+0x61],bl
     34b:	76 6c                	jbe    3b9 <MULTIBOOT_HEADER_SIZE+0x361>
     34d:	5f                   	pop    rdi
     34e:	74 72                	je     3c2 <MULTIBOOT_HEADER_SIZE+0x36a>
     350:	65 65 5f             	gs gs pop rdi
     353:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     354:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     355:	64 65 5f             	fs gs pop rdi
     358:	62 61 6c 61 6e       	(bad)  {k1}
     35d:	63 65 00             	movsxd esp,DWORD PTR [rbp+0x0]
     360:	5f                   	pop    rdi
     361:	61                   	(bad)  
     362:	76 6c                	jbe    3d0 <MULTIBOOT_HEADER_SIZE+0x378>
     364:	5f                   	pop    rdi
     365:	74 72                	je     3d9 <MULTIBOOT_HEADER_SIZE+0x381>
     367:	65 65 5f             	gs gs pop rdi
     36a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     36b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     36c:	64 65 5f             	fs gs pop rdi
     36f:	69 6e 73 65 72 74 00 	imul   ebp,DWORD PTR [rsi+0x73],0x747265
     376:	6c                   	ins    BYTE PTR es:[rdi],dx
     377:	65 66 74 5f          	gs data16 je 3da <MULTIBOOT_HEADER_SIZE+0x382>
     37b:	63 68 69             	movsxd ebp,DWORD PTR [rax+0x69]
     37e:	6c                   	ins    BYTE PTR es:[rdi],dx
     37f:	64 72 65             	fs jb  3e7 <MULTIBOOT_HEADER_SIZE+0x38f>
     382:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     383:	00 5f 61             	add    BYTE PTR [rdi+0x61],bl
     386:	76 6c                	jbe    3f4 <MULTIBOOT_HEADER_SIZE+0x39c>
     388:	5f                   	pop    rdi
     389:	74 72                	je     3fd <MULTIBOOT_HEADER_SIZE+0x3a5>
     38b:	65 65 5f             	gs gs pop rdi
     38e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     38f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     390:	64 65 5f             	fs gs pop rdi
     393:	64 65 6c             	fs gs ins BYTE PTR es:[rdi],dx
     396:	65 74 65             	gs je  3fe <MULTIBOOT_HEADER_SIZE+0x3a6>
     399:	00 6c 65 66          	add    BYTE PTR [rbp+riz*2+0x66],ch
     39d:	74 5f                	je     3fe <MULTIBOOT_HEADER_SIZE+0x3a6>
     39f:	62                   	(bad)  {k1}
     3a0:	66 00 63 6f          	data16 add BYTE PTR [rbx+0x6f],ah
     3a4:	6d                   	ins    DWORD PTR es:[rdi],dx
     3a5:	70 61                	jo     408 <MULTIBOOT_HEADER_SIZE+0x3b0>
     3a7:	72 65                	jb     40e <MULTIBOOT_HEADER_SIZE+0x3b6>
     3a9:	00 5f 61             	add    BYTE PTR [rdi+0x61],bl
     3ac:	76 6c                	jbe    41a <MULTIBOOT_HEADER_SIZE+0x3c2>
     3ae:	5f                   	pop    rdi
     3af:	74 72                	je     423 <MULTIBOOT_HEADER_SIZE+0x3cb>
     3b1:	65 65 5f             	gs gs pop rdi
     3b4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     3b5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     3b6:	64 65 5f             	fs gs pop rdi
     3b9:	73 65                	jae    420 <MULTIBOOT_HEADER_SIZE+0x3c8>
     3bb:	61                   	(bad)  
     3bc:	72 63                	jb     421 <MULTIBOOT_HEADER_SIZE+0x3c9>
     3be:	68 00 61 76 6c       	push   0x6c766100
     3c3:	5f                   	pop    rdi
     3c4:	74 72                	je     438 <MULTIBOOT_HEADER_SIZE+0x3e0>
     3c6:	65 65 5f             	gs gs pop rdi
     3c9:	73 6d                	jae    438 <MULTIBOOT_HEADER_SIZE+0x3e0>
     3cb:	61                   	(bad)  
     3cc:	6c                   	ins    BYTE PTR es:[rdi],dx
     3cd:	6c                   	ins    BYTE PTR es:[rdi],dx
     3ce:	65 72 00             	gs jb  3d1 <MULTIBOOT_HEADER_SIZE+0x379>
     3d1:	5f                   	pop    rdi
     3d2:	61                   	(bad)  
     3d3:	76 6c                	jbe    441 <MULTIBOOT_HEADER_SIZE+0x3e9>
     3d5:	5f                   	pop    rdi
     3d6:	74 72                	je     44a <MULTIBOOT_HEADER_SIZE+0x3f2>
     3d8:	65 65 5f             	gs gs pop rdi
     3db:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     3dc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     3dd:	64 65 5f             	fs gs pop rdi
     3e0:	69 6e 69 74 00 5f 61 	imul   ebp,DWORD PTR [rsi+0x69],0x615f0074
     3e7:	76 6c                	jbe    455 <MULTIBOOT_HEADER_SIZE+0x3fd>
     3e9:	5f                   	pop    rdi
     3ea:	74 72                	je     45e <MULTIBOOT_HEADER_SIZE+0x406>
     3ec:	65 65 5f             	gs gs pop rdi
     3ef:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     3f0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     3f1:	64 65 5f             	fs gs pop rdi
     3f4:	72 69                	jb     45f <MULTIBOOT_HEADER_SIZE+0x407>
     3f6:	67 68 74 5f 72 6f    	addr32 push 0x6f725f74
     3fc:	74 61                	je     45f <MULTIBOOT_HEADER_SIZE+0x407>
     3fe:	74 65                	je     465 <MULTIBOOT_HEADER_SIZE+0x40d>
     400:	00 5f 61             	add    BYTE PTR [rdi+0x61],bl
     403:	76 6c                	jbe    471 <MULTIBOOT_HEADER_SIZE+0x419>
     405:	5f                   	pop    rdi
     406:	74 72                	je     47a <MULTIBOOT_HEADER_SIZE+0x422>
     408:	65 65 5f             	gs gs pop rdi
     40b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     40c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     40d:	64 65 5f             	fs gs pop rdi
     410:	74 00                	je     412 <MULTIBOOT_HEADER_SIZE+0x3ba>
     412:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     413:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     414:	64 65 31 00          	fs xor DWORD PTR gs:[rax],eax
     418:	72 6f                	jb     489 <MULTIBOOT_HEADER_SIZE+0x431>
     41a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     41b:	74 00                	je     41d <MULTIBOOT_HEADER_SIZE+0x3c5>
     41d:	61                   	(bad)  
     41e:	76 6c                	jbe    48c <MULTIBOOT_HEADER_SIZE+0x434>
     420:	5f                   	pop    rdi
     421:	74 72                	je     495 <MULTIBOOT_HEADER_SIZE+0x43d>
     423:	65 65 5f             	gs gs pop rdi
     426:	73 6d                	jae    495 <MULTIBOOT_HEADER_SIZE+0x43d>
     428:	61                   	(bad)  
     429:	6c                   	ins    BYTE PTR es:[rdi],dx
     42a:	6c                   	ins    BYTE PTR es:[rdi],dx
     42b:	65 73 74             	gs jae 4a2 <MULTIBOOT_HEADER_SIZE+0x44a>
     42e:	00 73 75             	add    BYTE PTR [rbx+0x75],dh
     431:	63 63 65             	movsxd esp,DWORD PTR [rbx+0x65]
     434:	73 73                	jae    4a9 <MULTIBOOT_HEADER_SIZE+0x451>
     436:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     437:	72 00                	jb     439 <MULTIBOOT_HEADER_SIZE+0x3e1>
     439:	74 6f                	je     4aa <MULTIBOOT_HEADER_SIZE+0x452>
     43b:	74 61                	je     49e <MULTIBOOT_HEADER_SIZE+0x446>
     43d:	6c                   	ins    BYTE PTR es:[rdi],dx
     43e:	5f                   	pop    rdi
     43f:	73 69                	jae    4aa <MULTIBOOT_HEADER_SIZE+0x452>
     441:	7a 65                	jp     4a8 <MULTIBOOT_HEADER_SIZE+0x450>
     443:	00 72 65             	add    BYTE PTR [rdx+0x65],dh
     446:	73 75                	jae    4bd <MULTIBOOT_HEADER_SIZE+0x465>
     448:	6c                   	ins    BYTE PTR es:[rdi],dx
     449:	74 00                	je     44b <MULTIBOOT_HEADER_SIZE+0x3f3>
     44b:	63 75 72             	movsxd esi,DWORD PTR [rbp+0x72]
     44e:	5f                   	pop    rdi
     44f:	62                   	(bad)  {k1}
     450:	6c                   	ins    BYTE PTR es:[rdi],dx
     451:	6b 5f 66 72          	imul   ebx,DWORD PTR [rdi+0x66],0x72
     455:	65 65 00 63 75       	gs add BYTE PTR gs:[rbx+0x75],ah
     45a:	72 5f                	jb     4bb <MULTIBOOT_HEADER_SIZE+0x463>
     45c:	62                   	(bad)  {k1}
     45d:	6c                   	ins    BYTE PTR es:[rdi],dx
     45e:	6b 5f 73 69          	imul   ebx,DWORD PTR [rdi+0x73],0x69
     462:	7a 65                	jp     4c9 <MULTIBOOT_HEADER_SIZE+0x471>
     464:	00 73 61             	add    BYTE PTR [rbx+0x61],dh
     467:	6c                   	ins    BYTE PTR es:[rdi],dx
     468:	6c                   	ins    BYTE PTR es:[rdi],dx
     469:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     46a:	63 00                	movsxd eax,DWORD PTR [rax]
     46c:	5f                   	pop    rdi
     46d:	73 65                	jae    4d4 <MULTIBOOT_HEADER_SIZE+0x47c>
     46f:	74 5f                	je     4d0 <MULTIBOOT_HEADER_SIZE+0x478>
     471:	73 61                	jae    4d4 <MULTIBOOT_HEADER_SIZE+0x47c>
     473:	6c                   	ins    BYTE PTR es:[rdi],dx
     474:	6c                   	ins    BYTE PTR es:[rdi],dx
     475:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     476:	63 5f 68             	movsxd ebx,DWORD PTR [rdi+0x68]
     479:	65 61                	gs (bad) 
     47b:	64 65 72 5f          	fs gs jb 4de <MULTIBOOT_HEADER_SIZE+0x486>
     47f:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
     481:	61                   	(bad)  
     482:	67 00 6e 5f          	add    BYTE PTR [esi+0x5f],ch
     486:	62                   	(bad)  {k1}
     487:	6c                   	ins    BYTE PTR es:[rdi],dx
     488:	6b 5f 6c 61          	imul   ebx,DWORD PTR [rdi+0x6c],0x61
     48c:	73 74                	jae    502 <MULTIBOOT_HEADER_SIZE+0x4aa>
     48e:	00 62 69             	add    BYTE PTR [rdx+0x69],ah
     491:	74 5f                	je     4f2 <MULTIBOOT_HEADER_SIZE+0x49a>
     493:	66 69 65 6c 64 5f    	imul   sp,WORD PTR [rbp+0x6c],0x5f64
     499:	6d                   	ins    DWORD PTR es:[rdi],dx
     49a:	61                   	(bad)  
     49b:	73 6b                	jae    508 <MULTIBOOT_HEADER_SIZE+0x4b0>
     49d:	5f                   	pop    rdi
     49e:	33 32                	xor    esi,DWORD PTR [rdx]
     4a0:	00 63 5f             	add    BYTE PTR [rbx+0x5f],ah
     4a3:	62                   	(bad)  {k1}
     4a4:	6c                   	ins    BYTE PTR es:[rdi],dx
     4a5:	6b 5f 6c 61          	imul   ebx,DWORD PTR [rdi+0x6c],0x61
     4a9:	73 74                	jae    51f <MULTIBOOT_HEADER_SIZE+0x4c7>
     4ab:	00 76 61             	add    BYTE PTR [rsi+0x61],dh
     4ae:	6c                   	ins    BYTE PTR es:[rdi],dx
     4af:	75 65                	jne    516 <MULTIBOOT_HEADER_SIZE+0x4be>
     4b1:	00 5f 72             	add    BYTE PTR [rdi+0x72],bl
     4b4:	65 61                	gs (bad) 
     4b6:	64 5f                	fs pop rdi
     4b8:	73 61                	jae    51b <MULTIBOOT_HEADER_SIZE+0x4c3>
     4ba:	6c                   	ins    BYTE PTR es:[rdi],dx
     4bb:	6c                   	ins    BYTE PTR es:[rdi],dx
     4bc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     4bd:	63 5f 68             	movsxd ebx,DWORD PTR [rdi+0x68]
     4c0:	65 61                	gs (bad) 
     4c2:	64 65 72 5f          	fs gs jb 525 <MULTIBOOT_HEADER_SIZE+0x4cd>
     4c6:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
     4c8:	61                   	(bad)  
     4c9:	67 00 73 61          	add    BYTE PTR [ebx+0x61],dh
     4cd:	6c                   	ins    BYTE PTR es:[rdi],dx
     4ce:	6c                   	ins    BYTE PTR es:[rdi],dx
     4cf:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     4d0:	63 5f 61             	movsxd ebx,DWORD PTR [rdi+0x61]
     4d3:	73 73                	jae    548 <MULTIBOOT_HEADER_SIZE+0x4f0>
     4d5:	65 72 74             	gs jb  54c <MULTIBOOT_HEADER_SIZE+0x4f4>
     4d8:	00 73 61             	add    BYTE PTR [rbx+0x61],dh
     4db:	6c                   	ins    BYTE PTR es:[rdi],dx
     4dc:	6c                   	ins    BYTE PTR es:[rdi],dx
     4dd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     4de:	63 5f 69             	movsxd ebx,DWORD PTR [rdi+0x69]
     4e1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     4e2:	69 74 00 63 75 72 5f 	imul   esi,DWORD PTR [rax+rax*1+0x63],0x625f7275
     4e9:	62 
     4ea:	6c                   	ins    BYTE PTR es:[rdi],dx
     4eb:	6b 5f 6c 61          	imul   ebx,DWORD PTR [rdi+0x6c],0x61
     4ef:	73 74                	jae    565 <MULTIBOOT_HEADER_SIZE+0x50d>
     4f1:	00 68 69             	add    BYTE PTR [rax+0x69],ch
     4f4:	67 68 00 5f 73 65    	addr32 push 0x65735f00
     4fa:	74 5f                	je     55b <MULTIBOOT_HEADER_SIZE+0x503>
     4fc:	73 61                	jae    55f <MULTIBOOT_HEADER_SIZE+0x507>
     4fe:	6c                   	ins    BYTE PTR es:[rdi],dx
     4ff:	6c                   	ins    BYTE PTR es:[rdi],dx
     500:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     501:	63 5f 68             	movsxd ebx,DWORD PTR [rdi+0x68]
     504:	65 61                	gs (bad) 
     506:	64 65 72 5f          	fs gs jb 569 <MULTIBOOT_HEADER_SIZE+0x511>
     50a:	73 69                	jae    575 <MULTIBOOT_HEADER_SIZE+0x51d>
     50c:	7a 65                	jp     573 <MULTIBOOT_HEADER_SIZE+0x51b>
     50e:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
     511:	63 2f                	movsxd ebp,DWORD PTR [rdi]
     513:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
     516:	6d                   	ins    DWORD PTR es:[rdi],dx
     517:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     518:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     519:	2f                   	(bad)  
     51a:	6c                   	ins    BYTE PTR es:[rdi],dx
     51b:	69 62 2f 73 61 6c 6c 	imul   esp,DWORD PTR [rdx+0x2f],0x6c6c6173
     522:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     523:	63 2f                	movsxd ebp,DWORD PTR [rdi]
     525:	73 61                	jae    588 <MULTIBOOT_HEADER_SIZE+0x530>
     527:	6c                   	ins    BYTE PTR es:[rdi],dx
     528:	6c                   	ins    BYTE PTR es:[rdi],dx
     529:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     52a:	63 2e                	movsxd ebp,DWORD PTR [rsi]
     52c:	63 00                	movsxd eax,DWORD PTR [rax]
     52e:	5f                   	pop    rdi
     52f:	72 65                	jb     596 <MULTIBOOT_HEADER_SIZE+0x53e>
     531:	61                   	(bad)  
     532:	64 5f                	fs pop rdi
     534:	73 61                	jae    597 <MULTIBOOT_HEADER_SIZE+0x53f>
     536:	6c                   	ins    BYTE PTR es:[rdi],dx
     537:	6c                   	ins    BYTE PTR es:[rdi],dx
     538:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     539:	63 5f 68             	movsxd ebx,DWORD PTR [rdi+0x68]
     53c:	65 61                	gs (bad) 
     53e:	64 65 72 5f          	fs gs jb 5a1 <MULTIBOOT_HEADER_SIZE+0x549>
     542:	73 69                	jae    5ad <MULTIBOOT_HEADER_SIZE+0x555>
     544:	7a 65                	jp     5ab <MULTIBOOT_HEADER_SIZE+0x553>
     546:	00 62 69             	add    BYTE PTR [rdx+0x69],ah
     549:	74 5f                	je     5aa <MULTIBOOT_HEADER_SIZE+0x552>
     54b:	6d                   	ins    DWORD PTR es:[rdi],dx
     54c:	61                   	(bad)  
     54d:	73 6b                	jae    5ba <MULTIBOOT_HEADER_SIZE+0x562>
     54f:	5f                   	pop    rdi
     550:	33 32                	xor    esi,DWORD PTR [rdx]
     552:	00 63 5f             	add    BYTE PTR [rbx+0x5f],ah
     555:	70 74                	jo     5cb <MULTIBOOT_HEADER_SIZE+0x573>
     557:	72 00                	jb     559 <MULTIBOOT_HEADER_SIZE+0x501>
     559:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     55a:	5f                   	pop    rdi
     55b:	70 74                	jo     5d1 <MULTIBOOT_HEADER_SIZE+0x579>
     55d:	72 00                	jb     55f <MULTIBOOT_HEADER_SIZE+0x507>
     55f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     560:	5f                   	pop    rdi
     561:	62                   	(bad)  {k1}
     562:	6c                   	ins    BYTE PTR es:[rdi],dx
     563:	6b 5f 66 72          	imul   ebx,DWORD PTR [rdi+0x66],0x72
     567:	65 65 00 6e 5f       	gs add BYTE PTR gs:[rsi+0x5f],ch
     56c:	62                   	(bad)  {k1}
     56d:	6c                   	ins    BYTE PTR es:[rdi],dx
     56e:	6b 5f 73 69          	imul   ebx,DWORD PTR [rdi+0x73],0x69
     572:	7a 65                	jp     5d9 <MULTIBOOT_HEADER_SIZE+0x581>
     574:	00 5f 73             	add    BYTE PTR [rdi+0x73],bl
     577:	61                   	(bad)  
     578:	6c                   	ins    BYTE PTR es:[rdi],dx
     579:	6c                   	ins    BYTE PTR es:[rdi],dx
     57a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     57b:	63 5f 6a             	movsxd ebx,DWORD PTR [rdi+0x6a]
     57e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     57f:	69 6e 00 63 5f 62 6c 	imul   ebp,DWORD PTR [rsi+0x0],0x6c625f63
     586:	6b 5f 66 72          	imul   ebx,DWORD PTR [rdi+0x66],0x72
     58a:	65 65 00 63 5f       	gs add BYTE PTR gs:[rbx+0x5f],ah
     58f:	62                   	(bad)  {k1}
     590:	6c                   	ins    BYTE PTR es:[rdi],dx
     591:	6b 5f 73 69          	imul   ebx,DWORD PTR [rdi+0x73],0x69
     595:	7a 65                	jp     5fc <MULTIBOOT_HEADER_SIZE+0x5a4>
     597:	00 73 66             	add    BYTE PTR [rbx+0x66],dh
     59a:	72 65                	jb     601 <MULTIBOOT_HEADER_SIZE+0x5a9>
     59c:	65 00 5f 73          	add    BYTE PTR gs:[rdi+0x73],bl
     5a0:	61                   	(bad)  
     5a1:	6c                   	ins    BYTE PTR es:[rdi],dx
     5a2:	6c                   	ins    BYTE PTR es:[rdi],dx
     5a3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     5a4:	63 5f 68             	movsxd ebx,DWORD PTR [rdi+0x68]
     5a7:	65 61                	gs (bad) 
     5a9:	64 65 72 00          	fs gs jb 5ad <MULTIBOOT_HEADER_SIZE+0x555>
     5ad:	5f                   	pop    rdi
     5ae:	61                   	(bad)  
     5af:	70 70                	jo     621 <MULTIBOOT_HEADER_SIZE+0x5c9>
     5b1:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     5b3:	64 5f                	fs pop rdi
     5b5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     5b6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     5b7:	64 65 00 6c 69 6e    	fs add BYTE PTR gs:[rcx+rbp*2+0x6e],ch
     5bd:	6b 65 64 5f          	imul   esp,DWORD PTR [rbp+0x64],0x5f
     5c1:	6c                   	ins    BYTE PTR es:[rdi],dx
     5c2:	69 73 74 5f 66 69 72 	imul   esi,DWORD PTR [rbx+0x74],0x7269665f
     5c9:	73 74                	jae    63f <MULTIBOOT_HEADER_SIZE+0x5e7>
     5cb:	00 5f 6c             	add    BYTE PTR [rdi+0x6c],bl
     5ce:	69 6e 6b 65 64 5f 6c 	imul   ebp,DWORD PTR [rsi+0x6b],0x6c5f6465
     5d5:	69 73 74 5f 6e 6f 64 	imul   esi,DWORD PTR [rbx+0x74],0x646f6e5f
     5dc:	65 5f                	gs pop rdi
     5de:	74 00                	je     5e0 <MULTIBOOT_HEADER_SIZE+0x588>
     5e0:	73 72                	jae    654 <MULTIBOOT_HEADER_SIZE+0x5fc>
     5e2:	63 2f                	movsxd ebp,DWORD PTR [rdi]
     5e4:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
     5e7:	6d                   	ins    DWORD PTR es:[rdi],dx
     5e8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     5e9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     5ea:	2f                   	(bad)  
     5eb:	6c                   	ins    BYTE PTR es:[rdi],dx
     5ec:	69 62 2f 6c 69 6e 6b 	imul   esp,DWORD PTR [rdx+0x2f],0x6b6e696c
     5f3:	65 64 5f             	gs fs pop rdi
     5f6:	6c                   	ins    BYTE PTR es:[rdi],dx
     5f7:	69 73 74 2f 6c 69 6e 	imul   esi,DWORD PTR [rbx+0x74],0x6e696c2f
     5fe:	6b 65 64 5f          	imul   esp,DWORD PTR [rbp+0x64],0x5f
     602:	6c                   	ins    BYTE PTR es:[rdi],dx
     603:	69 73 74 2e 63 00 6c 	imul   esi,DWORD PTR [rbx+0x74],0x6c00632e
     60a:	69 6e 6b 65 64 5f 6c 	imul   ebp,DWORD PTR [rsi+0x6b],0x6c5f6465
     611:	69 73 74 5f 70 75 73 	imul   esi,DWORD PTR [rbx+0x74],0x7375705f
     618:	68 5f 66 72 6f       	push   0x6f72665f
     61d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     61e:	74 00                	je     620 <MULTIBOOT_HEADER_SIZE+0x5c8>
     620:	6c                   	ins    BYTE PTR es:[rdi],dx
     621:	69 6e 6b 65 64 5f 6c 	imul   ebp,DWORD PTR [rsi+0x6b],0x6c5f6465
     628:	69 73 74 5f 73 65 61 	imul   esi,DWORD PTR [rbx+0x74],0x6165735f
     62f:	72 63                	jb     694 <MULTIBOOT_HEADER_SIZE+0x63c>
     631:	68 00 6c 69 6e       	push   0x6e696c00
     636:	6b 65 64 5f          	imul   esp,DWORD PTR [rbp+0x64],0x5f
     63a:	6c                   	ins    BYTE PTR es:[rdi],dx
     63b:	69 73 74 5f 72 65 6d 	imul   esi,DWORD PTR [rbx+0x74],0x6d65725f
     642:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     643:	76 65                	jbe    6aa <MULTIBOOT_HEADER_SIZE+0x652>
     645:	5f                   	pop    rdi
     646:	72 65                	jb     6ad <MULTIBOOT_HEADER_SIZE+0x655>
     648:	66 00 6c 69 6e       	data16 add BYTE PTR [rcx+rbp*2+0x6e],ch
     64d:	6b 65 64 5f          	imul   esp,DWORD PTR [rbp+0x64],0x5f
     651:	6c                   	ins    BYTE PTR es:[rdi],dx
     652:	69 73 74 5f 69 6e 73 	imul   esi,DWORD PTR [rbx+0x74],0x736e695f
     659:	65 72 74             	gs jb  6d0 <MULTIBOOT_HEADER_SIZE+0x678>
     65c:	5f                   	pop    rdi
     65d:	69 64 78 00 70 72 65 	imul   esp,DWORD PTR [rax+rdi*2+0x0],0x76657270
     664:	76 
     665:	5f                   	pop    rdi
     666:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     667:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     668:	64 65 00 5f 70       	fs add BYTE PTR gs:[rdi+0x70],bl
     66d:	72 65                	jb     6d4 <MULTIBOOT_HEADER_SIZE+0x67c>
     66f:	70 65                	jo     6d6 <MULTIBOOT_HEADER_SIZE+0x67e>
     671:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     672:	64 5f                	fs pop rdi
     674:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     675:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     676:	64 65 00 6c 69 6e    	fs add BYTE PTR gs:[rcx+rbp*2+0x6e],ch
     67c:	6b 65 64 5f          	imul   esp,DWORD PTR [rbp+0x64],0x5f
     680:	6c                   	ins    BYTE PTR es:[rdi],dx
     681:	69 73 74 5f 69 6e 73 	imul   esi,DWORD PTR [rbx+0x74],0x736e695f
     688:	65 72 74             	gs jb  6ff <MULTIBOOT_HEADER_SIZE+0x6a7>
     68b:	5f                   	pop    rdi
     68c:	72 65                	jb     6f3 <MULTIBOOT_HEADER_SIZE+0x69b>
     68e:	66 00 5f 6c          	data16 add BYTE PTR [rdi+0x6c],bl
     692:	69 6e 6b 65 64 5f 6c 	imul   ebp,DWORD PTR [rsi+0x6b],0x6c5f6465
     699:	69 73 74 5f 74 00 6c 	imul   esi,DWORD PTR [rbx+0x74],0x6c00745f
     6a0:	69 6e 6b 65 64 5f 6c 	imul   ebp,DWORD PTR [rsi+0x6b],0x6c5f6465
     6a7:	69 73 74 5f 6c 61 73 	imul   esi,DWORD PTR [rbx+0x74],0x73616c5f
     6ae:	74 00                	je     6b0 <MULTIBOOT_HEADER_SIZE+0x658>
     6b0:	6c                   	ins    BYTE PTR es:[rdi],dx
     6b1:	69 6e 6b 65 64 5f 6c 	imul   ebp,DWORD PTR [rsi+0x6b],0x6c5f6465
     6b8:	69 73 74 5f 70 6f 70 	imul   esi,DWORD PTR [rbx+0x74],0x706f705f
     6bf:	5f                   	pop    rdi
     6c0:	62 61                	(bad)  {k1}
     6c2:	63 6b 00             	movsxd ebp,DWORD PTR [rbx+0x0]
     6c5:	6c                   	ins    BYTE PTR es:[rdi],dx
     6c6:	69 6e 6b 65 64 5f 6c 	imul   ebp,DWORD PTR [rsi+0x6b],0x6c5f6465
     6cd:	69 73 74 5f 70 72 65 	imul   esi,DWORD PTR [rbx+0x74],0x6572705f
     6d4:	76 00                	jbe    6d6 <MULTIBOOT_HEADER_SIZE+0x67e>
     6d6:	5f                   	pop    rdi
     6d7:	69 6e 69 74 5f 6c 69 	imul   ebp,DWORD PTR [rsi+0x69],0x696c5f74
     6de:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     6df:	6b 65 64 5f          	imul   esp,DWORD PTR [rbp+0x64],0x5f
     6e3:	6c                   	ins    BYTE PTR es:[rdi],dx
     6e4:	69 73 74 5f 6e 6f 64 	imul   esi,DWORD PTR [rbx+0x74],0x646f6e5f
     6eb:	65 00 74 61 72       	add    BYTE PTR gs:[rcx+riz*2+0x72],dh
     6f0:	67 65 74 00          	addr32 gs je 6f4 <MULTIBOOT_HEADER_SIZE+0x69c>
     6f4:	6c                   	ins    BYTE PTR es:[rdi],dx
     6f5:	69 6e 6b 65 64 5f 6c 	imul   ebp,DWORD PTR [rsi+0x6b],0x6c5f6465
     6fc:	69 73 74 5f 67 65 74 	imul   esi,DWORD PTR [rbx+0x74],0x7465675f
     703:	00 6c 69 6e          	add    BYTE PTR [rcx+rbp*2+0x6e],ch
     707:	6b 65 64 5f          	imul   esp,DWORD PTR [rbp+0x64],0x5f
     70b:	6c                   	ins    BYTE PTR es:[rdi],dx
     70c:	69 73 74 5f 6e 65 78 	imul   esi,DWORD PTR [rbx+0x74],0x78656e5f
     713:	74 00                	je     715 <MULTIBOOT_HEADER_SIZE+0x6bd>
     715:	6c                   	ins    BYTE PTR es:[rdi],dx
     716:	69 6e 6b 65 64 5f 6c 	imul   ebp,DWORD PTR [rsi+0x6b],0x6c5f6465
     71d:	69 73 74 5f 72 65 6d 	imul   esi,DWORD PTR [rbx+0x74],0x6d65725f
     724:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     725:	76 65                	jbe    78c <MULTIBOOT_HEADER_SIZE+0x734>
     727:	5f                   	pop    rdi
     728:	69 64 78 00 63 75 72 	imul   esp,DWORD PTR [rax+rdi*2+0x0],0x5f727563
     72f:	5f 
     730:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     731:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     732:	64 65 00 69 6e       	fs add BYTE PTR gs:[rcx+0x6e],ch
     737:	64 65 78 00          	fs gs js 73b <MULTIBOOT_HEADER_SIZE+0x6e3>
     73b:	6c                   	ins    BYTE PTR es:[rdi],dx
     73c:	69 6e 6b 65 64 5f 6c 	imul   ebp,DWORD PTR [rsi+0x6b],0x6c5f6465
     743:	69 73 74 5f 70 6f 70 	imul   esi,DWORD PTR [rbx+0x74],0x706f705f
     74a:	5f                   	pop    rdi
     74b:	66 72 6f             	data16 jb 7bd <MULTIBOOT_HEADER_SIZE+0x765>
     74e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     74f:	74 00                	je     751 <MULTIBOOT_HEADER_SIZE+0x6f9>
     751:	6c                   	ins    BYTE PTR es:[rdi],dx
     752:	69 6e 6b 65 64 5f 6c 	imul   ebp,DWORD PTR [rsi+0x6b],0x6c5f6465
     759:	69 73 74 5f 69 6e 69 	imul   esi,DWORD PTR [rbx+0x74],0x696e695f
     760:	74 00                	je     762 <MULTIBOOT_HEADER_SIZE+0x70a>
     762:	6c                   	ins    BYTE PTR es:[rdi],dx
     763:	69 6e 6b 65 64 5f 6c 	imul   ebp,DWORD PTR [rsi+0x6b],0x6c5f6465
     76a:	69 73 74 5f 70 75 73 	imul   esi,DWORD PTR [rbx+0x74],0x7375705f
     771:	68 5f 62 61 63       	push   0x6361625f
     776:	6b 00 65             	imul   eax,DWORD PTR [rax],0x65
     779:	71 75                	jno    7f0 <MULTIBOOT_HEADER_SIZE+0x798>
     77b:	61                   	(bad)  
     77c:	6c                   	ins    BYTE PTR es:[rdi],dx
     77d:	73 00                	jae    77f <MULTIBOOT_HEADER_SIZE+0x727>
     77f:	6c                   	ins    BYTE PTR es:[rdi],dx
     780:	69 6e 6b 65 64 5f 6c 	imul   ebp,DWORD PTR [rsi+0x6b],0x6c5f6465
     787:	69 73 74 5f 73 69 7a 	imul   esi,DWORD PTR [rbx+0x74],0x7a69735f
     78e:	65 00 5f 75          	add    BYTE PTR gs:[rdi+0x75],bl
     792:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     793:	6c                   	ins    BYTE PTR es:[rdi],dx
     794:	69 6e 6b 5f 6e 6f 64 	imul   ebp,DWORD PTR [rsi+0x6b],0x646f6e5f
     79b:	65 00 73 61          	add    BYTE PTR gs:[rbx+0x61],dh
     79f:	6c                   	ins    BYTE PTR es:[rdi],dx
     7a0:	6c                   	ins    BYTE PTR es:[rdi],dx
     7a1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     7a2:	63 5f 6f             	movsxd ebx,DWORD PTR [rdi+0x6f]
     7a5:	76 65                	jbe    80c <MULTIBOOT_HEADER_SIZE+0x7b4>
     7a7:	72 66                	jb     80f <MULTIBOOT_HEADER_SIZE+0x7b7>
     7a9:	6c                   	ins    BYTE PTR es:[rdi],dx
     7aa:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     7ab:	77 5f                	ja     80c <MULTIBOOT_HEADER_SIZE+0x7b4>
     7ad:	61                   	(bad)  
     7ae:	6c                   	ins    BYTE PTR es:[rdi],dx
     7af:	6c                   	ins    BYTE PTR es:[rdi],dx
     7b0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     7b1:	63 00                	movsxd eax,DWORD PTR [rax]
     7b3:	70 74                	jo     829 <MULTIBOOT_HEADER_SIZE+0x7d1>
     7b5:	72 35                	jb     7ec <MULTIBOOT_HEADER_SIZE+0x794>
     7b7:	00 70 74             	add    BYTE PTR [rax+0x74],dh
     7ba:	72 33                	jb     7ef <MULTIBOOT_HEADER_SIZE+0x797>
     7bc:	00 70 74             	add    BYTE PTR [rax+0x74],dh
     7bf:	72 34                	jb     7f5 <MULTIBOOT_HEADER_SIZE+0x79d>
     7c1:	00 62 6c             	add    BYTE PTR [rdx+0x6c],ah
     7c4:	6b 5f 73 69          	imul   ebx,DWORD PTR [rdi+0x73],0x69
     7c8:	7a 65                	jp     82f <MULTIBOOT_HEADER_SIZE+0x7d7>
     7ca:	32 00                	xor    al,BYTE PTR [rax]
     7cc:	73 61                	jae    82f <MULTIBOOT_HEADER_SIZE+0x7d7>
     7ce:	6c                   	ins    BYTE PTR es:[rdi],dx
     7cf:	6c                   	ins    BYTE PTR es:[rdi],dx
     7d0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     7d1:	63 5f 66             	movsxd ebx,DWORD PTR [rdi+0x66]
     7d4:	72 65                	jb     83b <MULTIBOOT_HEADER_SIZE+0x7e3>
     7d6:	65 5f                	gs pop rdi
     7d8:	6a 6f                	push   0x6f
     7da:	69 6e 5f 68 65 61 64 	imul   ebp,DWORD PTR [rsi+0x5f],0x64616568
     7e1:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
     7e4:	63 2f                	movsxd ebp,DWORD PTR [rdi]
     7e6:	74 65                	je     84d <MULTIBOOT_HEADER_SIZE+0x7f5>
     7e8:	73 74                	jae    85e <MULTIBOOT_HEADER_SIZE+0x806>
     7ea:	2f                   	(bad)  
     7eb:	6b 5f 73 61          	imul   ebx,DWORD PTR [rdi+0x73],0x61
     7ef:	6c                   	ins    BYTE PTR es:[rdi],dx
     7f0:	6c                   	ins    BYTE PTR es:[rdi],dx
     7f1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     7f2:	63 5f 74             	movsxd ebx,DWORD PTR [rdi+0x74]
     7f5:	65 73 74             	gs jae 86c <MULTIBOOT_HEADER_SIZE+0x814>
     7f8:	2e 63 00             	movsxd eax,DWORD PTR cs:[rax]
     7fb:	73 61                	jae    85e <MULTIBOOT_HEADER_SIZE+0x806>
     7fd:	6c                   	ins    BYTE PTR es:[rdi],dx
     7fe:	6c                   	ins    BYTE PTR es:[rdi],dx
     7ff:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     800:	63 5f 74             	movsxd ebx,DWORD PTR [rdi+0x74]
     803:	65 73 74             	gs jae 87a <MULTIBOOT_HEADER_SIZE+0x822>
     806:	00 73 61             	add    BYTE PTR [rbx+0x61],dh
     809:	6c                   	ins    BYTE PTR es:[rdi],dx
     80a:	6c                   	ins    BYTE PTR es:[rdi],dx
     80b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     80c:	63 5f 6d             	movsxd ebx,DWORD PTR [rdi+0x6d]
     80f:	75 6c                	jne    87d <MULTIBOOT_HEADER_SIZE+0x825>
     811:	74 69                	je     87c <MULTIBOOT_HEADER_SIZE+0x824>
     813:	70 6c                	jo     881 <MULTIBOOT_HEADER_SIZE+0x829>
     815:	65 5f                	gs pop rdi
     817:	66 72 65             	data16 jb 87f <MULTIBOOT_HEADER_SIZE+0x827>
     81a:	65 00 73 61          	add    BYTE PTR gs:[rbx+0x61],dh
     81e:	6c                   	ins    BYTE PTR es:[rdi],dx
     81f:	6c                   	ins    BYTE PTR es:[rdi],dx
     820:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     821:	63 5f 62             	movsxd ebx,DWORD PTR [rdi+0x62]
     824:	61                   	(bad)  
     825:	73 69                	jae    890 <MULTIBOOT_HEADER_SIZE+0x838>
     827:	63 5f 66             	movsxd ebx,DWORD PTR [rdi+0x66]
     82a:	72 65                	jb     891 <MULTIBOOT_HEADER_SIZE+0x839>
     82c:	65 00 73 61          	add    BYTE PTR gs:[rbx+0x61],dh
     830:	6c                   	ins    BYTE PTR es:[rdi],dx
     831:	6c                   	ins    BYTE PTR es:[rdi],dx
     832:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     833:	63 5f 66             	movsxd ebx,DWORD PTR [rdi+0x66]
     836:	75 6c                	jne    8a4 <MULTIBOOT_HEADER_SIZE+0x84c>
     838:	6c                   	ins    BYTE PTR es:[rdi],dx
     839:	5f                   	pop    rdi
     83a:	66 72 65             	data16 jb 8a2 <MULTIBOOT_HEADER_SIZE+0x84a>
     83d:	65 00 73 61          	add    BYTE PTR gs:[rbx+0x61],dh
     841:	6c                   	ins    BYTE PTR es:[rdi],dx
     842:	6c                   	ins    BYTE PTR es:[rdi],dx
     843:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     844:	63 5f 66             	movsxd ebx,DWORD PTR [rdi+0x66]
     847:	72 65                	jb     8ae <MULTIBOOT_HEADER_SIZE+0x856>
     849:	65 5f                	gs pop rdi
     84b:	6a 6f                	push   0x6f
     84d:	69 6e 5f 74 61 69 6c 	imul   ebp,DWORD PTR [rsi+0x5f],0x6c696174
     854:	00 62 6c             	add    BYTE PTR [rdx+0x6c],ah
     857:	6b 5f 66 72          	imul   ebx,DWORD PTR [rdi+0x66],0x72
     85b:	65 65 32 00          	gs xor al,BYTE PTR gs:[rax]
     85f:	73 61                	jae    8c2 <MULTIBOOT_HEADER_SIZE+0x86a>
     861:	6c                   	ins    BYTE PTR es:[rdi],dx
     862:	6c                   	ins    BYTE PTR es:[rdi],dx
     863:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     864:	63 5f 66             	movsxd ebx,DWORD PTR [rdi+0x66]
     867:	72 65                	jb     8ce <MULTIBOOT_HEADER_SIZE+0x876>
     869:	65 5f                	gs pop rdi
     86b:	6a 6f                	push   0x6f
     86d:	69 6e 5f 63 6f 6e 73 	imul   ebp,DWORD PTR [rsi+0x5f],0x736e6f63
     874:	65 63 75 74          	movsxd esi,DWORD PTR gs:[rbp+0x74]
     878:	69 76 65 00 62 75 66 	imul   esi,DWORD PTR [rsi+0x65],0x66756200
     87f:	66 65 72 00          	data16 gs jb 883 <MULTIBOOT_HEADER_SIZE+0x82b>
     883:	73 61                	jae    8e6 <MULTIBOOT_HEADER_SIZE+0x88e>
     885:	6c                   	ins    BYTE PTR es:[rdi],dx
     886:	6c                   	ins    BYTE PTR es:[rdi],dx
     887:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     888:	63 5f 69             	movsxd ebx,DWORD PTR [rdi+0x69]
     88b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     88c:	69 74 5f 74 65 73 74 	imul   esi,DWORD PTR [rdi+rbx*2+0x74],0x747365
     893:	00 
     894:	73 61                	jae    8f7 <MULTIBOOT_HEADER_SIZE+0x89f>
     896:	6c                   	ins    BYTE PTR es:[rdi],dx
     897:	6c                   	ins    BYTE PTR es:[rdi],dx
     898:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     899:	63 5f 62             	movsxd ebx,DWORD PTR [rdi+0x62]
     89c:	61                   	(bad)  
     89d:	73 69                	jae    908 <MULTIBOOT_HEADER_SIZE+0x8b0>
     89f:	63 5f 61             	movsxd ebx,DWORD PTR [rdi+0x61]
     8a2:	6c                   	ins    BYTE PTR es:[rdi],dx
     8a3:	6c                   	ins    BYTE PTR es:[rdi],dx
     8a4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     8a5:	63 00                	movsxd eax,DWORD PTR [rax]
     8a7:	73 61                	jae    90a <MULTIBOOT_HEADER_SIZE+0x8b2>
     8a9:	6c                   	ins    BYTE PTR es:[rdi],dx
     8aa:	6c                   	ins    BYTE PTR es:[rdi],dx
     8ab:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     8ac:	63 5f 66             	movsxd ebx,DWORD PTR [rdi+0x66]
     8af:	72 65                	jb     916 <MULTIBOOT_HEADER_SIZE+0x8be>
     8b1:	65 5f                	gs pop rdi
     8b3:	6a 6f                	push   0x6f
     8b5:	69 6e 5f 6d 69 64 00 	imul   ebp,DWORD PTR [rsi+0x5f],0x64696d
     8bc:	73 61                	jae    91f <MULTIBOOT_HEADER_SIZE+0x8c7>
     8be:	6c                   	ins    BYTE PTR es:[rdi],dx
     8bf:	6c                   	ins    BYTE PTR es:[rdi],dx
     8c0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     8c1:	63 5f 61             	movsxd ebx,DWORD PTR [rdi+0x61]
     8c4:	6c                   	ins    BYTE PTR es:[rdi],dx
     8c5:	6c                   	ins    BYTE PTR es:[rdi],dx
     8c6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     8c7:	63 5f 6e             	movsxd ebx,DWORD PTR [rdi+0x6e]
     8ca:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     8cb:	74 5f                	je     92c <MULTIBOOT_HEADER_SIZE+0x8d4>
     8cd:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     8cf:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     8d0:	75 67                	jne    939 <MULTIBOOT_HEADER_SIZE+0x8e1>
     8d2:	68 00 73 61 6c       	push   0x6c617300
     8d7:	6c                   	ins    BYTE PTR es:[rdi],dx
     8d8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     8d9:	63 5f 66             	movsxd ebx,DWORD PTR [rdi+0x66]
     8dc:	72 65                	jb     943 <MULTIBOOT_HEADER_SIZE+0x8eb>
     8de:	65 5f                	gs pop rdi
     8e0:	61                   	(bad)  
     8e1:	6c                   	ins    BYTE PTR es:[rdi],dx
     8e2:	6c                   	ins    BYTE PTR es:[rdi],dx
     8e3:	00 73 61             	add    BYTE PTR [rbx+0x61],dh
     8e6:	6c                   	ins    BYTE PTR es:[rdi],dx
     8e7:	6c                   	ins    BYTE PTR es:[rdi],dx
     8e8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     8e9:	63 5f 6d             	movsxd ebx,DWORD PTR [rdi+0x6d]
     8ec:	75 6c                	jne    95a <MULTIBOOT_HEADER_SIZE+0x902>
     8ee:	74 69                	je     959 <MULTIBOOT_HEADER_SIZE+0x901>
     8f0:	70 6c                	jo     95e <MULTIBOOT_HEADER_SIZE+0x906>
     8f2:	65 5f                	gs pop rdi
     8f4:	61                   	(bad)  
     8f5:	6c                   	ins    BYTE PTR es:[rdi],dx
     8f6:	6c                   	ins    BYTE PTR es:[rdi],dx
     8f7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     8f8:	63 00                	movsxd eax,DWORD PTR [rax]
     8fa:	70 74                	jo     970 <MULTIBOOT_HEADER_SIZE+0x918>
     8fc:	72 31                	jb     92f <MULTIBOOT_HEADER_SIZE+0x8d7>
     8fe:	00 70 74             	add    BYTE PTR [rax+0x74],dh
     901:	72 32                	jb     935 <MULTIBOOT_HEADER_SIZE+0x8dd>
     903:	00 73 61             	add    BYTE PTR [rbx+0x61],dh
     906:	6c                   	ins    BYTE PTR es:[rdi],dx
     907:	6c                   	ins    BYTE PTR es:[rdi],dx
     908:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     909:	63 5f 66             	movsxd ebx,DWORD PTR [rdi+0x66]
     90c:	75 6c                	jne    97a <MULTIBOOT_HEADER_SIZE+0x922>
     90e:	6c                   	ins    BYTE PTR es:[rdi],dx
     90f:	5f                   	pop    rdi
     910:	61                   	(bad)  
     911:	6c                   	ins    BYTE PTR es:[rdi],dx
     912:	6c                   	ins    BYTE PTR es:[rdi],dx
     913:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     914:	63 00                	movsxd eax,DWORD PTR [rax]
     916:	73 69                	jae    981 <MULTIBOOT_HEADER_SIZE+0x929>
     918:	7a 65                	jp     97f <MULTIBOOT_HEADER_SIZE+0x927>
     91a:	5f                   	pop    rdi
     91b:	74 65                	je     982 <MULTIBOOT_HEADER_SIZE+0x92a>
     91d:	73 74                	jae    993 <MULTIBOOT_HEADER_SIZE+0x93b>
     91f:	00 6d 79             	add    BYTE PTR [rbp+0x79],ch
     922:	5f                   	pop    rdi
     923:	6c                   	ins    BYTE PTR es:[rdi],dx
     924:	69 73 74 5f 6e 6f 64 	imul   esi,DWORD PTR [rbx+0x74],0x646f6e5f
     92b:	65 00 73 65          	add    BYTE PTR gs:[rbx+0x65],dh
     92f:	61                   	(bad)  
     930:	72 63                	jb     995 <MULTIBOOT_HEADER_SIZE+0x93d>
     932:	68 5f 74 65 73       	push   0x7365745f
     937:	74 00                	je     939 <MULTIBOOT_HEADER_SIZE+0x8e1>
     939:	69 6e 73 65 72 74 5f 	imul   ebp,DWORD PTR [rsi+0x73],0x5f747265
     940:	74 65                	je     9a7 <MULTIBOOT_HEADER_SIZE+0x94f>
     942:	73 74                	jae    9b8 <MULTIBOOT_HEADER_SIZE+0x960>
     944:	5f                   	pop    rdi
     945:	6d                   	ins    DWORD PTR es:[rdi],dx
     946:	69 64 64 6c 65 00 61 	imul   esp,DWORD PTR [rsp+riz*2+0x6c],0x73610065
     94d:	73 
     94e:	73 65                	jae    9b5 <MULTIBOOT_HEADER_SIZE+0x95d>
     950:	72 74                	jb     9c6 <MULTIBOOT_HEADER_SIZE+0x96e>
     952:	5f                   	pop    rdi
     953:	6c                   	ins    BYTE PTR es:[rdi],dx
     954:	69 73 74 00 72 65 6d 	imul   esi,DWORD PTR [rbx+0x74],0x6d657200
     95b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     95c:	76 65                	jbe    9c3 <MULTIBOOT_HEADER_SIZE+0x96b>
     95e:	5f                   	pop    rdi
     95f:	74 65                	je     9c6 <MULTIBOOT_HEADER_SIZE+0x96e>
     961:	73 74                	jae    9d7 <MULTIBOOT_HEADER_SIZE+0x97f>
     963:	5f                   	pop    rdi
     964:	6d                   	ins    DWORD PTR es:[rdi],dx
     965:	69 64 64 6c 65 00 69 	imul   esp,DWORD PTR [rsp+riz*2+0x6c],0x6e690065
     96c:	6e 
     96d:	73 65                	jae    9d4 <MULTIBOOT_HEADER_SIZE+0x97c>
     96f:	72 74                	jb     9e5 <MULTIBOOT_HEADER_SIZE+0x98d>
     971:	5f                   	pop    rdi
     972:	74 65                	je     9d9 <MULTIBOOT_HEADER_SIZE+0x981>
     974:	73 74                	jae    9ea <MULTIBOOT_HEADER_SIZE+0x992>
     976:	5f                   	pop    rdi
     977:	62                   	(bad)  {k1}
     978:	65 67 69 6e 6e 69 6e 	imul   ebp,DWORD PTR gs:[esi+0x6e],0x676e69
     97f:	67 00 
     981:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     983:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     984:	64 65 00 72 65       	fs add BYTE PTR gs:[rdx+0x65],dh
     989:	6d                   	ins    DWORD PTR es:[rdi],dx
     98a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     98b:	76 65                	jbe    9f2 <MULTIBOOT_HEADER_SIZE+0x99a>
     98d:	5f                   	pop    rdi
     98e:	74 65                	je     9f5 <MULTIBOOT_HEADER_SIZE+0x99d>
     990:	73 74                	jae    a06 <MULTIBOOT_HEADER_SIZE+0x9ae>
     992:	5f                   	pop    rdi
     993:	61                   	(bad)  
     994:	6c                   	ins    BYTE PTR es:[rdi],dx
     995:	6c                   	ins    BYTE PTR es:[rdi],dx
     996:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
     999:	63 2f                	movsxd ebp,DWORD PTR [rdi]
     99b:	74 65                	je     a02 <MULTIBOOT_HEADER_SIZE+0x9aa>
     99d:	73 74                	jae    a13 <MULTIBOOT_HEADER_SIZE+0x9bb>
     99f:	2f                   	(bad)  
     9a0:	6b 5f 6c 69          	imul   ebx,DWORD PTR [rdi+0x6c],0x69
     9a4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     9a5:	6b 65 64 5f          	imul   esp,DWORD PTR [rbp+0x64],0x5f
     9a9:	6c                   	ins    BYTE PTR es:[rdi],dx
     9aa:	69 73 74 5f 74 65 73 	imul   esi,DWORD PTR [rbx+0x74],0x7365745f
     9b1:	74 2e                	je     9e1 <MULTIBOOT_HEADER_SIZE+0x989>
     9b3:	63 00                	movsxd eax,DWORD PTR [rax]
     9b5:	70 75                	jo     a2c <MULTIBOOT_HEADER_SIZE+0x9d4>
     9b7:	73 68                	jae    a21 <MULTIBOOT_HEADER_SIZE+0x9c9>
     9b9:	5f                   	pop    rdi
     9ba:	66 72 6f             	data16 jb a2c <MULTIBOOT_HEADER_SIZE+0x9d4>
     9bd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     9be:	74 5f                	je     a1f <MULTIBOOT_HEADER_SIZE+0x9c7>
     9c0:	76 61                	jbe    a23 <MULTIBOOT_HEADER_SIZE+0x9cb>
     9c2:	6c                   	ins    BYTE PTR es:[rdi],dx
     9c3:	00 72 65             	add    BYTE PTR [rdx+0x65],dh
     9c6:	6d                   	ins    DWORD PTR es:[rdi],dx
     9c7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     9c8:	76 65                	jbe    a2f <MULTIBOOT_HEADER_SIZE+0x9d7>
     9ca:	5f                   	pop    rdi
     9cb:	74 65                	je     a32 <MULTIBOOT_HEADER_SIZE+0x9da>
     9cd:	73 74                	jae    a43 <MULTIBOOT_HEADER_SIZE+0x9eb>
     9cf:	5f                   	pop    rdi
     9d0:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     9d2:	64 00 69 6e          	add    BYTE PTR fs:[rcx+0x6e],ch
     9d6:	73 65                	jae    a3d <MULTIBOOT_HEADER_SIZE+0x9e5>
     9d8:	72 74                	jb     a4e <MULTIBOOT_HEADER_SIZE+0x9f6>
     9da:	5f                   	pop    rdi
     9db:	74 65                	je     a42 <MULTIBOOT_HEADER_SIZE+0x9ea>
     9dd:	73 74                	jae    a53 <MULTIBOOT_HEADER_SIZE+0x9fb>
     9df:	5f                   	pop    rdi
     9e0:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     9e2:	64 00 69 6e          	add    BYTE PTR fs:[rcx+0x6e],ch
     9e6:	73 65                	jae    a4d <MULTIBOOT_HEADER_SIZE+0x9f5>
     9e8:	72 74                	jb     a5e <MULTIBOOT_HEADER_SIZE+0xa06>
     9ea:	5f                   	pop    rdi
     9eb:	74 65                	je     a52 <MULTIBOOT_HEADER_SIZE+0x9fa>
     9ed:	73 74                	jae    a63 <MULTIBOOT_HEADER_SIZE+0xa0b>
     9ef:	5f                   	pop    rdi
     9f0:	69 6e 76 61 6c 69 64 	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
     9f7:	00 6c 69 6e          	add    BYTE PTR [rcx+rbp*2+0x6e],ch
     9fb:	6b 65 64 5f          	imul   esp,DWORD PTR [rbp+0x64],0x5f
     9ff:	6c                   	ins    BYTE PTR es:[rdi],dx
     a00:	69 73 74 5f 74 65 73 	imul   esi,DWORD PTR [rbx+0x74],0x7365745f
     a07:	74 00                	je     a09 <MULTIBOOT_HEADER_SIZE+0x9b1>
     a09:	70 75                	jo     a80 <MULTIBOOT_HEADER_SIZE+0xa28>
     a0b:	73 68                	jae    a75 <MULTIBOOT_HEADER_SIZE+0xa1d>
     a0d:	5f                   	pop    rdi
     a0e:	62 61                	(bad)  {k1}
     a10:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
     a13:	76 61                	jbe    a76 <MULTIBOOT_HEADER_SIZE+0xa1e>
     a15:	6c                   	ins    BYTE PTR es:[rdi],dx
     a16:	00 76 61             	add    BYTE PTR [rsi+0x61],dh
     a19:	6c                   	ins    BYTE PTR es:[rdi],dx
     a1a:	31 00                	xor    DWORD PTR [rax],eax
     a1c:	76 61                	jbe    a7f <MULTIBOOT_HEADER_SIZE+0xa27>
     a1e:	6c                   	ins    BYTE PTR es:[rdi],dx
     a1f:	32 00                	xor    al,BYTE PTR [rax]
     a21:	70 75                	jo     a98 <MULTIBOOT_HEADER_SIZE+0xa40>
     a23:	73 68                	jae    a8d <MULTIBOOT_HEADER_SIZE+0xa35>
     a25:	5f                   	pop    rdi
     a26:	70 6f                	jo     a97 <MULTIBOOT_HEADER_SIZE+0xa3f>
     a28:	70 5f                	jo     a89 <MULTIBOOT_HEADER_SIZE+0xa31>
     a2a:	62 61                	(bad)  {k1}
     a2c:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
     a2f:	74 65                	je     a96 <MULTIBOOT_HEADER_SIZE+0xa3e>
     a31:	73 74                	jae    aa7 <MULTIBOOT_HEADER_SIZE+0xa4f>
     a33:	00 76 61             	add    BYTE PTR [rsi+0x61],dh
     a36:	6c                   	ins    BYTE PTR es:[rdi],dx
     a37:	69 64 61 74 65 5f 6c 	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x696c5f65
     a3e:	69 
     a3f:	73 74                	jae    ab5 <MULTIBOOT_HEADER_SIZE+0xa5d>
     a41:	00 6c 6e 6f          	add    BYTE PTR [rsi+rbp*2+0x6f],ch
     a45:	64 65 00 72 65       	fs add BYTE PTR gs:[rdx+0x65],dh
     a4a:	6d                   	ins    DWORD PTR es:[rdi],dx
     a4b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     a4c:	76 65                	jbe    ab3 <MULTIBOOT_HEADER_SIZE+0xa5b>
     a4e:	5f                   	pop    rdi
     a4f:	74 65                	je     ab6 <MULTIBOOT_HEADER_SIZE+0xa5e>
     a51:	73 74                	jae    ac7 <MULTIBOOT_HEADER_SIZE+0xa6f>
     a53:	5f                   	pop    rdi
     a54:	62                   	(bad)  {k1}
     a55:	65 67 69 6e 6e 69 6e 	imul   ebp,DWORD PTR gs:[esi+0x6e],0x676e69
     a5c:	67 00 
     a5e:	72 65                	jb     ac5 <MULTIBOOT_HEADER_SIZE+0xa6d>
     a60:	6d                   	ins    DWORD PTR es:[rdi],dx
     a61:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     a62:	76 65                	jbe    ac9 <MULTIBOOT_HEADER_SIZE+0xa71>
     a64:	5f                   	pop    rdi
     a65:	74 65                	je     acc <MULTIBOOT_HEADER_SIZE+0xa74>
     a67:	73 74                	jae    add <MULTIBOOT_HEADER_SIZE+0xa85>
     a69:	5f                   	pop    rdi
     a6a:	69 6e 76 61 6c 69 64 	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
     a71:	00 70 75             	add    BYTE PTR [rax+0x75],dh
     a74:	73 68                	jae    ade <MULTIBOOT_HEADER_SIZE+0xa86>
     a76:	5f                   	pop    rdi
     a77:	70 6f                	jo     ae8 <MULTIBOOT_HEADER_SIZE+0xa90>
     a79:	70 5f                	jo     ada <MULTIBOOT_HEADER_SIZE+0xa82>
     a7b:	66 72 6f             	data16 jb aed <MULTIBOOT_HEADER_SIZE+0xa95>
     a7e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     a7f:	74 5f                	je     ae0 <MULTIBOOT_HEADER_SIZE+0xa88>
     a81:	74 65                	je     ae8 <MULTIBOOT_HEADER_SIZE+0xa90>
     a83:	73 74                	jae    af9 <MULTIBOOT_HEADER_SIZE+0xaa1>
     a85:	00 69 6e             	add    BYTE PTR [rcx+0x6e],ch
     a88:	73 65                	jae    aef <MULTIBOOT_HEADER_SIZE+0xa97>
     a8a:	72 74                	jb     b00 <MULTIBOOT_HEADER_SIZE+0xaa8>
     a8c:	5f                   	pop    rdi
     a8d:	76 61                	jbe    af0 <MULTIBOOT_HEADER_SIZE+0xa98>
     a8f:	6c                   	ins    BYTE PTR es:[rdi],dx
     a90:	00 6c 69 73          	add    BYTE PTR [rcx+rbp*2+0x73],ch
     a94:	74 32                	je     ac8 <MULTIBOOT_HEADER_SIZE+0xa70>
     a96:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
     a99:	63 2f                	movsxd ebp,DWORD PTR [rdi]
     a9b:	74 65                	je     b02 <MULTIBOOT_HEADER_SIZE+0xaaa>
     a9d:	73 74                	jae    b13 <MULTIBOOT_HEADER_SIZE+0xabb>
     a9f:	2f                   	(bad)  
     aa0:	6b 5f 61 76          	imul   ebx,DWORD PTR [rdi+0x61],0x76
     aa4:	6c                   	ins    BYTE PTR es:[rdi],dx
     aa5:	5f                   	pop    rdi
     aa6:	74 72                	je     b1a <MULTIBOOT_HEADER_SIZE+0xac2>
     aa8:	65 65 5f             	gs gs pop rdi
     aab:	74 65                	je     b12 <MULTIBOOT_HEADER_SIZE+0xaba>
     aad:	73 74                	jae    b23 <MULTIBOOT_HEADER_SIZE+0xacb>
     aaf:	2e 63 00             	movsxd eax,DWORD PTR cs:[rax]
     ab2:	64 65 6c             	fs gs ins BYTE PTR es:[rdi],dx
     ab5:	65 74 65             	gs je  b1d <MULTIBOOT_HEADER_SIZE+0xac5>
     ab8:	64 00 64 65 6c       	add    BYTE PTR fs:[rbp+riz*2+0x6c],ah
     abd:	65 74 65             	gs je  b25 <MULTIBOOT_HEADER_SIZE+0xacd>
     ac0:	5f                   	pop    rdi
     ac1:	73 69                	jae    b2c <MULTIBOOT_HEADER_SIZE+0xad4>
     ac3:	6d                   	ins    DWORD PTR es:[rdi],dx
     ac4:	70 6c                	jo     b32 <MULTIBOOT_HEADER_SIZE+0xada>
     ac6:	65 5f                	gs pop rdi
     ac8:	72 72                	jb     b3c <MULTIBOOT_HEADER_SIZE+0xae4>
     aca:	00 64 65 6c          	add    BYTE PTR [rbp+riz*2+0x6c],ah
     ace:	65 74 65             	gs je  b36 <MULTIBOOT_HEADER_SIZE+0xade>
     ad1:	32 34 00             	xor    dh,BYTE PTR [rax+rax*1]
     ad4:	69 6e 73 65 72 74 5f 	imul   ebp,DWORD PTR [rsi+0x73],0x5f747265
     adb:	64 75 70             	fs jne b4e <MULTIBOOT_HEADER_SIZE+0xaf6>
     ade:	6c                   	ins    BYTE PTR es:[rdi],dx
     adf:	69 63 61 74 65 00 64 	imul   esp,DWORD PTR [rbx+0x61],0x64006574
     ae6:	65 6c                	gs ins BYTE PTR es:[rdi],dx
     ae8:	65 74 65             	gs je  b50 <MULTIBOOT_HEADER_SIZE+0xaf8>
     aeb:	31 30                	xor    DWORD PTR [rax],esi
     aed:	00 74 72 65          	add    BYTE PTR [rdx+rsi*2+0x65],dh
     af1:	65 5f                	gs pop rdi
     af3:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     af5:	74 72                	je     b69 <MULTIBOOT_HEADER_SIZE+0xb11>
     af7:	79 00                	jns    af9 <MULTIBOOT_HEADER_SIZE+0xaa1>
     af9:	64 65 6c             	fs gs ins BYTE PTR es:[rdi],dx
     afc:	65 74 65             	gs je  b64 <MULTIBOOT_HEADER_SIZE+0xb0c>
     aff:	5f                   	pop    rdi
     b00:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
     b03:	70 6c                	jo     b71 <MULTIBOOT_HEADER_SIZE+0xb19>
     b05:	65 78 5f             	gs js  b67 <MULTIBOOT_HEADER_SIZE+0xb0f>
     b08:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
     b0a:	75 62                	jne    b6e <MULTIBOOT_HEADER_SIZE+0xb16>
     b0c:	6c                   	ins    BYTE PTR es:[rdi],dx
     b0d:	65 5f                	gs pop rdi
     b0f:	72 6f                	jb     b80 <MULTIBOOT_HEADER_SIZE+0xb28>
     b11:	74 61                	je     b74 <MULTIBOOT_HEADER_SIZE+0xb1c>
     b13:	74 69                	je     b7e <MULTIBOOT_HEADER_SIZE+0xb26>
     b15:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     b16:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     b17:	00 64 65 6c          	add    BYTE PTR [rbp+riz*2+0x6c],ah
     b1b:	65 74 65             	gs je  b83 <MULTIBOOT_HEADER_SIZE+0xb2b>
     b1e:	5f                   	pop    rdi
     b1f:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
     b22:	70 6c                	jo     b90 <MULTIBOOT_HEADER_SIZE+0xb38>
     b24:	65 78 5f             	gs js  b86 <MULTIBOOT_HEADER_SIZE+0xb2e>
     b27:	73 69                	jae    b92 <MULTIBOOT_HEADER_SIZE+0xb3a>
     b29:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     b2a:	67 6c                	ins    BYTE PTR es:[edi],dx
     b2c:	65 5f                	gs pop rdi
     b2e:	72 6f                	jb     b9f <MULTIBOOT_HEADER_SIZE+0xb47>
     b30:	74 61                	je     b93 <MULTIBOOT_HEADER_SIZE+0xb3b>
     b32:	74 69                	je     b9d <MULTIBOOT_HEADER_SIZE+0xb45>
     b34:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     b35:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     b36:	00 64 65 6c          	add    BYTE PTR [rbp+riz*2+0x6c],ah
     b3a:	65 74 65             	gs je  ba2 <MULTIBOOT_HEADER_SIZE+0xb4a>
     b3d:	5f                   	pop    rdi
     b3e:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
     b41:	70 6c                	jo     baf <MULTIBOOT_HEADER_SIZE+0xb57>
     b43:	65 78 5f             	gs js  ba5 <MULTIBOOT_HEADER_SIZE+0xb4d>
     b46:	6d                   	ins    DWORD PTR es:[rdi],dx
     b47:	75 6c                	jne    bb5 <MULTIBOOT_HEADER_SIZE+0xb5d>
     b49:	74 69                	je     bb4 <MULTIBOOT_HEADER_SIZE+0xb5c>
     b4b:	70 6c                	jo     bb9 <MULTIBOOT_HEADER_SIZE+0xb61>
     b4d:	65 5f                	gs pop rdi
     b4f:	72 6f                	jb     bc0 <MULTIBOOT_HEADER_SIZE+0xb68>
     b51:	74 61                	je     bb4 <MULTIBOOT_HEADER_SIZE+0xb5c>
     b53:	74 69                	je     bbe <MULTIBOOT_HEADER_SIZE+0xb66>
     b55:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     b56:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     b57:	00 64 65 6c          	add    BYTE PTR [rbp+riz*2+0x6c],ah
     b5b:	65 74 65             	gs je  bc3 <MULTIBOOT_HEADER_SIZE+0xb6b>
     b5e:	5f                   	pop    rdi
     b5f:	73 69                	jae    bca <MULTIBOOT_HEADER_SIZE+0xb72>
     b61:	6d                   	ins    DWORD PTR es:[rdi],dx
     b62:	70 6c                	jo     bd0 <MULTIBOOT_HEADER_SIZE+0xb78>
     b64:	65 5f                	gs pop rdi
     b66:	6c                   	ins    BYTE PTR es:[rdi],dx
     b67:	00 64 65 6c          	add    BYTE PTR [rbp+riz*2+0x6c],ah
     b6b:	65 74 65             	gs je  bd3 <MULTIBOOT_HEADER_SIZE+0xb7b>
     b6e:	5f                   	pop    rdi
     b6f:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
     b72:	70 6c                	jo     be0 <MULTIBOOT_HEADER_SIZE+0xb88>
     b74:	65 78 5f             	gs js  bd6 <MULTIBOOT_HEADER_SIZE+0xb7e>
     b77:	31 00                	xor    DWORD PTR [rax],eax
     b79:	64 65 6c             	fs gs ins BYTE PTR es:[rdi],dx
     b7c:	65 74 65             	gs je  be4 <MULTIBOOT_HEADER_SIZE+0xb8c>
     b7f:	5f                   	pop    rdi
     b80:	73 69                	jae    beb <MULTIBOOT_HEADER_SIZE+0xb93>
     b82:	6d                   	ins    DWORD PTR es:[rdi],dx
     b83:	70 6c                	jo     bf1 <MULTIBOOT_HEADER_SIZE+0xb99>
     b85:	65 5f                	gs pop rdi
     b87:	72 00                	jb     b89 <MULTIBOOT_HEADER_SIZE+0xb31>
     b89:	64 65 6c             	fs gs ins BYTE PTR es:[rdi],dx
     b8c:	65 74 65             	gs je  bf4 <MULTIBOOT_HEADER_SIZE+0xb9c>
     b8f:	5f                   	pop    rdi
     b90:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
     b93:	70 6c                	jo     c01 <MULTIBOOT_HEADER_SIZE+0xba9>
     b95:	65 78 5f             	gs js  bf7 <MULTIBOOT_HEADER_SIZE+0xb9f>
     b98:	34 00                	xor    al,0x0
     b9a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     b9b:	72 64                	jb     c01 <MULTIBOOT_HEADER_SIZE+0xba9>
     b9d:	65 72 00             	gs jb  ba0 <MULTIBOOT_HEADER_SIZE+0xb48>
     ba0:	69 6e 74 5f 74 72 65 	imul   ebp,DWORD PTR [rsi+0x74],0x6572745f
     ba7:	65 5f                	gs pop rdi
     ba9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     baa:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     bab:	64 65 00 6d 79       	fs add BYTE PTR gs:[rbp+0x79],ch
     bb0:	5f                   	pop    rdi
     bb1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     bb2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     bb3:	64 65 00 64 65 6c    	fs add BYTE PTR gs:[rbp+riz*2+0x6c],ah
     bb9:	65 74 65             	gs je  c21 <MULTIBOOT_HEADER_SIZE+0xbc9>
     bbc:	5f                   	pop    rdi
     bbd:	44                   	rex.R
     bbe:	4e                   	rex.WRX
     bbf:	45 00 69 6e          	add    BYTE PTR [r9+0x6e],r13b
     bc3:	73 65                	jae    c2a <MULTIBOOT_HEADER_SIZE+0xbd2>
     bc5:	72 74                	jb     c3b <MULTIBOOT_HEADER_SIZE+0xbe3>
     bc7:	5f                   	pop    rdi
     bc8:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
     bcb:	70 6c                	jo     c39 <MULTIBOOT_HEADER_SIZE+0xbe1>
     bcd:	65 78 5f             	gs js  c2f <MULTIBOOT_HEADER_SIZE+0xbd7>
     bd0:	31 00                	xor    DWORD PTR [rax],eax
     bd2:	69 6e 73 65 72 74 5f 	imul   ebp,DWORD PTR [rsi+0x73],0x5f747265
     bd9:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
     bdc:	70 6c                	jo     c4a <MULTIBOOT_HEADER_SIZE+0xbf2>
     bde:	65 78 5f             	gs js  c40 <MULTIBOOT_HEADER_SIZE+0xbe8>
     be1:	32 00                	xor    al,BYTE PTR [rax]
     be3:	69 6e 73 65 72 74 5f 	imul   ebp,DWORD PTR [rsi+0x73],0x5f747265
     bea:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
     bed:	70 6c                	jo     c5b <MULTIBOOT_HEADER_SIZE+0xc03>
     bef:	65 78 5f             	gs js  c51 <MULTIBOOT_HEADER_SIZE+0xbf9>
     bf2:	33 00                	xor    eax,DWORD PTR [rax]
     bf4:	69 6e 73 65 72 74 5f 	imul   ebp,DWORD PTR [rsi+0x73],0x5f747265
     bfb:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
     bfe:	70 6c                	jo     c6c <MULTIBOOT_HEADER_SIZE+0xc14>
     c00:	65 78 5f             	gs js  c62 <MULTIBOOT_HEADER_SIZE+0xc0a>
     c03:	34 00                	xor    al,0x0
     c05:	63 6f 75             	movsxd ebp,DWORD PTR [rdi+0x75]
     c08:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     c09:	74 65                	je     c70 <MULTIBOOT_HEADER_SIZE+0xc18>
     c0b:	72 00                	jb     c0d <MULTIBOOT_HEADER_SIZE+0xbb5>
     c0d:	64 65 6c             	fs gs ins BYTE PTR es:[rdi],dx
     c10:	65 74 65             	gs je  c78 <MULTIBOOT_HEADER_SIZE+0xc20>
     c13:	31 30                	xor    DWORD PTR [rax],esi
     c15:	30 00                	xor    BYTE PTR [rax],al
     c17:	69 6e 73 65 72 74 5f 	imul   ebp,DWORD PTR [rsi+0x73],0x5f747265
     c1e:	73 69                	jae    c89 <MULTIBOOT_HEADER_SIZE+0xc31>
     c20:	6d                   	ins    DWORD PTR es:[rdi],dx
     c21:	70 6c                	jo     c8f <MULTIBOOT_HEADER_SIZE+0xc37>
     c23:	65 5f                	gs pop rdi
     c25:	6c                   	ins    BYTE PTR es:[rdi],dx
     c26:	6c                   	ins    BYTE PTR es:[rdi],dx
     c27:	00 5f 70             	add    BYTE PTR [rdi+0x70],bl
     c2a:	72 65                	jb     c91 <MULTIBOOT_HEADER_SIZE+0xc39>
     c2c:	5f                   	pop    rdi
     c2d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     c2e:	72 64                	jb     c94 <MULTIBOOT_HEADER_SIZE+0xc3c>
     c30:	65 72 5f             	gs jb  c92 <MULTIBOOT_HEADER_SIZE+0xc3a>
     c33:	61                   	(bad)  
     c34:	73 73                	jae    ca9 <MULTIBOOT_HEADER_SIZE+0xc51>
     c36:	65 72 74             	gs jb  cad <MULTIBOOT_HEADER_SIZE+0xc55>
     c39:	00 64 65 6c          	add    BYTE PTR [rbp+riz*2+0x6c],ah
     c3d:	65 74 65             	gs je  ca5 <MULTIBOOT_HEADER_SIZE+0xc4d>
     c40:	31 35 00 63 72 65    	xor    DWORD PTR [rip+0x65726300],esi        # 65726f46 <MULTIBOOT_LOADED_MAGIC+0x2e9b0cbd>
     c46:	61                   	(bad)  
     c47:	74 65                	je     cae <MULTIBOOT_HEADER_SIZE+0xc56>
     c49:	5f                   	pop    rdi
     c4a:	74 72                	je     cbe <MULTIBOOT_HEADER_SIZE+0xc66>
     c4c:	65 65 5f             	gs gs pop rdi
     c4f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     c50:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     c51:	64 65 00 74 65 73    	fs add BYTE PTR gs:[rbp+riz*2+0x73],dh
     c57:	74 5f                	je     cb8 <MULTIBOOT_HEADER_SIZE+0xc60>
     c59:	61                   	(bad)  
     c5a:	70 6f                	jo     ccb <MULTIBOOT_HEADER_SIZE+0xc73>
     c5c:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
     c5f:	79 70                	jns    cd1 <MULTIBOOT_HEADER_SIZE+0xc79>
     c61:	73 65                	jae    cc8 <MULTIBOOT_HEADER_SIZE+0xc70>
     c63:	00 64 65 6c          	add    BYTE PTR [rbp+riz*2+0x6c],ah
     c67:	65 74 65             	gs je  ccf <MULTIBOOT_HEADER_SIZE+0xc77>
     c6a:	5f                   	pop    rdi
     c6b:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
     c6e:	70 6c                	jo     cdc <MULTIBOOT_HEADER_SIZE+0xc84>
     c70:	65 78 5f             	gs js  cd2 <MULTIBOOT_HEADER_SIZE+0xc7a>
     c73:	33 00                	xor    eax,DWORD PTR [rax]
     c75:	69 6e 73 65 72 74 5f 	imul   ebp,DWORD PTR [rsi+0x73],0x5f747265
     c7c:	73 69                	jae    ce7 <MULTIBOOT_HEADER_SIZE+0xc8f>
     c7e:	6d                   	ins    DWORD PTR es:[rdi],dx
     c7f:	70 6c                	jo     ced <MULTIBOOT_HEADER_SIZE+0xc95>
     c81:	65 5f                	gs pop rdi
     c83:	72 72                	jb     cf7 <MULTIBOOT_HEADER_SIZE+0xc9f>
     c85:	00 64 65 6c          	add    BYTE PTR [rbp+riz*2+0x6c],ah
     c89:	65 74 65             	gs je  cf1 <MULTIBOOT_HEADER_SIZE+0xc99>
     c8c:	33 30                	xor    esi,DWORD PTR [rax]
     c8e:	00 64 65 6c          	add    BYTE PTR [rbp+riz*2+0x6c],ah
     c92:	65 74 65             	gs je  cfa <MULTIBOOT_HEADER_SIZE+0xca2>
     c95:	32 35 00 69 6e 73    	xor    dh,BYTE PTR [rip+0x736e6900]        # 736e759b <MULTIBOOT_LOADED_MAGIC+0x3c971312>
     c9b:	65 72 74             	gs jb  d12 <MULTIBOOT_HEADER_SIZE+0xcba>
     c9e:	5f                   	pop    rdi
     c9f:	73 69                	jae    d0a <MULTIBOOT_HEADER_SIZE+0xcb2>
     ca1:	6d                   	ins    DWORD PTR es:[rdi],dx
     ca2:	70 6c                	jo     d10 <MULTIBOOT_HEADER_SIZE+0xcb8>
     ca4:	65 5f                	gs pop rdi
     ca6:	6c                   	ins    BYTE PTR es:[rdi],dx
     ca7:	00 69 6e             	add    BYTE PTR [rcx+0x6e],ch
     caa:	73 65                	jae    d11 <MULTIBOOT_HEADER_SIZE+0xcb9>
     cac:	72 74                	jb     d22 <MULTIBOOT_HEADER_SIZE+0xcca>
     cae:	5f                   	pop    rdi
     caf:	73 69                	jae    d1a <MULTIBOOT_HEADER_SIZE+0xcc2>
     cb1:	6d                   	ins    DWORD PTR es:[rdi],dx
     cb2:	70 6c                	jo     d20 <MULTIBOOT_HEADER_SIZE+0xcc8>
     cb4:	65 5f                	gs pop rdi
     cb6:	72 00                	jb     cb8 <MULTIBOOT_HEADER_SIZE+0xc60>
     cb8:	64 65 6c             	fs gs ins BYTE PTR es:[rdi],dx
     cbb:	65 74 65             	gs je  d23 <MULTIBOOT_HEADER_SIZE+0xccb>
     cbe:	5f                   	pop    rdi
     cbf:	73 69                	jae    d2a <MULTIBOOT_HEADER_SIZE+0xcd2>
     cc1:	6d                   	ins    DWORD PTR es:[rdi],dx
     cc2:	70 6c                	jo     d30 <MULTIBOOT_HEADER_SIZE+0xcd8>
     cc4:	65 5f                	gs pop rdi
     cc6:	6c                   	ins    BYTE PTR es:[rdi],dx
     cc7:	6c                   	ins    BYTE PTR es:[rdi],dx
     cc8:	00 72 6f             	add    BYTE PTR [rdx+0x6f],dh
     ccb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     ccc:	74 69                	je     d37 <MULTIBOOT_HEADER_SIZE+0xcdf>
     cce:	00 6e 6f             	add    BYTE PTR [rsi+0x6f],ch
     cd1:	64 65 69 00 61 76 6c 	fs imul eax,DWORD PTR gs:[rax],0x5f6c7661
     cd8:	5f 
     cd9:	74 72                	je     d4d <MULTIBOOT_HEADER_SIZE+0xcf5>
     cdb:	65 65 5f             	gs gs pop rdi
     cde:	74 65                	je     d45 <MULTIBOOT_HEADER_SIZE+0xced>
     ce0:	73 74                	jae    d56 <MULTIBOOT_HEADER_SIZE+0xcfe>
     ce2:	00 64 65 6c          	add    BYTE PTR [rbp+riz*2+0x6c],ah
     ce6:	65 74 65             	gs je  d4e <MULTIBOOT_HEADER_SIZE+0xcf6>
     ce9:	35 00 64 65 6c       	xor    eax,0x6c656400
     cee:	65 74 65             	gs je  d56 <MULTIBOOT_HEADER_SIZE+0xcfe>
     cf1:	5f                   	pop    rdi
     cf2:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
     cf5:	70 6c                	jo     d63 <MULTIBOOT_HEADER_SIZE+0xd0b>
     cf7:	65 78 5f             	gs js  d59 <MULTIBOOT_HEADER_SIZE+0xd01>
     cfa:	32 00                	xor    al,BYTE PTR [rax]
     cfc:	73 75                	jae    d73 <MULTIBOOT_HEADER_SIZE+0xd1b>
     cfe:	63 63 65             	movsxd esp,DWORD PTR [rbx+0x65]
     d01:	73 73                	jae    d76 <MULTIBOOT_HEADER_SIZE+0xd1e>
     d03:	00 74 65 73          	add    BYTE PTR [rbp+riz*2+0x73],dh
     d07:	74 5f                	je     d68 <MULTIBOOT_HEADER_SIZE+0xd10>
     d09:	77 61                	ja     d6c <MULTIBOOT_HEADER_SIZE+0xd14>
     d0b:	72 6e                	jb     d7b <MULTIBOOT_HEADER_SIZE+0xd23>
     d0d:	69 6e 67 00 63 61 73 	imul   ebp,DWORD PTR [rsi+0x67],0x73616300
     d14:	65 5f                	gs pop rdi
     d16:	69 6e 66 6f 00 67 69 	imul   ebp,DWORD PTR [rsi+0x66],0x6967006f
     d1d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     d1e:	66 6f                	outs   dx,WORD PTR ds:[rsi]
     d20:	5f                   	pop    rdi
     d21:	70 75                	jo     d98 <MULTIBOOT_HEADER_SIZE+0xd40>
     d23:	73 68                	jae    d8d <MULTIBOOT_HEADER_SIZE+0xd35>
     d25:	00 75 73             	add    BYTE PTR [rbp+0x73],dh
     d28:	65 64 00 67 69       	gs add BYTE PTR fs:[rdi+0x69],ah
     d2d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     d2e:	66 6f                	outs   dx,WORD PTR ds:[rsi]
     d30:	00 74 61 6c          	add    BYTE PTR [rcx+riz*2+0x6c],dh
     d34:	6c                   	ins    BYTE PTR es:[rdi],dx
     d35:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     d36:	63 00                	movsxd eax,DWORD PTR [rax]
     d38:	67 61                	addr32 (bad) 
     d3a:	74 5f                	je     d9b <MULTIBOOT_HEADER_SIZE+0xd43>
     d3c:	70 75                	jo     db3 <MULTIBOOT_HEADER_SIZE+0xd5b>
     d3e:	73 68                	jae    da8 <MULTIBOOT_HEADER_SIZE+0xd50>
     d40:	00 74 65 73          	add    BYTE PTR [rbp+riz*2+0x73],dh
     d44:	74 5f                	je     da5 <MULTIBOOT_HEADER_SIZE+0xd4d>
     d46:	62                   	(bad)  {k1}
     d47:	65 67 69 6e 00 74 65 	imul   ebp,DWORD PTR gs:[esi+0x0],0x74736574
     d4e:	73 74 
     d50:	5f                   	pop    rdi
     d51:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     d52:	61                   	(bad)  
     d53:	6d                   	ins    DWORD PTR es:[rdi],dx
     d54:	65 00 72 5f          	add    BYTE PTR gs:[rdx+0x5f],dh
     d58:	63 61 73             	movsxd esp,DWORD PTR [rcx+0x73]
     d5b:	65 5f                	gs pop rdi
     d5d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     d5e:	61                   	(bad)  
     d5f:	6d                   	ins    DWORD PTR es:[rdi],dx
     d60:	65 00 67 61          	add    BYTE PTR gs:[rdi+0x61],ah
     d64:	74 5f                	je     dc5 <MULTIBOOT_HEADER_SIZE+0xd6d>
     d66:	66 75 6c             	data16 jne dd5 <MULTIBOOT_HEADER_SIZE+0xd7d>
     d69:	6c                   	ins    BYTE PTR es:[rdi],dx
     d6a:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
     d6d:	63 2f                	movsxd ebp,DWORD PTR [rdi]
     d6f:	74 65                	je     dd6 <MULTIBOOT_HEADER_SIZE+0xd7e>
     d71:	73 74                	jae    de7 <MULTIBOOT_HEADER_SIZE+0xd8f>
     d73:	2f                   	(bad)  
     d74:	6b 5f 74 65          	imul   ebx,DWORD PTR [rdi+0x74],0x65
     d78:	73 74                	jae    dee <MULTIBOOT_HEADER_SIZE+0xd96>
     d7a:	5f                   	pop    rdi
     d7b:	64 72 69             	fs jb  de7 <MULTIBOOT_HEADER_SIZE+0xd8f>
     d7e:	76 65                	jbe    de5 <MULTIBOOT_HEADER_SIZE+0xd8d>
     d80:	72 2e                	jb     db0 <MULTIBOOT_HEADER_SIZE+0xd58>
     d82:	63 00                	movsxd eax,DWORD PTR [rax]
     d84:	74 65                	je     deb <MULTIBOOT_HEADER_SIZE+0xd93>
     d86:	73 74                	jae    dfc <MULTIBOOT_HEADER_SIZE+0xda4>
     d88:	5f                   	pop    rdi
     d89:	69 6e 66 6f 00 74 6f 	imul   ebp,DWORD PTR [rsi+0x66],0x6f74006f
     d90:	74 61                	je     df3 <MULTIBOOT_HEADER_SIZE+0xd9b>
     d92:	6c                   	ins    BYTE PTR es:[rdi],dx
     d93:	00 67 61             	add    BYTE PTR [rdi+0x61],ah
     d96:	74 5f                	je     df7 <MULTIBOOT_HEADER_SIZE+0xd9f>
     d98:	66 72 65             	data16 jb e00 <MULTIBOOT_HEADER_SIZE+0xda8>
     d9b:	65 00 74 65 73       	add    BYTE PTR gs:[rbp+riz*2+0x73],dh
     da0:	74 5f                	je     e01 <MULTIBOOT_HEADER_SIZE+0xda9>
     da2:	65 72 72             	gs jb  e17 <MULTIBOOT_HEADER_SIZE+0xdbf>
     da5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     da6:	72 00                	jb     da8 <MULTIBOOT_HEADER_SIZE+0xd50>
     da8:	66 61                	data16 (bad) 
     daa:	69 6c 65 64 00 72 75 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x6e757200
     db1:	6e 
     db2:	5f                   	pop    rdi
     db3:	63 61 73             	movsxd esp,DWORD PTR [rcx+0x73]
     db6:	65 00 6c 69 6d       	add    BYTE PTR gs:[rcx+rbp*2+0x6d],ch
     dbb:	69 74 00 68 61 6c 5f 	imul   esi,DWORD PTR [rax+rax*1+0x68],0x645f6c61
     dc2:	64 
     dc3:	65 72 65             	gs jb  e2b <MULTIBOOT_HEADER_SIZE+0xdd3>
     dc6:	67 69 73 74 65 72 5f 	imul   esi,DWORD PTR [ebx+0x74],0x695f7265
     dcd:	69 
     dce:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     dcf:	74 65                	je     e36 <MULTIBOOT_HEADER_SIZE+0xdde>
     dd1:	72 72                	jb     e45 <MULTIBOOT_HEADER_SIZE+0xded>
     dd3:	75 70                	jne    e45 <MULTIBOOT_HEADER_SIZE+0xded>
     dd5:	74 5f                	je     e36 <MULTIBOOT_HEADER_SIZE+0xdde>
     dd7:	68 61 6e 64 6c       	push   0x6c646e61
     ddc:	65 72 00             	gs jb  ddf <MULTIBOOT_HEADER_SIZE+0xd87>
     ddf:	73 72                	jae    e53 <MULTIBOOT_HEADER_SIZE+0xdfb>
     de1:	63 2f                	movsxd ebp,DWORD PTR [rdi]
     de3:	68 61 6c 2f 68       	push   0x682f6c61
     de8:	61                   	(bad)  
     de9:	6c                   	ins    BYTE PTR es:[rdi],dx
     dea:	5f                   	pop    rdi
     deb:	69 6e 74 72 2e 63 00 	imul   ebp,DWORD PTR [rsi+0x74],0x632e72
     df2:	68 61 6c 5f 72       	push   0x725f6c61
     df7:	65 67 69 73 74 65 72 	imul   esi,DWORD PTR gs:[ebx+0x74],0x695f7265
     dfe:	5f 69 
     e00:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     e01:	74 65                	je     e68 <MULTIBOOT_HEADER_SIZE+0xe10>
     e03:	72 72                	jb     e77 <MULTIBOOT_HEADER_SIZE+0xe1f>
     e05:	75 70                	jne    e77 <MULTIBOOT_HEADER_SIZE+0xe1f>
     e07:	74 5f                	je     e68 <MULTIBOOT_HEADER_SIZE+0xe10>
     e09:	68 61 6e 64 6c       	push   0x6c646e61
     e0e:	65 72 00             	gs jb  e11 <MULTIBOOT_HEADER_SIZE+0xdb9>
     e11:	6d                   	ins    DWORD PTR es:[rdi],dx
     e12:	65 73 73             	gs jae e88 <MULTIBOOT_HEADER_SIZE+0xe30>
     e15:	61                   	(bad)  
     e16:	67 65 00 68 61       	add    BYTE PTR gs:[eax+0x61],ch
     e1b:	6c                   	ins    BYTE PTR es:[rdi],dx
     e1c:	5f                   	pop    rdi
     e1d:	61                   	(bad)  
     e1e:	73 73                	jae    e93 <MULTIBOOT_HEADER_SIZE+0xe3b>
     e20:	65 72 74             	gs jb  e97 <MULTIBOOT_HEADER_SIZE+0xe3f>
     e23:	00 75 69             	add    BYTE PTR [rbp+0x69],dh
     e26:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     e27:	74 38                	je     e61 <MULTIBOOT_HEADER_SIZE+0xe09>
     e29:	5f                   	pop    rdi
     e2a:	74 00                	je     e2c <MULTIBOOT_HEADER_SIZE+0xdd4>
     e2c:	65 72 72             	gs jb  ea1 <MULTIBOOT_HEADER_SIZE+0xe49>
     e2f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     e30:	72 5f                	jb     e91 <MULTIBOOT_HEADER_SIZE+0xe39>
     e32:	63 6f 64             	movsxd ebp,DWORD PTR [rdi+0x64]
     e35:	65 00 68 61          	add    BYTE PTR gs:[rax+0x61],ch
     e39:	6c                   	ins    BYTE PTR es:[rdi],dx
     e3a:	5f                   	pop    rdi
     e3b:	69 6e 74 65 72 72 75 	imul   ebp,DWORD PTR [rsi+0x74],0x75727265
     e42:	70 74                	jo     eb8 <MULTIBOOT_HEADER_SIZE+0xe60>
     e44:	5f                   	pop    rdi
     e45:	64 69 73 70 61 74 63 	imul   esi,DWORD PTR fs:[rbx+0x70],0x68637461
     e4c:	68 
     e4d:	65 72 00             	gs jb  e50 <MULTIBOOT_HEADER_SIZE+0xdf8>
     e50:	68 61 6c 5f 73       	push   0x735f6c61
     e55:	65 74 5f             	gs je  eb7 <MULTIBOOT_HEADER_SIZE+0xe5f>
     e58:	69 6e 74 65 72 72 75 	imul   ebp,DWORD PTR [rsi+0x74],0x75727265
     e5f:	70 74                	jo     ed5 <MULTIBOOT_HEADER_SIZE+0xe7d>
     e61:	5f                   	pop    rdi
     e62:	68 61 6e 64 6c       	push   0x6c646e61
     e67:	65 72 00             	gs jb  e6a <MULTIBOOT_HEADER_SIZE+0xe12>
     e6a:	62                   	(bad)  {k1}
     e6b:	69 74 5f 6d 61 73 6b 	imul   esi,DWORD PTR [rdi+rbx*2+0x6d],0x5f6b7361
     e72:	5f 
     e73:	36 34 00             	ss xor al,0x0
     e76:	68 61 6c 5f 69       	push   0x695f6c61
     e7b:	64 74 5f             	fs je  edd <MULTIBOOT_HEADER_SIZE+0xe85>
     e7e:	70 74                	jo     ef4 <MULTIBOOT_HEADER_SIZE+0xe9c>
     e80:	72 5f                	jb     ee1 <MULTIBOOT_HEADER_SIZE+0xe89>
     e82:	74 00                	je     e84 <MULTIBOOT_HEADER_SIZE+0xe2c>
     e84:	67 5f                	addr32 pop rdi
     e86:	69 64 74 5f 70 74 72 	imul   esp,DWORD PTR [rsp+rsi*2+0x5f],0x727470
     e8d:	00 
     e8e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     e8f:	66 66 73 65          	data16 data16 jae ef8 <MULTIBOOT_HEADER_SIZE+0xea0>
     e93:	74 00                	je     e95 <MULTIBOOT_HEADER_SIZE+0xe3d>
     e95:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
     e98:	74 65                	je     eff <MULTIBOOT_HEADER_SIZE+0xea7>
     e9a:	78 74                	js     f10 <MULTIBOOT_HEADER_SIZE+0xeb8>
     e9c:	00 67 5f             	add    BYTE PTR [rdi+0x5f],ah
     e9f:	69 6e 74 72 5f 68 61 	imul   ebp,DWORD PTR [rsi+0x74],0x61685f72
     ea6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     ea7:	64 6c                	fs ins BYTE PTR es:[rdi],dx
     ea9:	65 72 5f             	gs jb  f0b <MULTIBOOT_HEADER_SIZE+0xeb3>
     eac:	74 61                	je     f0f <MULTIBOOT_HEADER_SIZE+0xeb7>
     eae:	62                   	(bad)  {k1}
     eaf:	6c                   	ins    BYTE PTR es:[rdi],dx
     eb0:	65 00 61 70          	add    BYTE PTR gs:[rcx+0x70],ah
     eb4:	69 63 5f 62 61 73 65 	imul   esp,DWORD PTR [rbx+0x5f],0x65736162
     ebb:	00 72 66             	add    BYTE PTR [rdx+0x66],dh
     ebe:	6c                   	ins    BYTE PTR es:[rdi],dx
     ebf:	61                   	(bad)  
     ec0:	67 73 00             	addr32 jae ec3 <MULTIBOOT_HEADER_SIZE+0xe6b>
     ec3:	75 69                	jne    f2e <MULTIBOOT_HEADER_SIZE+0xed6>
     ec5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     ec6:	74 31                	je     ef9 <MULTIBOOT_HEADER_SIZE+0xea1>
     ec8:	36 5f                	ss pop rdi
     eca:	74 00                	je     ecc <MULTIBOOT_HEADER_SIZE+0xe74>
     ecc:	73 65                	jae    f33 <MULTIBOOT_HEADER_SIZE+0xedb>
     ece:	67 5f                	addr32 pop rdi
     ed0:	73 65                	jae    f37 <MULTIBOOT_HEADER_SIZE+0xedf>
     ed2:	6c                   	ins    BYTE PTR es:[rdi],dx
     ed3:	65 63 74 6f 72       	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
     ed8:	00 61 70             	add    BYTE PTR [rcx+0x70],ah
     edb:	69 63 5f 62 61 73 65 	imul   esp,DWORD PTR [rbx+0x5f],0x65736162
     ee2:	5f                   	pop    rdi
     ee3:	72 65                	jb     f4a <MULTIBOOT_HEADER_SIZE+0xef2>
     ee5:	67 00 68 61          	add    BYTE PTR [eax+0x61],ch
     ee9:	6c                   	ins    BYTE PTR es:[rdi],dx
     eea:	5f                   	pop    rdi
     eeb:	77 72                	ja     f5f <MULTIBOOT_HEADER_SIZE+0xf07>
     eed:	69 74 65 5f 67 61 74 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x65746167
     ef4:	65 
     ef5:	00 69 6e             	add    BYTE PTR [rcx+0x6e],ch
     ef8:	74 5f                	je     f59 <MULTIBOOT_HEADER_SIZE+0xf01>
     efa:	76 65                	jbe    f61 <MULTIBOOT_HEADER_SIZE+0xf09>
     efc:	63 00                	movsxd eax,DWORD PTR [rax]
     efe:	67 5f                	addr32 pop rdi
     f00:	69 64 74 00 61 74 74 	imul   esp,DWORD PTR [rsp+rsi*2+0x0],0x72747461
     f07:	72 
     f08:	00 65 78             	add    BYTE PTR [rbp+0x78],ah
     f0b:	70 72                	jo     f7f <MULTIBOOT_HEADER_SIZE+0xf27>
     f0d:	65 73 73             	gs jae f83 <MULTIBOOT_HEADER_SIZE+0xf2b>
     f10:	69 6f 6e 00 5f 68 61 	imul   ebp,DWORD PTR [rdi+0x6e],0x61685f00
     f17:	6c                   	ins    BYTE PTR es:[rdi],dx
     f18:	5f                   	pop    rdi
     f19:	70 6f                	jo     f8a <MULTIBOOT_HEADER_SIZE+0xf32>
     f1b:	70 75                	jo     f92 <MULTIBOOT_HEADER_SIZE+0xf3a>
     f1d:	6c                   	ins    BYTE PTR es:[rdi],dx
     f1e:	61                   	(bad)  
     f1f:	74 65                	je     f86 <MULTIBOOT_HEADER_SIZE+0xf2e>
     f21:	5f                   	pop    rdi
     f22:	69 64 74 00 68 61 6c 	imul   esp,DWORD PTR [rsp+rsi*2+0x0],0x5f6c6168
     f29:	5f 
     f2a:	69 6e 74 65 72 72 75 	imul   ebp,DWORD PTR [rsi+0x74],0x75727265
     f31:	70 74                	jo     fa7 <MULTIBOOT_HEADER_SIZE+0xf4f>
     f33:	5f                   	pop    rdi
     f34:	69 6e 69 74 00 62 69 	imul   ebp,DWORD PTR [rsi+0x69],0x69620074
     f3b:	74 5f                	je     f9c <MULTIBOOT_HEADER_SIZE+0xf44>
     f3d:	66 69 65 6c 64 5f    	imul   sp,WORD PTR [rbp+0x6c],0x5f64
     f43:	6d                   	ins    DWORD PTR es:[rdi],dx
     f44:	61                   	(bad)  
     f45:	73 6b                	jae    fb2 <MULTIBOOT_HEADER_SIZE+0xf5a>
     f47:	5f                   	pop    rdi
     f48:	36 34 00             	ss xor al,0x0
     f4b:	68 61 6c 5f 69       	push   0x695f6c61
     f50:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     f51:	74 72                	je     fc5 <MULTIBOOT_HEADER_SIZE+0xf6d>
     f53:	5f                   	pop    rdi
     f54:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
     f57:	74 65                	je     fbe <MULTIBOOT_HEADER_SIZE+0xf66>
     f59:	78 74                	js     fcf <MULTIBOOT_HEADER_SIZE+0xf77>
     f5b:	5f                   	pop    rdi
     f5c:	74 00                	je     f5e <MULTIBOOT_HEADER_SIZE+0xf06>
     f5e:	68 61 6c 5f 61       	push   0x615f6c61
     f63:	6c                   	ins    BYTE PTR es:[rdi],dx
     f64:	6c                   	ins    BYTE PTR es:[rdi],dx
     f65:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     f66:	63 5f 69             	movsxd ebx,DWORD PTR [rdi+0x69]
     f69:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     f6a:	69 74 00 68 61 6c 5f 	imul   esi,DWORD PTR [rax+rax*1+0x68],0x775f6c61
     f71:	77 
     f72:	72 69                	jb     fdd <MULTIBOOT_HEADER_SIZE+0xf85>
     f74:	74 65                	je     fdb <MULTIBOOT_HEADER_SIZE+0xf83>
     f76:	5f                   	pop    rdi
     f77:	73 65                	jae    fde <MULTIBOOT_HEADER_SIZE+0xf86>
     f79:	67 6d                	ins    DWORD PTR es:[edi],dx
     f7b:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     f7d:	74 5f                	je     fde <MULTIBOOT_HEADER_SIZE+0xf86>
     f7f:	64 65 73 63          	fs gs jae fe6 <MULTIBOOT_HEADER_SIZE+0xf8e>
     f83:	72 69                	jb     fee <MULTIBOOT_HEADER_SIZE+0xf96>
     f85:	70 74                	jo     ffb <MULTIBOOT_HEADER_SIZE+0xfa3>
     f87:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     f88:	72 00                	jb     f8a <MULTIBOOT_HEADER_SIZE+0xf32>
     f8a:	68 61 6c 5f 77       	push   0x775f6c61
     f8f:	72 69                	jb     ffa <MULTIBOOT_HEADER_SIZE+0xfa2>
     f91:	74 65                	je     ff8 <MULTIBOOT_HEADER_SIZE+0xfa0>
     f93:	5f                   	pop    rdi
     f94:	70 74                	jo     100a <MULTIBOOT_HEADER_SIZE+0xfb2>
     f96:	5f                   	pop    rdi
     f97:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     f99:	74 72                	je     100d <MULTIBOOT_HEADER_SIZE+0xfb5>
     f9b:	79 00                	jns    f9d <MULTIBOOT_HEADER_SIZE+0xf45>
     f9d:	73 65                	jae    1004 <MULTIBOOT_HEADER_SIZE+0xfac>
     f9f:	67 5f                	addr32 pop rdi
     fa1:	64 65 73 63          	fs gs jae 1008 <MULTIBOOT_HEADER_SIZE+0xfb0>
     fa5:	00 68 61             	add    BYTE PTR [rax+0x61],ch
     fa8:	6c                   	ins    BYTE PTR es:[rdi],dx
     fa9:	5f                   	pop    rdi
     faa:	77 72                	ja     101e <MULTIBOOT_HEADER_SIZE+0xfc6>
     fac:	69 74 65 5f 70 64 70 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x74706470
     fb3:	74 
     fb4:	5f                   	pop    rdi
     fb5:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     fb7:	74 72                	je     102b <MULTIBOOT_HEADER_SIZE+0xfd3>
     fb9:	79 00                	jns    fbb <MULTIBOOT_HEADER_SIZE+0xf63>
     fbb:	68 61 6c 6c 6f       	push   0x6f6c6c61
     fc0:	63 00                	movsxd eax,DWORD PTR [rax]
     fc2:	68 66 72 65 65       	push   0x65657266
     fc7:	00 70 5f             	add    BYTE PTR [rax+0x5f],dh
     fca:	61                   	(bad)  
     fcb:	64 64 72 00          	fs fs jb fcf <MULTIBOOT_HEADER_SIZE+0xf77>
     fcf:	68 61 6c 5f 77       	push   0x775f6c61
     fd4:	72 69                	jb     103f <MULTIBOOT_HEADER_SIZE+0xfe7>
     fd6:	74 65                	je     103d <MULTIBOOT_HEADER_SIZE+0xfe5>
     fd8:	5f                   	pop    rdi
     fd9:	70 64                	jo     103f <MULTIBOOT_HEADER_SIZE+0xfe7>
     fdb:	5f                   	pop    rdi
     fdc:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     fde:	74 72                	je     1052 <MULTIBOOT_HEADER_SIZE+0xffa>
     fe0:	79 00                	jns    fe2 <MULTIBOOT_HEADER_SIZE+0xf8a>
     fe2:	73 72                	jae    1056 <MULTIBOOT_HEADER_SIZE+0xffe>
     fe4:	63 2f                	movsxd ebp,DWORD PTR [rdi]
     fe6:	68 61 6c 2f 68       	push   0x682f6c61
     feb:	61                   	(bad)  
     fec:	6c                   	ins    BYTE PTR es:[rdi],dx
     fed:	5f                   	pop    rdi
     fee:	6d                   	ins    DWORD PTR es:[rdi],dx
     fef:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     ff1:	2e 63 00             	movsxd eax,DWORD PTR cs:[rax]
     ff4:	68 61 6c 5f 77       	push   0x775f6c61
     ff9:	72 69                	jb     1064 <MULTIBOOT_HEADER_SIZE+0x100c>
     ffb:	74 65                	je     1062 <MULTIBOOT_HEADER_SIZE+0x100a>
     ffd:	5f                   	pop    rdi
     ffe:	70 6d                	jo     106d <MULTIBOOT_HEADER_SIZE+0x1015>
    1000:	6c                   	ins    BYTE PTR es:[rdi],dx
    1001:	34 5f                	xor    al,0x5f
    1003:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    1005:	74 72                	je     1079 <MULTIBOOT_HEADER_SIZE+0x1021>
    1007:	79 00                	jns    1009 <MULTIBOOT_HEADER_SIZE+0xfb1>
    1009:	70 64                	jo     106f <MULTIBOOT_HEADER_SIZE+0x1017>
    100b:	5f                   	pop    rdi
    100c:	61                   	(bad)  
    100d:	64 64 72 00          	fs fs jb 1011 <MULTIBOOT_HEADER_SIZE+0xfb9>
    1011:	70 64                	jo     1077 <MULTIBOOT_HEADER_SIZE+0x101f>
    1013:	70 74                	jo     1089 <MULTIBOOT_HEADER_SIZE+0x1031>
    1015:	5f                   	pop    rdi
    1016:	61                   	(bad)  
    1017:	64 64 72 00          	fs fs jb 101b <MULTIBOOT_HEADER_SIZE+0xfc3>
    101b:	6b 65 72 6e          	imul   esp,DWORD PTR [rbp+0x72],0x6e
    101f:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    1021:	5f                   	pop    rdi
    1022:	68 65 61 70 00       	push   0x706165
    1027:	74 65                	je     108e <MULTIBOOT_HEADER_SIZE+0x1036>
    1029:	78 74                	js     109f <MULTIBOOT_HEADER_SIZE+0x1047>
    102b:	5f                   	pop    rdi
    102c:	70 6f                	jo     109d <MULTIBOOT_HEADER_SIZE+0x1045>
    102e:	73 00                	jae    1030 <MULTIBOOT_HEADER_SIZE+0xfd8>
    1030:	68 61 6c 5f 67       	push   0x675f6c61
    1035:	64 74 5f             	fs je  1097 <MULTIBOOT_HEADER_SIZE+0x103f>
    1038:	70 74                	jo     10ae <MULTIBOOT_HEADER_SIZE+0x1056>
    103a:	72 5f                	jb     109b <MULTIBOOT_HEADER_SIZE+0x1043>
    103c:	74 00                	je     103e <MULTIBOOT_HEADER_SIZE+0xfe6>
    103e:	67 5f                	addr32 pop rdi
    1040:	67 64 74 00          	addr32 fs je 1044 <MULTIBOOT_HEADER_SIZE+0xfec>
    1044:	67 5f                	addr32 pop rdi
    1046:	67 64 74 5f          	addr32 fs je 10a9 <MULTIBOOT_HEADER_SIZE+0x1051>
    104a:	70 74                	jo     10c0 <MULTIBOOT_HEADER_SIZE+0x1068>
    104c:	72 00                	jb     104e <MULTIBOOT_HEADER_SIZE+0xff6>
    104e:	73 72                	jae    10c2 <MULTIBOOT_HEADER_SIZE+0x106a>
    1050:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    1052:	68 61 6c 2f 68       	push   0x682f6c61
    1057:	61                   	(bad)  
    1058:	6c                   	ins    BYTE PTR es:[rdi],dx
    1059:	5f                   	pop    rdi
    105a:	76 61                	jbe    10bd <MULTIBOOT_HEADER_SIZE+0x1065>
    105c:	72 2e                	jb     108c <MULTIBOOT_HEADER_SIZE+0x1034>
    105e:	63 00                	movsxd eax,DWORD PTR [rax]
    1060:	6c                   	ins    BYTE PTR es:[rdi],dx
    1061:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1062:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1063:	67 20 6c 6f 6e       	and    BYTE PTR [edi+ebp*2+0x6e],ch
    1068:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
    106c:	73 69                	jae    10d7 <MULTIBOOT_HEADER_SIZE+0x107f>
    106e:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    1070:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    1075:	74 00                	je     1077 <MULTIBOOT_HEADER_SIZE+0x101f>
    1077:	6d                   	ins    DWORD PTR es:[rdi],dx
    1078:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1079:	64 75 6c             	fs jne 10e8 <MULTIBOOT_HEADER_SIZE+0x1090>
    107c:	65 5f                	gs pop rdi
    107e:	69 6e 66 6f 00 73 72 	imul   ebp,DWORD PTR [rsi+0x66],0x7273006f
    1085:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    1087:	68 61 6c 2f 68       	push   0x682f6c61
    108c:	61                   	(bad)  
    108d:	6c                   	ins    BYTE PTR es:[rdi],dx
    108e:	5f                   	pop    rdi
    108f:	69 6e 69 74 2e 63 00 	imul   ebp,DWORD PTR [rsi+0x69],0x632e74
    1096:	47 52                	rex.RXB push r10
    1098:	55                   	push   rbp
    1099:	42 5f                	rex.X pop rdi
    109b:	50                   	push   rax
    109c:	41                   	rex.B
    109d:	43                   	rex.XB
    109e:	4b                   	rex.WXB
    109f:	45                   	rex.RB
    10a0:	44 00 5f 68          	add    BYTE PTR [rdi+0x68],r11b
    10a4:	61                   	(bad)  
    10a5:	6c                   	ins    BYTE PTR es:[rdi],dx
    10a6:	5f                   	pop    rdi
    10a7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    10a8:	62                   	(bad)  {k1}
    10a9:	74 61                	je     110c <MULTIBOOT_HEADER_SIZE+0x10b4>
    10ab:	69 6e 5f 63 70 75 5f 	imul   ebp,DWORD PTR [rsi+0x5f],0x5f757063
    10b2:	69 6e 66 6f 00 6d 65 	imul   ebp,DWORD PTR [rsi+0x66],0x656d006f
    10b9:	6d                   	ins    DWORD PTR es:[rdi],dx
    10ba:	5f                   	pop    rdi
    10bb:	69 6e 66 6f 5f 74 00 	imul   ebp,DWORD PTR [rsi+0x66],0x745f6f
    10c2:	6d                   	ins    DWORD PTR es:[rdi],dx
    10c3:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    10c5:	5f                   	pop    rdi
    10c6:	69 6e 66 6f 00 7a 65 	imul   ebp,DWORD PTR [rsi+0x66],0x657a006f
    10cd:	72 6f                	jb     113e <MULTIBOOT_HEADER_SIZE+0x10e6>
    10cf:	00 5f 68             	add    BYTE PTR [rdi+0x68],bl
    10d2:	61                   	(bad)  
    10d3:	6c                   	ins    BYTE PTR es:[rdi],dx
    10d4:	5f                   	pop    rdi
    10d5:	69 6e 69 74 5f 67 64 	imul   ebp,DWORD PTR [rsi+0x69],0x64675f74
    10dc:	74 00                	je     10de <MULTIBOOT_HEADER_SIZE+0x1086>
    10de:	68 61 6c 5f 69       	push   0x695f6c61
    10e3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    10e4:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    10e6:	00 6f 63             	add    BYTE PTR [rdi+0x63],ch
    10e9:	63 75 70             	movsxd esi,DWORD PTR [rbp+0x70]
    10ec:	69 65 64 5f 70 61 67 	imul   esp,DWORD PTR [rbp+0x64],0x6761705f
    10f3:	65 5f                	gs pop rdi
    10f5:	6c                   	ins    BYTE PTR es:[rdi],dx
    10f6:	69 73 74 00 6d 6f 64 	imul   esi,DWORD PTR [rbx+0x74],0x646f6d00
    10fd:	75 6c                	jne    116b <MULTIBOOT_HEADER_SIZE+0x1113>
    10ff:	65 5f                	gs pop rdi
    1101:	6c                   	ins    BYTE PTR es:[rdi],dx
    1102:	69 73 74 00 6b 5f 68 	imul   esi,DWORD PTR [rbx+0x74],0x685f6b00
    1109:	61                   	(bad)  
    110a:	6c                   	ins    BYTE PTR es:[rdi],dx
    110b:	5f                   	pop    rdi
    110c:	69 6e 66 6f 5f 74 00 	imul   ebp,DWORD PTR [rsi+0x66],0x745f6f
    1113:	63 70 75             	movsxd esi,DWORD PTR [rax+0x75]
    1116:	5f                   	pop    rdi
    1117:	76 65                	jbe    117e <MULTIBOOT_HEADER_SIZE+0x1126>
    1119:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    111a:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
    111c:	72 5f                	jb     117d <MULTIBOOT_HEADER_SIZE+0x1125>
    111e:	73 74                	jae    1194 <MULTIBOOT_HEADER_SIZE+0x113c>
    1120:	72 69                	jb     118b <MULTIBOOT_HEADER_SIZE+0x1133>
    1122:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1123:	67 00 6d 75          	add    BYTE PTR [ebp+0x75],ch
    1127:	6c                   	ins    BYTE PTR es:[rdi],dx
    1128:	74 69                	je     1193 <MULTIBOOT_HEADER_SIZE+0x113b>
    112a:	62                   	(bad)  {k1}
    112b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    112c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    112d:	74 5f                	je     118e <MULTIBOOT_HEADER_SIZE+0x1136>
    112f:	75 69                	jne    119a <MULTIBOOT_HEADER_SIZE+0x1142>
    1131:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1132:	74 33                	je     1167 <MULTIBOOT_HEADER_SIZE+0x110f>
    1134:	32 5f 74             	xor    bl,BYTE PTR [rdi+0x74]
    1137:	00 6d 65             	add    BYTE PTR [rbp+0x65],ch
    113a:	6d                   	ins    DWORD PTR es:[rdi],dx
    113b:	5f                   	pop    rdi
    113c:	61                   	(bad)  
    113d:	76 61                	jbe    11a0 <MULTIBOOT_HEADER_SIZE+0x1148>
    113f:	69 6c 61 62 6c 65 00 	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x6800656c
    1146:	68 
    1147:	61                   	(bad)  
    1148:	6c                   	ins    BYTE PTR es:[rdi],dx
    1149:	5f                   	pop    rdi
    114a:	69 6e 69 74 00 6d 6f 	imul   ebp,DWORD PTR [rsi+0x69],0x6f6d0074
    1151:	64 75 6c             	fs jne 11c0 <MULTIBOOT_HEADER_SIZE+0x1168>
    1154:	65 5f                	gs pop rdi
    1156:	63 6f 75             	movsxd ebp,DWORD PTR [rdi+0x75]
    1159:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    115a:	74 00                	je     115c <MULTIBOOT_HEADER_SIZE+0x1104>
    115c:	6d                   	ins    DWORD PTR es:[rdi],dx
    115d:	75 6c                	jne    11cb <MULTIBOOT_HEADER_SIZE+0x1173>
    115f:	74 69                	je     11ca <MULTIBOOT_HEADER_SIZE+0x1172>
    1161:	62                   	(bad)  {k1}
    1162:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1163:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1164:	74 5f                	je     11c5 <MULTIBOOT_HEADER_SIZE+0x116d>
    1166:	6d                   	ins    DWORD PTR es:[rdi],dx
    1167:	6d                   	ins    DWORD PTR es:[rdi],dx
    1168:	61                   	(bad)  
    1169:	70 5f                	jo     11ca <MULTIBOOT_HEADER_SIZE+0x1172>
    116b:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    116d:	74 72                	je     11e1 <MULTIBOOT_HEADER_SIZE+0x1189>
    116f:	79 00                	jns    1171 <MULTIBOOT_HEADER_SIZE+0x1119>
    1171:	6d                   	ins    DWORD PTR es:[rdi],dx
    1172:	75 6c                	jne    11e0 <MULTIBOOT_HEADER_SIZE+0x1188>
    1174:	74 69                	je     11df <MULTIBOOT_HEADER_SIZE+0x1187>
    1176:	62                   	(bad)  {k1}
    1177:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1178:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1179:	74 5f                	je     11da <MULTIBOOT_HEADER_SIZE+0x1182>
    117b:	75 69                	jne    11e6 <MULTIBOOT_HEADER_SIZE+0x118e>
    117d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    117e:	74 36                	je     11b6 <MULTIBOOT_HEADER_SIZE+0x115e>
    1180:	34 5f                	xor    al,0x5f
    1182:	74 00                	je     1184 <MULTIBOOT_HEADER_SIZE+0x112c>
    1184:	66 72 65             	data16 jb 11ec <MULTIBOOT_HEADER_SIZE+0x1194>
    1187:	65 5f                	gs pop rdi
    1189:	70 61                	jo     11ec <MULTIBOOT_HEADER_SIZE+0x1194>
    118b:	67 65 5f             	addr32 gs pop rdi
    118e:	6c                   	ins    BYTE PTR es:[rdi],dx
    118f:	69 73 74 00 6d 6f 64 	imul   esi,DWORD PTR [rbx+0x74],0x646f6d00
    1196:	75 6c                	jne    1204 <MULTIBOOT_HEADER_SIZE+0x11ac>
    1198:	65 5f                	gs pop rdi
    119a:	69 6e 66 6f 5f 74 00 	imul   ebp,DWORD PTR [rsi+0x66],0x745f6f
    11a1:	6d                   	ins    DWORD PTR es:[rdi],dx
    11a2:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    11a4:	5f                   	pop    rdi
    11a5:	69 6e 73 74 61 6c 6c 	imul   ebp,DWORD PTR [rsi+0x73],0x6c6c6174
    11ac:	65 64 00 68 61       	gs add BYTE PTR fs:[rax+0x61],ch
    11b1:	6c                   	ins    BYTE PTR es:[rdi],dx
    11b2:	5f                   	pop    rdi
    11b3:	70 72                	jo     1227 <MULTIBOOT_HEADER_SIZE+0x11cf>
    11b5:	69 6e 74 66 00 6c 6f 	imul   ebp,DWORD PTR [rsi+0x74],0x6f6c0066
    11bc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    11bd:	6b 75 70 5f          	imul   esi,DWORD PTR [rbp+0x70],0x5f
    11c1:	74 61                	je     1224 <MULTIBOOT_HEADER_SIZE+0x11cc>
    11c3:	62                   	(bad)  {k1}
    11c4:	6c                   	ins    BYTE PTR es:[rdi],dx
    11c5:	65 5f                	gs pop rdi
    11c7:	63 61 70             	movsxd esp,DWORD PTR [rcx+0x70]
    11ca:	00 5f 68             	add    BYTE PTR [rdi+0x68],bl
    11cd:	61                   	(bad)  
    11ce:	6c                   	ins    BYTE PTR es:[rdi],dx
    11cf:	5f                   	pop    rdi
    11d0:	70 72                	jo     1244 <MULTIBOOT_HEADER_SIZE+0x11ec>
    11d2:	69 6e 74 5f 73 63 72 	imul   ebp,DWORD PTR [rsi+0x74],0x7263735f
    11d9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    11da:	6c                   	ins    BYTE PTR es:[rdi],dx
    11db:	6c                   	ins    BYTE PTR es:[rdi],dx
    11dc:	00 5f 68             	add    BYTE PTR [rdi+0x68],bl
    11df:	61                   	(bad)  
    11e0:	6c                   	ins    BYTE PTR es:[rdi],dx
    11e1:	5f                   	pop    rdi
    11e2:	70 72                	jo     1256 <MULTIBOOT_HEADER_SIZE+0x11fe>
    11e4:	69 6e 74 5f 73 74 72 	imul   ebp,DWORD PTR [rsi+0x74],0x7274735f
    11eb:	00 63 61             	add    BYTE PTR [rbx+0x61],ah
    11ee:	70 69                	jo     1259 <MULTIBOOT_HEADER_SIZE+0x1201>
    11f0:	74 61                	je     1253 <MULTIBOOT_HEADER_SIZE+0x11fb>
    11f2:	6c                   	ins    BYTE PTR es:[rdi],dx
    11f3:	00 61 72             	add    BYTE PTR [rcx+0x72],ah
    11f6:	67 73 00             	addr32 jae 11f9 <MULTIBOOT_HEADER_SIZE+0x11a1>
    11f9:	5f                   	pop    rdi
    11fa:	68 61 6c 5f 70       	push   0x705f6c61
    11ff:	72 69                	jb     126a <MULTIBOOT_HEADER_SIZE+0x1212>
    1201:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1202:	74 5f                	je     1263 <MULTIBOOT_HEADER_SIZE+0x120b>
    1204:	75 69                	jne    126f <MULTIBOOT_HEADER_SIZE+0x1217>
    1206:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1207:	74 00                	je     1209 <MULTIBOOT_HEADER_SIZE+0x11b1>
    1209:	5f                   	pop    rdi
    120a:	68 61 6c 5f 70       	push   0x705f6c61
    120f:	72 69                	jb     127a <MULTIBOOT_HEADER_SIZE+0x1222>
    1211:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1212:	74 5f                	je     1273 <MULTIBOOT_HEADER_SIZE+0x121b>
    1214:	68 65 78 00 6c       	push   0x6c007865
    1219:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    121a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    121b:	6b 5f 75 70          	imul   ebx,DWORD PTR [rdi+0x75],0x70
    121f:	00 6c 6f 6f          	add    BYTE PTR [rdi+rbp*2+0x6f],ch
    1223:	6b 75 70 5f          	imul   esi,DWORD PTR [rbp+0x70],0x5f
    1227:	74 61                	je     128a <MULTIBOOT_HEADER_SIZE+0x1232>
    1229:	62                   	(bad)  {k1}
    122a:	6c                   	ins    BYTE PTR es:[rdi],dx
    122b:	65 00 73 72          	add    BYTE PTR gs:[rbx+0x72],dh
    122f:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    1231:	68 61 6c 2f 68       	push   0x682f6c61
    1236:	61                   	(bad)  
    1237:	6c                   	ins    BYTE PTR es:[rdi],dx
    1238:	5f                   	pop    rdi
    1239:	70 72                	jo     12ad <MULTIBOOT_HEADER_SIZE+0x1255>
    123b:	69 6e 74 2e 63 00 68 	imul   ebp,DWORD PTR [rsi+0x74],0x6800632e
    1242:	61                   	(bad)  
    1243:	6c                   	ins    BYTE PTR es:[rdi],dx
    1244:	5f                   	pop    rdi
    1245:	63 6c 65 61          	movsxd ebp,DWORD PTR [rbp+riz*2+0x61]
    1249:	72 5f                	jb     12aa <MULTIBOOT_HEADER_SIZE+0x1252>
    124b:	73 63                	jae    12b0 <MULTIBOOT_HEADER_SIZE+0x1258>
    124d:	72 65                	jb     12b4 <MULTIBOOT_HEADER_SIZE+0x125c>
    124f:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    1251:	00 69 73             	add    BYTE PTR [rcx+0x73],ch
    1254:	4e                   	rex.WRX
    1255:	65 67 61             	gs addr32 (bad) 
    1258:	74 69                	je     12c3 <MULTIBOOT_HEADER_SIZE+0x126b>
    125a:	76 65                	jbe    12c1 <MULTIBOOT_HEADER_SIZE+0x1269>
    125c:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    125f:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    1261:	75 63                	jne    12c6 <MULTIBOOT_HEADER_SIZE+0x126e>
    1263:	5f                   	pop    rdi
    1264:	76 61                	jbe    12c7 <MULTIBOOT_HEADER_SIZE+0x126f>
    1266:	5f                   	pop    rdi
    1267:	6c                   	ins    BYTE PTR es:[rdi],dx
    1268:	69 73 74 00 6e 75 6d 	imul   esi,DWORD PTR [rbx+0x74],0x6d756e00
    126f:	62                   	(bad)  {k1}
    1270:	65 72 00             	gs jb  1273 <MULTIBOOT_HEADER_SIZE+0x121b>
    1273:	5f                   	pop    rdi
    1274:	68 61 6c 5f 70       	push   0x705f6c61
    1279:	72 69                	jb     12e4 <MULTIBOOT_HEADER_SIZE+0x128c>
    127b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    127c:	74 5f                	je     12dd <MULTIBOOT_HEADER_SIZE+0x1285>
    127e:	69 6e 74 00 66 6f 72 	imul   ebp,DWORD PTR [rsi+0x74],0x726f6600
    1285:	6d                   	ins    DWORD PTR es:[rdi],dx
    1286:	61                   	(bad)  
    1287:	74 00                	je     1289 <MULTIBOOT_HEADER_SIZE+0x1231>
    1289:	73 72                	jae    12fd <MULTIBOOT_HEADER_SIZE+0x12a5>
    128b:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    128d:	6b 65 72 6e          	imul   esp,DWORD PTR [rbp+0x72],0x6e
    1291:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    1293:	2f                   	(bad)  
    1294:	6b 5f 70 72          	imul   ebx,DWORD PTR [rdi+0x70],0x72
    1298:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1299:	63 2e                	movsxd ebp,DWORD PTR [rsi]
    129b:	63 00                	movsxd eax,DWORD PTR [rax]
    129d:	6b 5f 73 70          	imul   ebx,DWORD PTR [rdi+0x73],0x70
    12a1:	69 6e 5f 6c 6f 63 6b 	imul   ebp,DWORD PTR [rsi+0x5f],0x6b636f6c
    12a8:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
    12ab:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    12ad:	6b 65 72 6e          	imul   esp,DWORD PTR [rbp+0x72],0x6e
    12b1:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    12b3:	2f                   	(bad)  
    12b4:	6b 5f 61 74          	imul   ebx,DWORD PTR [rdi+0x61],0x74
    12b8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    12b9:	6d                   	ins    DWORD PTR es:[rdi],dx
    12ba:	69 63 2e 63 00 6b 5f 	imul   esp,DWORD PTR [rbx+0x2e],0x5f6b0063
    12c1:	73 70                	jae    1333 <MULTIBOOT_HEADER_SIZE+0x12db>
    12c3:	69 6e 5f 75 6e 6c 6f 	imul   ebp,DWORD PTR [rsi+0x5f],0x6f6c6e75
    12ca:	63 6b 00             	movsxd ebp,DWORD PTR [rbx+0x0]
    12cd:	6b 5f 73 70          	imul   ebx,DWORD PTR [rdi+0x73],0x70
    12d1:	69 6e 5f 6c 6f 63 6b 	imul   ebp,DWORD PTR [rsi+0x5f],0x6b636f6c
    12d8:	5f                   	pop    rdi
    12d9:	74 00                	je     12db <MULTIBOOT_HEADER_SIZE+0x1283>
    12db:	6d                   	ins    DWORD PTR es:[rdi],dx
    12dc:	75 6c                	jne    134a <MULTIBOOT_HEADER_SIZE+0x12f2>
    12de:	74 69                	je     1349 <MULTIBOOT_HEADER_SIZE+0x12f1>
    12e0:	62                   	(bad)  {k1}
    12e1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    12e2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    12e3:	74 5f                	je     1344 <MULTIBOOT_HEADER_SIZE+0x12ec>
    12e5:	69 6e 66 6f 00 73 72 	imul   ebp,DWORD PTR [rsi+0x66],0x7273006f
    12ec:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    12ee:	6b 65 72 6e          	imul   esp,DWORD PTR [rbp+0x72],0x6e
    12f2:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    12f4:	2f                   	(bad)  
    12f5:	6b 5f 65 6e          	imul   ebx,DWORD PTR [rdi+0x65],0x6e
    12f9:	74 72                	je     136d <MULTIBOOT_HEADER_SIZE+0x1315>
    12fb:	79 2e                	jns    132b <MULTIBOOT_HEADER_SIZE+0x12d3>
    12fd:	63 00                	movsxd eax,DWORD PTR [rax]
    12ff:	6b 6d 61 69          	imul   ebp,DWORD PTR [rbp+0x61],0x69
    1303:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1304:	00 6d 6f             	add    BYTE PTR [rbp+0x6f],ch
    1307:	64 75 6c             	fs jne 1376 <MULTIBOOT_HEADER_SIZE+0x131e>
    130a:	65 5f                	gs pop rdi
    130c:	64 65 73 63          	fs gs jae 1373 <MULTIBOOT_HEADER_SIZE+0x131b>
    1310:	72 69                	jb     137b <MULTIBOOT_HEADER_SIZE+0x1323>
    1312:	70 74                	jo     1388 <MULTIBOOT_HEADER_SIZE+0x1330>
    1314:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1315:	72 00                	jb     1317 <MULTIBOOT_HEADER_SIZE+0x12bf>
    1317:	70 61                	jo     137a <MULTIBOOT_HEADER_SIZE+0x1322>
    1319:	67 65 5f             	addr32 gs pop rdi
    131c:	63 6f 75             	movsxd ebp,DWORD PTR [rdi+0x75]
    131f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1320:	74 00                	je     1322 <MULTIBOOT_HEADER_SIZE+0x12ca>
    1322:	6b 65 72 6e          	imul   esp,DWORD PTR [rbp+0x72],0x6e
    1326:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    1328:	5f                   	pop    rdi
    1329:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    132b:	64 00 6d 65          	add    BYTE PTR fs:[rbp+0x65],ch
    132f:	6d                   	ins    DWORD PTR es:[rdi],dx
    1330:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1331:	72 79                	jb     13ac <MULTIBOOT_HEADER_SIZE+0x1354>
    1333:	5f                   	pop    rdi
    1334:	64 65 73 63          	fs gs jae 139b <MULTIBOOT_HEADER_SIZE+0x1343>
    1338:	72 69                	jb     13a3 <MULTIBOOT_HEADER_SIZE+0x134b>
    133a:	70 74                	jo     13b0 <MULTIBOOT_HEADER_SIZE+0x1358>
    133c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    133d:	72 5f                	jb     139e <MULTIBOOT_HEADER_SIZE+0x1346>
    133f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1340:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1341:	64 65 5f             	fs gs pop rdi
    1344:	74 00                	je     1346 <MULTIBOOT_HEADER_SIZE+0x12ee>
    1346:	62 61                	(bad)  {k1}
    1348:	73 65                	jae    13af <MULTIBOOT_HEADER_SIZE+0x1357>
    134a:	5f                   	pop    rdi
    134b:	61                   	(bad)  
    134c:	64 64 72 00          	fs fs jb 1350 <MULTIBOOT_HEADER_SIZE+0x12f8>
    1350:	6d                   	ins    DWORD PTR es:[rdi],dx
    1351:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1352:	64 75 6c             	fs jne 13c1 <MULTIBOOT_HEADER_SIZE+0x1369>
    1355:	65 5f                	gs pop rdi
    1357:	64 65 73 63          	fs gs jae 13be <MULTIBOOT_HEADER_SIZE+0x1366>
    135b:	72 69                	jb     13c6 <MULTIBOOT_HEADER_SIZE+0x136e>
    135d:	70 74                	jo     13d3 <MULTIBOOT_HEADER_SIZE+0x137b>
    135f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1360:	72 5f                	jb     13c1 <MULTIBOOT_HEADER_SIZE+0x1369>
    1362:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1363:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1364:	64 65 5f             	fs gs pop rdi
    1367:	74 00                	je     1369 <MULTIBOOT_HEADER_SIZE+0x1311>
    1369:	6b 65 72 6e          	imul   esp,DWORD PTR [rbp+0x72],0x6e
    136d:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    136f:	5f                   	pop    rdi
    1370:	73 74                	jae    13e6 <MULTIBOOT_HEADER_SIZE+0x138e>
    1372:	61                   	(bad)  
    1373:	72 74                	jb     13e9 <MULTIBOOT_HEADER_SIZE+0x1391>
    1375:	00 65 61             	add    BYTE PTR [rbp+0x61],ah
    1378:	63 68 5f             	movsxd ebp,DWORD PTR [rax+0x5f]
    137b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    137c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    137d:	64 65 00 73 72       	fs add BYTE PTR gs:[rbx+0x72],dh
    1382:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    1384:	6b 65 72 6e          	imul   esp,DWORD PTR [rbp+0x72],0x6e
    1388:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    138a:	2f                   	(bad)  
    138b:	6b 5f 70 6d          	imul   ebx,DWORD PTR [rdi+0x70],0x6d
    138f:	6d                   	ins    DWORD PTR es:[rdi],dx
    1390:	2e 63 00             	movsxd eax,DWORD PTR cs:[rax]
    1393:	70 68                	jo     13fd <MULTIBOOT_HEADER_SIZE+0x13a5>
    1395:	79 73                	jns    140a <MULTIBOOT_HEADER_SIZE+0x13b2>
    1397:	69 63 61 6c 5f 61 64 	imul   esp,DWORD PTR [rbx+0x61],0x64615f6c
    139e:	64 72 00             	fs jb  13a1 <MULTIBOOT_HEADER_SIZE+0x1349>
    13a1:	61                   	(bad)  
    13a2:	76 61                	jbe    1405 <MULTIBOOT_HEADER_SIZE+0x13ad>
    13a4:	69 6c 61 62 6c 65 5f 	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x6d5f656c
    13ab:	6d 
    13ac:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    13ae:	00 70 6d             	add    BYTE PTR [rax+0x6d],dh
    13b1:	6d                   	ins    DWORD PTR es:[rdi],dx
    13b2:	5f                   	pop    rdi
    13b3:	69 6e 69 74 00 6f 63 	imul   ebp,DWORD PTR [rsi+0x69],0x636f0074
    13ba:	63 75 70             	movsxd esi,DWORD PTR [rbp+0x70]
    13bd:	69 65 64 5f 6d 65 6d 	imul   esp,DWORD PTR [rbp+0x64],0x6d656d5f
    13c4:	00 6f 63             	add    BYTE PTR [rdi+0x63],ch
    13c7:	63 75 70             	movsxd esi,DWORD PTR [rbp+0x70]
    13ca:	69 65 64 00 70 6d 6d 	imul   esp,DWORD PTR [rbp+0x64],0x6d6d7000
    13d1:	5f                   	pop    rdi
    13d2:	66 72 65             	data16 jb 143a <MULTIBOOT_HEADER_SIZE+0x13e2>
    13d5:	65 5f                	gs pop rdi
    13d7:	70 61                	jo     143a <MULTIBOOT_HEADER_SIZE+0x13e2>
    13d9:	67 65 00 5f 70       	add    BYTE PTR gs:[edi+0x70],bl
    13de:	6d                   	ins    DWORD PTR es:[rdi],dx
    13df:	6d                   	ins    DWORD PTR es:[rdi],dx
    13e0:	5f                   	pop    rdi
    13e1:	61                   	(bad)  
    13e2:	64 64 5f             	fs fs pop rdi
    13e5:	70 61                	jo     1448 <MULTIBOOT_HEADER_SIZE+0x13f0>
    13e7:	67 65 00 70 6d       	add    BYTE PTR gs:[eax+0x6d],dh
    13ec:	6d                   	ins    DWORD PTR es:[rdi],dx
    13ed:	5f                   	pop    rdi
    13ee:	61                   	(bad)  
    13ef:	6c                   	ins    BYTE PTR es:[rdi],dx
    13f0:	6c                   	ins    BYTE PTR es:[rdi],dx
    13f1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    13f2:	63 5f 70             	movsxd ebx,DWORD PTR [rdi+0x70]
    13f5:	61                   	(bad)  
    13f6:	67 65 00 6b 5f       	add    BYTE PTR gs:[ebx+0x5f],ch
    13fb:	64 69 73 61 62 6c 65 	imul   esi,DWORD PTR fs:[rbx+0x61],0x5f656c62
    1402:	5f 
    1403:	69 6e 74 65 72 72 75 	imul   ebp,DWORD PTR [rsi+0x74],0x75727265
    140a:	70 74                	jo     1480 <MULTIBOOT_HEADER_SIZE+0x1428>
    140c:	00 6b 5f             	add    BYTE PTR [rbx+0x5f],ch
    140f:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    1411:	61                   	(bad)  
    1412:	62                   	(bad)  {k1}
    1413:	6c                   	ins    BYTE PTR es:[rdi],dx
    1414:	65 5f                	gs pop rdi
    1416:	69 6e 74 65 72 72 75 	imul   ebp,DWORD PTR [rsi+0x74],0x75727265
    141d:	70 74                	jo     1493 <MULTIBOOT_HEADER_SIZE+0x143b>
    141f:	00 6b 5f             	add    BYTE PTR [rbx+0x5f],ch
    1422:	64 65 72 65          	fs gs jb 148b <MULTIBOOT_HEADER_SIZE+0x1433>
    1426:	67 69 73 74 65 72 5f 	imul   esi,DWORD PTR [ebx+0x74],0x695f7265
    142d:	69 
    142e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    142f:	74 65                	je     1496 <MULTIBOOT_HEADER_SIZE+0x143e>
    1431:	72 72                	jb     14a5 <MULTIBOOT_HEADER_SIZE+0x144d>
    1433:	75 70                	jne    14a5 <MULTIBOOT_HEADER_SIZE+0x144d>
    1435:	74 5f                	je     1496 <MULTIBOOT_HEADER_SIZE+0x143e>
    1437:	68 61 6e 64 6c       	push   0x6c646e61
    143c:	65 72 00             	gs jb  143f <MULTIBOOT_HEADER_SIZE+0x13e7>
    143f:	6b 5f 72 65          	imul   ebx,DWORD PTR [rdi+0x72],0x65
    1443:	67 69 73 74 65 72 5f 	imul   esi,DWORD PTR [ebx+0x74],0x695f7265
    144a:	69 
    144b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    144c:	74 65                	je     14b3 <MULTIBOOT_HEADER_SIZE+0x145b>
    144e:	72 72                	jb     14c2 <MULTIBOOT_HEADER_SIZE+0x146a>
    1450:	75 70                	jne    14c2 <MULTIBOOT_HEADER_SIZE+0x146a>
    1452:	74 5f                	je     14b3 <MULTIBOOT_HEADER_SIZE+0x145b>
    1454:	68 61 6e 64 6c       	push   0x6c646e61
    1459:	65 72 00             	gs jb  145c <MULTIBOOT_HEADER_SIZE+0x1404>
    145c:	73 72                	jae    14d0 <MULTIBOOT_HEADER_SIZE+0x1478>
    145e:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    1460:	6b 65 72 6e          	imul   esp,DWORD PTR [rbp+0x72],0x6e
    1464:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    1466:	2f                   	(bad)  
    1467:	6b 5f 69 6e          	imul   ebx,DWORD PTR [rdi+0x69],0x6e
    146b:	74 72                	je     14df <MULTIBOOT_HEADER_SIZE+0x1487>
    146d:	2e 63 00             	movsxd eax,DWORD PTR cs:[rax]

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   5:	28 55 62             	sub    BYTE PTR [rbp+0x62],dl
   8:	75 6e                	jne    78 <MULTIBOOT_HEADER_SIZE+0x20>
   a:	74 75                	je     81 <MULTIBOOT_HEADER_SIZE+0x29>
   c:	20 35 2e 33 2e 31    	and    BYTE PTR [rip+0x312e332e],dh        # 312e3340 <kernel_end+0x302c7348>
  12:	2d 31 34 75 62       	sub    eax,0x62753431
  17:	75 6e                	jne    87 <MULTIBOOT_HEADER_SIZE+0x2f>
  19:	74 75                	je     90 <MULTIBOOT_HEADER_SIZE+0x38>
  1b:	32 2e                	xor    ch,BYTE PTR [rsi]
  1d:	31 29                	xor    DWORD PTR [rcx],ebp
  1f:	20 35 2e 33 2e 31    	and    BYTE PTR [rip+0x312e332e],dh        # 312e3353 <kernel_end+0x302c735b>
  25:	20 32                	and    BYTE PTR [rdx],dh
  27:	30 31                	xor    BYTE PTR [rcx],dh
  29:	36 30 34 31          	xor    BYTE PTR ss:[rcx+rsi*1],dh
  2d:	33 00                	xor    eax,DWORD PTR [rax]

Disassembly of section .debug_ranges:

0000000000000000 <.debug_ranges>:
   0:	95                   	xchg   ebp,eax
   1:	08 00                	or     BYTE PTR [rax],al
   3:	00 00                	add    BYTE PTR [rax],al
   5:	00 00                	add    BYTE PTR [rax],al
   7:	00 c5                	add    ch,al
   9:	08 00                	or     BYTE PTR [rax],al
   b:	00 00                	add    BYTE PTR [rax],al
   d:	00 00                	add    BYTE PTR [rax],al
   f:	00 c7                	add    bh,al
  11:	08 00                	or     BYTE PTR [rax],al
  13:	00 00                	add    BYTE PTR [rax],al
  15:	00 00                	add    BYTE PTR [rax],al
  17:	00 df                	add    bh,bl
  19:	08 00                	or     BYTE PTR [rax],al
	...
  2f:	00 57 01             	add    BYTE PTR [rdi+0x1],dl
  32:	00 00                	add    BYTE PTR [rax],al
  34:	00 00                	add    BYTE PTR [rax],al
  36:	00 00                	add    BYTE PTR [rax],al
  38:	2c 02                	sub    al,0x2
  3a:	00 00                	add    BYTE PTR [rax],al
  3c:	00 00                	add    BYTE PTR [rax],al
  3e:	00 00                	add    BYTE PTR [rax],al
  40:	31 02                	xor    DWORD PTR [rdx],eax
  42:	00 00                	add    BYTE PTR [rax],al
  44:	00 00                	add    BYTE PTR [rax],al
  46:	00 00                	add    BYTE PTR [rax],al
  48:	32 02                	xor    al,BYTE PTR [rdx]
	...
  5e:	00 00                	add    BYTE PTR [rax],al
  60:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  61:	03 00                	add    eax,DWORD PTR [rax]
  63:	00 00                	add    BYTE PTR [rax],al
  65:	00 00                	add    BYTE PTR [rax],al
  67:	00 cb                	add    bl,cl
  69:	04 00                	add    al,0x0
  6b:	00 00                	add    BYTE PTR [rax],al
  6d:	00 00                	add    BYTE PTR [rax],al
  6f:	00 d0                	add    al,dl
  71:	04 00                	add    al,0x0
  73:	00 00                	add    BYTE PTR [rax],al
  75:	00 00                	add    BYTE PTR [rax],al
  77:	00 d1                	add    cl,dl
  79:	04 00                	add    al,0x0
	...
  8f:	00 05 05 00 00 00    	add    BYTE PTR [rip+0x5],al        # 9a <MULTIBOOT_HEADER_SIZE+0x42>
  95:	00 00                	add    BYTE PTR [rax],al
  97:	00 81 05 00 00 00    	add    BYTE PTR [rcx+0x5],al
  9d:	00 00                	add    BYTE PTR [rax],al
  9f:	00 83 05 00 00 00    	add    BYTE PTR [rbx+0x5],al
  a5:	00 00                	add    BYTE PTR [rax],al
  a7:	00 84 05 00 00 00 00 	add    BYTE PTR [rbp+rax*1+0x0],al
	...
  be:	00 00                	add    BYTE PTR [rax],al
  c0:	54                   	push   rsp
  c1:	01 00                	add    DWORD PTR [rax],eax
  c3:	00 00                	add    BYTE PTR [rax],al
  c5:	00 00                	add    BYTE PTR [rax],al
  c7:	00 9f 01 00 00 00    	add    BYTE PTR [rdi+0x1],bl
  cd:	00 00                	add    BYTE PTR [rax],al
  cf:	00 a1 01 00 00 00    	add    BYTE PTR [rcx+0x1],ah
  d5:	00 00                	add    BYTE PTR [rax],al
  d7:	00 a2 01 00 00 00    	add    BYTE PTR [rdx+0x1],ah
	...
  ed:	00 00                	add    BYTE PTR [rax],al
  ef:	00 f3                	add    bl,dh
  f1:	01 00                	add    DWORD PTR [rax],eax
  f3:	00 00                	add    BYTE PTR [rax],al
  f5:	00 00                	add    BYTE PTR [rax],al
  f7:	00 38                	add    BYTE PTR [rax],bh
  f9:	02 00                	add    al,BYTE PTR [rax]
  fb:	00 00                	add    BYTE PTR [rax],al
  fd:	00 00                	add    BYTE PTR [rax],al
  ff:	00 3a                	add    BYTE PTR [rdx],bh
 101:	02 00                	add    al,BYTE PTR [rax]
 103:	00 00                	add    BYTE PTR [rax],al
 105:	00 00                	add    BYTE PTR [rax],al
 107:	00 3b                	add    BYTE PTR [rbx],bh
 109:	02 00                	add    al,BYTE PTR [rax]
	...
 11f:	00 22                	add    BYTE PTR [rdx],ah
 121:	03 00                	add    eax,DWORD PTR [rax]
 123:	00 00                	add    BYTE PTR [rax],al
 125:	00 00                	add    BYTE PTR [rax],al
 127:	00 74 03 00          	add    BYTE PTR [rbx+rax*1+0x0],dh
 12b:	00 00                	add    BYTE PTR [rax],al
 12d:	00 00                	add    BYTE PTR [rax],al
 12f:	00 76 03             	add    BYTE PTR [rsi+0x3],dh
 132:	00 00                	add    BYTE PTR [rax],al
 134:	00 00                	add    BYTE PTR [rax],al
 136:	00 00                	add    BYTE PTR [rax],al
 138:	77 03                	ja     13d <MULTIBOOT_HEADER_SIZE+0xe5>
	...

Disassembly of section .stab:

0000000000000000 <.stab>:
   0:	01 00                	add    DWORD PTR [rax],eax
   2:	00 00                	add    BYTE PTR [rax],al
   4:	00 00                	add    BYTE PTR [rax],al
   6:	83 00 41             	add    DWORD PTR [rax],0x41
   9:	00 00                	add    BYTE PTR [rax],al
   b:	00 01                	add    BYTE PTR [rcx],al
   d:	00 00                	add    BYTE PTR [rax],al
   f:	00 64 00 00          	add    BYTE PTR [rax+rax*1+0x0],ah
  13:	00 30                	add    BYTE PTR [rax],dh
  15:	ee                   	out    dx,al
  16:	00 01                	add    BYTE PTR [rcx],al
  18:	00 00                	add    BYTE PTR [rax],al
  1a:	00 00                	add    BYTE PTR [rax],al
  1c:	44 00 0e             	add    BYTE PTR [rsi],r9b
  1f:	00 30                	add    BYTE PTR [rax],dh
  21:	ee                   	out    dx,al
  22:	00 01                	add    BYTE PTR [rcx],al
  24:	00 00                	add    BYTE PTR [rax],al
  26:	00 00                	add    BYTE PTR [rax],al
  28:	44 00 0f             	add    BYTE PTR [rdi],r9b
  2b:	00 31                	add    BYTE PTR [rcx],dh
  2d:	ee                   	out    dx,al
  2e:	00 01                	add    BYTE PTR [rcx],al
  30:	00 00                	add    BYTE PTR [rax],al
  32:	00 00                	add    BYTE PTR [rax],al
  34:	44 00 10             	add    BYTE PTR [rax],r10b
  37:	00 34 ee             	add    BYTE PTR [rsi+rbp*8],dh
  3a:	00 01                	add    BYTE PTR [rcx],al
  3c:	00 00                	add    BYTE PTR [rax],al
  3e:	00 00                	add    BYTE PTR [rax],al
  40:	44 00 13             	add    BYTE PTR [rbx],r10b
  43:	00 37                	add    BYTE PTR [rdi],dh
  45:	ee                   	out    dx,al
  46:	00 01                	add    BYTE PTR [rcx],al
  48:	00 00                	add    BYTE PTR [rax],al
  4a:	00 00                	add    BYTE PTR [rax],al
  4c:	44 00 14 00          	add    BYTE PTR [rax+rax*1],r10b
  50:	38 ee                	cmp    dh,ch
  52:	00 01                	add    BYTE PTR [rcx],al
  54:	00 00                	add    BYTE PTR [rax],al
  56:	00 00                	add    BYTE PTR [rax],al
  58:	44 00 16             	add    BYTE PTR [rsi],r10b
  5b:	00 39                	add    BYTE PTR [rcx],bh
  5d:	ee                   	out    dx,al
  5e:	00 01                	add    BYTE PTR [rcx],al
  60:	00 00                	add    BYTE PTR [rax],al
  62:	00 00                	add    BYTE PTR [rax],al
  64:	44 00 17             	add    BYTE PTR [rdi],r10b
  67:	00 3a                	add    BYTE PTR [rdx],bh
  69:	ee                   	out    dx,al
  6a:	00 01                	add    BYTE PTR [rcx],al
  6c:	00 00                	add    BYTE PTR [rax],al
  6e:	00 00                	add    BYTE PTR [rax],al
  70:	44 00 18             	add    BYTE PTR [rax],r11b
  73:	00 3b                	add    BYTE PTR [rbx],bh
  75:	ee                   	out    dx,al
  76:	00 01                	add    BYTE PTR [rcx],al
  78:	00 00                	add    BYTE PTR [rax],al
  7a:	00 00                	add    BYTE PTR [rax],al
  7c:	44 00 1a             	add    BYTE PTR [rdx],r11b
  7f:	00 3c ee             	add    BYTE PTR [rsi+rbp*8],bh
  82:	00 01                	add    BYTE PTR [rcx],al
  84:	00 00                	add    BYTE PTR [rax],al
  86:	00 00                	add    BYTE PTR [rax],al
  88:	44 00 1b             	add    BYTE PTR [rbx],r11b
  8b:	00 3d ee 00 01 00    	add    BYTE PTR [rip+0x100ee],bh        # 1017f <MULTIBOOT_HEADER_SIZE+0x10127>
  91:	00 00                	add    BYTE PTR [rax],al
  93:	00 44 00 1c          	add    BYTE PTR [rax+rax*1+0x1c],al
  97:	00 42 ee             	add    BYTE PTR [rdx-0x12],al
  9a:	00 01                	add    BYTE PTR [rcx],al
  9c:	00 00                	add    BYTE PTR [rax],al
  9e:	00 00                	add    BYTE PTR [rax],al
  a0:	44 00 1e             	add    BYTE PTR [rsi],r11b
  a3:	00 44 ee 00          	add    BYTE PTR [rsi+rbp*8+0x0],al
  a7:	01 00                	add    DWORD PTR [rax],eax
  a9:	00 00                	add    BYTE PTR [rax],al
  ab:	00 44 00 1f          	add    BYTE PTR [rax+rax*1+0x1f],al
  af:	00 46 ee             	add    BYTE PTR [rsi-0x12],al
  b2:	00 01                	add    BYTE PTR [rcx],al
  b4:	00 00                	add    BYTE PTR [rax],al
  b6:	00 00                	add    BYTE PTR [rax],al
  b8:	44 00 20             	add    BYTE PTR [rax],r12b
  bb:	00 48 ee             	add    BYTE PTR [rax-0x12],cl
  be:	00 01                	add    BYTE PTR [rcx],al
  c0:	00 00                	add    BYTE PTR [rax],al
  c2:	00 00                	add    BYTE PTR [rax],al
  c4:	44 00 21             	add    BYTE PTR [rcx],r12b
  c7:	00 4a ee             	add    BYTE PTR [rdx-0x12],cl
  ca:	00 01                	add    BYTE PTR [rcx],al
  cc:	00 00                	add    BYTE PTR [rax],al
  ce:	00 00                	add    BYTE PTR [rax],al
  d0:	44 00 22             	add    BYTE PTR [rdx],r12b
  d3:	00 4c ee 00          	add    BYTE PTR [rsi+rbp*8+0x0],cl
  d7:	01 00                	add    DWORD PTR [rax],eax
  d9:	00 00                	add    BYTE PTR [rax],al
  db:	00 44 00 23          	add    BYTE PTR [rax+rax*1+0x23],al
  df:	00 4f ee             	add    BYTE PTR [rdi-0x12],cl
  e2:	00 01                	add    BYTE PTR [rcx],al
  e4:	00 00                	add    BYTE PTR [rax],al
  e6:	00 00                	add    BYTE PTR [rax],al
  e8:	44 00 24 00          	add    BYTE PTR [rax+rax*1],r12b
  ec:	50                   	push   rax
  ed:	ee                   	out    dx,al
  ee:	00 01                	add    BYTE PTR [rcx],al
  f0:	00 00                	add    BYTE PTR [rax],al
  f2:	00 00                	add    BYTE PTR [rax],al
  f4:	44 00 2a             	add    BYTE PTR [rdx],r13b
  f7:	00 51 ee             	add    BYTE PTR [rcx-0x12],dl
  fa:	00 01                	add    BYTE PTR [rcx],al
  fc:	00 00                	add    BYTE PTR [rax],al
  fe:	00 00                	add    BYTE PTR [rax],al
 100:	44 00 2b             	add    BYTE PTR [rbx],r13b
 103:	00 54 ee 00          	add    BYTE PTR [rsi+rbp*8+0x0],dl
 107:	01 00                	add    DWORD PTR [rax],eax
 109:	00 00                	add    BYTE PTR [rax],al
 10b:	00 44 00 2c          	add    BYTE PTR [rax+rax*1+0x2c],al
 10f:	00 57 ee             	add    BYTE PTR [rdi-0x12],dl
 112:	00 01                	add    BYTE PTR [rcx],al
 114:	00 00                	add    BYTE PTR [rax],al
 116:	00 00                	add    BYTE PTR [rax],al
 118:	44 00 31             	add    BYTE PTR [rcx],r14b
 11b:	00 58 ee             	add    BYTE PTR [rax-0x12],bl
 11e:	00 01                	add    BYTE PTR [rcx],al
 120:	00 00                	add    BYTE PTR [rax],al
 122:	00 00                	add    BYTE PTR [rax],al
 124:	44 00 32             	add    BYTE PTR [rdx],r14b
 127:	00 5b ee             	add    BYTE PTR [rbx-0x12],bl
 12a:	00 01                	add    BYTE PTR [rcx],al
 12c:	00 00                	add    BYTE PTR [rax],al
 12e:	00 00                	add    BYTE PTR [rax],al
 130:	44 00 37             	add    BYTE PTR [rdi],r14b
 133:	00 5c ee 00          	add    BYTE PTR [rsi+rbp*8+0x0],bl
 137:	01 00                	add    DWORD PTR [rax],eax
 139:	00 00                	add    BYTE PTR [rax],al
 13b:	00 44 00 38          	add    BYTE PTR [rax+rax*1+0x38],al
 13f:	00 5f ee             	add    BYTE PTR [rdi-0x12],bl
 142:	00 01                	add    BYTE PTR [rcx],al
 144:	00 00                	add    BYTE PTR [rax],al
 146:	00 00                	add    BYTE PTR [rax],al
 148:	44 00 3d 00 60 ee 00 	add    BYTE PTR [rip+0xee6000],r15b        # ee614f <MULTIBOOT_HEADER_SIZE+0xee60f7>
 14f:	01 00                	add    DWORD PTR [rax],eax
 151:	00 00                	add    BYTE PTR [rax],al
 153:	00 44 00 3e          	add    BYTE PTR [rax+rax*1+0x3e],al
 157:	00 63 ee             	add    BYTE PTR [rbx-0x12],ah
 15a:	00 01                	add    BYTE PTR [rcx],al
 15c:	00 00                	add    BYTE PTR [rax],al
 15e:	00 00                	add    BYTE PTR [rax],al
 160:	44 00 45 00          	add    BYTE PTR [rbp+0x0],r8b
 164:	64 ee                	fs out dx,al
 166:	00 01                	add    BYTE PTR [rcx],al
 168:	00 00                	add    BYTE PTR [rax],al
 16a:	00 00                	add    BYTE PTR [rax],al
 16c:	44 00 46 00          	add    BYTE PTR [rsi+0x0],r8b
 170:	68 ee 00 01 00       	push   0x100ee
 175:	00 00                	add    BYTE PTR [rax],al
 177:	00 44 00 47          	add    BYTE PTR [rax+rax*1+0x47],al
 17b:	00 6b ee             	add    BYTE PTR [rbx-0x12],ch
 17e:	00 01                	add    BYTE PTR [rcx],al
 180:	00 00                	add    BYTE PTR [rax],al
 182:	00 00                	add    BYTE PTR [rax],al
 184:	44 00 4d 00          	add    BYTE PTR [rbp+0x0],r9b
 188:	6c                   	ins    BYTE PTR es:[rdi],dx
 189:	ee                   	out    dx,al
 18a:	00 01                	add    BYTE PTR [rcx],al
 18c:	00 00                	add    BYTE PTR [rax],al
 18e:	00 00                	add    BYTE PTR [rax],al
 190:	44 00 4e 00          	add    BYTE PTR [rsi+0x0],r9b
 194:	6d                   	ins    DWORD PTR es:[rdi],dx
 195:	ee                   	out    dx,al
 196:	00 01                	add    BYTE PTR [rcx],al
 198:	00 00                	add    BYTE PTR [rax],al
 19a:	00 00                	add    BYTE PTR [rax],al
 19c:	44 00 50 00          	add    BYTE PTR [rax+0x0],r10b
 1a0:	70 ee                	jo     190 <MULTIBOOT_HEADER_SIZE+0x138>
 1a2:	00 01                	add    BYTE PTR [rcx],al
 1a4:	00 00                	add    BYTE PTR [rax],al
 1a6:	00 00                	add    BYTE PTR [rax],al
 1a8:	44 00 51 00          	add    BYTE PTR [rcx+0x0],r10b
 1ac:	71 ee                	jno    19c <MULTIBOOT_HEADER_SIZE+0x144>
 1ae:	00 01                	add    BYTE PTR [rcx],al
 1b0:	00 00                	add    BYTE PTR [rax],al
 1b2:	00 00                	add    BYTE PTR [rax],al
 1b4:	44 00 52 00          	add    BYTE PTR [rdx+0x0],r10b
 1b8:	72 ee                	jb     1a8 <MULTIBOOT_HEADER_SIZE+0x150>
 1ba:	00 01                	add    BYTE PTR [rcx],al
 1bc:	00 00                	add    BYTE PTR [rax],al
 1be:	00 00                	add    BYTE PTR [rax],al
 1c0:	44 00 54 00 73       	add    BYTE PTR [rax+rax*1+0x73],r10b
 1c5:	ee                   	out    dx,al
 1c6:	00 01                	add    BYTE PTR [rcx],al
 1c8:	00 00                	add    BYTE PTR [rax],al
 1ca:	00 00                	add    BYTE PTR [rax],al
 1cc:	44 00 55 00          	add    BYTE PTR [rbp+0x0],r10b
 1d0:	75 ee                	jne    1c0 <MULTIBOOT_HEADER_SIZE+0x168>
 1d2:	00 01                	add    BYTE PTR [rcx],al
 1d4:	00 00                	add    BYTE PTR [rax],al
 1d6:	00 00                	add    BYTE PTR [rax],al
 1d8:	44 00 56 00          	add    BYTE PTR [rsi+0x0],r10b
 1dc:	77 ee                	ja     1cc <MULTIBOOT_HEADER_SIZE+0x174>
 1de:	00 01                	add    BYTE PTR [rcx],al
 1e0:	00 00                	add    BYTE PTR [rax],al
 1e2:	00 00                	add    BYTE PTR [rax],al
 1e4:	44 00 58 00          	add    BYTE PTR [rax+0x0],r11b
 1e8:	79 ee                	jns    1d8 <MULTIBOOT_HEADER_SIZE+0x180>
 1ea:	00 01                	add    BYTE PTR [rcx],al
 1ec:	00 00                	add    BYTE PTR [rax],al
 1ee:	00 00                	add    BYTE PTR [rax],al
 1f0:	44 00 59 00          	add    BYTE PTR [rcx+0x0],r11b
 1f4:	7b ee                	jnp    1e4 <MULTIBOOT_HEADER_SIZE+0x18c>
 1f6:	00 01                	add    BYTE PTR [rcx],al
 1f8:	00 00                	add    BYTE PTR [rax],al
 1fa:	00 00                	add    BYTE PTR [rax],al
 1fc:	44 00 5a 00          	add    BYTE PTR [rdx+0x0],r11b
 200:	7d ee                	jge    1f0 <MULTIBOOT_HEADER_SIZE+0x198>
 202:	00 01                	add    BYTE PTR [rcx],al
 204:	00 00                	add    BYTE PTR [rax],al
 206:	00 00                	add    BYTE PTR [rax],al
 208:	44 00 5b 00          	add    BYTE PTR [rbx+0x0],r11b
 20c:	7f ee                	jg     1fc <MULTIBOOT_HEADER_SIZE+0x1a4>
 20e:	00 01                	add    BYTE PTR [rcx],al
 210:	00 00                	add    BYTE PTR [rax],al
 212:	00 00                	add    BYTE PTR [rax],al
 214:	44 00 5c 00 82       	add    BYTE PTR [rax+rax*1-0x7e],r11b
 219:	ee                   	out    dx,al
 21a:	00 01                	add    BYTE PTR [rcx],al
 21c:	00 00                	add    BYTE PTR [rax],al
 21e:	00 00                	add    BYTE PTR [rax],al
 220:	44 00 5d 00          	add    BYTE PTR [rbp+0x0],r11b
 224:	84 ee                	test   dh,ch
 226:	00 01                	add    BYTE PTR [rcx],al
 228:	00 00                	add    BYTE PTR [rax],al
 22a:	00 00                	add    BYTE PTR [rax],al
 22c:	44 00 5e 00          	add    BYTE PTR [rsi+0x0],r11b
 230:	87 ee                	xchg   esi,ebp
 232:	00 01                	add    BYTE PTR [rcx],al
 234:	00 00                	add    BYTE PTR [rax],al
 236:	00 00                	add    BYTE PTR [rax],al
 238:	44 00 5f 00          	add    BYTE PTR [rdi+0x0],r11b
 23c:	88 ee                	mov    dh,ch
 23e:	00 01                	add    BYTE PTR [rcx],al
 240:	00 00                	add    BYTE PTR [rax],al
 242:	00 00                	add    BYTE PTR [rax],al
 244:	44 00 60 00          	add    BYTE PTR [rax+0x0],r12b
 248:	8b ee                	mov    ebp,esi
 24a:	00 01                	add    BYTE PTR [rcx],al
 24c:	00 00                	add    BYTE PTR [rax],al
 24e:	00 00                	add    BYTE PTR [rax],al
 250:	44 00 61 00          	add    BYTE PTR [rcx+0x0],r12b
 254:	8c ee                	mov    esi,gs
 256:	00 01                	add    BYTE PTR [rcx],al
 258:	00 00                	add    BYTE PTR [rax],al
 25a:	00 00                	add    BYTE PTR [rax],al
 25c:	44 00 66 00          	add    BYTE PTR [rsi+0x0],r12b
 260:	8d                   	(bad)  
 261:	ee                   	out    dx,al
 262:	00 01                	add    BYTE PTR [rcx],al
 264:	00 00                	add    BYTE PTR [rax],al
 266:	00 00                	add    BYTE PTR [rax],al
 268:	44 00 67 00          	add    BYTE PTR [rdi+0x0],r12b
 26c:	90                   	nop
 26d:	ee                   	out    dx,al
 26e:	00 01                	add    BYTE PTR [rcx],al
 270:	00 00                	add    BYTE PTR [rax],al
 272:	00 00                	add    BYTE PTR [rax],al
 274:	44 00 68 00          	add    BYTE PTR [rax+0x0],r13b
 278:	93                   	xchg   ebx,eax
 279:	ee                   	out    dx,al
 27a:	00 01                	add    BYTE PTR [rcx],al
 27c:	00 00                	add    BYTE PTR [rax],al
 27e:	00 00                	add    BYTE PTR [rax],al
 280:	44 00 69 00          	add    BYTE PTR [rcx+0x0],r13b
 284:	94                   	xchg   esp,eax
 285:	ee                   	out    dx,al
 286:	00 01                	add    BYTE PTR [rcx],al
 288:	00 00                	add    BYTE PTR [rax],al
 28a:	00 00                	add    BYTE PTR [rax],al
 28c:	44 00 6a 00          	add    BYTE PTR [rdx+0x0],r13b
 290:	95                   	xchg   ebp,eax
 291:	ee                   	out    dx,al
 292:	00 01                	add    BYTE PTR [rcx],al
 294:	00 00                	add    BYTE PTR [rax],al
 296:	00 00                	add    BYTE PTR [rax],al
 298:	44 00 6b 00          	add    BYTE PTR [rbx+0x0],r13b
 29c:	96                   	xchg   esi,eax
 29d:	ee                   	out    dx,al
 29e:	00 01                	add    BYTE PTR [rcx],al
 2a0:	00 00                	add    BYTE PTR [rax],al
 2a2:	00 00                	add    BYTE PTR [rax],al
 2a4:	44 00 70 00          	add    BYTE PTR [rax+0x0],r14b
 2a8:	97                   	xchg   edi,eax
 2a9:	ee                   	out    dx,al
 2aa:	00 01                	add    BYTE PTR [rcx],al
 2ac:	00 00                	add    BYTE PTR [rax],al
 2ae:	00 00                	add    BYTE PTR [rax],al
 2b0:	44 00 71 00          	add    BYTE PTR [rcx+0x0],r14b
 2b4:	9a                   	(bad)  
 2b5:	ee                   	out    dx,al
 2b6:	00 01                	add    BYTE PTR [rcx],al
 2b8:	00 00                	add    BYTE PTR [rax],al
 2ba:	00 00                	add    BYTE PTR [rax],al
 2bc:	44 00 72 00          	add    BYTE PTR [rdx+0x0],r14b
 2c0:	9d                   	popf   
 2c1:	ee                   	out    dx,al
 2c2:	00 01                	add    BYTE PTR [rcx],al
 2c4:	00 00                	add    BYTE PTR [rax],al
 2c6:	00 00                	add    BYTE PTR [rax],al
 2c8:	44 00 73 00          	add    BYTE PTR [rbx+0x0],r14b
 2cc:	9e                   	sahf   
 2cd:	ee                   	out    dx,al
 2ce:	00 01                	add    BYTE PTR [rcx],al
 2d0:	00 00                	add    BYTE PTR [rax],al
 2d2:	00 00                	add    BYTE PTR [rax],al
 2d4:	44 00 74 00 9f       	add    BYTE PTR [rax+rax*1-0x61],r14b
 2d9:	ee                   	out    dx,al
 2da:	00 01                	add    BYTE PTR [rcx],al
 2dc:	00 00                	add    BYTE PTR [rax],al
 2de:	00 00                	add    BYTE PTR [rax],al
 2e0:	44 00 75 00          	add    BYTE PTR [rbp+0x0],r14b
 2e4:	a0 ee 00 01 00 00 00 	movabs al,ds:0x44000000000100ee
 2eb:	00 44 
 2ed:	00 7b 00             	add    BYTE PTR [rbx+0x0],bh
 2f0:	a1 ee 00 01 00 00 00 	movabs eax,ds:0x44000000000100ee
 2f7:	00 44 
 2f9:	00 7c 00 a3          	add    BYTE PTR [rax+rax*1-0x5d],bh
 2fd:	ee                   	out    dx,al
 2fe:	00 01                	add    BYTE PTR [rcx],al
 300:	00 00                	add    BYTE PTR [rax],al
 302:	00 00                	add    BYTE PTR [rax],al
 304:	44 00 82 00 a4 ee 00 	add    BYTE PTR [rdx+0xeea400],r8b
 30b:	01 00                	add    DWORD PTR [rax],eax
 30d:	00 00                	add    BYTE PTR [rax],al
 30f:	00 44 00 83          	add    BYTE PTR [rax+rax*1-0x7d],al
 313:	00 a7 ee 00 01 00    	add    BYTE PTR [rdi+0x100ee],ah
 319:	00 00                	add    BYTE PTR [rax],al
 31b:	00 44 00 88          	add    BYTE PTR [rax+rax*1-0x78],al
 31f:	00 a8 ee 00 01 00    	add    BYTE PTR [rax+0x100ee],ch
 325:	00 00                	add    BYTE PTR [rax],al
 327:	00 44 00 89          	add    BYTE PTR [rax+rax*1-0x77],al
 32b:	00 a9 ee 00 01 00    	add    BYTE PTR [rcx+0x100ee],ch
 331:	00 00                	add    BYTE PTR [rax],al
 333:	00 44 00 8e          	add    BYTE PTR [rax+rax*1-0x72],al
 337:	00 aa ee 00 01 00    	add    BYTE PTR [rdx+0x100ee],ch
 33d:	00 00                	add    BYTE PTR [rax],al
 33f:	00 44 00 8f          	add    BYTE PTR [rax+rax*1-0x71],al
 343:	00 ab ee 00 01 00    	add    BYTE PTR [rbx+0x100ee],ch
 349:	00 00                	add    BYTE PTR [rax],al
 34b:	00 44 00 95          	add    BYTE PTR [rax+rax*1-0x6b],al
 34f:	00 ac ee 00 01 00 00 	add    BYTE PTR [rsi+rbp*8+0x100],ch
 356:	00 00                	add    BYTE PTR [rax],al
 358:	44 00 96 00 ad ee 00 	add    BYTE PTR [rsi+0xeead00],r10b
 35f:	01 00                	add    DWORD PTR [rax],eax
 361:	00 00                	add    BYTE PTR [rax],al
 363:	00 44 00 9b          	add    BYTE PTR [rax+rax*1-0x65],al
 367:	00 af ee 00 01 00    	add    BYTE PTR [rdi+0x100ee],ch
 36d:	00 00                	add    BYTE PTR [rax],al
 36f:	00 44 00 9c          	add    BYTE PTR [rax+rax*1-0x64],al
 373:	00 b2 ee 00 01 00    	add    BYTE PTR [rdx+0x100ee],dh
 379:	00 00                	add    BYTE PTR [rax],al
 37b:	00 44 00 a3          	add    BYTE PTR [rax+rax*1-0x5d],al
 37f:	00 b3 ee 00 01 00    	add    BYTE PTR [rbx+0x100ee],dh
 385:	00 00                	add    BYTE PTR [rax],al
 387:	00 44 00 a4          	add    BYTE PTR [rax+rax*1-0x5c],al
 38b:	00 b4 ee 00 01 00 00 	add    BYTE PTR [rsi+rbp*8+0x100],dh
 392:	00 00                	add    BYTE PTR [rax],al
 394:	44 00 a5 00 b6 ee 00 	add    BYTE PTR [rbp+0xeeb600],r12b
 39b:	01 00                	add    DWORD PTR [rax],eax
 39d:	00 00                	add    BYTE PTR [rax],al
 39f:	00 44 00 a6          	add    BYTE PTR [rax+rax*1-0x5a],al
 3a3:	00 b8 ee 00 01 00    	add    BYTE PTR [rax+0x100ee],bh
 3a9:	00 00                	add    BYTE PTR [rax],al
 3ab:	00 44 00 a7          	add    BYTE PTR [rax+rax*1-0x59],al
 3af:	00 ba ee 00 01 00    	add    BYTE PTR [rdx+0x100ee],bh
 3b5:	00 00                	add    BYTE PTR [rax],al
 3b7:	00 44 00 a8          	add    BYTE PTR [rax+rax*1-0x58],al
 3bb:	00 bc ee 00 01 00 00 	add    BYTE PTR [rsi+rbp*8+0x100],bh
 3c2:	00 00                	add    BYTE PTR [rax],al
 3c4:	44 00 a9 00 be ee 00 	add    BYTE PTR [rcx+0xeebe00],r13b
 3cb:	01 00                	add    DWORD PTR [rax],eax
 3cd:	00 00                	add    BYTE PTR [rax],al
 3cf:	00 44 00 aa          	add    BYTE PTR [rax+rax*1-0x56],al
 3d3:	00 c1                	add    cl,al
 3d5:	ee                   	out    dx,al
 3d6:	00 01                	add    BYTE PTR [rcx],al
 3d8:	00 00                	add    BYTE PTR [rax],al
 3da:	00 00                	add    BYTE PTR [rax],al
 3dc:	44 00 b0 00 c2 ee 00 	add    BYTE PTR [rax+0xeec200],r14b
 3e3:	01 00                	add    DWORD PTR [rax],eax
 3e5:	00 00                	add    BYTE PTR [rax],al
 3e7:	00 44 00 b1          	add    BYTE PTR [rax+rax*1-0x4f],al
 3eb:	00 c4                	add    ah,al
 3ed:	ee                   	out    dx,al
 3ee:	00 01                	add    BYTE PTR [rcx],al
 3f0:	00 00                	add    BYTE PTR [rax],al
 3f2:	00 00                	add    BYTE PTR [rax],al
 3f4:	44 00 b2 00 c6 ee 00 	add    BYTE PTR [rdx+0xeec600],r14b
 3fb:	01 00                	add    DWORD PTR [rax],eax
 3fd:	00 00                	add    BYTE PTR [rax],al
 3ff:	00 44 00 b3          	add    BYTE PTR [rax+rax*1-0x4d],al
 403:	00 c8                	add    al,cl
 405:	ee                   	out    dx,al
 406:	00 01                	add    BYTE PTR [rcx],al
 408:	00 00                	add    BYTE PTR [rax],al
 40a:	00 00                	add    BYTE PTR [rax],al
 40c:	44 00 b4 00 ca ee 00 	add    BYTE PTR [rax+rax*1+0x100eeca],r14b
 413:	01 
 414:	00 00                	add    BYTE PTR [rax],al
 416:	00 00                	add    BYTE PTR [rax],al
 418:	64 00 00             	add    BYTE PTR fs:[rax],al
 41b:	00 00                	add    BYTE PTR [rax],al
 41d:	00 00                	add    BYTE PTR [rax],al
 41f:	00 16                	add    BYTE PTR [rsi],dl
 421:	00 00                	add    BYTE PTR [rax],al
 423:	00 64 00 00          	add    BYTE PTR [rax+rax*1+0x0],ah
 427:	00 d0                	add    al,dl
 429:	ee                   	out    dx,al
 42a:	00 01                	add    BYTE PTR [rcx],al
 42c:	00 00                	add    BYTE PTR [rax],al
 42e:	00 00                	add    BYTE PTR [rax],al
 430:	44 00 62 00          	add    BYTE PTR [rdx+0x0],r12b
 434:	d0 ee                	shr    dh,1
 436:	00 01                	add    BYTE PTR [rcx],al
 438:	00 00                	add    BYTE PTR [rax],al
 43a:	00 00                	add    BYTE PTR [rax],al
 43c:	44 00 63 00          	add    BYTE PTR [rbx+0x0],r12b
 440:	1c ef                	sbb    al,0xef
 442:	00 01                	add    BYTE PTR [rcx],al
 444:	00 00                	add    BYTE PTR [rax],al
 446:	00 00                	add    BYTE PTR [rax],al
 448:	44 00 64 00 68       	add    BYTE PTR [rax+rax*1+0x68],r12b
 44d:	ef                   	out    dx,eax
 44e:	00 01                	add    BYTE PTR [rcx],al
 450:	00 00                	add    BYTE PTR [rax],al
 452:	00 00                	add    BYTE PTR [rax],al
 454:	44 00 65 00          	add    BYTE PTR [rbp+0x0],r12b
 458:	b4 ef                	mov    ah,0xef
 45a:	00 01                	add    BYTE PTR [rcx],al
 45c:	00 00                	add    BYTE PTR [rax],al
 45e:	00 00                	add    BYTE PTR [rax],al
 460:	44 00 66 00          	add    BYTE PTR [rsi+0x0],r12b
 464:	00 f0                	add    al,dh
 466:	00 01                	add    BYTE PTR [rcx],al
 468:	00 00                	add    BYTE PTR [rax],al
 46a:	00 00                	add    BYTE PTR [rax],al
 46c:	44 00 67 00          	add    BYTE PTR [rdi+0x0],r12b
 470:	4c                   	rex.WR
 471:	f0 00 01             	lock add BYTE PTR [rcx],al
 474:	00 00                	add    BYTE PTR [rax],al
 476:	00 00                	add    BYTE PTR [rax],al
 478:	44 00 68 00          	add    BYTE PTR [rax+0x0],r13b
 47c:	98                   	cwde   
 47d:	f0 00 01             	lock add BYTE PTR [rcx],al
 480:	00 00                	add    BYTE PTR [rax],al
 482:	00 00                	add    BYTE PTR [rax],al
 484:	44 00 69 00          	add    BYTE PTR [rcx+0x0],r13b
 488:	e4 f0                	in     al,0xf0
 48a:	00 01                	add    BYTE PTR [rcx],al
 48c:	00 00                	add    BYTE PTR [rax],al
 48e:	00 00                	add    BYTE PTR [rax],al
 490:	44 00 6a 00          	add    BYTE PTR [rdx+0x0],r13b
 494:	30 f1                	xor    cl,dh
 496:	00 01                	add    BYTE PTR [rcx],al
 498:	00 00                	add    BYTE PTR [rax],al
 49a:	00 00                	add    BYTE PTR [rax],al
 49c:	44 00 6b 00          	add    BYTE PTR [rbx+0x0],r13b
 4a0:	7f f1                	jg     493 <MULTIBOOT_HEADER_SIZE+0x43b>
 4a2:	00 01                	add    BYTE PTR [rcx],al
 4a4:	00 00                	add    BYTE PTR [rax],al
 4a6:	00 00                	add    BYTE PTR [rax],al
 4a8:	44 00 6c 00 ce       	add    BYTE PTR [rax+rax*1-0x32],r13b
 4ad:	f1                   	icebp  
 4ae:	00 01                	add    BYTE PTR [rcx],al
 4b0:	00 00                	add    BYTE PTR [rax],al
 4b2:	00 00                	add    BYTE PTR [rax],al
 4b4:	44 00 6d 00          	add    BYTE PTR [rbp+0x0],r13b
 4b8:	1d f2 00 01 00       	sbb    eax,0x100f2
 4bd:	00 00                	add    BYTE PTR [rax],al
 4bf:	00 44 00 6e          	add    BYTE PTR [rax+rax*1+0x6e],al
 4c3:	00 6c f2 00          	add    BYTE PTR [rdx+rsi*8+0x0],ch
 4c7:	01 00                	add    DWORD PTR [rax],eax
 4c9:	00 00                	add    BYTE PTR [rax],al
 4cb:	00 44 00 6f          	add    BYTE PTR [rax+rax*1+0x6f],al
 4cf:	00 bb f2 00 01 00    	add    BYTE PTR [rbx+0x100f2],bh
 4d5:	00 00                	add    BYTE PTR [rax],al
 4d7:	00 44 00 70          	add    BYTE PTR [rax+rax*1+0x70],al
 4db:	00 0a                	add    BYTE PTR [rdx],cl
 4dd:	f3 00 01             	repz add BYTE PTR [rcx],al
 4e0:	00 00                	add    BYTE PTR [rax],al
 4e2:	00 00                	add    BYTE PTR [rax],al
 4e4:	44 00 71 00          	add    BYTE PTR [rcx+0x0],r14b
 4e8:	56                   	push   rsi
 4e9:	f3 00 01             	repz add BYTE PTR [rcx],al
 4ec:	00 00                	add    BYTE PTR [rax],al
 4ee:	00 00                	add    BYTE PTR [rax],al
 4f0:	44 00 72 00          	add    BYTE PTR [rdx+0x0],r14b
 4f4:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
 4f5:	f3 00 01             	repz add BYTE PTR [rcx],al
 4f8:	00 00                	add    BYTE PTR [rax],al
 4fa:	00 00                	add    BYTE PTR [rax],al
 4fc:	44 00 73 00          	add    BYTE PTR [rbx+0x0],r14b
 500:	f1                   	icebp  
 501:	f3 00 01             	repz add BYTE PTR [rcx],al
 504:	00 00                	add    BYTE PTR [rax],al
 506:	00 00                	add    BYTE PTR [rax],al
 508:	44 00 74 00 3d       	add    BYTE PTR [rax+rax*1+0x3d],r14b
 50d:	f4                   	hlt    
 50e:	00 01                	add    BYTE PTR [rcx],al
 510:	00 00                	add    BYTE PTR [rax],al
 512:	00 00                	add    BYTE PTR [rax],al
 514:	44 00 77 00          	add    BYTE PTR [rdi+0x0],r14b
 518:	89 f4                	mov    esp,esi
 51a:	00 01                	add    BYTE PTR [rcx],al
 51c:	00 00                	add    BYTE PTR [rax],al
 51e:	00 00                	add    BYTE PTR [rax],al
 520:	44 00 78 00          	add    BYTE PTR [rax+0x0],r15b
 524:	d5                   	(bad)  
 525:	f4                   	hlt    
 526:	00 01                	add    BYTE PTR [rcx],al
 528:	00 00                	add    BYTE PTR [rax],al
 52a:	00 00                	add    BYTE PTR [rax],al
 52c:	44 00 79 00          	add    BYTE PTR [rcx+0x0],r15b
 530:	21 f5                	and    ebp,esi
 532:	00 01                	add    BYTE PTR [rcx],al
 534:	00 00                	add    BYTE PTR [rax],al
 536:	00 00                	add    BYTE PTR [rax],al
 538:	44 00 7a 00          	add    BYTE PTR [rdx+0x0],r15b
 53c:	6d                   	ins    DWORD PTR es:[rdi],dx
 53d:	f5                   	cmc    
 53e:	00 01                	add    BYTE PTR [rcx],al
 540:	00 00                	add    BYTE PTR [rax],al
 542:	00 00                	add    BYTE PTR [rax],al
 544:	44 00 7b 00          	add    BYTE PTR [rbx+0x0],r15b
 548:	b9 f5 00 01 00       	mov    ecx,0x100f5
 54d:	00 00                	add    BYTE PTR [rax],al
 54f:	00 44 00 7c          	add    BYTE PTR [rax+rax*1+0x7c],al
 553:	00 05 f6 00 01 00    	add    BYTE PTR [rip+0x100f6],al        # 1064f <MULTIBOOT_HEADER_SIZE+0x105f7>
 559:	00 00                	add    BYTE PTR [rax],al
 55b:	00 44 00 7d          	add    BYTE PTR [rax+rax*1+0x7d],al
 55f:	00 51 f6             	add    BYTE PTR [rcx-0xa],dl
 562:	00 01                	add    BYTE PTR [rcx],al
 564:	00 00                	add    BYTE PTR [rax],al
 566:	00 00                	add    BYTE PTR [rax],al
 568:	44 00 7e 00          	add    BYTE PTR [rsi+0x0],r15b
 56c:	9d                   	popf   
 56d:	f6 00 01             	test   BYTE PTR [rax],0x1
 570:	00 00                	add    BYTE PTR [rax],al
 572:	00 00                	add    BYTE PTR [rax],al
 574:	64 00 00             	add    BYTE PTR fs:[rax],al
 577:	00 00                	add    BYTE PTR [rax],al
 579:	00 00                	add    BYTE PTR [rax],al
 57b:	00 2b                	add    BYTE PTR [rbx],ch
 57d:	00 00                	add    BYTE PTR [rax],al
 57f:	00 64 00 00          	add    BYTE PTR [rax+rax*1+0x0],ah
 583:	00 00                	add    BYTE PTR [rax],al
 585:	00 01                	add    BYTE PTR [rcx],al
 587:	01 00                	add    DWORD PTR [rax],eax
 589:	00 00                	add    BYTE PTR [rax],al
 58b:	00 44 00 e0          	add    BYTE PTR [rax+rax*1-0x20],al
 58f:	00 00                	add    BYTE PTR [rax],al
 591:	00 01                	add    BYTE PTR [rcx],al
 593:	01 00                	add    DWORD PTR [rax],eax
 595:	00 00                	add    BYTE PTR [rax],al
 597:	00 44 00 e1          	add    BYTE PTR [rax+rax*1-0x1f],al
 59b:	00 01                	add    BYTE PTR [rcx],al
 59d:	00 01                	add    BYTE PTR [rcx],al
 59f:	01 00                	add    DWORD PTR [rax],eax
 5a1:	00 00                	add    BYTE PTR [rax],al
 5a3:	00 44 00 e2          	add    BYTE PTR [rax+rax*1-0x1e],al
 5a7:	00 05 00 01 01 00    	add    BYTE PTR [rip+0x10100],al        # 106ad <MULTIBOOT_HEADER_SIZE+0x10655>
 5ad:	00 00                	add    BYTE PTR [rax],al
 5af:	00 44 00 e3          	add    BYTE PTR [rax+rax*1-0x1d],al
 5b3:	00 07                	add    BYTE PTR [rdi],al
 5b5:	00 01                	add    BYTE PTR [rcx],al
 5b7:	01 00                	add    DWORD PTR [rax],eax
 5b9:	00 00                	add    BYTE PTR [rax],al
 5bb:	00 44 00 e4          	add    BYTE PTR [rax+rax*1-0x1c],al
 5bf:	00 09                	add    BYTE PTR [rcx],cl
 5c1:	00 01                	add    BYTE PTR [rcx],al
 5c3:	01 00                	add    DWORD PTR [rax],eax
 5c5:	00 00                	add    BYTE PTR [rax],al
 5c7:	00 44 00 e5          	add    BYTE PTR [rax+rax*1-0x1b],al
 5cb:	00 0b                	add    BYTE PTR [rbx],cl
 5cd:	00 01                	add    BYTE PTR [rcx],al
 5cf:	01 00                	add    DWORD PTR [rax],eax
 5d1:	00 00                	add    BYTE PTR [rax],al
 5d3:	00 44 00 e6          	add    BYTE PTR [rax+rax*1-0x1a],al
 5d7:	00 0d 00 01 01 00    	add    BYTE PTR [rip+0x10100],cl        # 106dd <MULTIBOOT_HEADER_SIZE+0x10685>
 5dd:	00 00                	add    BYTE PTR [rax],al
 5df:	00 44 00 e9          	add    BYTE PTR [rax+rax*1-0x17],al
 5e3:	00 0f                	add    BYTE PTR [rdi],cl
 5e5:	00 01                	add    BYTE PTR [rcx],al
 5e7:	01 00                	add    DWORD PTR [rax],eax
 5e9:	00 00                	add    BYTE PTR [rax],al
 5eb:	00 44 00 ea          	add    BYTE PTR [rax+rax*1-0x16],al
 5ef:	00 19                	add    BYTE PTR [rcx],bl
 5f1:	00 01                	add    BYTE PTR [rcx],al
 5f3:	01 00                	add    DWORD PTR [rax],eax
 5f5:	00 00                	add    BYTE PTR [rax],al
 5f7:	00 44 00 eb          	add    BYTE PTR [rax+rax*1-0x15],al
 5fb:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 5fe:	01 01                	add    DWORD PTR [rcx],eax
 600:	00 00                	add    BYTE PTR [rax],al
 602:	00 00                	add    BYTE PTR [rax],al
 604:	44 00 ec             	add    spl,r13b
 607:	00 21                	add    BYTE PTR [rcx],ah
 609:	00 01                	add    BYTE PTR [rcx],al
 60b:	01 00                	add    DWORD PTR [rax],eax
 60d:	00 00                	add    BYTE PTR [rax],al
 60f:	00 44 00 ee          	add    BYTE PTR [rax+rax*1-0x12],al
 613:	00 22                	add    BYTE PTR [rdx],ah
 615:	00 01                	add    BYTE PTR [rcx],al
 617:	01 00                	add    DWORD PTR [rax],eax
 619:	00 00                	add    BYTE PTR [rax],al
 61b:	00 44 00 ef          	add    BYTE PTR [rax+rax*1-0x11],al
 61f:	00 00                	add    BYTE PTR [rax],al
 621:	10 01                	adc    BYTE PTR [rcx],al
 623:	01 00                	add    DWORD PTR [rax],eax
 625:	00 00                	add    BYTE PTR [rax],al
 627:	00 64 00 00          	add    BYTE PTR [rax+rax*1+0x0],ah
 62b:	00 00                	add    BYTE PTR [rax],al
 62d:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .stabstr:

0000000000000000 <.stabstr>:
   0:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
   3:	63 2f                	movsxd ebp,DWORD PTR [rdi]
   5:	68 61 6c 2f 68       	push   0x682f6c61
   a:	61                   	(bad)  
   b:	6c                   	ins    BYTE PTR es:[rdi],dx
   c:	5f                   	pop    rdi
   d:	61                   	(bad)  
   e:	72 63                	jb     73 <MULTIBOOT_HEADER_SIZE+0x1b>
  10:	68 2e 61 73 6d       	push   0x6d73612e
  15:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
  18:	63 2f                	movsxd ebp,DWORD PTR [rdi]
  1a:	68 61 6c 2f 68       	push   0x682f6c61
  1f:	61                   	(bad)  
  20:	6c                   	ins    BYTE PTR es:[rdi],dx
  21:	5f                   	pop    rdi
  22:	69 6e 74 72 2e 61 73 	imul   ebp,DWORD PTR [rsi+0x74],0x73612e72
  29:	6d                   	ins    DWORD PTR es:[rdi],dx
  2a:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
  2d:	63 2f                	movsxd ebp,DWORD PTR [rdi]
  2f:	68 61 6c 2f 68       	push   0x682f6c61
  34:	61                   	(bad)  
  35:	6c                   	ins    BYTE PTR es:[rdi],dx
  36:	5f                   	pop    rdi
  37:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
  39:	74 72                	je     ad <MULTIBOOT_HEADER_SIZE+0x55>
  3b:	79 2e                	jns    6b <MULTIBOOT_HEADER_SIZE+0x13>
  3d:	61                   	(bad)  
  3e:	73 6d                	jae    ad <MULTIBOOT_HEADER_SIZE+0x55>
	...
