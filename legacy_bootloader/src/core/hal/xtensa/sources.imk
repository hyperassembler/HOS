######################################################
#
#    sources.imk
#
#  Contains all C source information for the
#  Bifrost build for xtensa architecture.
#
#  Copyright (C) 2016  Microsoft Corporation
#  All Rights Reserved
#  Confidential and Proprietary
#
######################################################


ARCHTYPE := xtensa

#
# Kernel CFLAGS
#
XTENSA_KERNEL_CFLAGS = $(XTENSA_DEFAULT_CFLAGS) $(XTENSA_WARNING_CFLAGS)


#
# Xtensa architecture-specific sources
#

#
# Kernel binary selection--if CUSTOM_KERNEL_CFLAGS
# is specified, build a testsuite-specific
# version of the kernel under BIN_DIR--otherwise,
# use the shared kernel.
#
XTENSA_KERNEL_BINARY = $(if $(CUSTOM_KERNEL_CFLAGS),$(BIN_DIR)/obj/xtensa/kernel/bifrost_kernel.so,$(OBJ_ROOT)/xtensa/$(BFCOMP_MODE)/kernel/bifrost_kernel.so)

# These files will be compiled as Assembly instead of C++.
# Apply the appropriate COMPILE_LANGUAGE override for them
XTENSA_ASM_SOURCES := $(BF_SRC_ROOT)/core/hal/xtensa/bss.s \
                      $(BF_SRC_ROOT)/core/hal/xtensa/atomic.s \
                      $(BF_SRC_ROOT)/core/hal/xtensa/context.S \
                      $(BF_SRC_ROOT)/core/hal/xtensa/ctor.s \
                      $(BF_SRC_ROOT)/core/hal/xtensa/interrupt.S

XTENSA_O3OPT_SOURCES := $(SHARED_KERNEL_O3OPT_SOURCES) \
                        $(DRIVER_O3OPT_SOURCES) \
                        #$(BF_SRC_ROOT)/shared/driver/driver_helper/td_checkHeap.c \
                        $(BF_SRC_ROOT)/system/perfmon/bifrost_perfmon.c \
                        $(BF_SRC_ROOT)/system/perfmon/td_perfmon.c

$(foreach FILE,$(XTENSA_O3OPT_SOURCES),$(eval $(FILE)_FLAGS := -O3))

XTENSA_SOURCES := \
                  $(SHARED_KERNEL_SOURCES) \
                  $(DRIVER_SOURCES) \
                  $(XTENSA_O3OPT_SOURCES) \
                  $(XTENSA_SYS_SOURCES)

XTENSA_HAL_SOURCES := \
                  $(XTENSA_ASM_SOURCES) \
                  $(BF_SRC_ROOT)/core/hal/xtensa/bifrost_hs_impl.c \
                  $(BF_SRC_ROOT)/core/hal/xtensa/context.c \
                  $(BF_SRC_ROOT)/core/hal/xtensa/interrupt.c \
                  $(BF_SRC_ROOT)/core/hal/xtensa/main.c \
                  $(BF_SRC_ROOT)/core/hal/xtensa/mem.c

XTENSA_CORE_APP_SOURCES := \
                           $(SHARED_CORE_APP_SOURCES)

XTENSA_HEADERS := $(SHARED_HEADERS) \
                  $(BF_SRC_ROOT)/system/include/bifrost_system_api_xtensa.h \
                  $(BF_SRC_ROOT)/system/include/bifrost_system_constants_xtensa.h

XTENSA_IDIRS := \
                $(BF_SRC_ROOT)/core/hal/xtensa/inc \
                $(BF_TOOL_ROOT)/lsp/src


# Add library IDIRS
ARCHTYPE := xtensa
$(eval $(kernel_lib_template))

# For Xtensa compilation only, split out files which
# can't be compiled into bifrost_kernel.so--the symbols they
# need aren't available until later in the process.
# TODO: come up with a way that doesn't involve explicitly listing the names
XTENSA_SOURCES := $(filter-out $(BF_SRC_ROOT)/system/tables/ddr_sram_bak_table.c $(BF_SRC_ROOT)/system/tables/heap_table.c $(BF_SRC_ROOT)/system/tables/bss_table.c $(BF_SRC_ROOT)/system/ctor_table.c,$(XTENSA_SOURCES))


define kernel_objs_template

FLAG := $$(call TOLOWER,$$(FLAG_UPPER))

#
# Xtensa kernel objects and rules
#
XTENSA_KERNEL_OBJS := $$(patsubst $(BF_SRC_ROOT)/%,$(OBJ_ROOT)/xtensa/$$(FLAG)/kernel/%.o,$(XTENSA_SOURCES))
XTENSA_CORE_APP_OBJS := $$(patsubst $(BF_SRC_ROOT)/%,$(OBJ_ROOT)/xtensa/$$(FLAG)/kernel/%.o,$(XTENSA_CORE_APP_SOURCES))
XTENSA_HAL_OBJS := $$(patsubst $(BF_SRC_ROOT)/%,$(OBJ_ROOT)/xtensa/$$(FLAG)/kernel/%.o,$(XTENSA_HAL_SOURCES))

$$(filter %.s.o %.S.o,$$(XTENSA_KERNEL_OBJS) $$(XTENSA_HAL_OBJS)): COMPILE_LANGUAGE := assembler-with-cpp

$$(XTENSA_CORE_APP_OBJS): BIFROST_IDIRS += $(BIFROST_APP_IDIRS)
$$(XTENSA_KERNEL_OBJS) $$(XTENSA_CORE_APP_OBJS) $$(XTENSA_HAL_OBJS) $$(XTENSA_PLAT_$(FLAG_UPPER)_OBJS): $(OBJ_ROOT)/xtensa/$$(FLAG)/kernel/%.o : $(BF_SRC_ROOT)/% $(XTENSA_HEADERS)
	@echo Compiling $$< to $$@...
	@mkdir -p $$(@D)
	@$(XT_COMPILE) -c \
	-x $$(COMPILE_LANGUAGE) \
	--xtensa-core=$(CMN_CORE) \
	$$(XTENSA_KERNEL_CFLAGS) $(FLAG_UPPER:%=-D%) \
	$$($$<_FLAGS) \
	$$(BIFROST_IDIRS:%=-I%) \
	$(XTENSA_IDIRS:%=-I%) \
	$(XTENSA_SYS_IDIRS:%=-I%) \
	$$< -o $$@

#
# Bifrost kernel binary for this architecture
#
$(OBJ_ROOT)/xtensa/$$(FLAG)/kernel/bifrost_kernel.so: $$(XTENSA_KERNEL_OBJS)
	@echo Linking $$@...
	@mkdir -p $$(@D)
	$(XT_LD) --multilib-dir=nort \
	--xtensa-core=$(CMN_CORE) \
	-r $$^ -o $$@

$(OBJ_ROOT)/xtensa/$$(FLAG)/kernel/hal.so: $$(XTENSA_HAL_OBJS)
	@echo Linking $$@...
	@mkdir -p $$(@D)
	$(XT_LD) --multilib-dir=nort \
	--xtensa-core=$(CMN_CORE) \
	-r $$^ -o $$@

$(OBJ_ROOT)/xtensa/$$(FLAG)/kernel/bifrost_testapp.so: $$(XTENSA_CORE_APP_OBJS)
	@echo Linking $$@...
	@mkdir -p $$(@D)
	$(XT_LD) --multilib-dir=nort \
	--xtensa-core=$(CMN_CORE) \
	-r $$^ -o $$@

endef

$(foreach FLAG_UPPER,$(BFCOMP_FLAGS_UPPER),$(eval $(kernel_objs_template)))

